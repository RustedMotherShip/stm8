                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gg
                                     13 	.globl _setup
                                     14 	.globl _ssd1306_send_buffer
                                     15 	.globl _ssd1306_buffer_clean
                                     16 	.globl _set_bit
                                     17 	.globl _get_bit
                                     18 	.globl _i2c_irq
                                     19 	.globl _memset
                                     20 	.globl _main_buffer
                                     21 	.globl _ttf_eng_line_down
                                     22 	.globl _ttf_eng_line_up
                                     23 	.globl _ttf_eng_line_left
                                     24 	.globl _ttf_eng_line_right
                                     25 	.globl _ttf_eng_corner_right_down
                                     26 	.globl _ttf_eng_corner_left_down
                                     27 	.globl _ttf_eng_corner_right_up
                                     28 	.globl _ttf_eng_corner_left_up
                                     29 	.globl _ttf_eng_0
                                     30 	.globl _ttf_eng_9
                                     31 	.globl _ttf_eng_8
                                     32 	.globl _ttf_eng_7
                                     33 	.globl _ttf_eng_6
                                     34 	.globl _ttf_eng_5
                                     35 	.globl _ttf_eng_4
                                     36 	.globl _ttf_eng_3
                                     37 	.globl _ttf_eng_2
                                     38 	.globl _ttf_eng_1
                                     39 	.globl _ttf_eng_z
                                     40 	.globl _ttf_eng_y
                                     41 	.globl _ttf_eng_x
                                     42 	.globl _ttf_eng_w
                                     43 	.globl _ttf_eng_v
                                     44 	.globl _ttf_eng_u
                                     45 	.globl _ttf_eng_t
                                     46 	.globl _ttf_eng_s
                                     47 	.globl _ttf_eng_r
                                     48 	.globl _ttf_eng_q
                                     49 	.globl _ttf_eng_p
                                     50 	.globl _ttf_eng_o
                                     51 	.globl _ttf_eng_n
                                     52 	.globl _ttf_eng_m
                                     53 	.globl _ttf_eng_l
                                     54 	.globl _ttf_eng_k
                                     55 	.globl _ttf_eng_j
                                     56 	.globl _ttf_eng_i
                                     57 	.globl _ttf_eng_h
                                     58 	.globl _ttf_eng_g
                                     59 	.globl _ttf_eng_f
                                     60 	.globl _ttf_eng_e
                                     61 	.globl _ttf_eng_d
                                     62 	.globl _ttf_eng_c
                                     63 	.globl _ttf_eng_b
                                     64 	.globl _ttf_eng_a
                                     65 	.globl _I2C_IRQ
                                     66 	.globl _buf_size
                                     67 	.globl _buf_pos
                                     68 	.globl _rx_buf_pointer
                                     69 	.globl _tx_buf_pointer
                                     70 	.globl _uart_transmission_irq
                                     71 	.globl _uart_reciever_irq
                                     72 	.globl _uart_write_irq
                                     73 	.globl _uart_read_irq
                                     74 	.globl _uart_init
                                     75 	.globl _uart_read_byte
                                     76 	.globl _uart_write_byte
                                     77 	.globl _uart_write
                                     78 	.globl _uart_read
                                     79 	.globl _i2c_init
                                     80 	.globl _i2c_start
                                     81 	.globl _i2c_stop
                                     82 	.globl _i2c_send_address
                                     83 	.globl _i2c_read_byte
                                     84 	.globl _i2c_read
                                     85 	.globl _i2c_send_byte
                                     86 	.globl _i2c_write
                                     87 	.globl _i2c_scan
                                     88 	.globl _i2c_start_irq
                                     89 	.globl _i2c_stop_irq
                                     90 	.globl _ssd1306_init
                                     91 	.globl _ssd1306_set_params_to_write
                                     92 	.globl _ssd1306_draw_pixel
                                     93 	.globl _ssd1306_buffer_write
                                     94 	.globl _ssd1306_clean
                                     95 ;--------------------------------------------------------
                                     96 ; ram data
                                     97 ;--------------------------------------------------------
                                     98 	.area DATA
      000000                         99 _tx_buf_pointer::
      000000                        100 	.ds 2
      000002                        101 _rx_buf_pointer::
      000002                        102 	.ds 2
      000004                        103 _buf_pos::
      000004                        104 	.ds 1
      000005                        105 _buf_size::
      000005                        106 	.ds 1
                                    107 ;--------------------------------------------------------
                                    108 ; ram data
                                    109 ;--------------------------------------------------------
                                    110 	.area INITIALIZED
      000000                        111 _I2C_IRQ::
      000000                        112 	.ds 1
      000001                        113 _ttf_eng_a::
      000001                        114 	.ds 8
      000009                        115 _ttf_eng_b::
      000009                        116 	.ds 8
      000011                        117 _ttf_eng_c::
      000011                        118 	.ds 8
      000019                        119 _ttf_eng_d::
      000019                        120 	.ds 8
      000021                        121 _ttf_eng_e::
      000021                        122 	.ds 8
      000029                        123 _ttf_eng_f::
      000029                        124 	.ds 8
      000031                        125 _ttf_eng_g::
      000031                        126 	.ds 8
      000039                        127 _ttf_eng_h::
      000039                        128 	.ds 8
      000041                        129 _ttf_eng_i::
      000041                        130 	.ds 8
      000049                        131 _ttf_eng_j::
      000049                        132 	.ds 8
      000051                        133 _ttf_eng_k::
      000051                        134 	.ds 8
      000059                        135 _ttf_eng_l::
      000059                        136 	.ds 8
      000061                        137 _ttf_eng_m::
      000061                        138 	.ds 8
      000069                        139 _ttf_eng_n::
      000069                        140 	.ds 8
      000071                        141 _ttf_eng_o::
      000071                        142 	.ds 8
      000079                        143 _ttf_eng_p::
      000079                        144 	.ds 8
      000081                        145 _ttf_eng_q::
      000081                        146 	.ds 8
      000089                        147 _ttf_eng_r::
      000089                        148 	.ds 8
      000091                        149 _ttf_eng_s::
      000091                        150 	.ds 8
      000099                        151 _ttf_eng_t::
      000099                        152 	.ds 8
      0000A1                        153 _ttf_eng_u::
      0000A1                        154 	.ds 8
      0000A9                        155 _ttf_eng_v::
      0000A9                        156 	.ds 8
      0000B1                        157 _ttf_eng_w::
      0000B1                        158 	.ds 8
      0000B9                        159 _ttf_eng_x::
      0000B9                        160 	.ds 8
      0000C1                        161 _ttf_eng_y::
      0000C1                        162 	.ds 8
      0000C9                        163 _ttf_eng_z::
      0000C9                        164 	.ds 8
      0000D1                        165 _ttf_eng_1::
      0000D1                        166 	.ds 8
      0000D9                        167 _ttf_eng_2::
      0000D9                        168 	.ds 8
      0000E1                        169 _ttf_eng_3::
      0000E1                        170 	.ds 8
      0000E9                        171 _ttf_eng_4::
      0000E9                        172 	.ds 8
      0000F1                        173 _ttf_eng_5::
      0000F1                        174 	.ds 8
      0000F9                        175 _ttf_eng_6::
      0000F9                        176 	.ds 8
      000101                        177 _ttf_eng_7::
      000101                        178 	.ds 8
      000109                        179 _ttf_eng_8::
      000109                        180 	.ds 8
      000111                        181 _ttf_eng_9::
      000111                        182 	.ds 8
      000119                        183 _ttf_eng_0::
      000119                        184 	.ds 8
      000121                        185 _ttf_eng_corner_left_up::
      000121                        186 	.ds 8
      000129                        187 _ttf_eng_corner_right_up::
      000129                        188 	.ds 8
      000131                        189 _ttf_eng_corner_left_down::
      000131                        190 	.ds 8
      000139                        191 _ttf_eng_corner_right_down::
      000139                        192 	.ds 8
      000141                        193 _ttf_eng_line_right::
      000141                        194 	.ds 8
      000149                        195 _ttf_eng_line_left::
      000149                        196 	.ds 8
      000151                        197 _ttf_eng_line_up::
      000151                        198 	.ds 8
      000159                        199 _ttf_eng_line_down::
      000159                        200 	.ds 8
      000161                        201 _main_buffer::
      000161                        202 	.ds 512
                                    203 ;--------------------------------------------------------
                                    204 ; Stack segment in internal ram
                                    205 ;--------------------------------------------------------
                                    206 	.area SSEG
      000000                        207 __start__stack:
      000000                        208 	.ds	1
                                    209 
                                    210 ;--------------------------------------------------------
                                    211 ; absolute external ram data
                                    212 ;--------------------------------------------------------
                                    213 	.area DABS (ABS)
                                    214 
                                    215 ; default segment ordering for linker
                                    216 	.area HOME
                                    217 	.area GSINIT
                                    218 	.area GSFINAL
                                    219 	.area CONST
                                    220 	.area INITIALIZER
                                    221 	.area CODE
                                    222 
                                    223 ;--------------------------------------------------------
                                    224 ; interrupt vector
                                    225 ;--------------------------------------------------------
                                    226 	.area HOME
      000000                        227 __interrupt_vect:
      000000 82v00u00u00            228 	int s_GSINIT ; reset
      000004 82 00 00 00            229 	int 0x000000 ; trap
      000008 82 00 00 00            230 	int 0x000000 ; int0
      00000C 82 00 00 00            231 	int 0x000000 ; int1
      000010 82 00 00 00            232 	int 0x000000 ; int2
      000014 82 00 00 00            233 	int 0x000000 ; int3
      000018 82 00 00 00            234 	int 0x000000 ; int4
      00001C 82 00 00 00            235 	int 0x000000 ; int5
      000020 82 00 00 00            236 	int 0x000000 ; int6
      000024 82 00 00 00            237 	int 0x000000 ; int7
      000028 82 00 00 00            238 	int 0x000000 ; int8
      00002C 82 00 00 00            239 	int 0x000000 ; int9
      000030 82 00 00 00            240 	int 0x000000 ; int10
      000034 82 00 00 00            241 	int 0x000000 ; int11
      000038 82 00 00 00            242 	int 0x000000 ; int12
      00003C 82 00 00 00            243 	int 0x000000 ; int13
      000040 82 00 00 00            244 	int 0x000000 ; int14
      000044 82 00 00 00            245 	int 0x000000 ; int15
      000048 82 00 00 00            246 	int 0x000000 ; int16
      00004C 82v00u00u00            247 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            248 	int _uart_reciever_irq ; int18
      000054 82v00u02u1E            249 	int _i2c_irq ; int19
                                    250 ;--------------------------------------------------------
                                    251 ; global & static initialisations
                                    252 ;--------------------------------------------------------
                                    253 	.area HOME
                                    254 	.area GSINIT
                                    255 	.area GSFINAL
                                    256 	.area GSINIT
      000000 CDr00r00         [ 4]  257 	call	___sdcc_external_startup
      000003 4D               [ 1]  258 	tnz	a
      000004 27 03            [ 1]  259 	jreq	__sdcc_init_data
      000006 CCr00r58         [ 2]  260 	jp	__sdcc_program_startup
      000009                        261 __sdcc_init_data:
                                    262 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  263 	ldw x, #l_DATA
      00000C 27 07            [ 1]  264 	jreq	00002$
      00000E                        265 00001$:
      00000E 72 4FuFFuFF      [ 1]  266 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  267 	decw x
      000013 26 F9            [ 1]  268 	jrne	00001$
      000015                        269 00002$:
      000015 AEr00r00         [ 2]  270 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  271 	jreq	00004$
      00001A                        272 00003$:
      00001A D6uFFuFF         [ 1]  273 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  274 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  275 	decw	x
      000021 26 F7            [ 1]  276 	jrne	00003$
      000023                        277 00004$:
                                    278 ; stm8_genXINIT() end
                                    279 	.area GSFINAL
      000000 CCr00r58         [ 2]  280 	jp	__sdcc_program_startup
                                    281 ;--------------------------------------------------------
                                    282 ; Home
                                    283 ;--------------------------------------------------------
                                    284 	.area HOME
                                    285 	.area HOME
      000058                        286 __sdcc_program_startup:
      000058 CCr06r64         [ 2]  287 	jp	_main
                                    288 ;	return from main will return to caller
                                    289 ;--------------------------------------------------------
                                    290 ; code
                                    291 ;--------------------------------------------------------
                                    292 	.area CODE
                                    293 ;	./libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    294 ;	-----------------------------------------
                                    295 ;	 function uart_transmission_irq
                                    296 ;	-----------------------------------------
      000000                        297 _uart_transmission_irq:
                                    298 ;	./libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  299 	ldw	x, #0x5230
      000003 F6               [ 1]  300 	ld	a, (x)
      000004 4E               [ 1]  301 	swap	a
      000005 44               [ 1]  302 	srl	a
      000006 44               [ 1]  303 	srl	a
      000007 44               [ 1]  304 	srl	a
      000008 A5 01            [ 1]  305 	bcp	a, #0x01
      00000A 27 2F            [ 1]  306 	jreq	00107$
                                    307 ;	./libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  308 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  309 	add	a, _buf_pos+0
      000012 97               [ 1]  310 	ld	xl, a
      000013 C6u00u00         [ 1]  311 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  312 	adc	a, #0x00
      000018 95               [ 1]  313 	ld	xh, a
      000019 F6               [ 1]  314 	ld	a, (x)
      00001A 27 1B            [ 1]  315 	jreq	00102$
      00001C C6u00u04         [ 1]  316 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  317 	cp	a, _buf_size+0
      000022 24 13            [ 1]  318 	jrnc	00102$
                                    319 ;	./libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  320 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  321 	inc	_buf_pos+0
      00002B 5F               [ 1]  322 	clrw	x
      00002C 97               [ 1]  323 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  324 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  325 	ld	a, (x)
      000032 C7 52 31         [ 1]  326 	ld	0x5231, a
      000035 20 04            [ 2]  327 	jra	00107$
      000037                        328 00102$:
                                    329 ;	./libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  330 	bres	0x5235, #7
      00003B                        331 00107$:
                                    332 ;	./libs/uart_lib.c: 14: }
      00003B 80               [11]  333 	iret
                                    334 ;	./libs/uart_lib.c: 16: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    335 ;	-----------------------------------------
                                    336 ;	 function uart_reciever_irq
                                    337 ;	-----------------------------------------
      00003C                        338 _uart_reciever_irq:
      00003C 88               [ 1]  339 	push	a
                                    340 ;	./libs/uart_lib.c: 20: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  341 	ld	a, 0x5230
      000040 4E               [ 1]  342 	swap	a
      000041 44               [ 1]  343 	srl	a
      000042 A5 01            [ 1]  344 	bcp	a, #0x01
      000044 27 27            [ 1]  345 	jreq	00107$
                                    346 ;	./libs/uart_lib.c: 22: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  347 	ld	a, 0x5231
                                    348 ;	./libs/uart_lib.c: 23: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  349 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  350 	cp	a, #0x0a
      00004D 27 1A            [ 1]  351 	jreq	00102$
      00004F C6u00u04         [ 1]  352 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  353 	cp	a, _buf_size+0
      000055 24 12            [ 1]  354 	jrnc	00102$
                                    355 ;	./libs/uart_lib.c: 24: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  356 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  357 	inc	_buf_pos+0
      00005E 5F               [ 1]  358 	clrw	x
      00005F 97               [ 1]  359 	ld	xl, a
      000060 72 BBu00u02      [ 2]  360 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  361 	ld	a, (0x01, sp)
      000066 F7               [ 1]  362 	ld	(x), a
      000067 20 04            [ 2]  363 	jra	00107$
      000069                        364 00102$:
                                    365 ;	./libs/uart_lib.c: 26: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  366 	bres	0x5235, #5
      00006D                        367 00107$:
                                    368 ;	./libs/uart_lib.c: 30: }
      00006D 84               [ 1]  369 	pop	a
      00006E 80               [11]  370 	iret
                                    371 ;	./libs/uart_lib.c: 32: void uart_write_irq(uint8_t *data_buf)
                                    372 ;	-----------------------------------------
                                    373 ;	 function uart_write_irq
                                    374 ;	-----------------------------------------
      00006F                        375 _uart_write_irq:
      00006F 52 02            [ 2]  376 	sub	sp, #2
                                    377 ;	./libs/uart_lib.c: 34: tx_buf_pointer = data_buf;
      000071 1F 01            [ 2]  378 	ldw	(0x01, sp), x
      000073 CFu00u00         [ 2]  379 	ldw	_tx_buf_pointer+0, x
                                    380 ;	./libs/uart_lib.c: 35: buf_pos = 0;
      000076 72 5Fu00u04      [ 1]  381 	clr	_buf_pos+0
                                    382 ;	./libs/uart_lib.c: 36: buf_size = 0;
      00007A 72 5Fu00u05      [ 1]  383 	clr	_buf_size+0
                                    384 ;	./libs/uart_lib.c: 37: while (data_buf[buf_size++] != '\0');
      00007E                        385 00101$:
      00007E C6u00u05         [ 1]  386 	ld	a, _buf_size+0
      000081 72 5Cu00u05      [ 1]  387 	inc	_buf_size+0
      000085 5F               [ 1]  388 	clrw	x
      000086 97               [ 1]  389 	ld	xl, a
      000087 72 FB 01         [ 2]  390 	addw	x, (0x01, sp)
      00008A F6               [ 1]  391 	ld	a, (x)
      00008B 26 F1            [ 1]  392 	jrne	00101$
                                    393 ;	./libs/uart_lib.c: 38: UART1_CR2 -> TIEN = 1;
      00008D 72 1E 52 35      [ 1]  394 	bset	0x5235, #7
                                    395 ;	./libs/uart_lib.c: 39: while(UART1_CR2 -> TIEN);
      000091                        396 00104$:
      000091 72 0E 52 35 FB   [ 2]  397 	btjt	0x5235, #7, 00104$
                                    398 ;	./libs/uart_lib.c: 40: }
      000096 5B 02            [ 2]  399 	addw	sp, #2
      000098 81               [ 4]  400 	ret
                                    401 ;	./libs/uart_lib.c: 41: void uart_read_irq(uint8_t *data_buf,int size)
                                    402 ;	-----------------------------------------
                                    403 ;	 function uart_read_irq
                                    404 ;	-----------------------------------------
      000099                        405 _uart_read_irq:
                                    406 ;	./libs/uart_lib.c: 43: rx_buf_pointer = data_buf;
      000099 CFu00u02         [ 2]  407 	ldw	_rx_buf_pointer+0, x
                                    408 ;	./libs/uart_lib.c: 44: buf_pos = 0;
      00009C 72 5Fu00u04      [ 1]  409 	clr	_buf_pos+0
                                    410 ;	./libs/uart_lib.c: 45: buf_size = size;
      0000A0 7B 04            [ 1]  411 	ld	a, (0x04, sp)
      0000A2 C7u00u05         [ 1]  412 	ld	_buf_size+0, a
                                    413 ;	./libs/uart_lib.c: 46: UART1_CR2 -> RIEN = 1;
      0000A5 72 1A 52 35      [ 1]  414 	bset	0x5235, #5
                                    415 ;	./libs/uart_lib.c: 47: while(UART1_CR2 -> RIEN);
      0000A9                        416 00101$:
      0000A9 C6 52 35         [ 1]  417 	ld	a, 0x5235
      0000AC 4E               [ 1]  418 	swap	a
      0000AD 44               [ 1]  419 	srl	a
      0000AE A4 01            [ 1]  420 	and	a, #0x01
      0000B0 26 F7            [ 1]  421 	jrne	00101$
                                    422 ;	./libs/uart_lib.c: 48: }
      0000B2 1E 01            [ 2]  423 	ldw	x, (1, sp)
      0000B4 5B 04            [ 2]  424 	addw	sp, #4
      0000B6 FC               [ 2]  425 	jp	(x)
                                    426 ;	./libs/uart_lib.c: 50: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    427 ;	-----------------------------------------
                                    428 ;	 function uart_init
                                    429 ;	-----------------------------------------
      0000B7                        430 _uart_init:
      0000B7 52 02            [ 2]  431 	sub	sp, #2
      0000B9 1F 01            [ 2]  432 	ldw	(0x01, sp), x
                                    433 ;	./libs/uart_lib.c: 54: UART1_CR2 -> TEN = 1; // Transmitter enable
      0000BB AE 52 35         [ 2]  434 	ldw	x, #0x5235
      0000BE 88               [ 1]  435 	push	a
      0000BF F6               [ 1]  436 	ld	a, (x)
      0000C0 AA 08            [ 1]  437 	or	a, #0x08
      0000C2 F7               [ 1]  438 	ld	(x), a
      0000C3 84               [ 1]  439 	pop	a
                                    440 ;	./libs/uart_lib.c: 55: UART1_CR2 -> REN = 1; // Receiver enable
      0000C4 AE 52 35         [ 2]  441 	ldw	x, #0x5235
      0000C7 88               [ 1]  442 	push	a
      0000C8 F6               [ 1]  443 	ld	a, (x)
      0000C9 AA 04            [ 1]  444 	or	a, #0x04
      0000CB F7               [ 1]  445 	ld	(x), a
      0000CC 84               [ 1]  446 	pop	a
                                    447 ;	./libs/uart_lib.c: 56: switch(stopbit)
      0000CD A1 02            [ 1]  448 	cp	a, #0x02
      0000CF 27 06            [ 1]  449 	jreq	00101$
      0000D1 A1 03            [ 1]  450 	cp	a, #0x03
      0000D3 27 0E            [ 1]  451 	jreq	00102$
      0000D5 20 16            [ 2]  452 	jra	00103$
                                    453 ;	./libs/uart_lib.c: 58: case 2:
      0000D7                        454 00101$:
                                    455 ;	./libs/uart_lib.c: 59: UART1_CR3 -> STOP = 2;
      0000D7 C6 52 36         [ 1]  456 	ld	a, 0x5236
      0000DA A4 CF            [ 1]  457 	and	a, #0xcf
      0000DC AA 20            [ 1]  458 	or	a, #0x20
      0000DE C7 52 36         [ 1]  459 	ld	0x5236, a
                                    460 ;	./libs/uart_lib.c: 60: break;
      0000E1 20 12            [ 2]  461 	jra	00104$
                                    462 ;	./libs/uart_lib.c: 61: case 3:
      0000E3                        463 00102$:
                                    464 ;	./libs/uart_lib.c: 62: UART1_CR3 -> STOP = 3;
      0000E3 C6 52 36         [ 1]  465 	ld	a, 0x5236
      0000E6 AA 30            [ 1]  466 	or	a, #0x30
      0000E8 C7 52 36         [ 1]  467 	ld	0x5236, a
                                    468 ;	./libs/uart_lib.c: 63: break;
      0000EB 20 08            [ 2]  469 	jra	00104$
                                    470 ;	./libs/uart_lib.c: 64: default:
      0000ED                        471 00103$:
                                    472 ;	./libs/uart_lib.c: 65: UART1_CR3 -> STOP = 0;
      0000ED C6 52 36         [ 1]  473 	ld	a, 0x5236
      0000F0 A4 CF            [ 1]  474 	and	a, #0xcf
      0000F2 C7 52 36         [ 1]  475 	ld	0x5236, a
                                    476 ;	./libs/uart_lib.c: 67: }
      0000F5                        477 00104$:
                                    478 ;	./libs/uart_lib.c: 68: switch(baudrate)
      0000F5 1E 01            [ 2]  479 	ldw	x, (0x01, sp)
      0000F7 A3 08 00         [ 2]  480 	cpw	x, #0x0800
      0000FA 26 03            [ 1]  481 	jrne	00186$
      0000FC CCr01r88         [ 2]  482 	jp	00110$
      0000FF                        483 00186$:
      0000FF 1E 01            [ 2]  484 	ldw	x, (0x01, sp)
      000101 A3 09 60         [ 2]  485 	cpw	x, #0x0960
      000104 27 28            [ 1]  486 	jreq	00105$
      000106 1E 01            [ 2]  487 	ldw	x, (0x01, sp)
      000108 A3 10 00         [ 2]  488 	cpw	x, #0x1000
      00010B 26 03            [ 1]  489 	jrne	00192$
      00010D CCr01r98         [ 2]  490 	jp	00111$
      000110                        491 00192$:
      000110 1E 01            [ 2]  492 	ldw	x, (0x01, sp)
      000112 A3 4B 00         [ 2]  493 	cpw	x, #0x4b00
      000115 27 31            [ 1]  494 	jreq	00106$
      000117 1E 01            [ 2]  495 	ldw	x, (0x01, sp)
      000119 A3 84 00         [ 2]  496 	cpw	x, #0x8400
      00011C 27 5A            [ 1]  497 	jreq	00109$
      00011E 1E 01            [ 2]  498 	ldw	x, (0x01, sp)
      000120 A3 C2 00         [ 2]  499 	cpw	x, #0xc200
      000123 27 43            [ 1]  500 	jreq	00108$
      000125 1E 01            [ 2]  501 	ldw	x, (0x01, sp)
      000127 A3 E1 00         [ 2]  502 	cpw	x, #0xe100
      00012A 27 2C            [ 1]  503 	jreq	00107$
      00012C 20 7A            [ 2]  504 	jra	00112$
                                    505 ;	./libs/uart_lib.c: 70: case (unsigned int)2400:
      00012E                        506 00105$:
                                    507 ;	./libs/uart_lib.c: 71: UART1_BRR2 -> MSB = 0x01;
      00012E C6 52 33         [ 1]  508 	ld	a, 0x5233
      000131 A4 0F            [ 1]  509 	and	a, #0x0f
      000133 AA 10            [ 1]  510 	or	a, #0x10
      000135 C7 52 33         [ 1]  511 	ld	0x5233, a
                                    512 ;	./libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0xA0;
      000138 35 A0 52 32      [ 1]  513 	mov	0x5232+0, #0xa0
                                    514 ;	./libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x0B; 
      00013C C6 52 33         [ 1]  515 	ld	a, 0x5233
      00013F A4 F0            [ 1]  516 	and	a, #0xf0
      000141 AA 0B            [ 1]  517 	or	a, #0x0b
      000143 C7 52 33         [ 1]  518 	ld	0x5233, a
                                    519 ;	./libs/uart_lib.c: 74: break;
      000146 20 6E            [ 2]  520 	jra	00114$
                                    521 ;	./libs/uart_lib.c: 75: case (unsigned int)19200:
      000148                        522 00106$:
                                    523 ;	./libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x34;
      000148 35 34 52 32      [ 1]  524 	mov	0x5232+0, #0x34
                                    525 ;	./libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      00014C C6 52 33         [ 1]  526 	ld	a, 0x5233
      00014F A4 F0            [ 1]  527 	and	a, #0xf0
      000151 AA 01            [ 1]  528 	or	a, #0x01
      000153 C7 52 33         [ 1]  529 	ld	0x5233, a
                                    530 ;	./libs/uart_lib.c: 78: break;
      000156 20 5E            [ 2]  531 	jra	00114$
                                    532 ;	./libs/uart_lib.c: 79: case (unsigned int)57600:
      000158                        533 00107$:
                                    534 ;	./libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x11;
      000158 35 11 52 32      [ 1]  535 	mov	0x5232+0, #0x11
                                    536 ;	./libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x06;
      00015C C6 52 33         [ 1]  537 	ld	a, 0x5233
      00015F A4 F0            [ 1]  538 	and	a, #0xf0
      000161 AA 06            [ 1]  539 	or	a, #0x06
      000163 C7 52 33         [ 1]  540 	ld	0x5233, a
                                    541 ;	./libs/uart_lib.c: 82: break;
      000166 20 4E            [ 2]  542 	jra	00114$
                                    543 ;	./libs/uart_lib.c: 83: case (unsigned int)115200:
      000168                        544 00108$:
                                    545 ;	./libs/uart_lib.c: 84: UART1_BRR1 -> DIV = 0x08;
      000168 35 08 52 32      [ 1]  546 	mov	0x5232+0, #0x08
                                    547 ;	./libs/uart_lib.c: 85: UART1_BRR2 -> LSB = 0x0B;
      00016C C6 52 33         [ 1]  548 	ld	a, 0x5233
      00016F A4 F0            [ 1]  549 	and	a, #0xf0
      000171 AA 0B            [ 1]  550 	or	a, #0x0b
      000173 C7 52 33         [ 1]  551 	ld	0x5233, a
                                    552 ;	./libs/uart_lib.c: 86: break;
      000176 20 3E            [ 2]  553 	jra	00114$
                                    554 ;	./libs/uart_lib.c: 87: case (unsigned int)230400:
      000178                        555 00109$:
                                    556 ;	./libs/uart_lib.c: 88: UART1_BRR1 -> DIV = 0x04;
      000178 35 04 52 32      [ 1]  557 	mov	0x5232+0, #0x04
                                    558 ;	./libs/uart_lib.c: 89: UART1_BRR2 -> LSB = 0x05;
      00017C C6 52 33         [ 1]  559 	ld	a, 0x5233
      00017F A4 F0            [ 1]  560 	and	a, #0xf0
      000181 AA 05            [ 1]  561 	or	a, #0x05
      000183 C7 52 33         [ 1]  562 	ld	0x5233, a
                                    563 ;	./libs/uart_lib.c: 90: break;
      000186 20 2E            [ 2]  564 	jra	00114$
                                    565 ;	./libs/uart_lib.c: 91: case (unsigned int)460800:
      000188                        566 00110$:
                                    567 ;	./libs/uart_lib.c: 92: UART1_BRR1 -> DIV = 0x02;
      000188 35 02 52 32      [ 1]  568 	mov	0x5232+0, #0x02
                                    569 ;	./libs/uart_lib.c: 93: UART1_BRR2 -> LSB = 0x03;
      00018C C6 52 33         [ 1]  570 	ld	a, 0x5233
      00018F A4 F0            [ 1]  571 	and	a, #0xf0
      000191 AA 03            [ 1]  572 	or	a, #0x03
      000193 C7 52 33         [ 1]  573 	ld	0x5233, a
                                    574 ;	./libs/uart_lib.c: 94: break;
      000196 20 1E            [ 2]  575 	jra	00114$
                                    576 ;	./libs/uart_lib.c: 95: case (unsigned int)921600:
      000198                        577 00111$:
                                    578 ;	./libs/uart_lib.c: 96: UART1_BRR1 -> DIV = 0x01;
      000198 35 01 52 32      [ 1]  579 	mov	0x5232+0, #0x01
                                    580 ;	./libs/uart_lib.c: 97: UART1_BRR2 -> LSB = 0x01;
      00019C C6 52 33         [ 1]  581 	ld	a, 0x5233
      00019F A4 F0            [ 1]  582 	and	a, #0xf0
      0001A1 AA 01            [ 1]  583 	or	a, #0x01
      0001A3 C7 52 33         [ 1]  584 	ld	0x5233, a
                                    585 ;	./libs/uart_lib.c: 98: break;
      0001A6 20 0E            [ 2]  586 	jra	00114$
                                    587 ;	./libs/uart_lib.c: 99: default:
      0001A8                        588 00112$:
                                    589 ;	./libs/uart_lib.c: 100: UART1_BRR1 -> DIV = 0x68;
      0001A8 35 68 52 32      [ 1]  590 	mov	0x5232+0, #0x68
                                    591 ;	./libs/uart_lib.c: 101: UART1_BRR2 -> LSB = 0x03;
      0001AC C6 52 33         [ 1]  592 	ld	a, 0x5233
      0001AF A4 F0            [ 1]  593 	and	a, #0xf0
      0001B1 AA 03            [ 1]  594 	or	a, #0x03
      0001B3 C7 52 33         [ 1]  595 	ld	0x5233, a
                                    596 ;	./libs/uart_lib.c: 103: }
      0001B6                        597 00114$:
                                    598 ;	./libs/uart_lib.c: 104: }
      0001B6 5B 02            [ 2]  599 	addw	sp, #2
      0001B8 81               [ 4]  600 	ret
                                    601 ;	./libs/uart_lib.c: 106: int uart_read_byte(uint8_t *data)
                                    602 ;	-----------------------------------------
                                    603 ;	 function uart_read_byte
                                    604 ;	-----------------------------------------
      0001B9                        605 _uart_read_byte:
                                    606 ;	./libs/uart_lib.c: 108: while(!(UART1_SR -> RXNE));
      0001B9                        607 00101$:
      0001B9 72 0B 52 30 FB   [ 2]  608 	btjf	0x5230, #5, 00101$
                                    609 ;	./libs/uart_lib.c: 110: return 1;
      0001BE 5F               [ 1]  610 	clrw	x
      0001BF 5C               [ 1]  611 	incw	x
                                    612 ;	./libs/uart_lib.c: 111: }
      0001C0 81               [ 4]  613 	ret
                                    614 ;	./libs/uart_lib.c: 113: int uart_write_byte(uint8_t data)
                                    615 ;	-----------------------------------------
                                    616 ;	 function uart_write_byte
                                    617 ;	-----------------------------------------
      0001C1                        618 _uart_write_byte:
                                    619 ;	./libs/uart_lib.c: 115: UART1_DR -> DR = data;
      0001C1 C7 52 31         [ 1]  620 	ld	0x5231, a
                                    621 ;	./libs/uart_lib.c: 116: while(!(UART1_SR -> TXE));
      0001C4                        622 00101$:
      0001C4 72 0F 52 30 FB   [ 2]  623 	btjf	0x5230, #7, 00101$
                                    624 ;	./libs/uart_lib.c: 117: return 1;
      0001C9 5F               [ 1]  625 	clrw	x
      0001CA 5C               [ 1]  626 	incw	x
                                    627 ;	./libs/uart_lib.c: 118: }
      0001CB 81               [ 4]  628 	ret
                                    629 ;	./libs/uart_lib.c: 120: int uart_write(uint8_t *data_buf)
                                    630 ;	-----------------------------------------
                                    631 ;	 function uart_write
                                    632 ;	-----------------------------------------
      0001CC                        633 _uart_write:
      0001CC 52 04            [ 2]  634 	sub	sp, #4
      0001CE 1F 01            [ 2]  635 	ldw	(0x01, sp), x
                                    636 ;	./libs/uart_lib.c: 122: int count = 0;
      0001D0 5F               [ 1]  637 	clrw	x
      0001D1 1F 03            [ 2]  638 	ldw	(0x03, sp), x
                                    639 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001D3 5F               [ 1]  640 	clrw	x
      0001D4                        641 00103$:
      0001D4 90 93            [ 1]  642 	ldw	y, x
      0001D6 72 F9 01         [ 2]  643 	addw	y, (0x01, sp)
      0001D9 90 F6            [ 1]  644 	ld	a, (y)
      0001DB 27 0E            [ 1]  645 	jreq	00101$
                                    646 ;	./libs/uart_lib.c: 124: count += uart_write_byte(data_buf[i]);
      0001DD 89               [ 2]  647 	pushw	x
      0001DE CDr01rC1         [ 4]  648 	call	_uart_write_byte
      0001E1 51               [ 1]  649 	exgw	x, y
      0001E2 85               [ 2]  650 	popw	x
      0001E3 72 F9 03         [ 2]  651 	addw	y, (0x03, sp)
      0001E6 17 03            [ 2]  652 	ldw	(0x03, sp), y
                                    653 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001E8 5C               [ 1]  654 	incw	x
      0001E9 20 E9            [ 2]  655 	jra	00103$
      0001EB                        656 00101$:
                                    657 ;	./libs/uart_lib.c: 125: return count;
      0001EB 1E 03            [ 2]  658 	ldw	x, (0x03, sp)
                                    659 ;	./libs/uart_lib.c: 126: }
      0001ED 5B 04            [ 2]  660 	addw	sp, #4
      0001EF 81               [ 4]  661 	ret
                                    662 ;	./libs/uart_lib.c: 127: int uart_read(uint8_t *data_buf,int size)
                                    663 ;	-----------------------------------------
                                    664 ;	 function uart_read
                                    665 ;	-----------------------------------------
      0001F0                        666 _uart_read:
      0001F0 52 04            [ 2]  667 	sub	sp, #4
      0001F2 1F 01            [ 2]  668 	ldw	(0x01, sp), x
                                    669 ;	./libs/uart_lib.c: 130: int count = 0;
      0001F4 5F               [ 1]  670 	clrw	x
      0001F5 1F 03            [ 2]  671 	ldw	(0x03, sp), x
                                    672 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001F7 5F               [ 1]  673 	clrw	x
      0001F8                        674 00103$:
      0001F8 90 93            [ 1]  675 	ldw	y, x
      0001FA 72 F9 01         [ 2]  676 	addw	y, (0x01, sp)
      0001FD 90 F6            [ 1]  677 	ld	a, (y)
      0001FF 27 13            [ 1]  678 	jreq	00101$
                                    679 ;	./libs/uart_lib.c: 132: count += uart_read_byte((unsigned char *)data_buf[i]);
      000201 90 5F            [ 1]  680 	clrw	y
      000203 90 97            [ 1]  681 	ld	yl, a
      000205 89               [ 2]  682 	pushw	x
      000206 93               [ 1]  683 	ldw	x, y
      000207 CDr01rB9         [ 4]  684 	call	_uart_read_byte
      00020A 51               [ 1]  685 	exgw	x, y
      00020B 85               [ 2]  686 	popw	x
      00020C 72 F9 03         [ 2]  687 	addw	y, (0x03, sp)
      00020F 17 03            [ 2]  688 	ldw	(0x03, sp), y
                                    689 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      000211 5C               [ 1]  690 	incw	x
      000212 20 E4            [ 2]  691 	jra	00103$
      000214                        692 00101$:
                                    693 ;	./libs/uart_lib.c: 133: return count;
      000214 1E 03            [ 2]  694 	ldw	x, (0x03, sp)
                                    695 ;	./libs/uart_lib.c: 134: }
      000216 5B 04            [ 2]  696 	addw	sp, #4
      000218 90 85            [ 2]  697 	popw	y
      00021A 5B 02            [ 2]  698 	addw	sp, #2
      00021C 90 FC            [ 2]  699 	jp	(y)
                                    700 ;	./libs/i2c_lib.c: 3: void i2c_irq(void) __interrupt(I2C_vector)
                                    701 ;	-----------------------------------------
                                    702 ;	 function i2c_irq
                                    703 ;	-----------------------------------------
      00021E                        704 _i2c_irq:
      00021E 4F               [ 1]  705 	clr	a
      00021F 62               [ 2]  706 	div	x, a
                                    707 ;	./libs/i2c_lib.c: 6: disableInterrupts();
      000220 9B               [ 1]  708 	sim
                                    709 ;	./libs/i2c_lib.c: 7: I2C_IRQ.all = 0;//обнуление флагов регистров
      000221 35 00u00u00      [ 1]  710 	mov	_I2C_IRQ+0, #0x00
                                    711 ;	./libs/i2c_lib.c: 9: if(I2C_SR1 -> ADDR)//прерывание адреса
      000225 AE 52 17         [ 2]  712 	ldw	x, #0x5217
      000228 F6               [ 1]  713 	ld	a, (x)
      000229 44               [ 1]  714 	srl	a
      00022A A4 01            [ 1]  715 	and	a, #0x01
      00022C 27 16            [ 1]  716 	jreq	00102$
                                    717 ;	./libs/i2c_lib.c: 11: clr_sr1();
      00022E C6 52 17         [ 1]  718 	ld	a,0x5217
                                    719 ;	./libs/i2c_lib.c: 12: I2C_IRQ.ADDR = 1;
      000231 72 12u00u00      [ 1]  720 	bset	_I2C_IRQ+0, #1
                                    721 ;	./libs/i2c_lib.c: 13: clr_sr3();//EV6
      000235 C6 52 19         [ 1]  722 	ld	a,0x5219
                                    723 ;	./libs/i2c_lib.c: 14: I2C_ITR -> ITEVTEN = 0;
      000238 72 13 52 1A      [ 1]  724 	bres	0x521a, #1
                                    725 ;	./libs/i2c_lib.c: 15: uart_write_byte(0xE1);
      00023C A6 E1            [ 1]  726 	ld	a, #0xe1
      00023E CDr01rC1         [ 4]  727 	call	_uart_write_byte
                                    728 ;	./libs/i2c_lib.c: 16: return;
      000241 CCr02rD7         [ 2]  729 	jp	00113$
      000244                        730 00102$:
                                    731 ;	./libs/i2c_lib.c: 19: if(I2C_SR1 -> TXE) //прерывание регистра данных(он пуст)
      000244 C6 52 17         [ 1]  732 	ld	a, 0x5217
      000247 4E               [ 1]  733 	swap	a
      000248 44               [ 1]  734 	srl	a
      000249 44               [ 1]  735 	srl	a
      00024A 44               [ 1]  736 	srl	a
      00024B A5 01            [ 1]  737 	bcp	a, #0x01
      00024D 27 17            [ 1]  738 	jreq	00104$
                                    739 ;	./libs/i2c_lib.c: 21: I2C_IRQ.TXE = 1;
      00024F 72 18u00u00      [ 1]  740 	bset	_I2C_IRQ+0, #4
                                    741 ;	./libs/i2c_lib.c: 22: I2C_ITR -> ITBUFEN = 0;
      000253 72 15 52 1A      [ 1]  742 	bres	0x521a, #2
                                    743 ;	./libs/i2c_lib.c: 23: I2C_ITR -> ITEVTEN = 0;
      000257 72 13 52 1A      [ 1]  744 	bres	0x521a, #1
                                    745 ;	./libs/i2c_lib.c: 24: I2C_ITR -> ITERREN = 0;
      00025B 72 11 52 1A      [ 1]  746 	bres	0x521a, #0
                                    747 ;	./libs/i2c_lib.c: 25: uart_write_byte(0xEA);
      00025F A6 EA            [ 1]  748 	ld	a, #0xea
      000261 CDr01rC1         [ 4]  749 	call	_uart_write_byte
                                    750 ;	./libs/i2c_lib.c: 26: return;
      000264 20 71            [ 2]  751 	jra	00113$
      000266                        752 00104$:
                                    753 ;	./libs/i2c_lib.c: 28: if(I2C_SR1 -> RXNE) //прерывание регистра данных(он не пуст)
      000266 C6 52 17         [ 1]  754 	ld	a, 0x5217
      000269 4E               [ 1]  755 	swap	a
      00026A 44               [ 1]  756 	srl	a
      00026B 44               [ 1]  757 	srl	a
      00026C A5 01            [ 1]  758 	bcp	a, #0x01
      00026E 27 17            [ 1]  759 	jreq	00106$
                                    760 ;	./libs/i2c_lib.c: 30: I2C_IRQ.RXNE = 1;
      000270 72 16u00u00      [ 1]  761 	bset	_I2C_IRQ+0, #3
                                    762 ;	./libs/i2c_lib.c: 31: I2C_ITR -> ITBUFEN = 0;
      000274 72 15 52 1A      [ 1]  763 	bres	0x521a, #2
                                    764 ;	./libs/i2c_lib.c: 32: I2C_ITR -> ITEVTEN = 0;
      000278 72 13 52 1A      [ 1]  765 	bres	0x521a, #1
                                    766 ;	./libs/i2c_lib.c: 33: I2C_ITR -> ITERREN = 0;
      00027C 72 11 52 1A      [ 1]  767 	bres	0x521a, #0
                                    768 ;	./libs/i2c_lib.c: 34: uart_write_byte(0xEB);
      000280 A6 EB            [ 1]  769 	ld	a, #0xeb
      000282 CDr01rC1         [ 4]  770 	call	_uart_write_byte
                                    771 ;	./libs/i2c_lib.c: 35: return;
      000285 20 50            [ 2]  772 	jra	00113$
      000287                        773 00106$:
                                    774 ;	./libs/i2c_lib.c: 38: if(I2C_SR1 -> SB)//EV5 прерывание стартового импульса
      000287 C6 52 17         [ 1]  775 	ld	a, 0x5217
      00028A A5 01            [ 1]  776 	bcp	a, #0x01
      00028C 27 0F            [ 1]  777 	jreq	00108$
                                    778 ;	./libs/i2c_lib.c: 40: I2C_IRQ.SB = 1;
      00028E 72 10u00u00      [ 1]  779 	bset	_I2C_IRQ+0, #0
                                    780 ;	./libs/i2c_lib.c: 41: I2C_ITR -> ITEVTEN = 0;
      000292 72 13 52 1A      [ 1]  781 	bres	0x521a, #1
                                    782 ;	./libs/i2c_lib.c: 42: uart_write_byte(0xE2);
      000296 A6 E2            [ 1]  783 	ld	a, #0xe2
      000298 CDr01rC1         [ 4]  784 	call	_uart_write_byte
                                    785 ;	./libs/i2c_lib.c: 43: return;
      00029B 20 3A            [ 2]  786 	jra	00113$
      00029D                        787 00108$:
                                    788 ;	./libs/i2c_lib.c: 45: if(I2C_SR1 -> BTF) //прерывание отправки данных
      00029D C6 52 17         [ 1]  789 	ld	a, 0x5217
      0002A0 44               [ 1]  790 	srl	a
      0002A1 44               [ 1]  791 	srl	a
      0002A2 A5 01            [ 1]  792 	bcp	a, #0x01
      0002A4 27 0F            [ 1]  793 	jreq	00110$
                                    794 ;	./libs/i2c_lib.c: 47: I2C_IRQ.BTF = 1;
      0002A6 72 14u00u00      [ 1]  795 	bset	_I2C_IRQ+0, #2
                                    796 ;	./libs/i2c_lib.c: 48: I2C_ITR -> ITEVTEN = 0;
      0002AA 72 13 52 1A      [ 1]  797 	bres	0x521a, #1
                                    798 ;	./libs/i2c_lib.c: 49: uart_write_byte(0xE3);
      0002AE A6 E3            [ 1]  799 	ld	a, #0xe3
      0002B0 CDr01rC1         [ 4]  800 	call	_uart_write_byte
                                    801 ;	./libs/i2c_lib.c: 50: return;
      0002B3 20 22            [ 2]  802 	jra	00113$
      0002B5                        803 00110$:
                                    804 ;	./libs/i2c_lib.c: 53: if(I2C_SR2 -> AF) //прерывание ошибки NACK
      0002B5 AE 52 18         [ 2]  805 	ldw	x, #0x5218
      0002B8 F6               [ 1]  806 	ld	a, (x)
      0002B9 44               [ 1]  807 	srl	a
      0002BA 44               [ 1]  808 	srl	a
      0002BB A4 01            [ 1]  809 	and	a, #0x01
      0002BD 27 17            [ 1]  810 	jreq	00112$
                                    811 ;	./libs/i2c_lib.c: 55: I2C_IRQ.AF = 1;
      0002BF 72 1Au00u00      [ 1]  812 	bset	_I2C_IRQ+0, #5
                                    813 ;	./libs/i2c_lib.c: 56: I2C_ITR -> ITEVTEN = 0;
      0002C3 72 13 52 1A      [ 1]  814 	bres	0x521a, #1
                                    815 ;	./libs/i2c_lib.c: 57: I2C_ITR -> ITERREN = 0;
      0002C7 72 11 52 1A      [ 1]  816 	bres	0x521a, #0
                                    817 ;	./libs/i2c_lib.c: 58: I2C_ITR -> ITBUFEN = 0;
      0002CB 72 15 52 1A      [ 1]  818 	bres	0x521a, #2
                                    819 ;	./libs/i2c_lib.c: 59: uart_write_byte(0xEE);
      0002CF A6 EE            [ 1]  820 	ld	a, #0xee
      0002D1 CDr01rC1         [ 4]  821 	call	_uart_write_byte
                                    822 ;	./libs/i2c_lib.c: 60: return;
      0002D4 20 01            [ 2]  823 	jra	00113$
      0002D6                        824 00112$:
                                    825 ;	./libs/i2c_lib.c: 63: enableInterrupts(); 
      0002D6 9A               [ 1]  826 	rim
      0002D7                        827 00113$:
                                    828 ;	./libs/i2c_lib.c: 64: }
      0002D7 80               [11]  829 	iret
                                    830 ;	./libs/i2c_lib.c: 66: void i2c_init(void)
                                    831 ;	-----------------------------------------
                                    832 ;	 function i2c_init
                                    833 ;	-----------------------------------------
      0002D8                        834 _i2c_init:
                                    835 ;	./libs/i2c_lib.c: 70: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      0002D8 72 11 52 10      [ 1]  836 	bres	0x5210, #0
                                    837 ;	./libs/i2c_lib.c: 71: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      0002DC C6 52 12         [ 1]  838 	ld	a, 0x5212
      0002DF A4 C0            [ 1]  839 	and	a, #0xc0
      0002E1 AA 10            [ 1]  840 	or	a, #0x10
      0002E3 C7 52 12         [ 1]  841 	ld	0x5212, a
                                    842 ;	./libs/i2c_lib.c: 72: I2C_CCRH -> CCR = 0;// =0
      0002E6 C6 52 1C         [ 1]  843 	ld	a, 0x521c
      0002E9 A4 F0            [ 1]  844 	and	a, #0xf0
      0002EB C7 52 1C         [ 1]  845 	ld	0x521c, a
                                    846 ;	./libs/i2c_lib.c: 73: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      0002EE 35 50 52 1B      [ 1]  847 	mov	0x521b+0, #0x50
                                    848 ;	./libs/i2c_lib.c: 74: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      0002F2 72 1F 52 1C      [ 1]  849 	bres	0x521c, #7
                                    850 ;	./libs/i2c_lib.c: 75: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      0002F6 72 1F 52 14      [ 1]  851 	bres	0x5214, #7
                                    852 ;	./libs/i2c_lib.c: 76: I2C_OARH -> ADDCONF = 1;// see reference manual
      0002FA 72 10 52 14      [ 1]  853 	bset	0x5214, #0
                                    854 ;	./libs/i2c_lib.c: 77: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      0002FE 72 10 52 10      [ 1]  855 	bset	0x5210, #0
                                    856 ;	./libs/i2c_lib.c: 78: }
      000302 81               [ 4]  857 	ret
                                    858 ;	./libs/i2c_lib.c: 80: void i2c_start(void)
                                    859 ;	-----------------------------------------
                                    860 ;	 function i2c_start
                                    861 ;	-----------------------------------------
      000303                        862 _i2c_start:
                                    863 ;	./libs/i2c_lib.c: 82: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000303 72 10 52 11      [ 1]  864 	bset	0x5211, #0
                                    865 ;	./libs/i2c_lib.c: 83: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      000307                        866 00101$:
      000307 72 01 52 17 FB   [ 2]  867 	btjf	0x5217, #0, 00101$
                                    868 ;	./libs/i2c_lib.c: 84: }
      00030C 81               [ 4]  869 	ret
                                    870 ;	./libs/i2c_lib.c: 86: void i2c_stop(void)
                                    871 ;	-----------------------------------------
                                    872 ;	 function i2c_stop
                                    873 ;	-----------------------------------------
      00030D                        874 _i2c_stop:
                                    875 ;	./libs/i2c_lib.c: 88: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00030D 72 12 52 11      [ 1]  876 	bset	0x5211, #1
                                    877 ;	./libs/i2c_lib.c: 89: }
      000311 81               [ 4]  878 	ret
                                    879 ;	./libs/i2c_lib.c: 91: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                    880 ;	-----------------------------------------
                                    881 ;	 function i2c_send_address
                                    882 ;	-----------------------------------------
      000312                        883 _i2c_send_address:
                                    884 ;	./libs/i2c_lib.c: 96: address = address << 1;
      000312 48               [ 1]  885 	sll	a
                                    886 ;	./libs/i2c_lib.c: 93: switch(rw_type)
      000313 88               [ 1]  887 	push	a
      000314 7B 04            [ 1]  888 	ld	a, (0x04, sp)
      000316 4A               [ 1]  889 	dec	a
      000317 84               [ 1]  890 	pop	a
      000318 26 02            [ 1]  891 	jrne	00102$
                                    892 ;	./libs/i2c_lib.c: 96: address = address << 1;
                                    893 ;	./libs/i2c_lib.c: 97: address |= 0x01; // Отправка адреса устройства с битом на чтение
      00031A AA 01            [ 1]  894 	or	a, #0x01
                                    895 ;	./libs/i2c_lib.c: 98: break;
                                    896 ;	./libs/i2c_lib.c: 99: default:
                                    897 ;	./libs/i2c_lib.c: 100: address = address << 1; // Отправка адреса устройства с битом на запись
                                    898 ;	./libs/i2c_lib.c: 102: }
      00031C                        899 00102$:
                                    900 ;	./libs/i2c_lib.c: 103: i2c_start();
      00031C 88               [ 1]  901 	push	a
      00031D CDr03r03         [ 4]  902 	call	_i2c_start
      000320 84               [ 1]  903 	pop	a
                                    904 ;	./libs/i2c_lib.c: 104: I2C_DR -> DR = address;
      000321 C7 52 16         [ 1]  905 	ld	0x5216, a
                                    906 ;	./libs/i2c_lib.c: 105: while(!I2C_SR1 -> ADDR)
      000324                        907 00106$:
      000324 AE 52 17         [ 2]  908 	ldw	x, #0x5217
      000327 F6               [ 1]  909 	ld	a, (x)
      000328 44               [ 1]  910 	srl	a
      000329 A4 01            [ 1]  911 	and	a, #0x01
      00032B 26 08            [ 1]  912 	jrne	00108$
                                    913 ;	./libs/i2c_lib.c: 106: if(I2C_SR2 -> AF)
      00032D 72 05 52 18 F2   [ 2]  914 	btjf	0x5218, #2, 00106$
                                    915 ;	./libs/i2c_lib.c: 107: return 0;
      000332 4F               [ 1]  916 	clr	a
      000333 20 08            [ 2]  917 	jra	00109$
      000335                        918 00108$:
                                    919 ;	./libs/i2c_lib.c: 108: clr_sr1();
      000335 C6 52 17         [ 1]  920 	ld	a,0x5217
                                    921 ;	./libs/i2c_lib.c: 109: clr_sr3();
      000338 C6 52 19         [ 1]  922 	ld	a,0x5219
                                    923 ;	./libs/i2c_lib.c: 110: return 1;
      00033B A6 01            [ 1]  924 	ld	a, #0x01
      00033D                        925 00109$:
                                    926 ;	./libs/i2c_lib.c: 111: }
      00033D 85               [ 2]  927 	popw	x
      00033E 5B 01            [ 2]  928 	addw	sp, #1
      000340 FC               [ 2]  929 	jp	(x)
                                    930 ;	./libs/i2c_lib.c: 113: uint8_t i2c_read_byte(void)
                                    931 ;	-----------------------------------------
                                    932 ;	 function i2c_read_byte
                                    933 ;	-----------------------------------------
      000341                        934 _i2c_read_byte:
                                    935 ;	./libs/i2c_lib.c: 115: while(!I2C_SR1 -> RXNE);
      000341                        936 00101$:
      000341 72 0D 52 17 FB   [ 2]  937 	btjf	0x5217, #6, 00101$
                                    938 ;	./libs/i2c_lib.c: 116: return I2C_DR -> DR;
      000346 C6 52 16         [ 1]  939 	ld	a, 0x5216
                                    940 ;	./libs/i2c_lib.c: 117: }
      000349 81               [ 4]  941 	ret
                                    942 ;	./libs/i2c_lib.c: 119: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                    943 ;	-----------------------------------------
                                    944 ;	 function i2c_read
                                    945 ;	-----------------------------------------
      00034A                        946 _i2c_read:
      00034A 52 04            [ 2]  947 	sub	sp, #4
                                    948 ;	./libs/i2c_lib.c: 121: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      00034C 4B 01            [ 1]  949 	push	#0x01
      00034E CDr03r12         [ 4]  950 	call	_i2c_send_address
      000351 4D               [ 1]  951 	tnz	a
      000352 27 3C            [ 1]  952 	jreq	00103$
                                    953 ;	./libs/i2c_lib.c: 123: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      000354 72 14 52 11      [ 1]  954 	bset	0x5211, #2
                                    955 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000358 5F               [ 1]  956 	clrw	x
      000359 1F 03            [ 2]  957 	ldw	(0x03, sp), x
      00035B                        958 00105$:
      00035B 5F               [ 1]  959 	clrw	x
      00035C 7B 07            [ 1]  960 	ld	a, (0x07, sp)
      00035E 97               [ 1]  961 	ld	xl, a
      00035F 5A               [ 2]  962 	decw	x
      000360 1F 01            [ 2]  963 	ldw	(0x01, sp), x
      000362 1E 03            [ 2]  964 	ldw	x, (0x03, sp)
      000364 13 01            [ 2]  965 	cpw	x, (0x01, sp)
      000366 2E 12            [ 1]  966 	jrsge	00101$
                                    967 ;	./libs/i2c_lib.c: 126: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      000368 1E 08            [ 2]  968 	ldw	x, (0x08, sp)
      00036A 72 FB 03         [ 2]  969 	addw	x, (0x03, sp)
      00036D 89               [ 2]  970 	pushw	x
      00036E CDr03r41         [ 4]  971 	call	_i2c_read_byte
      000371 85               [ 2]  972 	popw	x
      000372 F7               [ 1]  973 	ld	(x), a
                                    974 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000373 1E 03            [ 2]  975 	ldw	x, (0x03, sp)
      000375 5C               [ 1]  976 	incw	x
      000376 1F 03            [ 2]  977 	ldw	(0x03, sp), x
      000378 20 E1            [ 2]  978 	jra	00105$
      00037A                        979 00101$:
                                    980 ;	./libs/i2c_lib.c: 128: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      00037A C6 52 11         [ 1]  981 	ld	a, 0x5211
      00037D A4 FB            [ 1]  982 	and	a, #0xfb
      00037F C7 52 11         [ 1]  983 	ld	0x5211, a
                                    984 ;	./libs/i2c_lib.c: 130: data[size-1] = i2c_read_byte();
      000382 1E 08            [ 2]  985 	ldw	x, (0x08, sp)
      000384 72 FB 01         [ 2]  986 	addw	x, (0x01, sp)
      000387 89               [ 2]  987 	pushw	x
      000388 CDr03r41         [ 4]  988 	call	_i2c_read_byte
      00038B 85               [ 2]  989 	popw	x
      00038C F7               [ 1]  990 	ld	(x), a
                                    991 ;	./libs/i2c_lib.c: 132: i2c_stop();
      00038D CDr03r0D         [ 4]  992 	call	_i2c_stop
      000390                        993 00103$:
                                    994 ;	./libs/i2c_lib.c: 135: i2c_stop();
      000390 1E 05            [ 2]  995 	ldw	x, (5, sp)
      000392 1F 08            [ 2]  996 	ldw	(8, sp), x
      000394 5B 07            [ 2]  997 	addw	sp, #7
                                    998 ;	./libs/i2c_lib.c: 137: }
      000396 CCr03r0D         [ 2]  999 	jp	_i2c_stop
                                   1000 ;	./libs/i2c_lib.c: 139: uint8_t i2c_send_byte(uint8_t data)
                                   1001 ;	-----------------------------------------
                                   1002 ;	 function i2c_send_byte
                                   1003 ;	-----------------------------------------
      000399                       1004 _i2c_send_byte:
                                   1005 ;	./libs/i2c_lib.c: 141: I2C_DR -> DR = data; //Отправка данных
      000399 C7 52 16         [ 1] 1006 	ld	0x5216, a
                                   1007 ;	./libs/i2c_lib.c: 142: while(!I2C_SR1 -> TXE)
      00039C                       1008 00103$:
      00039C 72 0E 52 17 08   [ 2] 1009 	btjt	0x5217, #7, 00105$
                                   1010 ;	./libs/i2c_lib.c: 143: if(I2C_SR2 -> AF)
      0003A1 72 05 52 18 F6   [ 2] 1011 	btjf	0x5218, #2, 00103$
                                   1012 ;	./libs/i2c_lib.c: 144: return 1;
      0003A6 A6 01            [ 1] 1013 	ld	a, #0x01
      0003A8 81               [ 4] 1014 	ret
      0003A9                       1015 00105$:
                                   1016 ;	./libs/i2c_lib.c: 145: return 0;//флаг ответа
      0003A9 4F               [ 1] 1017 	clr	a
                                   1018 ;	./libs/i2c_lib.c: 146: }
      0003AA 81               [ 4] 1019 	ret
                                   1020 ;	./libs/i2c_lib.c: 148: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                   1021 ;	-----------------------------------------
                                   1022 ;	 function i2c_write
                                   1023 ;	-----------------------------------------
      0003AB                       1024 _i2c_write:
      0003AB 52 02            [ 2] 1025 	sub	sp, #2
                                   1026 ;	./libs/i2c_lib.c: 150: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      0003AD 4B 00            [ 1] 1027 	push	#0x00
      0003AF CDr03r12         [ 4] 1028 	call	_i2c_send_address
      0003B2 4D               [ 1] 1029 	tnz	a
      0003B3 27 1D            [ 1] 1030 	jreq	00105$
                                   1031 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003B5 5F               [ 1] 1032 	clrw	x
      0003B6                       1033 00107$:
      0003B6 7B 05            [ 1] 1034 	ld	a, (0x05, sp)
      0003B8 6B 02            [ 1] 1035 	ld	(0x02, sp), a
      0003BA 0F 01            [ 1] 1036 	clr	(0x01, sp)
      0003BC 13 01            [ 2] 1037 	cpw	x, (0x01, sp)
      0003BE 2E 12            [ 1] 1038 	jrsge	00105$
                                   1039 ;	./libs/i2c_lib.c: 153: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      0003C0 90 93            [ 1] 1040 	ldw	y, x
      0003C2 72 F9 06         [ 2] 1041 	addw	y, (0x06, sp)
      0003C5 90 F6            [ 1] 1042 	ld	a, (y)
      0003C7 89               [ 2] 1043 	pushw	x
      0003C8 CDr03r99         [ 4] 1044 	call	_i2c_send_byte
      0003CB 85               [ 2] 1045 	popw	x
      0003CC 4D               [ 1] 1046 	tnz	a
      0003CD 26 03            [ 1] 1047 	jrne	00105$
                                   1048 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003CF 5C               [ 1] 1049 	incw	x
      0003D0 20 E4            [ 2] 1050 	jra	00107$
      0003D2                       1051 00105$:
                                   1052 ;	./libs/i2c_lib.c: 158: i2c_stop();
      0003D2 1E 03            [ 2] 1053 	ldw	x, (3, sp)
      0003D4 1F 06            [ 2] 1054 	ldw	(6, sp), x
      0003D6 5B 05            [ 2] 1055 	addw	sp, #5
                                   1056 ;	./libs/i2c_lib.c: 159: }
      0003D8 CCr03r0D         [ 2] 1057 	jp	_i2c_stop
                                   1058 ;	./libs/i2c_lib.c: 161: uint8_t i2c_scan(void) 
                                   1059 ;	-----------------------------------------
                                   1060 ;	 function i2c_scan
                                   1061 ;	-----------------------------------------
      0003DB                       1062 _i2c_scan:
      0003DB 52 02            [ 2] 1063 	sub	sp, #2
                                   1064 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      0003DD A6 01            [ 1] 1065 	ld	a, #0x01
      0003DF 6B 01            [ 1] 1066 	ld	(0x01, sp), a
      0003E1                       1067 00105$:
      0003E1 A1 7F            [ 1] 1068 	cp	a, #0x7f
      0003E3 24 22            [ 1] 1069 	jrnc	00103$
                                   1070 ;	./libs/i2c_lib.c: 165: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      0003E5 88               [ 1] 1071 	push	a
      0003E6 4B 00            [ 1] 1072 	push	#0x00
      0003E8 CDr03r12         [ 4] 1073 	call	_i2c_send_address
      0003EB 6B 03            [ 1] 1074 	ld	(0x03, sp), a
      0003ED 84               [ 1] 1075 	pop	a
      0003EE 0D 02            [ 1] 1076 	tnz	(0x02, sp)
      0003F0 27 07            [ 1] 1077 	jreq	00102$
                                   1078 ;	./libs/i2c_lib.c: 167: i2c_stop();//адрес совпал 
      0003F2 CDr03r0D         [ 4] 1079 	call	_i2c_stop
                                   1080 ;	./libs/i2c_lib.c: 168: return addr;// выход из цикла
      0003F5 7B 01            [ 1] 1081 	ld	a, (0x01, sp)
      0003F7 20 12            [ 2] 1082 	jra	00107$
      0003F9                       1083 00102$:
                                   1084 ;	./libs/i2c_lib.c: 170: I2C_SR2 -> AF = 0;//очистка флага ошибки
      0003F9 AE 52 18         [ 2] 1085 	ldw	x, #0x5218
      0003FC 88               [ 1] 1086 	push	a
      0003FD F6               [ 1] 1087 	ld	a, (x)
      0003FE A4 FB            [ 1] 1088 	and	a, #0xfb
      000400 F7               [ 1] 1089 	ld	(x), a
      000401 84               [ 1] 1090 	pop	a
                                   1091 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      000402 4C               [ 1] 1092 	inc	a
      000403 6B 01            [ 1] 1093 	ld	(0x01, sp), a
      000405 20 DA            [ 2] 1094 	jra	00105$
      000407                       1095 00103$:
                                   1096 ;	./libs/i2c_lib.c: 172: i2c_stop();//совпадений нет выход из функции
      000407 CDr03r0D         [ 4] 1097 	call	_i2c_stop
                                   1098 ;	./libs/i2c_lib.c: 173: return 0;
      00040A 4F               [ 1] 1099 	clr	a
      00040B                       1100 00107$:
                                   1101 ;	./libs/i2c_lib.c: 174: }
      00040B 5B 02            [ 2] 1102 	addw	sp, #2
      00040D 81               [ 4] 1103 	ret
                                   1104 ;	./libs/i2c_lib.c: 176: void i2c_start_irq(void)
                                   1105 ;	-----------------------------------------
                                   1106 ;	 function i2c_start_irq
                                   1107 ;	-----------------------------------------
      00040E                       1108 _i2c_start_irq:
                                   1109 ;	./libs/i2c_lib.c: 179: I2C_ITR -> ITEVTEN = 1;//Включение прерываний для обработки сигнала старт
      00040E 72 12 52 1A      [ 1] 1110 	bset	0x521a, #1
                                   1111 ;	./libs/i2c_lib.c: 180: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000412 72 10 52 11      [ 1] 1112 	bset	0x5211, #0
                                   1113 ;	./libs/i2c_lib.c: 181: while(I2C_ITR -> ITEVTEN);// Ожидание отправки стартового сигнала
      000416                       1114 00101$:
      000416 C6 52 1A         [ 1] 1115 	ld	a, 0x521a
      000419 A5 02            [ 1] 1116 	bcp	a, #2
      00041B 26 F9            [ 1] 1117 	jrne	00101$
                                   1118 ;	./libs/i2c_lib.c: 182: }
      00041D 81               [ 4] 1119 	ret
                                   1120 ;	./libs/i2c_lib.c: 184: void i2c_stop_irq(void)
                                   1121 ;	-----------------------------------------
                                   1122 ;	 function i2c_stop_irq
                                   1123 ;	-----------------------------------------
      00041E                       1124 _i2c_stop_irq:
                                   1125 ;	./libs/i2c_lib.c: 186: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00041E 72 12 52 11      [ 1] 1126 	bset	0x5211, #1
                                   1127 ;	./libs/i2c_lib.c: 187: }
      000422 81               [ 4] 1128 	ret
                                   1129 ;	./libs/ssd1306_lib.c: 3: int get_bit(int data,int bit)
                                   1130 ;	-----------------------------------------
                                   1131 ;	 function get_bit
                                   1132 ;	-----------------------------------------
      000423                       1133 _get_bit:
                                   1134 ;	./libs/ssd1306_lib.c: 5: return ((data >> bit) & 1) ? 1 : 0;
      000423 7B 04            [ 1] 1135 	ld	a, (0x04, sp)
      000425 27 04            [ 1] 1136 	jreq	00113$
      000427                       1137 00112$:
      000427 57               [ 2] 1138 	sraw	x
      000428 4A               [ 1] 1139 	dec	a
      000429 26 FC            [ 1] 1140 	jrne	00112$
      00042B                       1141 00113$:
      00042B 54               [ 2] 1142 	srlw	x
      00042C 24 03            [ 1] 1143 	jrnc	00103$
      00042E 5F               [ 1] 1144 	clrw	x
      00042F 5C               [ 1] 1145 	incw	x
      000430 21                    1146 	.byte 0x21
      000431                       1147 00103$:
      000431 5F               [ 1] 1148 	clrw	x
      000432                       1149 00104$:
                                   1150 ;	./libs/ssd1306_lib.c: 6: }
      000432 90 85            [ 2] 1151 	popw	y
      000434 5B 02            [ 2] 1152 	addw	sp, #2
      000436 90 FC            [ 2] 1153 	jp	(y)
                                   1154 ;	./libs/ssd1306_lib.c: 7: int set_bit(int data,int bit, int value)
                                   1155 ;	-----------------------------------------
                                   1156 ;	 function set_bit
                                   1157 ;	-----------------------------------------
      000438                       1158 _set_bit:
      000438 52 04            [ 2] 1159 	sub	sp, #4
      00043A 1F 01            [ 2] 1160 	ldw	(0x01, sp), x
                                   1161 ;	./libs/ssd1306_lib.c: 9: int mask = 1 << bit ;
      00043C 5F               [ 1] 1162 	clrw	x
      00043D 5C               [ 1] 1163 	incw	x
      00043E 1F 03            [ 2] 1164 	ldw	(0x03, sp), x
      000440 7B 08            [ 1] 1165 	ld	a, (0x08, sp)
      000442 27 07            [ 1] 1166 	jreq	00114$
      000444                       1167 00113$:
      000444 08 04            [ 1] 1168 	sll	(0x04, sp)
      000446 09 03            [ 1] 1169 	rlc	(0x03, sp)
      000448 4A               [ 1] 1170 	dec	a
      000449 26 F9            [ 1] 1171 	jrne	00113$
      00044B                       1172 00114$:
                                   1173 ;	./libs/ssd1306_lib.c: 10: switch(value)
      00044B 1E 09            [ 2] 1174 	ldw	x, (0x09, sp)
      00044D 5A               [ 2] 1175 	decw	x
      00044E 26 0B            [ 1] 1176 	jrne	00102$
                                   1177 ;	./libs/ssd1306_lib.c: 13: data |= mask;
      000450 7B 02            [ 1] 1178 	ld	a, (0x02, sp)
      000452 1A 04            [ 1] 1179 	or	a, (0x04, sp)
      000454 97               [ 1] 1180 	ld	xl, a
      000455 7B 01            [ 1] 1181 	ld	a, (0x01, sp)
      000457 1A 03            [ 1] 1182 	or	a, (0x03, sp)
                                   1183 ;	./libs/ssd1306_lib.c: 14: break;
      000459 20 09            [ 2] 1184 	jra	00103$
                                   1185 ;	./libs/ssd1306_lib.c: 16: default:
      00045B                       1186 00102$:
                                   1187 ;	./libs/ssd1306_lib.c: 17: data &= ~mask;
      00045B 1E 03            [ 2] 1188 	ldw	x, (0x03, sp)
      00045D 53               [ 2] 1189 	cplw	x
      00045E 9F               [ 1] 1190 	ld	a, xl
      00045F 14 02            [ 1] 1191 	and	a, (0x02, sp)
      000461 02               [ 1] 1192 	rlwa	x
      000462 14 01            [ 1] 1193 	and	a, (0x01, sp)
                                   1194 ;	./libs/ssd1306_lib.c: 19: }
      000464                       1195 00103$:
                                   1196 ;	./libs/ssd1306_lib.c: 20: return data;
      000464 95               [ 1] 1197 	ld	xh, a
                                   1198 ;	./libs/ssd1306_lib.c: 21: }
      000465 16 05            [ 2] 1199 	ldw	y, (5, sp)
      000467 5B 0A            [ 2] 1200 	addw	sp, #10
      000469 90 FC            [ 2] 1201 	jp	(y)
                                   1202 ;	./libs/ssd1306_lib.c: 23: void ssd1306_init(void)
                                   1203 ;	-----------------------------------------
                                   1204 ;	 function ssd1306_init
                                   1205 ;	-----------------------------------------
      00046B                       1206 _ssd1306_init:
      00046B 52 1B            [ 2] 1207 	sub	sp, #27
                                   1208 ;	./libs/ssd1306_lib.c: 25: uint8_t setup_buffer[27] = {COMMAND, DISPLAY_OFF, 
      00046D 96               [ 1] 1209 	ldw	x, sp
      00046E 5C               [ 1] 1210 	incw	x
      00046F 7F               [ 1] 1211 	clr	(x)
      000470 A6 AE            [ 1] 1212 	ld	a, #0xae
      000472 6B 02            [ 1] 1213 	ld	(0x02, sp), a
      000474 A6 D5            [ 1] 1214 	ld	a, #0xd5
      000476 6B 03            [ 1] 1215 	ld	(0x03, sp), a
      000478 A6 80            [ 1] 1216 	ld	a, #0x80
      00047A 6B 04            [ 1] 1217 	ld	(0x04, sp), a
      00047C A6 A8            [ 1] 1218 	ld	a, #0xa8
      00047E 6B 05            [ 1] 1219 	ld	(0x05, sp), a
      000480 A6 1F            [ 1] 1220 	ld	a, #0x1f
      000482 6B 06            [ 1] 1221 	ld	(0x06, sp), a
      000484 A6 D3            [ 1] 1222 	ld	a, #0xd3
      000486 6B 07            [ 1] 1223 	ld	(0x07, sp), a
      000488 0F 08            [ 1] 1224 	clr	(0x08, sp)
      00048A A6 40            [ 1] 1225 	ld	a, #0x40
      00048C 6B 09            [ 1] 1226 	ld	(0x09, sp), a
      00048E A6 8D            [ 1] 1227 	ld	a, #0x8d
      000490 6B 0A            [ 1] 1228 	ld	(0x0a, sp), a
      000492 A6 14            [ 1] 1229 	ld	a, #0x14
      000494 6B 0B            [ 1] 1230 	ld	(0x0b, sp), a
      000496 A6 DB            [ 1] 1231 	ld	a, #0xdb
      000498 6B 0C            [ 1] 1232 	ld	(0x0c, sp), a
      00049A A6 40            [ 1] 1233 	ld	a, #0x40
      00049C 6B 0D            [ 1] 1234 	ld	(0x0d, sp), a
      00049E A6 A4            [ 1] 1235 	ld	a, #0xa4
      0004A0 6B 0E            [ 1] 1236 	ld	(0x0e, sp), a
      0004A2 A6 A6            [ 1] 1237 	ld	a, #0xa6
      0004A4 6B 0F            [ 1] 1238 	ld	(0x0f, sp), a
      0004A6 A6 DA            [ 1] 1239 	ld	a, #0xda
      0004A8 6B 10            [ 1] 1240 	ld	(0x10, sp), a
      0004AA A6 02            [ 1] 1241 	ld	a, #0x02
      0004AC 6B 11            [ 1] 1242 	ld	(0x11, sp), a
      0004AE A6 81            [ 1] 1243 	ld	a, #0x81
      0004B0 6B 12            [ 1] 1244 	ld	(0x12, sp), a
      0004B2 A6 8F            [ 1] 1245 	ld	a, #0x8f
      0004B4 6B 13            [ 1] 1246 	ld	(0x13, sp), a
      0004B6 A6 D9            [ 1] 1247 	ld	a, #0xd9
      0004B8 6B 14            [ 1] 1248 	ld	(0x14, sp), a
      0004BA A6 F1            [ 1] 1249 	ld	a, #0xf1
      0004BC 6B 15            [ 1] 1250 	ld	(0x15, sp), a
      0004BE A6 20            [ 1] 1251 	ld	a, #0x20
      0004C0 6B 16            [ 1] 1252 	ld	(0x16, sp), a
      0004C2 0F 17            [ 1] 1253 	clr	(0x17, sp)
      0004C4 A6 A0            [ 1] 1254 	ld	a, #0xa0
      0004C6 6B 18            [ 1] 1255 	ld	(0x18, sp), a
      0004C8 A6 C0            [ 1] 1256 	ld	a, #0xc0
      0004CA 6B 19            [ 1] 1257 	ld	(0x19, sp), a
      0004CC A6 1F            [ 1] 1258 	ld	a, #0x1f
      0004CE 6B 1A            [ 1] 1259 	ld	(0x1a, sp), a
      0004D0 A6 AF            [ 1] 1260 	ld	a, #0xaf
      0004D2 6B 1B            [ 1] 1261 	ld	(0x1b, sp), a
                                   1262 ;	./libs/ssd1306_lib.c: 41: i2c_write(I2C_DISPLAY_ADDR, 27, setup_buffer);
      0004D4 89               [ 2] 1263 	pushw	x
      0004D5 4B 1B            [ 1] 1264 	push	#0x1b
      0004D7 A6 3C            [ 1] 1265 	ld	a, #0x3c
      0004D9 CDr03rAB         [ 4] 1266 	call	_i2c_write
                                   1267 ;	./libs/ssd1306_lib.c: 43: }
      0004DC 5B 1B            [ 2] 1268 	addw	sp, #27
      0004DE 81               [ 4] 1269 	ret
                                   1270 ;	./libs/ssd1306_lib.c: 45: void ssd1306_set_params_to_write(void)
                                   1271 ;	-----------------------------------------
                                   1272 ;	 function ssd1306_set_params_to_write
                                   1273 ;	-----------------------------------------
      0004DF                       1274 _ssd1306_set_params_to_write:
      0004DF 52 07            [ 2] 1275 	sub	sp, #7
                                   1276 ;	./libs/ssd1306_lib.c: 47: uint8_t set_params_buf[7] = {COMMAND,
      0004E1 96               [ 1] 1277 	ldw	x, sp
      0004E2 5C               [ 1] 1278 	incw	x
      0004E3 7F               [ 1] 1279 	clr	(x)
      0004E4 A6 22            [ 1] 1280 	ld	a, #0x22
      0004E6 6B 02            [ 1] 1281 	ld	(0x02, sp), a
      0004E8 0F 03            [ 1] 1282 	clr	(0x03, sp)
      0004EA A6 03            [ 1] 1283 	ld	a, #0x03
      0004EC 6B 04            [ 1] 1284 	ld	(0x04, sp), a
      0004EE A6 21            [ 1] 1285 	ld	a, #0x21
      0004F0 6B 05            [ 1] 1286 	ld	(0x05, sp), a
      0004F2 0F 06            [ 1] 1287 	clr	(0x06, sp)
      0004F4 A6 7F            [ 1] 1288 	ld	a, #0x7f
      0004F6 6B 07            [ 1] 1289 	ld	(0x07, sp), a
                                   1290 ;	./libs/ssd1306_lib.c: 51: i2c_write(I2C_DISPLAY_ADDR,7,set_params_buf);
      0004F8 89               [ 2] 1291 	pushw	x
      0004F9 4B 07            [ 1] 1292 	push	#0x07
      0004FB A6 3C            [ 1] 1293 	ld	a, #0x3c
      0004FD CDr03rAB         [ 4] 1294 	call	_i2c_write
                                   1295 ;	./libs/ssd1306_lib.c: 52: }
      000500 5B 07            [ 2] 1296 	addw	sp, #7
      000502 81               [ 4] 1297 	ret
                                   1298 ;	./libs/ssd1306_lib.c: 54: void ssd1306_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1299 ;	-----------------------------------------
                                   1300 ;	 function ssd1306_draw_pixel
                                   1301 ;	-----------------------------------------
      000503                       1302 _ssd1306_draw_pixel:
      000503 52 08            [ 2] 1303 	sub	sp, #8
      000505 1F 07            [ 2] 1304 	ldw	(0x07, sp), x
                                   1305 ;	./libs/ssd1306_lib.c: 56: buffer[x + ((y / 8) * SSD1306_LCDWIDTH)] = set_bit(buffer[x + ((y / 8) * SSD1306_LCDWIDTH)],(y % 8),color);
      000507 6B 06            [ 1] 1306 	ld	(0x06, sp), a
      000509 0F 05            [ 1] 1307 	clr	(0x05, sp)
      00050B 7B 0B            [ 1] 1308 	ld	a, (0x0b, sp)
      00050D 0F 01            [ 1] 1309 	clr	(0x01, sp)
      00050F 97               [ 1] 1310 	ld	xl, a
      000510 02               [ 1] 1311 	rlwa	x
      000511 4F               [ 1] 1312 	clr	a
      000512 01               [ 1] 1313 	rrwa	x
      000513 5D               [ 2] 1314 	tnzw	x
      000514 2A 03            [ 1] 1315 	jrpl	00103$
      000516 1C 00 07         [ 2] 1316 	addw	x, #0x0007
      000519                       1317 00103$:
      000519 57               [ 2] 1318 	sraw	x
      00051A 57               [ 2] 1319 	sraw	x
      00051B 57               [ 2] 1320 	sraw	x
      00051C 58               [ 2] 1321 	sllw	x
      00051D 58               [ 2] 1322 	sllw	x
      00051E 58               [ 2] 1323 	sllw	x
      00051F 58               [ 2] 1324 	sllw	x
      000520 58               [ 2] 1325 	sllw	x
      000521 58               [ 2] 1326 	sllw	x
      000522 58               [ 2] 1327 	sllw	x
      000523 72 FB 05         [ 2] 1328 	addw	x, (0x05, sp)
      000526 72 FB 07         [ 2] 1329 	addw	x, (0x07, sp)
      000529 1F 03            [ 2] 1330 	ldw	(0x03, sp), x
      00052B 90 5F            [ 1] 1331 	clrw	y
      00052D 61               [ 1] 1332 	exg	a, yl
      00052E 7B 0C            [ 1] 1333 	ld	a, (0x0c, sp)
      000530 61               [ 1] 1334 	exg	a, yl
      000531 A4 07            [ 1] 1335 	and	a, #0x07
      000533 6B 06            [ 1] 1336 	ld	(0x06, sp), a
      000535 0F 05            [ 1] 1337 	clr	(0x05, sp)
      000537 1E 03            [ 2] 1338 	ldw	x, (0x03, sp)
      000539 F6               [ 1] 1339 	ld	a, (x)
      00053A 5F               [ 1] 1340 	clrw	x
      00053B 90 89            [ 2] 1341 	pushw	y
      00053D 16 07            [ 2] 1342 	ldw	y, (0x07, sp)
      00053F 90 89            [ 2] 1343 	pushw	y
      000541 97               [ 1] 1344 	ld	xl, a
      000542 CDr04r38         [ 4] 1345 	call	_set_bit
      000545 9F               [ 1] 1346 	ld	a, xl
      000546 1E 03            [ 2] 1347 	ldw	x, (0x03, sp)
      000548 F7               [ 1] 1348 	ld	(x), a
                                   1349 ;	./libs/ssd1306_lib.c: 57: }
      000549 1E 09            [ 2] 1350 	ldw	x, (9, sp)
      00054B 5B 0C            [ 2] 1351 	addw	sp, #12
      00054D FC               [ 2] 1352 	jp	(x)
                                   1353 ;	./libs/ssd1306_lib.c: 59: void ssd1306_buffer_clean(void)
                                   1354 ;	-----------------------------------------
                                   1355 ;	 function ssd1306_buffer_clean
                                   1356 ;	-----------------------------------------
      00054E                       1357 _ssd1306_buffer_clean:
                                   1358 ;	./libs/ssd1306_lib.c: 61: memset(main_buffer,0,512);
      00054E 4B 00            [ 1] 1359 	push	#0x00
      000550 4B 02            [ 1] 1360 	push	#0x02
      000552 5F               [ 1] 1361 	clrw	x
      000553 89               [ 2] 1362 	pushw	x
      000554 AEr01r61         [ 2] 1363 	ldw	x, #(_main_buffer+0)
      000557 CDr00r00         [ 4] 1364 	call	_memset
                                   1365 ;	./libs/ssd1306_lib.c: 62: }
      00055A 81               [ 4] 1366 	ret
                                   1367 ;	./libs/ssd1306_lib.c: 63: void ssd1306_send_buffer(void)
                                   1368 ;	-----------------------------------------
                                   1369 ;	 function ssd1306_send_buffer
                                   1370 ;	-----------------------------------------
      00055B                       1371 _ssd1306_send_buffer:
      00055B 52 04            [ 2] 1372 	sub	sp, #4
                                   1373 ;	./libs/ssd1306_lib.c: 65: ssd1306_set_params_to_write();
      00055D CDr04rDF         [ 4] 1374 	call	_ssd1306_set_params_to_write
                                   1375 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      000560 5F               [ 1] 1376 	clrw	x
      000561 1F 03            [ 2] 1377 	ldw	(0x03, sp), x
      000563                       1378 00112$:
      000563 1E 03            [ 2] 1379 	ldw	x, (0x03, sp)
      000565 A3 00 04         [ 2] 1380 	cpw	x, #0x0004
      000568 2E 43            [ 1] 1381 	jrsge	00114$
                                   1382 ;	./libs/ssd1306_lib.c: 68: if(i2c_send_address(I2C_DISPLAY_ADDR, 0))//Проверка на АСК бит
      00056A 4B 00            [ 1] 1383 	push	#0x00
      00056C A6 3C            [ 1] 1384 	ld	a, #0x3c
      00056E CDr03r12         [ 4] 1385 	call	_i2c_send_address
      000571 4D               [ 1] 1386 	tnz	a
      000572 27 2F            [ 1] 1387 	jreq	00105$
                                   1388 ;	./libs/ssd1306_lib.c: 70: i2c_send_byte(SET_DISPLAY_START_LINE);
      000574 A6 40            [ 1] 1389 	ld	a, #0x40
      000576 CDr03r99         [ 4] 1390 	call	_i2c_send_byte
                                   1391 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      000579 1E 03            [ 2] 1392 	ldw	x, (0x03, sp)
      00057B 58               [ 2] 1393 	sllw	x
      00057C 58               [ 2] 1394 	sllw	x
      00057D 58               [ 2] 1395 	sllw	x
      00057E 58               [ 2] 1396 	sllw	x
      00057F 58               [ 2] 1397 	sllw	x
      000580 58               [ 2] 1398 	sllw	x
      000581 58               [ 2] 1399 	sllw	x
      000582 1F 01            [ 2] 1400 	ldw	(0x01, sp), x
      000584 5F               [ 1] 1401 	clrw	x
      000585                       1402 00109$:
      000585 A3 00 80         [ 2] 1403 	cpw	x, #0x0080
      000588 2E 14            [ 1] 1404 	jrsge	00103$
                                   1405 ;	./libs/ssd1306_lib.c: 73: if(i2c_send_byte(main_buffer[i+(128*j)]))//Проверка на АСК бит
      00058A 90 93            [ 1] 1406 	ldw	y, x
      00058C 72 F9 01         [ 2] 1407 	addw	y, (0x01, sp)
      00058F 90 D6u01u61      [ 1] 1408 	ld	a, (_main_buffer+0, y)
      000593 89               [ 2] 1409 	pushw	x
      000594 CDr03r99         [ 4] 1410 	call	_i2c_send_byte
      000597 85               [ 2] 1411 	popw	x
      000598 4D               [ 1] 1412 	tnz	a
      000599 26 03            [ 1] 1413 	jrne	00103$
                                   1414 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      00059B 5C               [ 1] 1415 	incw	x
      00059C 20 E7            [ 2] 1416 	jra	00109$
      00059E                       1417 00103$:
                                   1418 ;	./libs/ssd1306_lib.c: 78: i2c_stop();
      00059E CDr03r0D         [ 4] 1419 	call	_i2c_stop
      0005A1 20 03            [ 2] 1420 	jra	00113$
      0005A3                       1421 00105$:
                                   1422 ;	./libs/ssd1306_lib.c: 81: i2c_stop();
      0005A3 CDr03r0D         [ 4] 1423 	call	_i2c_stop
      0005A6                       1424 00113$:
                                   1425 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      0005A6 1E 03            [ 2] 1426 	ldw	x, (0x03, sp)
      0005A8 5C               [ 1] 1427 	incw	x
      0005A9 1F 03            [ 2] 1428 	ldw	(0x03, sp), x
      0005AB 20 B6            [ 2] 1429 	jra	00112$
      0005AD                       1430 00114$:
                                   1431 ;	./libs/ssd1306_lib.c: 83: }
      0005AD 5B 04            [ 2] 1432 	addw	sp, #4
      0005AF 81               [ 4] 1433 	ret
                                   1434 ;	./libs/ssd1306_lib.c: 105: void ssd1306_buffer_write(int x, int y, const uint8_t *data)
                                   1435 ;	-----------------------------------------
                                   1436 ;	 function ssd1306_buffer_write
                                   1437 ;	-----------------------------------------
      0005B0                       1438 _ssd1306_buffer_write:
      0005B0 52 0D            [ 2] 1439 	sub	sp, #13
      0005B2 1F 08            [ 2] 1440 	ldw	(0x08, sp), x
                                   1441 ;	./libs/ssd1306_lib.c: 107: for (int height = 0; height < 8; height++)
      0005B4 5F               [ 1] 1442 	clrw	x
      0005B5 1F 0A            [ 2] 1443 	ldw	(0x0a, sp), x
      0005B7                       1444 00109$:
      0005B7 1E 0A            [ 2] 1445 	ldw	x, (0x0a, sp)
      0005B9 A3 00 08         [ 2] 1446 	cpw	x, #0x0008
      0005BC 2F 03            [ 1] 1447 	jrslt	00150$
      0005BE CCr06r43         [ 2] 1448 	jp	00111$
      0005C1                       1449 00150$:
                                   1450 ;	./libs/ssd1306_lib.c: 109: for (int width = 0; width < 8; width++)
      0005C1 1E 0A            [ 2] 1451 	ldw	x, (0x0a, sp)
      0005C3 58               [ 2] 1452 	sllw	x
      0005C4 58               [ 2] 1453 	sllw	x
      0005C5 58               [ 2] 1454 	sllw	x
      0005C6 58               [ 2] 1455 	sllw	x
      0005C7 1F 05            [ 2] 1456 	ldw	(0x05, sp), x
      0005C9 5F               [ 1] 1457 	clrw	x
      0005CA 1F 0C            [ 2] 1458 	ldw	(0x0c, sp), x
      0005CC                       1459 00106$:
      0005CC 1E 0C            [ 2] 1460 	ldw	x, (0x0c, sp)
      0005CE A3 00 08         [ 2] 1461 	cpw	x, #0x0008
      0005D1 2E 68            [ 1] 1462 	jrsge	00110$
                                   1463 ;	./libs/ssd1306_lib.c: 110: if(data[height + width / 8] & (128 >> (width & 7)))
      0005D3 1E 0A            [ 2] 1464 	ldw	x, (0x0a, sp)
      0005D5 72 FB 12         [ 2] 1465 	addw	x, (0x12, sp)
      0005D8 F6               [ 1] 1466 	ld	a, (x)
      0005D9 97               [ 1] 1467 	ld	xl, a
      0005DA 7B 0D            [ 1] 1468 	ld	a, (0x0d, sp)
      0005DC A4 07            [ 1] 1469 	and	a, #0x07
      0005DE 90 AE 00 80      [ 2] 1470 	ldw	y, #0x0080
      0005E2 4D               [ 1] 1471 	tnz	a
      0005E3 27 05            [ 1] 1472 	jreq	00153$
      0005E5                       1473 00152$:
      0005E5 90 57            [ 2] 1474 	sraw	y
      0005E7 4A               [ 1] 1475 	dec	a
      0005E8 26 FB            [ 1] 1476 	jrne	00152$
      0005EA                       1477 00153$:
      0005EA 17 01            [ 2] 1478 	ldw	(0x01, sp), y
      0005EC 9F               [ 1] 1479 	ld	a, xl
      0005ED 14 02            [ 1] 1480 	and	a, (0x02, sp)
      0005EF 6B 04            [ 1] 1481 	ld	(0x04, sp), a
      0005F1 0F 03            [ 1] 1482 	clr	(0x03, sp)
      0005F3 1E 03            [ 2] 1483 	ldw	x, (0x03, sp)
      0005F5 27 3D            [ 1] 1484 	jreq	00107$
                                   1485 ;	./libs/ssd1306_lib.c: 111: ssd1306_draw_pixel(main_buffer, x + width, y + height, get_bit(main_buffer[(height*16) + (width / 8)], 7 - (width % 8)));
      0005F7 4B 08            [ 1] 1486 	push	#0x08
      0005F9 4B 00            [ 1] 1487 	push	#0x00
      0005FB 1E 0E            [ 2] 1488 	ldw	x, (0x0e, sp)
      0005FD CDr00r00         [ 4] 1489 	call	__modsint
      000600 1F 03            [ 2] 1490 	ldw	(0x03, sp), x
      000602 90 AE 00 07      [ 2] 1491 	ldw	y, #0x0007
      000606 72 F2 03         [ 2] 1492 	subw	y, (0x03, sp)
      000609 1E 05            [ 2] 1493 	ldw	x, (0x05, sp)
      00060B D6u01u61         [ 1] 1494 	ld	a, (_main_buffer+0, x)
      00060E 5F               [ 1] 1495 	clrw	x
      00060F 90 89            [ 2] 1496 	pushw	y
      000611 97               [ 1] 1497 	ld	xl, a
      000612 CDr04r23         [ 4] 1498 	call	_get_bit
      000615 7B 11            [ 1] 1499 	ld	a, (0x11, sp)
      000617 6B 07            [ 1] 1500 	ld	(0x07, sp), a
      000619 7B 0B            [ 1] 1501 	ld	a, (0x0b, sp)
      00061B 1B 07            [ 1] 1502 	add	a, (0x07, sp)
      00061D 95               [ 1] 1503 	ld	xh, a
      00061E 7B 09            [ 1] 1504 	ld	a, (0x09, sp)
      000620 6B 07            [ 1] 1505 	ld	(0x07, sp), a
      000622 7B 0D            [ 1] 1506 	ld	a, (0x0d, sp)
      000624 1B 07            [ 1] 1507 	add	a, (0x07, sp)
      000626 6B 07            [ 1] 1508 	ld	(0x07, sp), a
      000628 9F               [ 1] 1509 	ld	a, xl
      000629 88               [ 1] 1510 	push	a
      00062A 9E               [ 1] 1511 	ld	a, xh
      00062B 88               [ 1] 1512 	push	a
      00062C 7B 09            [ 1] 1513 	ld	a, (0x09, sp)
      00062E AEr01r61         [ 2] 1514 	ldw	x, #(_main_buffer+0)
      000631 CDr05r03         [ 4] 1515 	call	_ssd1306_draw_pixel
      000634                       1516 00107$:
                                   1517 ;	./libs/ssd1306_lib.c: 109: for (int width = 0; width < 8; width++)
      000634 1E 0C            [ 2] 1518 	ldw	x, (0x0c, sp)
      000636 5C               [ 1] 1519 	incw	x
      000637 1F 0C            [ 2] 1520 	ldw	(0x0c, sp), x
      000639 20 91            [ 2] 1521 	jra	00106$
      00063B                       1522 00110$:
                                   1523 ;	./libs/ssd1306_lib.c: 107: for (int height = 0; height < 8; height++)
      00063B 1E 0A            [ 2] 1524 	ldw	x, (0x0a, sp)
      00063D 5C               [ 1] 1525 	incw	x
      00063E 1F 0A            [ 2] 1526 	ldw	(0x0a, sp), x
      000640 CCr05rB7         [ 2] 1527 	jp	00109$
      000643                       1528 00111$:
                                   1529 ;	./libs/ssd1306_lib.c: 113: }
      000643 1E 0E            [ 2] 1530 	ldw	x, (14, sp)
      000645 5B 13            [ 2] 1531 	addw	sp, #19
      000647 FC               [ 2] 1532 	jp	(x)
                                   1533 ;	./libs/ssd1306_lib.c: 115: void ssd1306_clean(void)
                                   1534 ;	-----------------------------------------
                                   1535 ;	 function ssd1306_clean
                                   1536 ;	-----------------------------------------
      000648                       1537 _ssd1306_clean:
                                   1538 ;	./libs/ssd1306_lib.c: 117: ssd1306_buffer_clean();
      000648 CDr05r4E         [ 4] 1539 	call	_ssd1306_buffer_clean
                                   1540 ;	./libs/ssd1306_lib.c: 118: ssd1306_send_buffer();
                                   1541 ;	./libs/ssd1306_lib.c: 119: }
      00064B CCr05r5B         [ 2] 1542 	jp	_ssd1306_send_buffer
                                   1543 ;	main.c: 3: void setup(void)
                                   1544 ;	-----------------------------------------
                                   1545 ;	 function setup
                                   1546 ;	-----------------------------------------
      00064E                       1547 _setup:
                                   1548 ;	main.c: 6: CLK_CKDIVR = 0;
      00064E 35 00 50 C6      [ 1] 1549 	mov	0x50c6+0, #0x00
                                   1550 ;	main.c: 8: uart_init(9600,0);
      000652 4F               [ 1] 1551 	clr	a
      000653 AE 25 80         [ 2] 1552 	ldw	x, #0x2580
      000656 CDr00rB7         [ 4] 1553 	call	_uart_init
                                   1554 ;	main.c: 9: i2c_init();
      000659 CDr02rD8         [ 4] 1555 	call	_i2c_init
                                   1556 ;	main.c: 11: enableInterrupts();
      00065C 9A               [ 1] 1557 	rim
                                   1558 ;	main.c: 12: }
      00065D 81               [ 4] 1559 	ret
                                   1560 ;	main.c: 14: void gg(void)
                                   1561 ;	-----------------------------------------
                                   1562 ;	 function gg
                                   1563 ;	-----------------------------------------
      00065E                       1564 _gg:
                                   1565 ;	main.c: 16: ssd1306_init();
      00065E CDr04r6B         [ 4] 1566 	call	_ssd1306_init
                                   1567 ;	main.c: 17: ssd1306_send_buffer();
                                   1568 ;	main.c: 21: }
      000661 CCr05r5B         [ 2] 1569 	jp	_ssd1306_send_buffer
                                   1570 ;	main.c: 23: int main(void)
                                   1571 ;	-----------------------------------------
                                   1572 ;	 function main
                                   1573 ;	-----------------------------------------
      000664                       1574 _main:
                                   1575 ;	main.c: 25: setup();
      000664 CDr06r4E         [ 4] 1576 	call	_setup
                                   1577 ;	main.c: 26: gg();
      000667 CDr06r5E         [ 4] 1578 	call	_gg
                                   1579 ;	main.c: 27: while(1);
      00066A                       1580 00102$:
      00066A 20 FE            [ 2] 1581 	jra	00102$
                                   1582 ;	main.c: 28: }
      00066C 81               [ 4] 1583 	ret
                                   1584 	.area CODE
                                   1585 	.area CONST
                                   1586 	.area INITIALIZER
      000000                       1587 __xinit__I2C_IRQ:
      000000 00                    1588 	.db #0x00	; 0
      000001                       1589 __xinit__ttf_eng_a:
      000001 00                    1590 	.db #0x00	; 0
      000002 7E                    1591 	.db #0x7e	; 126
      000003 42                    1592 	.db #0x42	; 66	'B'
      000004 42                    1593 	.db #0x42	; 66	'B'
      000005 7E                    1594 	.db #0x7e	; 126
      000006 42                    1595 	.db #0x42	; 66	'B'
      000007 42                    1596 	.db #0x42	; 66	'B'
      000008 00                    1597 	.db #0x00	; 0
      000009                       1598 __xinit__ttf_eng_b:
      000009 00                    1599 	.db #0x00	; 0
      00000A 7C                    1600 	.db #0x7c	; 124
      00000B 42                    1601 	.db #0x42	; 66	'B'
      00000C 7C                    1602 	.db #0x7c	; 124
      00000D 42                    1603 	.db #0x42	; 66	'B'
      00000E 42                    1604 	.db #0x42	; 66	'B'
      00000F 7C                    1605 	.db #0x7c	; 124
      000010 00                    1606 	.db #0x00	; 0
      000011                       1607 __xinit__ttf_eng_c:
      000011 00                    1608 	.db #0x00	; 0
      000012 7E                    1609 	.db #0x7e	; 126
      000013 40                    1610 	.db #0x40	; 64
      000014 40                    1611 	.db #0x40	; 64
      000015 40                    1612 	.db #0x40	; 64
      000016 40                    1613 	.db #0x40	; 64
      000017 7E                    1614 	.db #0x7e	; 126
      000018 00                    1615 	.db #0x00	; 0
      000019                       1616 __xinit__ttf_eng_d:
      000019 00                    1617 	.db #0x00	; 0
      00001A 7C                    1618 	.db #0x7c	; 124
      00001B 42                    1619 	.db #0x42	; 66	'B'
      00001C 42                    1620 	.db #0x42	; 66	'B'
      00001D 42                    1621 	.db #0x42	; 66	'B'
      00001E 42                    1622 	.db #0x42	; 66	'B'
      00001F 7C                    1623 	.db #0x7c	; 124
      000020 00                    1624 	.db #0x00	; 0
      000021                       1625 __xinit__ttf_eng_e:
      000021 00                    1626 	.db #0x00	; 0
      000022 7E                    1627 	.db #0x7e	; 126
      000023 40                    1628 	.db #0x40	; 64
      000024 7C                    1629 	.db #0x7c	; 124
      000025 40                    1630 	.db #0x40	; 64
      000026 40                    1631 	.db #0x40	; 64
      000027 7E                    1632 	.db #0x7e	; 126
      000028 00                    1633 	.db #0x00	; 0
      000029                       1634 __xinit__ttf_eng_f:
      000029 00                    1635 	.db #0x00	; 0
      00002A 7E                    1636 	.db #0x7e	; 126
      00002B 40                    1637 	.db #0x40	; 64
      00002C 40                    1638 	.db #0x40	; 64
      00002D 7C                    1639 	.db #0x7c	; 124
      00002E 40                    1640 	.db #0x40	; 64
      00002F 40                    1641 	.db #0x40	; 64
      000030 00                    1642 	.db #0x00	; 0
      000031                       1643 __xinit__ttf_eng_g:
      000031 00                    1644 	.db #0x00	; 0
      000032 7E                    1645 	.db #0x7e	; 126
      000033 42                    1646 	.db #0x42	; 66	'B'
      000034 40                    1647 	.db #0x40	; 64
      000035 4E                    1648 	.db #0x4e	; 78	'N'
      000036 42                    1649 	.db #0x42	; 66	'B'
      000037 7E                    1650 	.db #0x7e	; 126
      000038 00                    1651 	.db #0x00	; 0
      000039                       1652 __xinit__ttf_eng_h:
      000039 00                    1653 	.db #0x00	; 0
      00003A 42                    1654 	.db #0x42	; 66	'B'
      00003B 42                    1655 	.db #0x42	; 66	'B'
      00003C 42                    1656 	.db #0x42	; 66	'B'
      00003D 7E                    1657 	.db #0x7e	; 126
      00003E 42                    1658 	.db #0x42	; 66	'B'
      00003F 42                    1659 	.db #0x42	; 66	'B'
      000040 00                    1660 	.db #0x00	; 0
      000041                       1661 __xinit__ttf_eng_i:
      000041 00                    1662 	.db #0x00	; 0
      000042 7E                    1663 	.db #0x7e	; 126
      000043 18                    1664 	.db #0x18	; 24
      000044 18                    1665 	.db #0x18	; 24
      000045 18                    1666 	.db #0x18	; 24
      000046 18                    1667 	.db #0x18	; 24
      000047 7E                    1668 	.db #0x7e	; 126
      000048 00                    1669 	.db #0x00	; 0
      000049                       1670 __xinit__ttf_eng_j:
      000049 00                    1671 	.db #0x00	; 0
      00004A 0C                    1672 	.db #0x0c	; 12
      00004B 0C                    1673 	.db #0x0c	; 12
      00004C 0C                    1674 	.db #0x0c	; 12
      00004D 0C                    1675 	.db #0x0c	; 12
      00004E 6C                    1676 	.db #0x6c	; 108	'l'
      00004F 7C                    1677 	.db #0x7c	; 124
      000050 00                    1678 	.db #0x00	; 0
      000051                       1679 __xinit__ttf_eng_k:
      000051 00                    1680 	.db #0x00	; 0
      000052 66                    1681 	.db #0x66	; 102	'f'
      000053 68                    1682 	.db #0x68	; 104	'h'
      000054 70                    1683 	.db #0x70	; 112	'p'
      000055 70                    1684 	.db #0x70	; 112	'p'
      000056 68                    1685 	.db #0x68	; 104	'h'
      000057 66                    1686 	.db #0x66	; 102	'f'
      000058 00                    1687 	.db #0x00	; 0
      000059                       1688 __xinit__ttf_eng_l:
      000059 00                    1689 	.db #0x00	; 0
      00005A 40                    1690 	.db #0x40	; 64
      00005B 40                    1691 	.db #0x40	; 64
      00005C 40                    1692 	.db #0x40	; 64
      00005D 40                    1693 	.db #0x40	; 64
      00005E 40                    1694 	.db #0x40	; 64
      00005F 7E                    1695 	.db #0x7e	; 126
      000060 00                    1696 	.db #0x00	; 0
      000061                       1697 __xinit__ttf_eng_m:
      000061 00                    1698 	.db #0x00	; 0
      000062 42                    1699 	.db #0x42	; 66	'B'
      000063 66                    1700 	.db #0x66	; 102	'f'
      000064 5A                    1701 	.db #0x5a	; 90	'Z'
      000065 42                    1702 	.db #0x42	; 66	'B'
      000066 42                    1703 	.db #0x42	; 66	'B'
      000067 42                    1704 	.db #0x42	; 66	'B'
      000068 00                    1705 	.db #0x00	; 0
      000069                       1706 __xinit__ttf_eng_n:
      000069 00                    1707 	.db #0x00	; 0
      00006A 42                    1708 	.db #0x42	; 66	'B'
      00006B 62                    1709 	.db #0x62	; 98	'b'
      00006C 52                    1710 	.db #0x52	; 82	'R'
      00006D 4A                    1711 	.db #0x4a	; 74	'J'
      00006E 46                    1712 	.db #0x46	; 70	'F'
      00006F 42                    1713 	.db #0x42	; 66	'B'
      000070 00                    1714 	.db #0x00	; 0
      000071                       1715 __xinit__ttf_eng_o:
      000071 00                    1716 	.db #0x00	; 0
      000072 7E                    1717 	.db #0x7e	; 126
      000073 42                    1718 	.db #0x42	; 66	'B'
      000074 42                    1719 	.db #0x42	; 66	'B'
      000075 42                    1720 	.db #0x42	; 66	'B'
      000076 42                    1721 	.db #0x42	; 66	'B'
      000077 7E                    1722 	.db #0x7e	; 126
      000078 00                    1723 	.db #0x00	; 0
      000079                       1724 __xinit__ttf_eng_p:
      000079 00                    1725 	.db #0x00	; 0
      00007A 7E                    1726 	.db #0x7e	; 126
      00007B 42                    1727 	.db #0x42	; 66	'B'
      00007C 42                    1728 	.db #0x42	; 66	'B'
      00007D 7E                    1729 	.db #0x7e	; 126
      00007E 40                    1730 	.db #0x40	; 64
      00007F 40                    1731 	.db #0x40	; 64
      000080 00                    1732 	.db #0x00	; 0
      000081                       1733 __xinit__ttf_eng_q:
      000081 00                    1734 	.db #0x00	; 0
      000082 7E                    1735 	.db #0x7e	; 126
      000083 42                    1736 	.db #0x42	; 66	'B'
      000084 42                    1737 	.db #0x42	; 66	'B'
      000085 42                    1738 	.db #0x42	; 66	'B'
      000086 7E                    1739 	.db #0x7e	; 126
      000087 04                    1740 	.db #0x04	; 4
      000088 00                    1741 	.db #0x00	; 0
      000089                       1742 __xinit__ttf_eng_r:
      000089 00                    1743 	.db #0x00	; 0
      00008A 7E                    1744 	.db #0x7e	; 126
      00008B 42                    1745 	.db #0x42	; 66	'B'
      00008C 42                    1746 	.db #0x42	; 66	'B'
      00008D 7C                    1747 	.db #0x7c	; 124
      00008E 42                    1748 	.db #0x42	; 66	'B'
      00008F 42                    1749 	.db #0x42	; 66	'B'
      000090 00                    1750 	.db #0x00	; 0
      000091                       1751 __xinit__ttf_eng_s:
      000091 00                    1752 	.db #0x00	; 0
      000092 3E                    1753 	.db #0x3e	; 62
      000093 40                    1754 	.db #0x40	; 64
      000094 3C                    1755 	.db #0x3c	; 60
      000095 02                    1756 	.db #0x02	; 2
      000096 02                    1757 	.db #0x02	; 2
      000097 7C                    1758 	.db #0x7c	; 124
      000098 00                    1759 	.db #0x00	; 0
      000099                       1760 __xinit__ttf_eng_t:
      000099 00                    1761 	.db #0x00	; 0
      00009A 7E                    1762 	.db #0x7e	; 126
      00009B 18                    1763 	.db #0x18	; 24
      00009C 18                    1764 	.db #0x18	; 24
      00009D 18                    1765 	.db #0x18	; 24
      00009E 18                    1766 	.db #0x18	; 24
      00009F 18                    1767 	.db #0x18	; 24
      0000A0 00                    1768 	.db #0x00	; 0
      0000A1                       1769 __xinit__ttf_eng_u:
      0000A1 00                    1770 	.db #0x00	; 0
      0000A2 42                    1771 	.db #0x42	; 66	'B'
      0000A3 42                    1772 	.db #0x42	; 66	'B'
      0000A4 42                    1773 	.db #0x42	; 66	'B'
      0000A5 42                    1774 	.db #0x42	; 66	'B'
      0000A6 42                    1775 	.db #0x42	; 66	'B'
      0000A7 3E                    1776 	.db #0x3e	; 62
      0000A8 00                    1777 	.db #0x00	; 0
      0000A9                       1778 __xinit__ttf_eng_v:
      0000A9 00                    1779 	.db #0x00	; 0
      0000AA 42                    1780 	.db #0x42	; 66	'B'
      0000AB 42                    1781 	.db #0x42	; 66	'B'
      0000AC 42                    1782 	.db #0x42	; 66	'B'
      0000AD 24                    1783 	.db #0x24	; 36
      0000AE 24                    1784 	.db #0x24	; 36
      0000AF 18                    1785 	.db #0x18	; 24
      0000B0 00                    1786 	.db #0x00	; 0
      0000B1                       1787 __xinit__ttf_eng_w:
      0000B1 00                    1788 	.db #0x00	; 0
      0000B2 42                    1789 	.db #0x42	; 66	'B'
      0000B3 42                    1790 	.db #0x42	; 66	'B'
      0000B4 42                    1791 	.db #0x42	; 66	'B'
      0000B5 5A                    1792 	.db #0x5a	; 90	'Z'
      0000B6 5A                    1793 	.db #0x5a	; 90	'Z'
      0000B7 24                    1794 	.db #0x24	; 36
      0000B8 00                    1795 	.db #0x00	; 0
      0000B9                       1796 __xinit__ttf_eng_x:
      0000B9 00                    1797 	.db #0x00	; 0
      0000BA 42                    1798 	.db #0x42	; 66	'B'
      0000BB 24                    1799 	.db #0x24	; 36
      0000BC 18                    1800 	.db #0x18	; 24
      0000BD 18                    1801 	.db #0x18	; 24
      0000BE 22                    1802 	.db #0x22	; 34
      0000BF 42                    1803 	.db #0x42	; 66	'B'
      0000C0 00                    1804 	.db #0x00	; 0
      0000C1                       1805 __xinit__ttf_eng_y:
      0000C1 00                    1806 	.db #0x00	; 0
      0000C2 42                    1807 	.db #0x42	; 66	'B'
      0000C3 24                    1808 	.db #0x24	; 36
      0000C4 18                    1809 	.db #0x18	; 24
      0000C5 18                    1810 	.db #0x18	; 24
      0000C6 18                    1811 	.db #0x18	; 24
      0000C7 18                    1812 	.db #0x18	; 24
      0000C8 00                    1813 	.db #0x00	; 0
      0000C9                       1814 __xinit__ttf_eng_z:
      0000C9 00                    1815 	.db #0x00	; 0
      0000CA 7E                    1816 	.db #0x7e	; 126
      0000CB 04                    1817 	.db #0x04	; 4
      0000CC 08                    1818 	.db #0x08	; 8
      0000CD 10                    1819 	.db #0x10	; 16
      0000CE 20                    1820 	.db #0x20	; 32
      0000CF 7E                    1821 	.db #0x7e	; 126
      0000D0 00                    1822 	.db #0x00	; 0
      0000D1                       1823 __xinit__ttf_eng_1:
      0000D1 00                    1824 	.db #0x00	; 0
      0000D2 18                    1825 	.db #0x18	; 24
      0000D3 38                    1826 	.db #0x38	; 56	'8'
      0000D4 38                    1827 	.db #0x38	; 56	'8'
      0000D5 18                    1828 	.db #0x18	; 24
      0000D6 18                    1829 	.db #0x18	; 24
      0000D7 18                    1830 	.db #0x18	; 24
      0000D8 00                    1831 	.db #0x00	; 0
      0000D9                       1832 __xinit__ttf_eng_2:
      0000D9 00                    1833 	.db #0x00	; 0
      0000DA 38                    1834 	.db #0x38	; 56	'8'
      0000DB 44                    1835 	.db #0x44	; 68	'D'
      0000DC 08                    1836 	.db #0x08	; 8
      0000DD 10                    1837 	.db #0x10	; 16
      0000DE 20                    1838 	.db #0x20	; 32
      0000DF 7C                    1839 	.db #0x7c	; 124
      0000E0 00                    1840 	.db #0x00	; 0
      0000E1                       1841 __xinit__ttf_eng_3:
      0000E1 00                    1842 	.db #0x00	; 0
      0000E2 7C                    1843 	.db #0x7c	; 124
      0000E3 02                    1844 	.db #0x02	; 2
      0000E4 3C                    1845 	.db #0x3c	; 60
      0000E5 02                    1846 	.db #0x02	; 2
      0000E6 02                    1847 	.db #0x02	; 2
      0000E7 7C                    1848 	.db #0x7c	; 124
      0000E8 00                    1849 	.db #0x00	; 0
      0000E9                       1850 __xinit__ttf_eng_4:
      0000E9 00                    1851 	.db #0x00	; 0
      0000EA 42                    1852 	.db #0x42	; 66	'B'
      0000EB 42                    1853 	.db #0x42	; 66	'B'
      0000EC 7E                    1854 	.db #0x7e	; 126
      0000ED 02                    1855 	.db #0x02	; 2
      0000EE 02                    1856 	.db #0x02	; 2
      0000EF 02                    1857 	.db #0x02	; 2
      0000F0 00                    1858 	.db #0x00	; 0
      0000F1                       1859 __xinit__ttf_eng_5:
      0000F1 00                    1860 	.db #0x00	; 0
      0000F2 7E                    1861 	.db #0x7e	; 126
      0000F3 40                    1862 	.db #0x40	; 64
      0000F4 7C                    1863 	.db #0x7c	; 124
      0000F5 02                    1864 	.db #0x02	; 2
      0000F6 02                    1865 	.db #0x02	; 2
      0000F7 7C                    1866 	.db #0x7c	; 124
      0000F8 00                    1867 	.db #0x00	; 0
      0000F9                       1868 __xinit__ttf_eng_6:
      0000F9 00                    1869 	.db #0x00	; 0
      0000FA 3C                    1870 	.db #0x3c	; 60
      0000FB 40                    1871 	.db #0x40	; 64
      0000FC 7C                    1872 	.db #0x7c	; 124
      0000FD 42                    1873 	.db #0x42	; 66	'B'
      0000FE 42                    1874 	.db #0x42	; 66	'B'
      0000FF 3C                    1875 	.db #0x3c	; 60
      000100 00                    1876 	.db #0x00	; 0
      000101                       1877 __xinit__ttf_eng_7:
      000101 00                    1878 	.db #0x00	; 0
      000102 7E                    1879 	.db #0x7e	; 126
      000103 02                    1880 	.db #0x02	; 2
      000104 04                    1881 	.db #0x04	; 4
      000105 08                    1882 	.db #0x08	; 8
      000106 10                    1883 	.db #0x10	; 16
      000107 20                    1884 	.db #0x20	; 32
      000108 00                    1885 	.db #0x00	; 0
      000109                       1886 __xinit__ttf_eng_8:
      000109 00                    1887 	.db #0x00	; 0
      00010A 3C                    1888 	.db #0x3c	; 60
      00010B 42                    1889 	.db #0x42	; 66	'B'
      00010C 3C                    1890 	.db #0x3c	; 60
      00010D 42                    1891 	.db #0x42	; 66	'B'
      00010E 42                    1892 	.db #0x42	; 66	'B'
      00010F 3C                    1893 	.db #0x3c	; 60
      000110 00                    1894 	.db #0x00	; 0
      000111                       1895 __xinit__ttf_eng_9:
      000111 00                    1896 	.db #0x00	; 0
      000112 3C                    1897 	.db #0x3c	; 60
      000113 42                    1898 	.db #0x42	; 66	'B'
      000114 42                    1899 	.db #0x42	; 66	'B'
      000115 3E                    1900 	.db #0x3e	; 62
      000116 02                    1901 	.db #0x02	; 2
      000117 3C                    1902 	.db #0x3c	; 60
      000118 00                    1903 	.db #0x00	; 0
      000119                       1904 __xinit__ttf_eng_0:
      000119 00                    1905 	.db #0x00	; 0
      00011A 3C                    1906 	.db #0x3c	; 60
      00011B 46                    1907 	.db #0x46	; 70	'F'
      00011C 4A                    1908 	.db #0x4a	; 74	'J'
      00011D 52                    1909 	.db #0x52	; 82	'R'
      00011E 62                    1910 	.db #0x62	; 98	'b'
      00011F 3C                    1911 	.db #0x3c	; 60
      000120 00                    1912 	.db #0x00	; 0
      000121                       1913 __xinit__ttf_eng_corner_left_up:
      000121 FF                    1914 	.db #0xff	; 255
      000122 FF                    1915 	.db #0xff	; 255
      000123 C0                    1916 	.db #0xc0	; 192
      000124 C0                    1917 	.db #0xc0	; 192
      000125 C0                    1918 	.db #0xc0	; 192
      000126 C0                    1919 	.db #0xc0	; 192
      000127 C0                    1920 	.db #0xc0	; 192
      000128 C0                    1921 	.db #0xc0	; 192
      000129                       1922 __xinit__ttf_eng_corner_right_up:
      000129 FF                    1923 	.db #0xff	; 255
      00012A FF                    1924 	.db #0xff	; 255
      00012B 03                    1925 	.db #0x03	; 3
      00012C 03                    1926 	.db #0x03	; 3
      00012D 03                    1927 	.db #0x03	; 3
      00012E 03                    1928 	.db #0x03	; 3
      00012F 03                    1929 	.db #0x03	; 3
      000130 03                    1930 	.db #0x03	; 3
      000131                       1931 __xinit__ttf_eng_corner_left_down:
      000131 C0                    1932 	.db #0xc0	; 192
      000132 C0                    1933 	.db #0xc0	; 192
      000133 C0                    1934 	.db #0xc0	; 192
      000134 C0                    1935 	.db #0xc0	; 192
      000135 C0                    1936 	.db #0xc0	; 192
      000136 C0                    1937 	.db #0xc0	; 192
      000137 FF                    1938 	.db #0xff	; 255
      000138 FF                    1939 	.db #0xff	; 255
      000139                       1940 __xinit__ttf_eng_corner_right_down:
      000139 03                    1941 	.db #0x03	; 3
      00013A 03                    1942 	.db #0x03	; 3
      00013B 03                    1943 	.db #0x03	; 3
      00013C 03                    1944 	.db #0x03	; 3
      00013D 03                    1945 	.db #0x03	; 3
      00013E 03                    1946 	.db #0x03	; 3
      00013F FF                    1947 	.db #0xff	; 255
      000140 FF                    1948 	.db #0xff	; 255
      000141                       1949 __xinit__ttf_eng_line_right:
      000141 03                    1950 	.db #0x03	; 3
      000142 03                    1951 	.db #0x03	; 3
      000143 03                    1952 	.db #0x03	; 3
      000144 03                    1953 	.db #0x03	; 3
      000145 03                    1954 	.db #0x03	; 3
      000146 03                    1955 	.db #0x03	; 3
      000147 03                    1956 	.db #0x03	; 3
      000148 03                    1957 	.db #0x03	; 3
      000149                       1958 __xinit__ttf_eng_line_left:
      000149 C0                    1959 	.db #0xc0	; 192
      00014A C0                    1960 	.db #0xc0	; 192
      00014B C0                    1961 	.db #0xc0	; 192
      00014C C0                    1962 	.db #0xc0	; 192
      00014D C0                    1963 	.db #0xc0	; 192
      00014E C0                    1964 	.db #0xc0	; 192
      00014F C0                    1965 	.db #0xc0	; 192
      000150 C0                    1966 	.db #0xc0	; 192
      000151                       1967 __xinit__ttf_eng_line_up:
      000151 FF                    1968 	.db #0xff	; 255
      000152 FF                    1969 	.db #0xff	; 255
      000153 00                    1970 	.db #0x00	; 0
      000154 00                    1971 	.db #0x00	; 0
      000155 00                    1972 	.db #0x00	; 0
      000156 00                    1973 	.db #0x00	; 0
      000157 00                    1974 	.db #0x00	; 0
      000158 00                    1975 	.db #0x00	; 0
      000159                       1976 __xinit__ttf_eng_line_down:
      000159 00                    1977 	.db #0x00	; 0
      00015A 00                    1978 	.db #0x00	; 0
      00015B 00                    1979 	.db #0x00	; 0
      00015C 00                    1980 	.db #0x00	; 0
      00015D 00                    1981 	.db #0x00	; 0
      00015E 00                    1982 	.db #0x00	; 0
      00015F FF                    1983 	.db #0xff	; 255
      000160 FF                    1984 	.db #0xff	; 255
      000161                       1985 __xinit__main_buffer:
      000161 FF                    1986 	.db #0xff	; 255
      000162 01                    1987 	.db #0x01	; 1
      000163 01                    1988 	.db #0x01	; 1
      000164 01                    1989 	.db #0x01	; 1
      000165 01                    1990 	.db #0x01	; 1
      000166 01                    1991 	.db #0x01	; 1
      000167 01                    1992 	.db #0x01	; 1
      000168 01                    1993 	.db #0x01	; 1
      000169 FD                    1994 	.db #0xfd	; 253
      00016A FD                    1995 	.db #0xfd	; 253
      00016B FD                    1996 	.db #0xfd	; 253
      00016C FD                    1997 	.db #0xfd	; 253
      00016D FD                    1998 	.db #0xfd	; 253
      00016E FD                    1999 	.db #0xfd	; 253
      00016F FD                    2000 	.db #0xfd	; 253
      000170 01                    2001 	.db #0x01	; 1
      000171 01                    2002 	.db #0x01	; 1
      000172 01                    2003 	.db #0x01	; 1
      000173 01                    2004 	.db #0x01	; 1
      000174 01                    2005 	.db #0x01	; 1
      000175 01                    2006 	.db #0x01	; 1
      000176 01                    2007 	.db #0x01	; 1
      000177 FD                    2008 	.db #0xfd	; 253
      000178 FD                    2009 	.db #0xfd	; 253
      000179 FD                    2010 	.db #0xfd	; 253
      00017A FD                    2011 	.db #0xfd	; 253
      00017B FD                    2012 	.db #0xfd	; 253
      00017C FD                    2013 	.db #0xfd	; 253
      00017D FD                    2014 	.db #0xfd	; 253
      00017E FD                    2015 	.db #0xfd	; 253
      00017F FD                    2016 	.db #0xfd	; 253
      000180 FD                    2017 	.db #0xfd	; 253
      000181 FD                    2018 	.db #0xfd	; 253
      000182 FD                    2019 	.db #0xfd	; 253
      000183 FD                    2020 	.db #0xfd	; 253
      000184 FD                    2021 	.db #0xfd	; 253
      000185 FD                    2022 	.db #0xfd	; 253
      000186 FD                    2023 	.db #0xfd	; 253
      000187 FD                    2024 	.db #0xfd	; 253
      000188 FD                    2025 	.db #0xfd	; 253
      000189 FD                    2026 	.db #0xfd	; 253
      00018A FD                    2027 	.db #0xfd	; 253
      00018B FD                    2028 	.db #0xfd	; 253
      00018C FD                    2029 	.db #0xfd	; 253
      00018D FD                    2030 	.db #0xfd	; 253
      00018E FD                    2031 	.db #0xfd	; 253
      00018F FD                    2032 	.db #0xfd	; 253
      000190 FD                    2033 	.db #0xfd	; 253
      000191 FD                    2034 	.db #0xfd	; 253
      000192 FD                    2035 	.db #0xfd	; 253
      000193 FD                    2036 	.db #0xfd	; 253
      000194 FD                    2037 	.db #0xfd	; 253
      000195 FD                    2038 	.db #0xfd	; 253
      000196 FD                    2039 	.db #0xfd	; 253
      000197 FD                    2040 	.db #0xfd	; 253
      000198 FD                    2041 	.db #0xfd	; 253
      000199 FD                    2042 	.db #0xfd	; 253
      00019A 01                    2043 	.db #0x01	; 1
      00019B 01                    2044 	.db #0x01	; 1
      00019C 01                    2045 	.db #0x01	; 1
      00019D 01                    2046 	.db #0x01	; 1
      00019E 01                    2047 	.db #0x01	; 1
      00019F 01                    2048 	.db #0x01	; 1
      0001A0 01                    2049 	.db #0x01	; 1
      0001A1 FD                    2050 	.db #0xfd	; 253
      0001A2 FD                    2051 	.db #0xfd	; 253
      0001A3 FD                    2052 	.db #0xfd	; 253
      0001A4 FD                    2053 	.db #0xfd	; 253
      0001A5 FD                    2054 	.db #0xfd	; 253
      0001A6 FD                    2055 	.db #0xfd	; 253
      0001A7 FD                    2056 	.db #0xfd	; 253
      0001A8 FD                    2057 	.db #0xfd	; 253
      0001A9 FD                    2058 	.db #0xfd	; 253
      0001AA FD                    2059 	.db #0xfd	; 253
      0001AB FD                    2060 	.db #0xfd	; 253
      0001AC FD                    2061 	.db #0xfd	; 253
      0001AD FD                    2062 	.db #0xfd	; 253
      0001AE FD                    2063 	.db #0xfd	; 253
      0001AF FD                    2064 	.db #0xfd	; 253
      0001B0 FD                    2065 	.db #0xfd	; 253
      0001B1 FD                    2066 	.db #0xfd	; 253
      0001B2 FD                    2067 	.db #0xfd	; 253
      0001B3 FD                    2068 	.db #0xfd	; 253
      0001B4 FD                    2069 	.db #0xfd	; 253
      0001B5 FD                    2070 	.db #0xfd	; 253
      0001B6 01                    2071 	.db #0x01	; 1
      0001B7 01                    2072 	.db #0x01	; 1
      0001B8 01                    2073 	.db #0x01	; 1
      0001B9 01                    2074 	.db #0x01	; 1
      0001BA 01                    2075 	.db #0x01	; 1
      0001BB 01                    2076 	.db #0x01	; 1
      0001BC 01                    2077 	.db #0x01	; 1
      0001BD 01                    2078 	.db #0x01	; 1
      0001BE 01                    2079 	.db #0x01	; 1
      0001BF 01                    2080 	.db #0x01	; 1
      0001C0 01                    2081 	.db #0x01	; 1
      0001C1 01                    2082 	.db #0x01	; 1
      0001C2 01                    2083 	.db #0x01	; 1
      0001C3 01                    2084 	.db #0x01	; 1
      0001C4 3D                    2085 	.db #0x3d	; 61
      0001C5 15                    2086 	.db #0x15	; 21
      0001C6 3D                    2087 	.db #0x3d	; 61
      0001C7 01                    2088 	.db #0x01	; 1
      0001C8 3D                    2089 	.db #0x3d	; 61
      0001C9 21                    2090 	.db #0x21	; 33
      0001CA 21                    2091 	.db #0x21	; 33
      0001CB 01                    2092 	.db #0x01	; 1
      0001CC 3D                    2093 	.db #0x3d	; 61
      0001CD 15                    2094 	.db #0x15	; 21
      0001CE 1D                    2095 	.db #0x1d	; 29
      0001CF 01                    2096 	.db #0x01	; 1
      0001D0 3D                    2097 	.db #0x3d	; 61
      0001D1 11                    2098 	.db #0x11	; 17
      0001D2 3D                    2099 	.db #0x3d	; 61
      0001D3 01                    2100 	.db #0x01	; 1
      0001D4 3D                    2101 	.db #0x3d	; 61
      0001D5 15                    2102 	.db #0x15	; 21
      0001D6 3D                    2103 	.db #0x3d	; 61
      0001D7 01                    2104 	.db #0x01	; 1
      0001D8 01                    2105 	.db #0x01	; 1
      0001D9 3D                    2106 	.db #0x3d	; 61
      0001DA 25                    2107 	.db #0x25	; 37
      0001DB 3D                    2108 	.db #0x3d	; 61
      0001DC 01                    2109 	.db #0x01	; 1
      0001DD 05                    2110 	.db #0x05	; 5
      0001DE 3D                    2111 	.db #0x3d	; 61
      0001DF 01                    2112 	.db #0x01	; 1
      0001E0 FF                    2113 	.db #0xff	; 255
      0001E1 FF                    2114 	.db #0xff	; 255
      0001E2 00                    2115 	.db #0x00	; 0
      0001E3 00                    2116 	.db #0x00	; 0
      0001E4 00                    2117 	.db #0x00	; 0
      0001E5 00                    2118 	.db #0x00	; 0
      0001E6 00                    2119 	.db #0x00	; 0
      0001E7 00                    2120 	.db #0x00	; 0
      0001E8 00                    2121 	.db #0x00	; 0
      0001E9 FF                    2122 	.db #0xff	; 255
      0001EA FF                    2123 	.db #0xff	; 255
      0001EB FF                    2124 	.db #0xff	; 255
      0001EC FF                    2125 	.db #0xff	; 255
      0001ED FF                    2126 	.db #0xff	; 255
      0001EE FF                    2127 	.db #0xff	; 255
      0001EF FF                    2128 	.db #0xff	; 255
      0001F0 FE                    2129 	.db #0xfe	; 254
      0001F1 FE                    2130 	.db #0xfe	; 254
      0001F2 FE                    2131 	.db #0xfe	; 254
      0001F3 FE                    2132 	.db #0xfe	; 254
      0001F4 FE                    2133 	.db #0xfe	; 254
      0001F5 FE                    2134 	.db #0xfe	; 254
      0001F6 FE                    2135 	.db #0xfe	; 254
      0001F7 FF                    2136 	.db #0xff	; 255
      0001F8 FF                    2137 	.db #0xff	; 255
      0001F9 FF                    2138 	.db #0xff	; 255
      0001FA FF                    2139 	.db #0xff	; 255
      0001FB FF                    2140 	.db #0xff	; 255
      0001FC FF                    2141 	.db #0xff	; 255
      0001FD FF                    2142 	.db #0xff	; 255
      0001FE 01                    2143 	.db #0x01	; 1
      0001FF 01                    2144 	.db #0x01	; 1
      000200 01                    2145 	.db #0x01	; 1
      000201 01                    2146 	.db #0x01	; 1
      000202 01                    2147 	.db #0x01	; 1
      000203 01                    2148 	.db #0x01	; 1
      000204 01                    2149 	.db #0x01	; 1
      000205 FF                    2150 	.db #0xff	; 255
      000206 FF                    2151 	.db #0xff	; 255
      000207 FF                    2152 	.db #0xff	; 255
      000208 FF                    2153 	.db #0xff	; 255
      000209 FF                    2154 	.db #0xff	; 255
      00020A FF                    2155 	.db #0xff	; 255
      00020B FF                    2156 	.db #0xff	; 255
      00020C 01                    2157 	.db #0x01	; 1
      00020D 01                    2158 	.db #0x01	; 1
      00020E 01                    2159 	.db #0x01	; 1
      00020F 01                    2160 	.db #0x01	; 1
      000210 01                    2161 	.db #0x01	; 1
      000211 01                    2162 	.db #0x01	; 1
      000212 01                    2163 	.db #0x01	; 1
      000213 FF                    2164 	.db #0xff	; 255
      000214 FF                    2165 	.db #0xff	; 255
      000215 FF                    2166 	.db #0xff	; 255
      000216 FF                    2167 	.db #0xff	; 255
      000217 FF                    2168 	.db #0xff	; 255
      000218 FF                    2169 	.db #0xff	; 255
      000219 FF                    2170 	.db #0xff	; 255
      00021A 00                    2171 	.db #0x00	; 0
      00021B 00                    2172 	.db #0x00	; 0
      00021C 00                    2173 	.db #0x00	; 0
      00021D 00                    2174 	.db #0x00	; 0
      00021E 00                    2175 	.db #0x00	; 0
      00021F 00                    2176 	.db #0x00	; 0
      000220 00                    2177 	.db #0x00	; 0
      000221 FF                    2178 	.db #0xff	; 255
      000222 FF                    2179 	.db #0xff	; 255
      000223 FF                    2180 	.db #0xff	; 255
      000224 FF                    2181 	.db #0xff	; 255
      000225 FF                    2182 	.db #0xff	; 255
      000226 FF                    2183 	.db #0xff	; 255
      000227 FF                    2184 	.db #0xff	; 255
      000228 01                    2185 	.db #0x01	; 1
      000229 01                    2186 	.db #0x01	; 1
      00022A 01                    2187 	.db #0x01	; 1
      00022B 01                    2188 	.db #0x01	; 1
      00022C 01                    2189 	.db #0x01	; 1
      00022D 01                    2190 	.db #0x01	; 1
      00022E 01                    2191 	.db #0x01	; 1
      00022F FF                    2192 	.db #0xff	; 255
      000230 FF                    2193 	.db #0xff	; 255
      000231 FF                    2194 	.db #0xff	; 255
      000232 FF                    2195 	.db #0xff	; 255
      000233 FF                    2196 	.db #0xff	; 255
      000234 FF                    2197 	.db #0xff	; 255
      000235 FF                    2198 	.db #0xff	; 255
      000236 00                    2199 	.db #0x00	; 0
      000237 00                    2200 	.db #0x00	; 0
      000238 00                    2201 	.db #0x00	; 0
      000239 00                    2202 	.db #0x00	; 0
      00023A 00                    2203 	.db #0x00	; 0
      00023B 00                    2204 	.db #0x00	; 0
      00023C 00                    2205 	.db #0x00	; 0
      00023D 00                    2206 	.db #0x00	; 0
      00023E 00                    2207 	.db #0x00	; 0
      00023F 00                    2208 	.db #0x00	; 0
      000240 00                    2209 	.db #0x00	; 0
      000241 00                    2210 	.db #0x00	; 0
      000242 00                    2211 	.db #0x00	; 0
      000243 00                    2212 	.db #0x00	; 0
      000244 00                    2213 	.db #0x00	; 0
      000245 00                    2214 	.db #0x00	; 0
      000246 00                    2215 	.db #0x00	; 0
      000247 00                    2216 	.db #0x00	; 0
      000248 00                    2217 	.db #0x00	; 0
      000249 00                    2218 	.db #0x00	; 0
      00024A 00                    2219 	.db #0x00	; 0
      00024B 00                    2220 	.db #0x00	; 0
      00024C 00                    2221 	.db #0x00	; 0
      00024D 00                    2222 	.db #0x00	; 0
      00024E 00                    2223 	.db #0x00	; 0
      00024F 00                    2224 	.db #0x00	; 0
      000250 00                    2225 	.db #0x00	; 0
      000251 00                    2226 	.db #0x00	; 0
      000252 00                    2227 	.db #0x00	; 0
      000253 00                    2228 	.db #0x00	; 0
      000254 00                    2229 	.db #0x00	; 0
      000255 00                    2230 	.db #0x00	; 0
      000256 00                    2231 	.db #0x00	; 0
      000257 00                    2232 	.db #0x00	; 0
      000258 00                    2233 	.db #0x00	; 0
      000259 00                    2234 	.db #0x00	; 0
      00025A 00                    2235 	.db #0x00	; 0
      00025B 00                    2236 	.db #0x00	; 0
      00025C 00                    2237 	.db #0x00	; 0
      00025D 00                    2238 	.db #0x00	; 0
      00025E 00                    2239 	.db #0x00	; 0
      00025F 00                    2240 	.db #0x00	; 0
      000260 FF                    2241 	.db #0xff	; 255
      000261 FF                    2242 	.db #0xff	; 255
      000262 00                    2243 	.db #0x00	; 0
      000263 00                    2244 	.db #0x00	; 0
      000264 00                    2245 	.db #0x00	; 0
      000265 00                    2246 	.db #0x00	; 0
      000266 00                    2247 	.db #0x00	; 0
      000267 00                    2248 	.db #0x00	; 0
      000268 00                    2249 	.db #0x00	; 0
      000269 FF                    2250 	.db #0xff	; 255
      00026A FF                    2251 	.db #0xff	; 255
      00026B FF                    2252 	.db #0xff	; 255
      00026C FF                    2253 	.db #0xff	; 255
      00026D FF                    2254 	.db #0xff	; 255
      00026E FF                    2255 	.db #0xff	; 255
      00026F FF                    2256 	.db #0xff	; 255
      000270 00                    2257 	.db #0x00	; 0
      000271 00                    2258 	.db #0x00	; 0
      000272 00                    2259 	.db #0x00	; 0
      000273 00                    2260 	.db #0x00	; 0
      000274 00                    2261 	.db #0x00	; 0
      000275 00                    2262 	.db #0x00	; 0
      000276 00                    2263 	.db #0x00	; 0
      000277 FF                    2264 	.db #0xff	; 255
      000278 FF                    2265 	.db #0xff	; 255
      000279 FF                    2266 	.db #0xff	; 255
      00027A FF                    2267 	.db #0xff	; 255
      00027B FF                    2268 	.db #0xff	; 255
      00027C FF                    2269 	.db #0xff	; 255
      00027D FF                    2270 	.db #0xff	; 255
      00027E 00                    2271 	.db #0x00	; 0
      00027F 00                    2272 	.db #0x00	; 0
      000280 00                    2273 	.db #0x00	; 0
      000281 00                    2274 	.db #0x00	; 0
      000282 00                    2275 	.db #0x00	; 0
      000283 00                    2276 	.db #0x00	; 0
      000284 00                    2277 	.db #0x00	; 0
      000285 FF                    2278 	.db #0xff	; 255
      000286 FF                    2279 	.db #0xff	; 255
      000287 FF                    2280 	.db #0xff	; 255
      000288 FF                    2281 	.db #0xff	; 255
      000289 FF                    2282 	.db #0xff	; 255
      00028A FF                    2283 	.db #0xff	; 255
      00028B FF                    2284 	.db #0xff	; 255
      00028C 00                    2285 	.db #0x00	; 0
      00028D 00                    2286 	.db #0x00	; 0
      00028E 00                    2287 	.db #0x00	; 0
      00028F 00                    2288 	.db #0x00	; 0
      000290 00                    2289 	.db #0x00	; 0
      000291 00                    2290 	.db #0x00	; 0
      000292 00                    2291 	.db #0x00	; 0
      000293 FF                    2292 	.db #0xff	; 255
      000294 FF                    2293 	.db #0xff	; 255
      000295 FF                    2294 	.db #0xff	; 255
      000296 FF                    2295 	.db #0xff	; 255
      000297 FF                    2296 	.db #0xff	; 255
      000298 FF                    2297 	.db #0xff	; 255
      000299 FF                    2298 	.db #0xff	; 255
      00029A 7F                    2299 	.db #0x7f	; 127
      00029B 7F                    2300 	.db #0x7f	; 127
      00029C 7F                    2301 	.db #0x7f	; 127
      00029D 7F                    2302 	.db #0x7f	; 127
      00029E 7F                    2303 	.db #0x7f	; 127
      00029F 7F                    2304 	.db #0x7f	; 127
      0002A0 7F                    2305 	.db #0x7f	; 127
      0002A1 FF                    2306 	.db #0xff	; 255
      0002A2 FF                    2307 	.db #0xff	; 255
      0002A3 FF                    2308 	.db #0xff	; 255
      0002A4 FF                    2309 	.db #0xff	; 255
      0002A5 FF                    2310 	.db #0xff	; 255
      0002A6 FF                    2311 	.db #0xff	; 255
      0002A7 FF                    2312 	.db #0xff	; 255
      0002A8 7F                    2313 	.db #0x7f	; 127
      0002A9 7F                    2314 	.db #0x7f	; 127
      0002AA 7F                    2315 	.db #0x7f	; 127
      0002AB 7F                    2316 	.db #0x7f	; 127
      0002AC 7F                    2317 	.db #0x7f	; 127
      0002AD 7F                    2318 	.db #0x7f	; 127
      0002AE 7F                    2319 	.db #0x7f	; 127
      0002AF 80                    2320 	.db #0x80	; 128
      0002B0 80                    2321 	.db #0x80	; 128
      0002B1 80                    2322 	.db #0x80	; 128
      0002B2 80                    2323 	.db #0x80	; 128
      0002B3 80                    2324 	.db #0x80	; 128
      0002B4 80                    2325 	.db #0x80	; 128
      0002B5 80                    2326 	.db #0x80	; 128
      0002B6 00                    2327 	.db #0x00	; 0
      0002B7 00                    2328 	.db #0x00	; 0
      0002B8 00                    2329 	.db #0x00	; 0
      0002B9 80                    2330 	.db #0x80	; 128
      0002BA 80                    2331 	.db #0x80	; 128
      0002BB 80                    2332 	.db #0x80	; 128
      0002BC 80                    2333 	.db #0x80	; 128
      0002BD 80                    2334 	.db #0x80	; 128
      0002BE 80                    2335 	.db #0x80	; 128
      0002BF 80                    2336 	.db #0x80	; 128
      0002C0 00                    2337 	.db #0x00	; 0
      0002C1 00                    2338 	.db #0x00	; 0
      0002C2 00                    2339 	.db #0x00	; 0
      0002C3 00                    2340 	.db #0x00	; 0
      0002C4 00                    2341 	.db #0x00	; 0
      0002C5 00                    2342 	.db #0x00	; 0
      0002C6 00                    2343 	.db #0x00	; 0
      0002C7 00                    2344 	.db #0x00	; 0
      0002C8 00                    2345 	.db #0x00	; 0
      0002C9 00                    2346 	.db #0x00	; 0
      0002CA 00                    2347 	.db #0x00	; 0
      0002CB 00                    2348 	.db #0x00	; 0
      0002CC 00                    2349 	.db #0x00	; 0
      0002CD 00                    2350 	.db #0x00	; 0
      0002CE 00                    2351 	.db #0x00	; 0
      0002CF 00                    2352 	.db #0x00	; 0
      0002D0 00                    2353 	.db #0x00	; 0
      0002D1 00                    2354 	.db #0x00	; 0
      0002D2 00                    2355 	.db #0x00	; 0
      0002D3 00                    2356 	.db #0x00	; 0
      0002D4 00                    2357 	.db #0x00	; 0
      0002D5 00                    2358 	.db #0x00	; 0
      0002D6 00                    2359 	.db #0x00	; 0
      0002D7 00                    2360 	.db #0x00	; 0
      0002D8 00                    2361 	.db #0x00	; 0
      0002D9 00                    2362 	.db #0x00	; 0
      0002DA 00                    2363 	.db #0x00	; 0
      0002DB 00                    2364 	.db #0x00	; 0
      0002DC 00                    2365 	.db #0x00	; 0
      0002DD 00                    2366 	.db #0x00	; 0
      0002DE 00                    2367 	.db #0x00	; 0
      0002DF 00                    2368 	.db #0x00	; 0
      0002E0 FF                    2369 	.db #0xff	; 255
      0002E1 FF                    2370 	.db #0xff	; 255
      0002E2 80                    2371 	.db #0x80	; 128
      0002E3 80                    2372 	.db #0x80	; 128
      0002E4 80                    2373 	.db #0x80	; 128
      0002E5 80                    2374 	.db #0x80	; 128
      0002E6 80                    2375 	.db #0x80	; 128
      0002E7 80                    2376 	.db #0x80	; 128
      0002E8 80                    2377 	.db #0x80	; 128
      0002E9 BF                    2378 	.db #0xbf	; 191
      0002EA BF                    2379 	.db #0xbf	; 191
      0002EB BF                    2380 	.db #0xbf	; 191
      0002EC BF                    2381 	.db #0xbf	; 191
      0002ED BF                    2382 	.db #0xbf	; 191
      0002EE BF                    2383 	.db #0xbf	; 191
      0002EF BF                    2384 	.db #0xbf	; 191
      0002F0 80                    2385 	.db #0x80	; 128
      0002F1 80                    2386 	.db #0x80	; 128
      0002F2 80                    2387 	.db #0x80	; 128
      0002F3 80                    2388 	.db #0x80	; 128
      0002F4 80                    2389 	.db #0x80	; 128
      0002F5 80                    2390 	.db #0x80	; 128
      0002F6 80                    2391 	.db #0x80	; 128
      0002F7 BF                    2392 	.db #0xbf	; 191
      0002F8 BF                    2393 	.db #0xbf	; 191
      0002F9 BF                    2394 	.db #0xbf	; 191
      0002FA BF                    2395 	.db #0xbf	; 191
      0002FB BF                    2396 	.db #0xbf	; 191
      0002FC BF                    2397 	.db #0xbf	; 191
      0002FD BF                    2398 	.db #0xbf	; 191
      0002FE 80                    2399 	.db #0x80	; 128
      0002FF 80                    2400 	.db #0x80	; 128
      000300 80                    2401 	.db #0x80	; 128
      000301 80                    2402 	.db #0x80	; 128
      000302 80                    2403 	.db #0x80	; 128
      000303 80                    2404 	.db #0x80	; 128
      000304 80                    2405 	.db #0x80	; 128
      000305 BF                    2406 	.db #0xbf	; 191
      000306 BF                    2407 	.db #0xbf	; 191
      000307 BF                    2408 	.db #0xbf	; 191
      000308 BF                    2409 	.db #0xbf	; 191
      000309 BF                    2410 	.db #0xbf	; 191
      00030A BF                    2411 	.db #0xbf	; 191
      00030B BF                    2412 	.db #0xbf	; 191
      00030C 80                    2413 	.db #0x80	; 128
      00030D 80                    2414 	.db #0x80	; 128
      00030E 80                    2415 	.db #0x80	; 128
      00030F 80                    2416 	.db #0x80	; 128
      000310 80                    2417 	.db #0x80	; 128
      000311 80                    2418 	.db #0x80	; 128
      000312 80                    2419 	.db #0x80	; 128
      000313 BF                    2420 	.db #0xbf	; 191
      000314 BF                    2421 	.db #0xbf	; 191
      000315 BF                    2422 	.db #0xbf	; 191
      000316 BF                    2423 	.db #0xbf	; 191
      000317 BF                    2424 	.db #0xbf	; 191
      000318 BF                    2425 	.db #0xbf	; 191
      000319 BF                    2426 	.db #0xbf	; 191
      00031A 80                    2427 	.db #0x80	; 128
      00031B 80                    2428 	.db #0x80	; 128
      00031C 80                    2429 	.db #0x80	; 128
      00031D 80                    2430 	.db #0x80	; 128
      00031E 80                    2431 	.db #0x80	; 128
      00031F 80                    2432 	.db #0x80	; 128
      000320 80                    2433 	.db #0x80	; 128
      000321 BF                    2434 	.db #0xbf	; 191
      000322 BF                    2435 	.db #0xbf	; 191
      000323 BF                    2436 	.db #0xbf	; 191
      000324 BF                    2437 	.db #0xbf	; 191
      000325 BF                    2438 	.db #0xbf	; 191
      000326 BF                    2439 	.db #0xbf	; 191
      000327 BF                    2440 	.db #0xbf	; 191
      000328 80                    2441 	.db #0x80	; 128
      000329 80                    2442 	.db #0x80	; 128
      00032A 80                    2443 	.db #0x80	; 128
      00032B 80                    2444 	.db #0x80	; 128
      00032C 80                    2445 	.db #0x80	; 128
      00032D 80                    2446 	.db #0x80	; 128
      00032E 80                    2447 	.db #0x80	; 128
      00032F BF                    2448 	.db #0xbf	; 191
      000330 BF                    2449 	.db #0xbf	; 191
      000331 BF                    2450 	.db #0xbf	; 191
      000332 BF                    2451 	.db #0xbf	; 191
      000333 BF                    2452 	.db #0xbf	; 191
      000334 BF                    2453 	.db #0xbf	; 191
      000335 BF                    2454 	.db #0xbf	; 191
      000336 80                    2455 	.db #0x80	; 128
      000337 80                    2456 	.db #0x80	; 128
      000338 80                    2457 	.db #0x80	; 128
      000339 B1                    2458 	.db #0xb1	; 177
      00033A B1                    2459 	.db #0xb1	; 177
      00033B BF                    2460 	.db #0xbf	; 191
      00033C BF                    2461 	.db #0xbf	; 191
      00033D BF                    2462 	.db #0xbf	; 191
      00033E B1                    2463 	.db #0xb1	; 177
      00033F B1                    2464 	.db #0xb1	; 177
      000340 80                    2465 	.db #0x80	; 128
      000341 80                    2466 	.db #0x80	; 128
      000342 BF                    2467 	.db #0xbf	; 191
      000343 BF                    2468 	.db #0xbf	; 191
      000344 83                    2469 	.db #0x83	; 131
      000345 83                    2470 	.db #0x83	; 131
      000346 BF                    2471 	.db #0xbf	; 191
      000347 BE                    2472 	.db #0xbe	; 190
      000348 80                    2473 	.db #0x80	; 128
      000349 80                    2474 	.db #0x80	; 128
      00034A BF                    2475 	.db #0xbf	; 191
      00034B BF                    2476 	.db #0xbf	; 191
      00034C B3                    2477 	.db #0xb3	; 179
      00034D B3                    2478 	.db #0xb3	; 179
      00034E B3                    2479 	.db #0xb3	; 179
      00034F B3                    2480 	.db #0xb3	; 179
      000350 80                    2481 	.db #0x80	; 128
      000351 80                    2482 	.db #0x80	; 128
      000352 80                    2483 	.db #0x80	; 128
      000353 80                    2484 	.db #0x80	; 128
      000354 B0                    2485 	.db #0xb0	; 176
      000355 B0                    2486 	.db #0xb0	; 176
      000356 80                    2487 	.db #0x80	; 128
      000357 80                    2488 	.db #0x80	; 128
      000358 80                    2489 	.db #0x80	; 128
      000359 80                    2490 	.db #0x80	; 128
      00035A 80                    2491 	.db #0x80	; 128
      00035B 80                    2492 	.db #0x80	; 128
      00035C 80                    2493 	.db #0x80	; 128
      00035D 80                    2494 	.db #0x80	; 128
      00035E 80                    2495 	.db #0x80	; 128
      00035F 80                    2496 	.db #0x80	; 128
      000360 FF                    2497 	.db #0xff	; 255
                                   2498 	.area CABS (ABS)
