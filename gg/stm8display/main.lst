                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gg
                                     13 	.globl _setup
                                     14 	.globl _ssd1306_send_buffer
                                     15 	.globl _ssd1306_buffer_clean
                                     16 	.globl _set_bit
                                     17 	.globl _get_bit
                                     18 	.globl _i2c_irq
                                     19 	.globl _memset
                                     20 	.globl _main_buffer
                                     21 	.globl _ttf_eng_0
                                     22 	.globl _ttf_eng_9
                                     23 	.globl _ttf_eng_8
                                     24 	.globl _ttf_eng_7
                                     25 	.globl _ttf_eng_6
                                     26 	.globl _ttf_eng_5
                                     27 	.globl _ttf_eng_4
                                     28 	.globl _ttf_eng_3
                                     29 	.globl _ttf_eng_2
                                     30 	.globl _ttf_eng_1
                                     31 	.globl _ttf_eng_z
                                     32 	.globl _ttf_eng_y
                                     33 	.globl _ttf_eng_x
                                     34 	.globl _ttf_eng_w
                                     35 	.globl _ttf_eng_v
                                     36 	.globl _ttf_eng_u
                                     37 	.globl _ttf_eng_t
                                     38 	.globl _ttf_eng_s
                                     39 	.globl _ttf_eng_r
                                     40 	.globl _ttf_eng_q
                                     41 	.globl _ttf_eng_p
                                     42 	.globl _ttf_eng_o
                                     43 	.globl _ttf_eng_n
                                     44 	.globl _ttf_eng_m
                                     45 	.globl _ttf_eng_l
                                     46 	.globl _ttf_eng_k
                                     47 	.globl _ttf_eng_j
                                     48 	.globl _ttf_eng_i
                                     49 	.globl _ttf_eng_h
                                     50 	.globl _ttf_eng_g
                                     51 	.globl _ttf_eng_f
                                     52 	.globl _ttf_eng_e
                                     53 	.globl _ttf_eng_d
                                     54 	.globl _ttf_eng_c
                                     55 	.globl _ttf_eng_b
                                     56 	.globl _ttf_eng_a
                                     57 	.globl _I2C_IRQ
                                     58 	.globl _buf_size
                                     59 	.globl _buf_pos
                                     60 	.globl _rx_buf_pointer
                                     61 	.globl _tx_buf_pointer
                                     62 	.globl _uart_transmission_irq
                                     63 	.globl _uart_reciever_irq
                                     64 	.globl _uart_write_irq
                                     65 	.globl _uart_read_irq
                                     66 	.globl _uart_init
                                     67 	.globl _uart_read_byte
                                     68 	.globl _uart_write_byte
                                     69 	.globl _uart_write
                                     70 	.globl _uart_read
                                     71 	.globl _i2c_init
                                     72 	.globl _i2c_start
                                     73 	.globl _i2c_stop
                                     74 	.globl _i2c_send_address
                                     75 	.globl _i2c_read_byte
                                     76 	.globl _i2c_read
                                     77 	.globl _i2c_send_byte
                                     78 	.globl _i2c_write
                                     79 	.globl _i2c_scan
                                     80 	.globl _i2c_start_irq
                                     81 	.globl _i2c_stop_irq
                                     82 	.globl _ssd1306_init
                                     83 	.globl _ssd1306_set_params_to_write
                                     84 	.globl _ssd1306_draw_pixel
                                     85 	.globl _ssd1306_buffer_splash
                                     86 	.globl _ssd1306_buffer_write
                                     87 	.globl _ssd1306_clean
                                     88 ;--------------------------------------------------------
                                     89 ; ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area DATA
      000000                         92 _tx_buf_pointer::
      000000                         93 	.ds 2
      000002                         94 _rx_buf_pointer::
      000002                         95 	.ds 2
      000004                         96 _buf_pos::
      000004                         97 	.ds 1
      000005                         98 _buf_size::
      000005                         99 	.ds 1
                                    100 ;--------------------------------------------------------
                                    101 ; ram data
                                    102 ;--------------------------------------------------------
                                    103 	.area INITIALIZED
      000000                        104 _I2C_IRQ::
      000000                        105 	.ds 1
      000001                        106 _ttf_eng_a::
      000001                        107 	.ds 8
      000009                        108 _ttf_eng_b::
      000009                        109 	.ds 8
      000011                        110 _ttf_eng_c::
      000011                        111 	.ds 8
      000019                        112 _ttf_eng_d::
      000019                        113 	.ds 8
      000021                        114 _ttf_eng_e::
      000021                        115 	.ds 8
      000029                        116 _ttf_eng_f::
      000029                        117 	.ds 8
      000031                        118 _ttf_eng_g::
      000031                        119 	.ds 8
      000039                        120 _ttf_eng_h::
      000039                        121 	.ds 8
      000041                        122 _ttf_eng_i::
      000041                        123 	.ds 8
      000049                        124 _ttf_eng_j::
      000049                        125 	.ds 8
      000051                        126 _ttf_eng_k::
      000051                        127 	.ds 8
      000059                        128 _ttf_eng_l::
      000059                        129 	.ds 8
      000061                        130 _ttf_eng_m::
      000061                        131 	.ds 8
      000069                        132 _ttf_eng_n::
      000069                        133 	.ds 8
      000071                        134 _ttf_eng_o::
      000071                        135 	.ds 8
      000079                        136 _ttf_eng_p::
      000079                        137 	.ds 8
      000081                        138 _ttf_eng_q::
      000081                        139 	.ds 8
      000089                        140 _ttf_eng_r::
      000089                        141 	.ds 8
      000091                        142 _ttf_eng_s::
      000091                        143 	.ds 8
      000099                        144 _ttf_eng_t::
      000099                        145 	.ds 8
      0000A1                        146 _ttf_eng_u::
      0000A1                        147 	.ds 8
      0000A9                        148 _ttf_eng_v::
      0000A9                        149 	.ds 8
      0000B1                        150 _ttf_eng_w::
      0000B1                        151 	.ds 8
      0000B9                        152 _ttf_eng_x::
      0000B9                        153 	.ds 8
      0000C1                        154 _ttf_eng_y::
      0000C1                        155 	.ds 8
      0000C9                        156 _ttf_eng_z::
      0000C9                        157 	.ds 8
      0000D1                        158 _ttf_eng_1::
      0000D1                        159 	.ds 8
      0000D9                        160 _ttf_eng_2::
      0000D9                        161 	.ds 8
      0000E1                        162 _ttf_eng_3::
      0000E1                        163 	.ds 8
      0000E9                        164 _ttf_eng_4::
      0000E9                        165 	.ds 8
      0000F1                        166 _ttf_eng_5::
      0000F1                        167 	.ds 8
      0000F9                        168 _ttf_eng_6::
      0000F9                        169 	.ds 8
      000101                        170 _ttf_eng_7::
      000101                        171 	.ds 8
      000109                        172 _ttf_eng_8::
      000109                        173 	.ds 8
      000111                        174 _ttf_eng_9::
      000111                        175 	.ds 8
      000119                        176 _ttf_eng_0::
      000119                        177 	.ds 8
      000121                        178 _main_buffer::
      000121                        179 	.ds 512
                                    180 ;--------------------------------------------------------
                                    181 ; Stack segment in internal ram
                                    182 ;--------------------------------------------------------
                                    183 	.area SSEG
      000000                        184 __start__stack:
      000000                        185 	.ds	1
                                    186 
                                    187 ;--------------------------------------------------------
                                    188 ; absolute external ram data
                                    189 ;--------------------------------------------------------
                                    190 	.area DABS (ABS)
                                    191 
                                    192 ; default segment ordering for linker
                                    193 	.area HOME
                                    194 	.area GSINIT
                                    195 	.area GSFINAL
                                    196 	.area CONST
                                    197 	.area INITIALIZER
                                    198 	.area CODE
                                    199 
                                    200 ;--------------------------------------------------------
                                    201 ; interrupt vector
                                    202 ;--------------------------------------------------------
                                    203 	.area HOME
      000000                        204 __interrupt_vect:
      000000 82v00u00u00            205 	int s_GSINIT ; reset
      000004 82 00 00 00            206 	int 0x000000 ; trap
      000008 82 00 00 00            207 	int 0x000000 ; int0
      00000C 82 00 00 00            208 	int 0x000000 ; int1
      000010 82 00 00 00            209 	int 0x000000 ; int2
      000014 82 00 00 00            210 	int 0x000000 ; int3
      000018 82 00 00 00            211 	int 0x000000 ; int4
      00001C 82 00 00 00            212 	int 0x000000 ; int5
      000020 82 00 00 00            213 	int 0x000000 ; int6
      000024 82 00 00 00            214 	int 0x000000 ; int7
      000028 82 00 00 00            215 	int 0x000000 ; int8
      00002C 82 00 00 00            216 	int 0x000000 ; int9
      000030 82 00 00 00            217 	int 0x000000 ; int10
      000034 82 00 00 00            218 	int 0x000000 ; int11
      000038 82 00 00 00            219 	int 0x000000 ; int12
      00003C 82 00 00 00            220 	int 0x000000 ; int13
      000040 82 00 00 00            221 	int 0x000000 ; int14
      000044 82 00 00 00            222 	int 0x000000 ; int15
      000048 82 00 00 00            223 	int 0x000000 ; int16
      00004C 82v00u00u00            224 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            225 	int _uart_reciever_irq ; int18
      000054 82v00u02u1E            226 	int _i2c_irq ; int19
                                    227 ;--------------------------------------------------------
                                    228 ; global & static initialisations
                                    229 ;--------------------------------------------------------
                                    230 	.area HOME
                                    231 	.area GSINIT
                                    232 	.area GSFINAL
                                    233 	.area GSINIT
      000000 CDr00r00         [ 4]  234 	call	___sdcc_external_startup
      000003 4D               [ 1]  235 	tnz	a
      000004 27 03            [ 1]  236 	jreq	__sdcc_init_data
      000006 CCr00r58         [ 2]  237 	jp	__sdcc_program_startup
      000009                        238 __sdcc_init_data:
                                    239 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  240 	ldw x, #l_DATA
      00000C 27 07            [ 1]  241 	jreq	00002$
      00000E                        242 00001$:
      00000E 72 4FuFFuFF      [ 1]  243 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  244 	decw x
      000013 26 F9            [ 1]  245 	jrne	00001$
      000015                        246 00002$:
      000015 AEr00r00         [ 2]  247 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  248 	jreq	00004$
      00001A                        249 00003$:
      00001A D6uFFuFF         [ 1]  250 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  251 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  252 	decw	x
      000021 26 F7            [ 1]  253 	jrne	00003$
      000023                        254 00004$:
                                    255 ; stm8_genXINIT() end
                                    256 	.area GSFINAL
      000000 CCr00r58         [ 2]  257 	jp	__sdcc_program_startup
                                    258 ;--------------------------------------------------------
                                    259 ; Home
                                    260 ;--------------------------------------------------------
                                    261 	.area HOME
                                    262 	.area HOME
      000058                        263 __sdcc_program_startup:
      000058 CCr07rEA         [ 2]  264 	jp	_main
                                    265 ;	return from main will return to caller
                                    266 ;--------------------------------------------------------
                                    267 ; code
                                    268 ;--------------------------------------------------------
                                    269 	.area CODE
                                    270 ;	./libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    271 ;	-----------------------------------------
                                    272 ;	 function uart_transmission_irq
                                    273 ;	-----------------------------------------
      000000                        274 _uart_transmission_irq:
                                    275 ;	./libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  276 	ldw	x, #0x5230
      000003 F6               [ 1]  277 	ld	a, (x)
      000004 4E               [ 1]  278 	swap	a
      000005 44               [ 1]  279 	srl	a
      000006 44               [ 1]  280 	srl	a
      000007 44               [ 1]  281 	srl	a
      000008 A5 01            [ 1]  282 	bcp	a, #0x01
      00000A 27 2F            [ 1]  283 	jreq	00107$
                                    284 ;	./libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  285 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  286 	add	a, _buf_pos+0
      000012 97               [ 1]  287 	ld	xl, a
      000013 C6u00u00         [ 1]  288 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  289 	adc	a, #0x00
      000018 95               [ 1]  290 	ld	xh, a
      000019 F6               [ 1]  291 	ld	a, (x)
      00001A 27 1B            [ 1]  292 	jreq	00102$
      00001C C6u00u04         [ 1]  293 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  294 	cp	a, _buf_size+0
      000022 24 13            [ 1]  295 	jrnc	00102$
                                    296 ;	./libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  297 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  298 	inc	_buf_pos+0
      00002B 5F               [ 1]  299 	clrw	x
      00002C 97               [ 1]  300 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  301 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  302 	ld	a, (x)
      000032 C7 52 31         [ 1]  303 	ld	0x5231, a
      000035 20 04            [ 2]  304 	jra	00107$
      000037                        305 00102$:
                                    306 ;	./libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  307 	bres	0x5235, #7
      00003B                        308 00107$:
                                    309 ;	./libs/uart_lib.c: 14: }
      00003B 80               [11]  310 	iret
                                    311 ;	./libs/uart_lib.c: 16: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    312 ;	-----------------------------------------
                                    313 ;	 function uart_reciever_irq
                                    314 ;	-----------------------------------------
      00003C                        315 _uart_reciever_irq:
      00003C 88               [ 1]  316 	push	a
                                    317 ;	./libs/uart_lib.c: 20: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  318 	ld	a, 0x5230
      000040 4E               [ 1]  319 	swap	a
      000041 44               [ 1]  320 	srl	a
      000042 A5 01            [ 1]  321 	bcp	a, #0x01
      000044 27 27            [ 1]  322 	jreq	00107$
                                    323 ;	./libs/uart_lib.c: 22: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  324 	ld	a, 0x5231
                                    325 ;	./libs/uart_lib.c: 23: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  326 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  327 	cp	a, #0x0a
      00004D 27 1A            [ 1]  328 	jreq	00102$
      00004F C6u00u04         [ 1]  329 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  330 	cp	a, _buf_size+0
      000055 24 12            [ 1]  331 	jrnc	00102$
                                    332 ;	./libs/uart_lib.c: 24: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  333 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  334 	inc	_buf_pos+0
      00005E 5F               [ 1]  335 	clrw	x
      00005F 97               [ 1]  336 	ld	xl, a
      000060 72 BBu00u02      [ 2]  337 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  338 	ld	a, (0x01, sp)
      000066 F7               [ 1]  339 	ld	(x), a
      000067 20 04            [ 2]  340 	jra	00107$
      000069                        341 00102$:
                                    342 ;	./libs/uart_lib.c: 26: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  343 	bres	0x5235, #5
      00006D                        344 00107$:
                                    345 ;	./libs/uart_lib.c: 30: }
      00006D 84               [ 1]  346 	pop	a
      00006E 80               [11]  347 	iret
                                    348 ;	./libs/uart_lib.c: 32: void uart_write_irq(uint8_t *data_buf)
                                    349 ;	-----------------------------------------
                                    350 ;	 function uart_write_irq
                                    351 ;	-----------------------------------------
      00006F                        352 _uart_write_irq:
      00006F 52 02            [ 2]  353 	sub	sp, #2
                                    354 ;	./libs/uart_lib.c: 34: tx_buf_pointer = data_buf;
      000071 1F 01            [ 2]  355 	ldw	(0x01, sp), x
      000073 CFu00u00         [ 2]  356 	ldw	_tx_buf_pointer+0, x
                                    357 ;	./libs/uart_lib.c: 35: buf_pos = 0;
      000076 72 5Fu00u04      [ 1]  358 	clr	_buf_pos+0
                                    359 ;	./libs/uart_lib.c: 36: buf_size = 0;
      00007A 72 5Fu00u05      [ 1]  360 	clr	_buf_size+0
                                    361 ;	./libs/uart_lib.c: 37: while (data_buf[buf_size++] != '\0');
      00007E                        362 00101$:
      00007E C6u00u05         [ 1]  363 	ld	a, _buf_size+0
      000081 72 5Cu00u05      [ 1]  364 	inc	_buf_size+0
      000085 5F               [ 1]  365 	clrw	x
      000086 97               [ 1]  366 	ld	xl, a
      000087 72 FB 01         [ 2]  367 	addw	x, (0x01, sp)
      00008A F6               [ 1]  368 	ld	a, (x)
      00008B 26 F1            [ 1]  369 	jrne	00101$
                                    370 ;	./libs/uart_lib.c: 38: UART1_CR2 -> TIEN = 1;
      00008D 72 1E 52 35      [ 1]  371 	bset	0x5235, #7
                                    372 ;	./libs/uart_lib.c: 39: while(UART1_CR2 -> TIEN);
      000091                        373 00104$:
      000091 72 0E 52 35 FB   [ 2]  374 	btjt	0x5235, #7, 00104$
                                    375 ;	./libs/uart_lib.c: 40: }
      000096 5B 02            [ 2]  376 	addw	sp, #2
      000098 81               [ 4]  377 	ret
                                    378 ;	./libs/uart_lib.c: 41: void uart_read_irq(uint8_t *data_buf,int size)
                                    379 ;	-----------------------------------------
                                    380 ;	 function uart_read_irq
                                    381 ;	-----------------------------------------
      000099                        382 _uart_read_irq:
                                    383 ;	./libs/uart_lib.c: 43: rx_buf_pointer = data_buf;
      000099 CFu00u02         [ 2]  384 	ldw	_rx_buf_pointer+0, x
                                    385 ;	./libs/uart_lib.c: 44: buf_pos = 0;
      00009C 72 5Fu00u04      [ 1]  386 	clr	_buf_pos+0
                                    387 ;	./libs/uart_lib.c: 45: buf_size = size;
      0000A0 7B 04            [ 1]  388 	ld	a, (0x04, sp)
      0000A2 C7u00u05         [ 1]  389 	ld	_buf_size+0, a
                                    390 ;	./libs/uart_lib.c: 46: UART1_CR2 -> RIEN = 1;
      0000A5 72 1A 52 35      [ 1]  391 	bset	0x5235, #5
                                    392 ;	./libs/uart_lib.c: 47: while(UART1_CR2 -> RIEN);
      0000A9                        393 00101$:
      0000A9 C6 52 35         [ 1]  394 	ld	a, 0x5235
      0000AC 4E               [ 1]  395 	swap	a
      0000AD 44               [ 1]  396 	srl	a
      0000AE A4 01            [ 1]  397 	and	a, #0x01
      0000B0 26 F7            [ 1]  398 	jrne	00101$
                                    399 ;	./libs/uart_lib.c: 48: }
      0000B2 1E 01            [ 2]  400 	ldw	x, (1, sp)
      0000B4 5B 04            [ 2]  401 	addw	sp, #4
      0000B6 FC               [ 2]  402 	jp	(x)
                                    403 ;	./libs/uart_lib.c: 50: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    404 ;	-----------------------------------------
                                    405 ;	 function uart_init
                                    406 ;	-----------------------------------------
      0000B7                        407 _uart_init:
      0000B7 52 02            [ 2]  408 	sub	sp, #2
      0000B9 1F 01            [ 2]  409 	ldw	(0x01, sp), x
                                    410 ;	./libs/uart_lib.c: 54: UART1_CR2 -> TEN = 1; // Transmitter enable
      0000BB AE 52 35         [ 2]  411 	ldw	x, #0x5235
      0000BE 88               [ 1]  412 	push	a
      0000BF F6               [ 1]  413 	ld	a, (x)
      0000C0 AA 08            [ 1]  414 	or	a, #0x08
      0000C2 F7               [ 1]  415 	ld	(x), a
      0000C3 84               [ 1]  416 	pop	a
                                    417 ;	./libs/uart_lib.c: 55: UART1_CR2 -> REN = 1; // Receiver enable
      0000C4 AE 52 35         [ 2]  418 	ldw	x, #0x5235
      0000C7 88               [ 1]  419 	push	a
      0000C8 F6               [ 1]  420 	ld	a, (x)
      0000C9 AA 04            [ 1]  421 	or	a, #0x04
      0000CB F7               [ 1]  422 	ld	(x), a
      0000CC 84               [ 1]  423 	pop	a
                                    424 ;	./libs/uart_lib.c: 56: switch(stopbit)
      0000CD A1 02            [ 1]  425 	cp	a, #0x02
      0000CF 27 06            [ 1]  426 	jreq	00101$
      0000D1 A1 03            [ 1]  427 	cp	a, #0x03
      0000D3 27 0E            [ 1]  428 	jreq	00102$
      0000D5 20 16            [ 2]  429 	jra	00103$
                                    430 ;	./libs/uart_lib.c: 58: case 2:
      0000D7                        431 00101$:
                                    432 ;	./libs/uart_lib.c: 59: UART1_CR3 -> STOP = 2;
      0000D7 C6 52 36         [ 1]  433 	ld	a, 0x5236
      0000DA A4 CF            [ 1]  434 	and	a, #0xcf
      0000DC AA 20            [ 1]  435 	or	a, #0x20
      0000DE C7 52 36         [ 1]  436 	ld	0x5236, a
                                    437 ;	./libs/uart_lib.c: 60: break;
      0000E1 20 12            [ 2]  438 	jra	00104$
                                    439 ;	./libs/uart_lib.c: 61: case 3:
      0000E3                        440 00102$:
                                    441 ;	./libs/uart_lib.c: 62: UART1_CR3 -> STOP = 3;
      0000E3 C6 52 36         [ 1]  442 	ld	a, 0x5236
      0000E6 AA 30            [ 1]  443 	or	a, #0x30
      0000E8 C7 52 36         [ 1]  444 	ld	0x5236, a
                                    445 ;	./libs/uart_lib.c: 63: break;
      0000EB 20 08            [ 2]  446 	jra	00104$
                                    447 ;	./libs/uart_lib.c: 64: default:
      0000ED                        448 00103$:
                                    449 ;	./libs/uart_lib.c: 65: UART1_CR3 -> STOP = 0;
      0000ED C6 52 36         [ 1]  450 	ld	a, 0x5236
      0000F0 A4 CF            [ 1]  451 	and	a, #0xcf
      0000F2 C7 52 36         [ 1]  452 	ld	0x5236, a
                                    453 ;	./libs/uart_lib.c: 67: }
      0000F5                        454 00104$:
                                    455 ;	./libs/uart_lib.c: 68: switch(baudrate)
      0000F5 1E 01            [ 2]  456 	ldw	x, (0x01, sp)
      0000F7 A3 08 00         [ 2]  457 	cpw	x, #0x0800
      0000FA 26 03            [ 1]  458 	jrne	00186$
      0000FC CCr01r88         [ 2]  459 	jp	00110$
      0000FF                        460 00186$:
      0000FF 1E 01            [ 2]  461 	ldw	x, (0x01, sp)
      000101 A3 09 60         [ 2]  462 	cpw	x, #0x0960
      000104 27 28            [ 1]  463 	jreq	00105$
      000106 1E 01            [ 2]  464 	ldw	x, (0x01, sp)
      000108 A3 10 00         [ 2]  465 	cpw	x, #0x1000
      00010B 26 03            [ 1]  466 	jrne	00192$
      00010D CCr01r98         [ 2]  467 	jp	00111$
      000110                        468 00192$:
      000110 1E 01            [ 2]  469 	ldw	x, (0x01, sp)
      000112 A3 4B 00         [ 2]  470 	cpw	x, #0x4b00
      000115 27 31            [ 1]  471 	jreq	00106$
      000117 1E 01            [ 2]  472 	ldw	x, (0x01, sp)
      000119 A3 84 00         [ 2]  473 	cpw	x, #0x8400
      00011C 27 5A            [ 1]  474 	jreq	00109$
      00011E 1E 01            [ 2]  475 	ldw	x, (0x01, sp)
      000120 A3 C2 00         [ 2]  476 	cpw	x, #0xc200
      000123 27 43            [ 1]  477 	jreq	00108$
      000125 1E 01            [ 2]  478 	ldw	x, (0x01, sp)
      000127 A3 E1 00         [ 2]  479 	cpw	x, #0xe100
      00012A 27 2C            [ 1]  480 	jreq	00107$
      00012C 20 7A            [ 2]  481 	jra	00112$
                                    482 ;	./libs/uart_lib.c: 70: case (unsigned int)2400:
      00012E                        483 00105$:
                                    484 ;	./libs/uart_lib.c: 71: UART1_BRR2 -> MSB = 0x01;
      00012E C6 52 33         [ 1]  485 	ld	a, 0x5233
      000131 A4 0F            [ 1]  486 	and	a, #0x0f
      000133 AA 10            [ 1]  487 	or	a, #0x10
      000135 C7 52 33         [ 1]  488 	ld	0x5233, a
                                    489 ;	./libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0xA0;
      000138 35 A0 52 32      [ 1]  490 	mov	0x5232+0, #0xa0
                                    491 ;	./libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x0B; 
      00013C C6 52 33         [ 1]  492 	ld	a, 0x5233
      00013F A4 F0            [ 1]  493 	and	a, #0xf0
      000141 AA 0B            [ 1]  494 	or	a, #0x0b
      000143 C7 52 33         [ 1]  495 	ld	0x5233, a
                                    496 ;	./libs/uart_lib.c: 74: break;
      000146 20 6E            [ 2]  497 	jra	00114$
                                    498 ;	./libs/uart_lib.c: 75: case (unsigned int)19200:
      000148                        499 00106$:
                                    500 ;	./libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x34;
      000148 35 34 52 32      [ 1]  501 	mov	0x5232+0, #0x34
                                    502 ;	./libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      00014C C6 52 33         [ 1]  503 	ld	a, 0x5233
      00014F A4 F0            [ 1]  504 	and	a, #0xf0
      000151 AA 01            [ 1]  505 	or	a, #0x01
      000153 C7 52 33         [ 1]  506 	ld	0x5233, a
                                    507 ;	./libs/uart_lib.c: 78: break;
      000156 20 5E            [ 2]  508 	jra	00114$
                                    509 ;	./libs/uart_lib.c: 79: case (unsigned int)57600:
      000158                        510 00107$:
                                    511 ;	./libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x11;
      000158 35 11 52 32      [ 1]  512 	mov	0x5232+0, #0x11
                                    513 ;	./libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x06;
      00015C C6 52 33         [ 1]  514 	ld	a, 0x5233
      00015F A4 F0            [ 1]  515 	and	a, #0xf0
      000161 AA 06            [ 1]  516 	or	a, #0x06
      000163 C7 52 33         [ 1]  517 	ld	0x5233, a
                                    518 ;	./libs/uart_lib.c: 82: break;
      000166 20 4E            [ 2]  519 	jra	00114$
                                    520 ;	./libs/uart_lib.c: 83: case (unsigned int)115200:
      000168                        521 00108$:
                                    522 ;	./libs/uart_lib.c: 84: UART1_BRR1 -> DIV = 0x08;
      000168 35 08 52 32      [ 1]  523 	mov	0x5232+0, #0x08
                                    524 ;	./libs/uart_lib.c: 85: UART1_BRR2 -> LSB = 0x0B;
      00016C C6 52 33         [ 1]  525 	ld	a, 0x5233
      00016F A4 F0            [ 1]  526 	and	a, #0xf0
      000171 AA 0B            [ 1]  527 	or	a, #0x0b
      000173 C7 52 33         [ 1]  528 	ld	0x5233, a
                                    529 ;	./libs/uart_lib.c: 86: break;
      000176 20 3E            [ 2]  530 	jra	00114$
                                    531 ;	./libs/uart_lib.c: 87: case (unsigned int)230400:
      000178                        532 00109$:
                                    533 ;	./libs/uart_lib.c: 88: UART1_BRR1 -> DIV = 0x04;
      000178 35 04 52 32      [ 1]  534 	mov	0x5232+0, #0x04
                                    535 ;	./libs/uart_lib.c: 89: UART1_BRR2 -> LSB = 0x05;
      00017C C6 52 33         [ 1]  536 	ld	a, 0x5233
      00017F A4 F0            [ 1]  537 	and	a, #0xf0
      000181 AA 05            [ 1]  538 	or	a, #0x05
      000183 C7 52 33         [ 1]  539 	ld	0x5233, a
                                    540 ;	./libs/uart_lib.c: 90: break;
      000186 20 2E            [ 2]  541 	jra	00114$
                                    542 ;	./libs/uart_lib.c: 91: case (unsigned int)460800:
      000188                        543 00110$:
                                    544 ;	./libs/uart_lib.c: 92: UART1_BRR1 -> DIV = 0x02;
      000188 35 02 52 32      [ 1]  545 	mov	0x5232+0, #0x02
                                    546 ;	./libs/uart_lib.c: 93: UART1_BRR2 -> LSB = 0x03;
      00018C C6 52 33         [ 1]  547 	ld	a, 0x5233
      00018F A4 F0            [ 1]  548 	and	a, #0xf0
      000191 AA 03            [ 1]  549 	or	a, #0x03
      000193 C7 52 33         [ 1]  550 	ld	0x5233, a
                                    551 ;	./libs/uart_lib.c: 94: break;
      000196 20 1E            [ 2]  552 	jra	00114$
                                    553 ;	./libs/uart_lib.c: 95: case (unsigned int)921600:
      000198                        554 00111$:
                                    555 ;	./libs/uart_lib.c: 96: UART1_BRR1 -> DIV = 0x01;
      000198 35 01 52 32      [ 1]  556 	mov	0x5232+0, #0x01
                                    557 ;	./libs/uart_lib.c: 97: UART1_BRR2 -> LSB = 0x01;
      00019C C6 52 33         [ 1]  558 	ld	a, 0x5233
      00019F A4 F0            [ 1]  559 	and	a, #0xf0
      0001A1 AA 01            [ 1]  560 	or	a, #0x01
      0001A3 C7 52 33         [ 1]  561 	ld	0x5233, a
                                    562 ;	./libs/uart_lib.c: 98: break;
      0001A6 20 0E            [ 2]  563 	jra	00114$
                                    564 ;	./libs/uart_lib.c: 99: default:
      0001A8                        565 00112$:
                                    566 ;	./libs/uart_lib.c: 100: UART1_BRR1 -> DIV = 0x68;
      0001A8 35 68 52 32      [ 1]  567 	mov	0x5232+0, #0x68
                                    568 ;	./libs/uart_lib.c: 101: UART1_BRR2 -> LSB = 0x03;
      0001AC C6 52 33         [ 1]  569 	ld	a, 0x5233
      0001AF A4 F0            [ 1]  570 	and	a, #0xf0
      0001B1 AA 03            [ 1]  571 	or	a, #0x03
      0001B3 C7 52 33         [ 1]  572 	ld	0x5233, a
                                    573 ;	./libs/uart_lib.c: 103: }
      0001B6                        574 00114$:
                                    575 ;	./libs/uart_lib.c: 104: }
      0001B6 5B 02            [ 2]  576 	addw	sp, #2
      0001B8 81               [ 4]  577 	ret
                                    578 ;	./libs/uart_lib.c: 106: int uart_read_byte(uint8_t *data)
                                    579 ;	-----------------------------------------
                                    580 ;	 function uart_read_byte
                                    581 ;	-----------------------------------------
      0001B9                        582 _uart_read_byte:
                                    583 ;	./libs/uart_lib.c: 108: while(!(UART1_SR -> RXNE));
      0001B9                        584 00101$:
      0001B9 72 0B 52 30 FB   [ 2]  585 	btjf	0x5230, #5, 00101$
                                    586 ;	./libs/uart_lib.c: 110: return 1;
      0001BE 5F               [ 1]  587 	clrw	x
      0001BF 5C               [ 1]  588 	incw	x
                                    589 ;	./libs/uart_lib.c: 111: }
      0001C0 81               [ 4]  590 	ret
                                    591 ;	./libs/uart_lib.c: 113: int uart_write_byte(uint8_t data)
                                    592 ;	-----------------------------------------
                                    593 ;	 function uart_write_byte
                                    594 ;	-----------------------------------------
      0001C1                        595 _uart_write_byte:
                                    596 ;	./libs/uart_lib.c: 115: UART1_DR -> DR = data;
      0001C1 C7 52 31         [ 1]  597 	ld	0x5231, a
                                    598 ;	./libs/uart_lib.c: 116: while(!(UART1_SR -> TXE));
      0001C4                        599 00101$:
      0001C4 72 0F 52 30 FB   [ 2]  600 	btjf	0x5230, #7, 00101$
                                    601 ;	./libs/uart_lib.c: 117: return 1;
      0001C9 5F               [ 1]  602 	clrw	x
      0001CA 5C               [ 1]  603 	incw	x
                                    604 ;	./libs/uart_lib.c: 118: }
      0001CB 81               [ 4]  605 	ret
                                    606 ;	./libs/uart_lib.c: 120: int uart_write(uint8_t *data_buf)
                                    607 ;	-----------------------------------------
                                    608 ;	 function uart_write
                                    609 ;	-----------------------------------------
      0001CC                        610 _uart_write:
      0001CC 52 04            [ 2]  611 	sub	sp, #4
      0001CE 1F 01            [ 2]  612 	ldw	(0x01, sp), x
                                    613 ;	./libs/uart_lib.c: 122: int count = 0;
      0001D0 5F               [ 1]  614 	clrw	x
      0001D1 1F 03            [ 2]  615 	ldw	(0x03, sp), x
                                    616 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001D3 5F               [ 1]  617 	clrw	x
      0001D4                        618 00103$:
      0001D4 90 93            [ 1]  619 	ldw	y, x
      0001D6 72 F9 01         [ 2]  620 	addw	y, (0x01, sp)
      0001D9 90 F6            [ 1]  621 	ld	a, (y)
      0001DB 27 0E            [ 1]  622 	jreq	00101$
                                    623 ;	./libs/uart_lib.c: 124: count += uart_write_byte(data_buf[i]);
      0001DD 89               [ 2]  624 	pushw	x
      0001DE CDr01rC1         [ 4]  625 	call	_uart_write_byte
      0001E1 51               [ 1]  626 	exgw	x, y
      0001E2 85               [ 2]  627 	popw	x
      0001E3 72 F9 03         [ 2]  628 	addw	y, (0x03, sp)
      0001E6 17 03            [ 2]  629 	ldw	(0x03, sp), y
                                    630 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001E8 5C               [ 1]  631 	incw	x
      0001E9 20 E9            [ 2]  632 	jra	00103$
      0001EB                        633 00101$:
                                    634 ;	./libs/uart_lib.c: 125: return count;
      0001EB 1E 03            [ 2]  635 	ldw	x, (0x03, sp)
                                    636 ;	./libs/uart_lib.c: 126: }
      0001ED 5B 04            [ 2]  637 	addw	sp, #4
      0001EF 81               [ 4]  638 	ret
                                    639 ;	./libs/uart_lib.c: 127: int uart_read(uint8_t *data_buf,int size)
                                    640 ;	-----------------------------------------
                                    641 ;	 function uart_read
                                    642 ;	-----------------------------------------
      0001F0                        643 _uart_read:
      0001F0 52 04            [ 2]  644 	sub	sp, #4
      0001F2 1F 01            [ 2]  645 	ldw	(0x01, sp), x
                                    646 ;	./libs/uart_lib.c: 130: int count = 0;
      0001F4 5F               [ 1]  647 	clrw	x
      0001F5 1F 03            [ 2]  648 	ldw	(0x03, sp), x
                                    649 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001F7 5F               [ 1]  650 	clrw	x
      0001F8                        651 00103$:
      0001F8 90 93            [ 1]  652 	ldw	y, x
      0001FA 72 F9 01         [ 2]  653 	addw	y, (0x01, sp)
      0001FD 90 F6            [ 1]  654 	ld	a, (y)
      0001FF 27 13            [ 1]  655 	jreq	00101$
                                    656 ;	./libs/uart_lib.c: 132: count += uart_read_byte((unsigned char *)data_buf[i]);
      000201 90 5F            [ 1]  657 	clrw	y
      000203 90 97            [ 1]  658 	ld	yl, a
      000205 89               [ 2]  659 	pushw	x
      000206 93               [ 1]  660 	ldw	x, y
      000207 CDr01rB9         [ 4]  661 	call	_uart_read_byte
      00020A 51               [ 1]  662 	exgw	x, y
      00020B 85               [ 2]  663 	popw	x
      00020C 72 F9 03         [ 2]  664 	addw	y, (0x03, sp)
      00020F 17 03            [ 2]  665 	ldw	(0x03, sp), y
                                    666 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      000211 5C               [ 1]  667 	incw	x
      000212 20 E4            [ 2]  668 	jra	00103$
      000214                        669 00101$:
                                    670 ;	./libs/uart_lib.c: 133: return count;
      000214 1E 03            [ 2]  671 	ldw	x, (0x03, sp)
                                    672 ;	./libs/uart_lib.c: 134: }
      000216 5B 04            [ 2]  673 	addw	sp, #4
      000218 90 85            [ 2]  674 	popw	y
      00021A 5B 02            [ 2]  675 	addw	sp, #2
      00021C 90 FC            [ 2]  676 	jp	(y)
                                    677 ;	./libs/i2c_lib.c: 3: void i2c_irq(void) __interrupt(I2C_vector)
                                    678 ;	-----------------------------------------
                                    679 ;	 function i2c_irq
                                    680 ;	-----------------------------------------
      00021E                        681 _i2c_irq:
      00021E 4F               [ 1]  682 	clr	a
      00021F 62               [ 2]  683 	div	x, a
                                    684 ;	./libs/i2c_lib.c: 6: disableInterrupts();
      000220 9B               [ 1]  685 	sim
                                    686 ;	./libs/i2c_lib.c: 7: I2C_IRQ.all = 0;//обнуление флагов регистров
      000221 35 00u00u00      [ 1]  687 	mov	_I2C_IRQ+0, #0x00
                                    688 ;	./libs/i2c_lib.c: 9: if(I2C_SR1 -> ADDR)//прерывание адреса
      000225 AE 52 17         [ 2]  689 	ldw	x, #0x5217
      000228 F6               [ 1]  690 	ld	a, (x)
      000229 44               [ 1]  691 	srl	a
      00022A A4 01            [ 1]  692 	and	a, #0x01
      00022C 27 16            [ 1]  693 	jreq	00102$
                                    694 ;	./libs/i2c_lib.c: 11: clr_sr1();
      00022E C6 52 17         [ 1]  695 	ld	a,0x5217
                                    696 ;	./libs/i2c_lib.c: 12: I2C_IRQ.ADDR = 1;
      000231 72 12u00u00      [ 1]  697 	bset	_I2C_IRQ+0, #1
                                    698 ;	./libs/i2c_lib.c: 13: clr_sr3();//EV6
      000235 C6 52 19         [ 1]  699 	ld	a,0x5219
                                    700 ;	./libs/i2c_lib.c: 14: I2C_ITR -> ITEVTEN = 0;
      000238 72 13 52 1A      [ 1]  701 	bres	0x521a, #1
                                    702 ;	./libs/i2c_lib.c: 15: uart_write_byte(0xE1);
      00023C A6 E1            [ 1]  703 	ld	a, #0xe1
      00023E CDr01rC1         [ 4]  704 	call	_uart_write_byte
                                    705 ;	./libs/i2c_lib.c: 16: return;
      000241 CCr02rD7         [ 2]  706 	jp	00113$
      000244                        707 00102$:
                                    708 ;	./libs/i2c_lib.c: 19: if(I2C_SR1 -> TXE) //прерывание регистра данных(он пуст)
      000244 C6 52 17         [ 1]  709 	ld	a, 0x5217
      000247 4E               [ 1]  710 	swap	a
      000248 44               [ 1]  711 	srl	a
      000249 44               [ 1]  712 	srl	a
      00024A 44               [ 1]  713 	srl	a
      00024B A5 01            [ 1]  714 	bcp	a, #0x01
      00024D 27 17            [ 1]  715 	jreq	00104$
                                    716 ;	./libs/i2c_lib.c: 21: I2C_IRQ.TXE = 1;
      00024F 72 18u00u00      [ 1]  717 	bset	_I2C_IRQ+0, #4
                                    718 ;	./libs/i2c_lib.c: 22: I2C_ITR -> ITBUFEN = 0;
      000253 72 15 52 1A      [ 1]  719 	bres	0x521a, #2
                                    720 ;	./libs/i2c_lib.c: 23: I2C_ITR -> ITEVTEN = 0;
      000257 72 13 52 1A      [ 1]  721 	bres	0x521a, #1
                                    722 ;	./libs/i2c_lib.c: 24: I2C_ITR -> ITERREN = 0;
      00025B 72 11 52 1A      [ 1]  723 	bres	0x521a, #0
                                    724 ;	./libs/i2c_lib.c: 25: uart_write_byte(0xEA);
      00025F A6 EA            [ 1]  725 	ld	a, #0xea
      000261 CDr01rC1         [ 4]  726 	call	_uart_write_byte
                                    727 ;	./libs/i2c_lib.c: 26: return;
      000264 20 71            [ 2]  728 	jra	00113$
      000266                        729 00104$:
                                    730 ;	./libs/i2c_lib.c: 28: if(I2C_SR1 -> RXNE) //прерывание регистра данных(он не пуст)
      000266 C6 52 17         [ 1]  731 	ld	a, 0x5217
      000269 4E               [ 1]  732 	swap	a
      00026A 44               [ 1]  733 	srl	a
      00026B 44               [ 1]  734 	srl	a
      00026C A5 01            [ 1]  735 	bcp	a, #0x01
      00026E 27 17            [ 1]  736 	jreq	00106$
                                    737 ;	./libs/i2c_lib.c: 30: I2C_IRQ.RXNE = 1;
      000270 72 16u00u00      [ 1]  738 	bset	_I2C_IRQ+0, #3
                                    739 ;	./libs/i2c_lib.c: 31: I2C_ITR -> ITBUFEN = 0;
      000274 72 15 52 1A      [ 1]  740 	bres	0x521a, #2
                                    741 ;	./libs/i2c_lib.c: 32: I2C_ITR -> ITEVTEN = 0;
      000278 72 13 52 1A      [ 1]  742 	bres	0x521a, #1
                                    743 ;	./libs/i2c_lib.c: 33: I2C_ITR -> ITERREN = 0;
      00027C 72 11 52 1A      [ 1]  744 	bres	0x521a, #0
                                    745 ;	./libs/i2c_lib.c: 34: uart_write_byte(0xEB);
      000280 A6 EB            [ 1]  746 	ld	a, #0xeb
      000282 CDr01rC1         [ 4]  747 	call	_uart_write_byte
                                    748 ;	./libs/i2c_lib.c: 35: return;
      000285 20 50            [ 2]  749 	jra	00113$
      000287                        750 00106$:
                                    751 ;	./libs/i2c_lib.c: 38: if(I2C_SR1 -> SB)//EV5 прерывание стартового импульса
      000287 C6 52 17         [ 1]  752 	ld	a, 0x5217
      00028A A5 01            [ 1]  753 	bcp	a, #0x01
      00028C 27 0F            [ 1]  754 	jreq	00108$
                                    755 ;	./libs/i2c_lib.c: 40: I2C_IRQ.SB = 1;
      00028E 72 10u00u00      [ 1]  756 	bset	_I2C_IRQ+0, #0
                                    757 ;	./libs/i2c_lib.c: 41: I2C_ITR -> ITEVTEN = 0;
      000292 72 13 52 1A      [ 1]  758 	bres	0x521a, #1
                                    759 ;	./libs/i2c_lib.c: 42: uart_write_byte(0xE2);
      000296 A6 E2            [ 1]  760 	ld	a, #0xe2
      000298 CDr01rC1         [ 4]  761 	call	_uart_write_byte
                                    762 ;	./libs/i2c_lib.c: 43: return;
      00029B 20 3A            [ 2]  763 	jra	00113$
      00029D                        764 00108$:
                                    765 ;	./libs/i2c_lib.c: 45: if(I2C_SR1 -> BTF) //прерывание отправки данных
      00029D C6 52 17         [ 1]  766 	ld	a, 0x5217
      0002A0 44               [ 1]  767 	srl	a
      0002A1 44               [ 1]  768 	srl	a
      0002A2 A5 01            [ 1]  769 	bcp	a, #0x01
      0002A4 27 0F            [ 1]  770 	jreq	00110$
                                    771 ;	./libs/i2c_lib.c: 47: I2C_IRQ.BTF = 1;
      0002A6 72 14u00u00      [ 1]  772 	bset	_I2C_IRQ+0, #2
                                    773 ;	./libs/i2c_lib.c: 48: I2C_ITR -> ITEVTEN = 0;
      0002AA 72 13 52 1A      [ 1]  774 	bres	0x521a, #1
                                    775 ;	./libs/i2c_lib.c: 49: uart_write_byte(0xE3);
      0002AE A6 E3            [ 1]  776 	ld	a, #0xe3
      0002B0 CDr01rC1         [ 4]  777 	call	_uart_write_byte
                                    778 ;	./libs/i2c_lib.c: 50: return;
      0002B3 20 22            [ 2]  779 	jra	00113$
      0002B5                        780 00110$:
                                    781 ;	./libs/i2c_lib.c: 53: if(I2C_SR2 -> AF) //прерывание ошибки NACK
      0002B5 AE 52 18         [ 2]  782 	ldw	x, #0x5218
      0002B8 F6               [ 1]  783 	ld	a, (x)
      0002B9 44               [ 1]  784 	srl	a
      0002BA 44               [ 1]  785 	srl	a
      0002BB A4 01            [ 1]  786 	and	a, #0x01
      0002BD 27 17            [ 1]  787 	jreq	00112$
                                    788 ;	./libs/i2c_lib.c: 55: I2C_IRQ.AF = 1;
      0002BF 72 1Au00u00      [ 1]  789 	bset	_I2C_IRQ+0, #5
                                    790 ;	./libs/i2c_lib.c: 56: I2C_ITR -> ITEVTEN = 0;
      0002C3 72 13 52 1A      [ 1]  791 	bres	0x521a, #1
                                    792 ;	./libs/i2c_lib.c: 57: I2C_ITR -> ITERREN = 0;
      0002C7 72 11 52 1A      [ 1]  793 	bres	0x521a, #0
                                    794 ;	./libs/i2c_lib.c: 58: I2C_ITR -> ITBUFEN = 0;
      0002CB 72 15 52 1A      [ 1]  795 	bres	0x521a, #2
                                    796 ;	./libs/i2c_lib.c: 59: uart_write_byte(0xEE);
      0002CF A6 EE            [ 1]  797 	ld	a, #0xee
      0002D1 CDr01rC1         [ 4]  798 	call	_uart_write_byte
                                    799 ;	./libs/i2c_lib.c: 60: return;
      0002D4 20 01            [ 2]  800 	jra	00113$
      0002D6                        801 00112$:
                                    802 ;	./libs/i2c_lib.c: 63: enableInterrupts(); 
      0002D6 9A               [ 1]  803 	rim
      0002D7                        804 00113$:
                                    805 ;	./libs/i2c_lib.c: 64: }
      0002D7 80               [11]  806 	iret
                                    807 ;	./libs/i2c_lib.c: 66: void i2c_init(void)
                                    808 ;	-----------------------------------------
                                    809 ;	 function i2c_init
                                    810 ;	-----------------------------------------
      0002D8                        811 _i2c_init:
                                    812 ;	./libs/i2c_lib.c: 70: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      0002D8 72 11 52 10      [ 1]  813 	bres	0x5210, #0
                                    814 ;	./libs/i2c_lib.c: 71: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      0002DC C6 52 12         [ 1]  815 	ld	a, 0x5212
      0002DF A4 C0            [ 1]  816 	and	a, #0xc0
      0002E1 AA 10            [ 1]  817 	or	a, #0x10
      0002E3 C7 52 12         [ 1]  818 	ld	0x5212, a
                                    819 ;	./libs/i2c_lib.c: 72: I2C_CCRH -> CCR = 0;// =0
      0002E6 C6 52 1C         [ 1]  820 	ld	a, 0x521c
      0002E9 A4 F0            [ 1]  821 	and	a, #0xf0
      0002EB C7 52 1C         [ 1]  822 	ld	0x521c, a
                                    823 ;	./libs/i2c_lib.c: 73: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      0002EE 35 50 52 1B      [ 1]  824 	mov	0x521b+0, #0x50
                                    825 ;	./libs/i2c_lib.c: 74: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      0002F2 72 1F 52 1C      [ 1]  826 	bres	0x521c, #7
                                    827 ;	./libs/i2c_lib.c: 75: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      0002F6 72 1F 52 14      [ 1]  828 	bres	0x5214, #7
                                    829 ;	./libs/i2c_lib.c: 76: I2C_OARH -> ADDCONF = 1;// see reference manual
      0002FA 72 10 52 14      [ 1]  830 	bset	0x5214, #0
                                    831 ;	./libs/i2c_lib.c: 77: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      0002FE 72 10 52 10      [ 1]  832 	bset	0x5210, #0
                                    833 ;	./libs/i2c_lib.c: 78: }
      000302 81               [ 4]  834 	ret
                                    835 ;	./libs/i2c_lib.c: 80: void i2c_start(void)
                                    836 ;	-----------------------------------------
                                    837 ;	 function i2c_start
                                    838 ;	-----------------------------------------
      000303                        839 _i2c_start:
                                    840 ;	./libs/i2c_lib.c: 82: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000303 72 10 52 11      [ 1]  841 	bset	0x5211, #0
                                    842 ;	./libs/i2c_lib.c: 83: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      000307                        843 00101$:
      000307 72 01 52 17 FB   [ 2]  844 	btjf	0x5217, #0, 00101$
                                    845 ;	./libs/i2c_lib.c: 84: }
      00030C 81               [ 4]  846 	ret
                                    847 ;	./libs/i2c_lib.c: 86: void i2c_stop(void)
                                    848 ;	-----------------------------------------
                                    849 ;	 function i2c_stop
                                    850 ;	-----------------------------------------
      00030D                        851 _i2c_stop:
                                    852 ;	./libs/i2c_lib.c: 88: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00030D 72 12 52 11      [ 1]  853 	bset	0x5211, #1
                                    854 ;	./libs/i2c_lib.c: 89: }
      000311 81               [ 4]  855 	ret
                                    856 ;	./libs/i2c_lib.c: 91: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                    857 ;	-----------------------------------------
                                    858 ;	 function i2c_send_address
                                    859 ;	-----------------------------------------
      000312                        860 _i2c_send_address:
                                    861 ;	./libs/i2c_lib.c: 96: address = address << 1;
      000312 48               [ 1]  862 	sll	a
                                    863 ;	./libs/i2c_lib.c: 93: switch(rw_type)
      000313 88               [ 1]  864 	push	a
      000314 7B 04            [ 1]  865 	ld	a, (0x04, sp)
      000316 4A               [ 1]  866 	dec	a
      000317 84               [ 1]  867 	pop	a
      000318 26 02            [ 1]  868 	jrne	00102$
                                    869 ;	./libs/i2c_lib.c: 96: address = address << 1;
                                    870 ;	./libs/i2c_lib.c: 97: address |= 0x01; // Отправка адреса устройства с битом на чтение
      00031A AA 01            [ 1]  871 	or	a, #0x01
                                    872 ;	./libs/i2c_lib.c: 98: break;
                                    873 ;	./libs/i2c_lib.c: 99: default:
                                    874 ;	./libs/i2c_lib.c: 100: address = address << 1; // Отправка адреса устройства с битом на запись
                                    875 ;	./libs/i2c_lib.c: 102: }
      00031C                        876 00102$:
                                    877 ;	./libs/i2c_lib.c: 103: i2c_start();
      00031C 88               [ 1]  878 	push	a
      00031D CDr03r03         [ 4]  879 	call	_i2c_start
      000320 84               [ 1]  880 	pop	a
                                    881 ;	./libs/i2c_lib.c: 104: I2C_DR -> DR = address;
      000321 C7 52 16         [ 1]  882 	ld	0x5216, a
                                    883 ;	./libs/i2c_lib.c: 105: while(!I2C_SR1 -> ADDR)
      000324                        884 00106$:
      000324 AE 52 17         [ 2]  885 	ldw	x, #0x5217
      000327 F6               [ 1]  886 	ld	a, (x)
      000328 44               [ 1]  887 	srl	a
      000329 A4 01            [ 1]  888 	and	a, #0x01
      00032B 26 08            [ 1]  889 	jrne	00108$
                                    890 ;	./libs/i2c_lib.c: 106: if(I2C_SR2 -> AF)
      00032D 72 05 52 18 F2   [ 2]  891 	btjf	0x5218, #2, 00106$
                                    892 ;	./libs/i2c_lib.c: 107: return 0;
      000332 4F               [ 1]  893 	clr	a
      000333 20 08            [ 2]  894 	jra	00109$
      000335                        895 00108$:
                                    896 ;	./libs/i2c_lib.c: 108: clr_sr1();
      000335 C6 52 17         [ 1]  897 	ld	a,0x5217
                                    898 ;	./libs/i2c_lib.c: 109: clr_sr3();
      000338 C6 52 19         [ 1]  899 	ld	a,0x5219
                                    900 ;	./libs/i2c_lib.c: 110: return 1;
      00033B A6 01            [ 1]  901 	ld	a, #0x01
      00033D                        902 00109$:
                                    903 ;	./libs/i2c_lib.c: 111: }
      00033D 85               [ 2]  904 	popw	x
      00033E 5B 01            [ 2]  905 	addw	sp, #1
      000340 FC               [ 2]  906 	jp	(x)
                                    907 ;	./libs/i2c_lib.c: 113: uint8_t i2c_read_byte(void)
                                    908 ;	-----------------------------------------
                                    909 ;	 function i2c_read_byte
                                    910 ;	-----------------------------------------
      000341                        911 _i2c_read_byte:
                                    912 ;	./libs/i2c_lib.c: 115: while(!I2C_SR1 -> RXNE);
      000341                        913 00101$:
      000341 72 0D 52 17 FB   [ 2]  914 	btjf	0x5217, #6, 00101$
                                    915 ;	./libs/i2c_lib.c: 116: return I2C_DR -> DR;
      000346 C6 52 16         [ 1]  916 	ld	a, 0x5216
                                    917 ;	./libs/i2c_lib.c: 117: }
      000349 81               [ 4]  918 	ret
                                    919 ;	./libs/i2c_lib.c: 119: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                    920 ;	-----------------------------------------
                                    921 ;	 function i2c_read
                                    922 ;	-----------------------------------------
      00034A                        923 _i2c_read:
      00034A 52 04            [ 2]  924 	sub	sp, #4
                                    925 ;	./libs/i2c_lib.c: 121: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      00034C 4B 01            [ 1]  926 	push	#0x01
      00034E CDr03r12         [ 4]  927 	call	_i2c_send_address
      000351 4D               [ 1]  928 	tnz	a
      000352 27 3C            [ 1]  929 	jreq	00103$
                                    930 ;	./libs/i2c_lib.c: 123: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      000354 72 14 52 11      [ 1]  931 	bset	0x5211, #2
                                    932 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000358 5F               [ 1]  933 	clrw	x
      000359 1F 03            [ 2]  934 	ldw	(0x03, sp), x
      00035B                        935 00105$:
      00035B 5F               [ 1]  936 	clrw	x
      00035C 7B 07            [ 1]  937 	ld	a, (0x07, sp)
      00035E 97               [ 1]  938 	ld	xl, a
      00035F 5A               [ 2]  939 	decw	x
      000360 1F 01            [ 2]  940 	ldw	(0x01, sp), x
      000362 1E 03            [ 2]  941 	ldw	x, (0x03, sp)
      000364 13 01            [ 2]  942 	cpw	x, (0x01, sp)
      000366 2E 12            [ 1]  943 	jrsge	00101$
                                    944 ;	./libs/i2c_lib.c: 126: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      000368 1E 08            [ 2]  945 	ldw	x, (0x08, sp)
      00036A 72 FB 03         [ 2]  946 	addw	x, (0x03, sp)
      00036D 89               [ 2]  947 	pushw	x
      00036E CDr03r41         [ 4]  948 	call	_i2c_read_byte
      000371 85               [ 2]  949 	popw	x
      000372 F7               [ 1]  950 	ld	(x), a
                                    951 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000373 1E 03            [ 2]  952 	ldw	x, (0x03, sp)
      000375 5C               [ 1]  953 	incw	x
      000376 1F 03            [ 2]  954 	ldw	(0x03, sp), x
      000378 20 E1            [ 2]  955 	jra	00105$
      00037A                        956 00101$:
                                    957 ;	./libs/i2c_lib.c: 128: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      00037A C6 52 11         [ 1]  958 	ld	a, 0x5211
      00037D A4 FB            [ 1]  959 	and	a, #0xfb
      00037F C7 52 11         [ 1]  960 	ld	0x5211, a
                                    961 ;	./libs/i2c_lib.c: 130: data[size-1] = i2c_read_byte();
      000382 1E 08            [ 2]  962 	ldw	x, (0x08, sp)
      000384 72 FB 01         [ 2]  963 	addw	x, (0x01, sp)
      000387 89               [ 2]  964 	pushw	x
      000388 CDr03r41         [ 4]  965 	call	_i2c_read_byte
      00038B 85               [ 2]  966 	popw	x
      00038C F7               [ 1]  967 	ld	(x), a
                                    968 ;	./libs/i2c_lib.c: 132: i2c_stop();
      00038D CDr03r0D         [ 4]  969 	call	_i2c_stop
      000390                        970 00103$:
                                    971 ;	./libs/i2c_lib.c: 135: i2c_stop();
      000390 1E 05            [ 2]  972 	ldw	x, (5, sp)
      000392 1F 08            [ 2]  973 	ldw	(8, sp), x
      000394 5B 07            [ 2]  974 	addw	sp, #7
                                    975 ;	./libs/i2c_lib.c: 137: }
      000396 CCr03r0D         [ 2]  976 	jp	_i2c_stop
                                    977 ;	./libs/i2c_lib.c: 139: uint8_t i2c_send_byte(uint8_t data)
                                    978 ;	-----------------------------------------
                                    979 ;	 function i2c_send_byte
                                    980 ;	-----------------------------------------
      000399                        981 _i2c_send_byte:
                                    982 ;	./libs/i2c_lib.c: 141: I2C_DR -> DR = data; //Отправка данных
      000399 C7 52 16         [ 1]  983 	ld	0x5216, a
                                    984 ;	./libs/i2c_lib.c: 142: while(!I2C_SR1 -> TXE)
      00039C                        985 00103$:
      00039C 72 0E 52 17 08   [ 2]  986 	btjt	0x5217, #7, 00105$
                                    987 ;	./libs/i2c_lib.c: 143: if(I2C_SR2 -> AF)
      0003A1 72 05 52 18 F6   [ 2]  988 	btjf	0x5218, #2, 00103$
                                    989 ;	./libs/i2c_lib.c: 144: return 1;
      0003A6 A6 01            [ 1]  990 	ld	a, #0x01
      0003A8 81               [ 4]  991 	ret
      0003A9                        992 00105$:
                                    993 ;	./libs/i2c_lib.c: 145: return 0;//флаг ответа
      0003A9 4F               [ 1]  994 	clr	a
                                    995 ;	./libs/i2c_lib.c: 146: }
      0003AA 81               [ 4]  996 	ret
                                    997 ;	./libs/i2c_lib.c: 148: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                    998 ;	-----------------------------------------
                                    999 ;	 function i2c_write
                                   1000 ;	-----------------------------------------
      0003AB                       1001 _i2c_write:
      0003AB 52 02            [ 2] 1002 	sub	sp, #2
                                   1003 ;	./libs/i2c_lib.c: 150: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      0003AD 4B 00            [ 1] 1004 	push	#0x00
      0003AF CDr03r12         [ 4] 1005 	call	_i2c_send_address
      0003B2 4D               [ 1] 1006 	tnz	a
      0003B3 27 1D            [ 1] 1007 	jreq	00105$
                                   1008 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003B5 5F               [ 1] 1009 	clrw	x
      0003B6                       1010 00107$:
      0003B6 7B 05            [ 1] 1011 	ld	a, (0x05, sp)
      0003B8 6B 02            [ 1] 1012 	ld	(0x02, sp), a
      0003BA 0F 01            [ 1] 1013 	clr	(0x01, sp)
      0003BC 13 01            [ 2] 1014 	cpw	x, (0x01, sp)
      0003BE 2E 12            [ 1] 1015 	jrsge	00105$
                                   1016 ;	./libs/i2c_lib.c: 153: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      0003C0 90 93            [ 1] 1017 	ldw	y, x
      0003C2 72 F9 06         [ 2] 1018 	addw	y, (0x06, sp)
      0003C5 90 F6            [ 1] 1019 	ld	a, (y)
      0003C7 89               [ 2] 1020 	pushw	x
      0003C8 CDr03r99         [ 4] 1021 	call	_i2c_send_byte
      0003CB 85               [ 2] 1022 	popw	x
      0003CC 4D               [ 1] 1023 	tnz	a
      0003CD 26 03            [ 1] 1024 	jrne	00105$
                                   1025 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003CF 5C               [ 1] 1026 	incw	x
      0003D0 20 E4            [ 2] 1027 	jra	00107$
      0003D2                       1028 00105$:
                                   1029 ;	./libs/i2c_lib.c: 158: i2c_stop();
      0003D2 1E 03            [ 2] 1030 	ldw	x, (3, sp)
      0003D4 1F 06            [ 2] 1031 	ldw	(6, sp), x
      0003D6 5B 05            [ 2] 1032 	addw	sp, #5
                                   1033 ;	./libs/i2c_lib.c: 159: }
      0003D8 CCr03r0D         [ 2] 1034 	jp	_i2c_stop
                                   1035 ;	./libs/i2c_lib.c: 161: uint8_t i2c_scan(void) 
                                   1036 ;	-----------------------------------------
                                   1037 ;	 function i2c_scan
                                   1038 ;	-----------------------------------------
      0003DB                       1039 _i2c_scan:
      0003DB 52 02            [ 2] 1040 	sub	sp, #2
                                   1041 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      0003DD A6 01            [ 1] 1042 	ld	a, #0x01
      0003DF 6B 01            [ 1] 1043 	ld	(0x01, sp), a
      0003E1                       1044 00105$:
      0003E1 A1 7F            [ 1] 1045 	cp	a, #0x7f
      0003E3 24 22            [ 1] 1046 	jrnc	00103$
                                   1047 ;	./libs/i2c_lib.c: 165: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      0003E5 88               [ 1] 1048 	push	a
      0003E6 4B 00            [ 1] 1049 	push	#0x00
      0003E8 CDr03r12         [ 4] 1050 	call	_i2c_send_address
      0003EB 6B 03            [ 1] 1051 	ld	(0x03, sp), a
      0003ED 84               [ 1] 1052 	pop	a
      0003EE 0D 02            [ 1] 1053 	tnz	(0x02, sp)
      0003F0 27 07            [ 1] 1054 	jreq	00102$
                                   1055 ;	./libs/i2c_lib.c: 167: i2c_stop();//адрес совпал 
      0003F2 CDr03r0D         [ 4] 1056 	call	_i2c_stop
                                   1057 ;	./libs/i2c_lib.c: 168: return addr;// выход из цикла
      0003F5 7B 01            [ 1] 1058 	ld	a, (0x01, sp)
      0003F7 20 12            [ 2] 1059 	jra	00107$
      0003F9                       1060 00102$:
                                   1061 ;	./libs/i2c_lib.c: 170: I2C_SR2 -> AF = 0;//очистка флага ошибки
      0003F9 AE 52 18         [ 2] 1062 	ldw	x, #0x5218
      0003FC 88               [ 1] 1063 	push	a
      0003FD F6               [ 1] 1064 	ld	a, (x)
      0003FE A4 FB            [ 1] 1065 	and	a, #0xfb
      000400 F7               [ 1] 1066 	ld	(x), a
      000401 84               [ 1] 1067 	pop	a
                                   1068 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      000402 4C               [ 1] 1069 	inc	a
      000403 6B 01            [ 1] 1070 	ld	(0x01, sp), a
      000405 20 DA            [ 2] 1071 	jra	00105$
      000407                       1072 00103$:
                                   1073 ;	./libs/i2c_lib.c: 172: i2c_stop();//совпадений нет выход из функции
      000407 CDr03r0D         [ 4] 1074 	call	_i2c_stop
                                   1075 ;	./libs/i2c_lib.c: 173: return 0;
      00040A 4F               [ 1] 1076 	clr	a
      00040B                       1077 00107$:
                                   1078 ;	./libs/i2c_lib.c: 174: }
      00040B 5B 02            [ 2] 1079 	addw	sp, #2
      00040D 81               [ 4] 1080 	ret
                                   1081 ;	./libs/i2c_lib.c: 176: void i2c_start_irq(void)
                                   1082 ;	-----------------------------------------
                                   1083 ;	 function i2c_start_irq
                                   1084 ;	-----------------------------------------
      00040E                       1085 _i2c_start_irq:
                                   1086 ;	./libs/i2c_lib.c: 179: I2C_ITR -> ITEVTEN = 1;//Включение прерываний для обработки сигнала старт
      00040E 72 12 52 1A      [ 1] 1087 	bset	0x521a, #1
                                   1088 ;	./libs/i2c_lib.c: 180: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000412 72 10 52 11      [ 1] 1089 	bset	0x5211, #0
                                   1090 ;	./libs/i2c_lib.c: 181: while(I2C_ITR -> ITEVTEN);// Ожидание отправки стартового сигнала
      000416                       1091 00101$:
      000416 C6 52 1A         [ 1] 1092 	ld	a, 0x521a
      000419 A5 02            [ 1] 1093 	bcp	a, #2
      00041B 26 F9            [ 1] 1094 	jrne	00101$
                                   1095 ;	./libs/i2c_lib.c: 182: }
      00041D 81               [ 4] 1096 	ret
                                   1097 ;	./libs/i2c_lib.c: 184: void i2c_stop_irq(void)
                                   1098 ;	-----------------------------------------
                                   1099 ;	 function i2c_stop_irq
                                   1100 ;	-----------------------------------------
      00041E                       1101 _i2c_stop_irq:
                                   1102 ;	./libs/i2c_lib.c: 186: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00041E 72 12 52 11      [ 1] 1103 	bset	0x5211, #1
                                   1104 ;	./libs/i2c_lib.c: 187: }
      000422 81               [ 4] 1105 	ret
                                   1106 ;	./libs/ssd1306_lib.c: 3: int get_bit(int data,int bit)
                                   1107 ;	-----------------------------------------
                                   1108 ;	 function get_bit
                                   1109 ;	-----------------------------------------
      000423                       1110 _get_bit:
                                   1111 ;	./libs/ssd1306_lib.c: 5: return ((data >> bit) & 1) ? 1 : 0;
      000423 7B 04            [ 1] 1112 	ld	a, (0x04, sp)
      000425 27 04            [ 1] 1113 	jreq	00113$
      000427                       1114 00112$:
      000427 57               [ 2] 1115 	sraw	x
      000428 4A               [ 1] 1116 	dec	a
      000429 26 FC            [ 1] 1117 	jrne	00112$
      00042B                       1118 00113$:
      00042B 54               [ 2] 1119 	srlw	x
      00042C 24 03            [ 1] 1120 	jrnc	00103$
      00042E 5F               [ 1] 1121 	clrw	x
      00042F 5C               [ 1] 1122 	incw	x
      000430 21                    1123 	.byte 0x21
      000431                       1124 00103$:
      000431 5F               [ 1] 1125 	clrw	x
      000432                       1126 00104$:
                                   1127 ;	./libs/ssd1306_lib.c: 6: }
      000432 90 85            [ 2] 1128 	popw	y
      000434 5B 02            [ 2] 1129 	addw	sp, #2
      000436 90 FC            [ 2] 1130 	jp	(y)
                                   1131 ;	./libs/ssd1306_lib.c: 7: int set_bit(int data,int bit, int value)
                                   1132 ;	-----------------------------------------
                                   1133 ;	 function set_bit
                                   1134 ;	-----------------------------------------
      000438                       1135 _set_bit:
      000438 52 04            [ 2] 1136 	sub	sp, #4
      00043A 1F 01            [ 2] 1137 	ldw	(0x01, sp), x
                                   1138 ;	./libs/ssd1306_lib.c: 9: int mask = 1 << bit ;
      00043C 5F               [ 1] 1139 	clrw	x
      00043D 5C               [ 1] 1140 	incw	x
      00043E 1F 03            [ 2] 1141 	ldw	(0x03, sp), x
      000440 7B 08            [ 1] 1142 	ld	a, (0x08, sp)
      000442 27 07            [ 1] 1143 	jreq	00114$
      000444                       1144 00113$:
      000444 08 04            [ 1] 1145 	sll	(0x04, sp)
      000446 09 03            [ 1] 1146 	rlc	(0x03, sp)
      000448 4A               [ 1] 1147 	dec	a
      000449 26 F9            [ 1] 1148 	jrne	00113$
      00044B                       1149 00114$:
                                   1150 ;	./libs/ssd1306_lib.c: 10: switch(value)
      00044B 1E 09            [ 2] 1151 	ldw	x, (0x09, sp)
      00044D 5A               [ 2] 1152 	decw	x
      00044E 26 0B            [ 1] 1153 	jrne	00102$
                                   1154 ;	./libs/ssd1306_lib.c: 13: data |= mask;
      000450 7B 02            [ 1] 1155 	ld	a, (0x02, sp)
      000452 1A 04            [ 1] 1156 	or	a, (0x04, sp)
      000454 97               [ 1] 1157 	ld	xl, a
      000455 7B 01            [ 1] 1158 	ld	a, (0x01, sp)
      000457 1A 03            [ 1] 1159 	or	a, (0x03, sp)
                                   1160 ;	./libs/ssd1306_lib.c: 14: break;
      000459 20 09            [ 2] 1161 	jra	00103$
                                   1162 ;	./libs/ssd1306_lib.c: 16: default:
      00045B                       1163 00102$:
                                   1164 ;	./libs/ssd1306_lib.c: 17: data &= ~mask;
      00045B 1E 03            [ 2] 1165 	ldw	x, (0x03, sp)
      00045D 53               [ 2] 1166 	cplw	x
      00045E 9F               [ 1] 1167 	ld	a, xl
      00045F 14 02            [ 1] 1168 	and	a, (0x02, sp)
      000461 02               [ 1] 1169 	rlwa	x
      000462 14 01            [ 1] 1170 	and	a, (0x01, sp)
                                   1171 ;	./libs/ssd1306_lib.c: 19: }
      000464                       1172 00103$:
                                   1173 ;	./libs/ssd1306_lib.c: 20: return data;
      000464 95               [ 1] 1174 	ld	xh, a
                                   1175 ;	./libs/ssd1306_lib.c: 21: }
      000465 16 05            [ 2] 1176 	ldw	y, (5, sp)
      000467 5B 0A            [ 2] 1177 	addw	sp, #10
      000469 90 FC            [ 2] 1178 	jp	(y)
                                   1179 ;	./libs/ssd1306_lib.c: 23: void ssd1306_init(void)
                                   1180 ;	-----------------------------------------
                                   1181 ;	 function ssd1306_init
                                   1182 ;	-----------------------------------------
      00046B                       1183 _ssd1306_init:
      00046B 52 1B            [ 2] 1184 	sub	sp, #27
                                   1185 ;	./libs/ssd1306_lib.c: 25: uint8_t setup_buffer[27] = {COMMAND, DISPLAY_OFF, 
      00046D 96               [ 1] 1186 	ldw	x, sp
      00046E 5C               [ 1] 1187 	incw	x
      00046F 7F               [ 1] 1188 	clr	(x)
      000470 A6 AE            [ 1] 1189 	ld	a, #0xae
      000472 6B 02            [ 1] 1190 	ld	(0x02, sp), a
      000474 A6 D5            [ 1] 1191 	ld	a, #0xd5
      000476 6B 03            [ 1] 1192 	ld	(0x03, sp), a
      000478 A6 80            [ 1] 1193 	ld	a, #0x80
      00047A 6B 04            [ 1] 1194 	ld	(0x04, sp), a
      00047C A6 A8            [ 1] 1195 	ld	a, #0xa8
      00047E 6B 05            [ 1] 1196 	ld	(0x05, sp), a
      000480 A6 1F            [ 1] 1197 	ld	a, #0x1f
      000482 6B 06            [ 1] 1198 	ld	(0x06, sp), a
      000484 A6 D3            [ 1] 1199 	ld	a, #0xd3
      000486 6B 07            [ 1] 1200 	ld	(0x07, sp), a
      000488 0F 08            [ 1] 1201 	clr	(0x08, sp)
      00048A A6 40            [ 1] 1202 	ld	a, #0x40
      00048C 6B 09            [ 1] 1203 	ld	(0x09, sp), a
      00048E A6 8D            [ 1] 1204 	ld	a, #0x8d
      000490 6B 0A            [ 1] 1205 	ld	(0x0a, sp), a
      000492 A6 14            [ 1] 1206 	ld	a, #0x14
      000494 6B 0B            [ 1] 1207 	ld	(0x0b, sp), a
      000496 A6 DB            [ 1] 1208 	ld	a, #0xdb
      000498 6B 0C            [ 1] 1209 	ld	(0x0c, sp), a
      00049A A6 40            [ 1] 1210 	ld	a, #0x40
      00049C 6B 0D            [ 1] 1211 	ld	(0x0d, sp), a
      00049E A6 A4            [ 1] 1212 	ld	a, #0xa4
      0004A0 6B 0E            [ 1] 1213 	ld	(0x0e, sp), a
      0004A2 A6 A6            [ 1] 1214 	ld	a, #0xa6
      0004A4 6B 0F            [ 1] 1215 	ld	(0x0f, sp), a
      0004A6 A6 DA            [ 1] 1216 	ld	a, #0xda
      0004A8 6B 10            [ 1] 1217 	ld	(0x10, sp), a
      0004AA A6 02            [ 1] 1218 	ld	a, #0x02
      0004AC 6B 11            [ 1] 1219 	ld	(0x11, sp), a
      0004AE A6 81            [ 1] 1220 	ld	a, #0x81
      0004B0 6B 12            [ 1] 1221 	ld	(0x12, sp), a
      0004B2 A6 8F            [ 1] 1222 	ld	a, #0x8f
      0004B4 6B 13            [ 1] 1223 	ld	(0x13, sp), a
      0004B6 A6 D9            [ 1] 1224 	ld	a, #0xd9
      0004B8 6B 14            [ 1] 1225 	ld	(0x14, sp), a
      0004BA A6 F1            [ 1] 1226 	ld	a, #0xf1
      0004BC 6B 15            [ 1] 1227 	ld	(0x15, sp), a
      0004BE A6 20            [ 1] 1228 	ld	a, #0x20
      0004C0 6B 16            [ 1] 1229 	ld	(0x16, sp), a
      0004C2 0F 17            [ 1] 1230 	clr	(0x17, sp)
      0004C4 A6 A0            [ 1] 1231 	ld	a, #0xa0
      0004C6 6B 18            [ 1] 1232 	ld	(0x18, sp), a
      0004C8 A6 C0            [ 1] 1233 	ld	a, #0xc0
      0004CA 6B 19            [ 1] 1234 	ld	(0x19, sp), a
      0004CC A6 1F            [ 1] 1235 	ld	a, #0x1f
      0004CE 6B 1A            [ 1] 1236 	ld	(0x1a, sp), a
      0004D0 A6 AF            [ 1] 1237 	ld	a, #0xaf
      0004D2 6B 1B            [ 1] 1238 	ld	(0x1b, sp), a
                                   1239 ;	./libs/ssd1306_lib.c: 41: i2c_write(I2C_DISPLAY_ADDR, 27, setup_buffer);
      0004D4 89               [ 2] 1240 	pushw	x
      0004D5 4B 1B            [ 1] 1241 	push	#0x1b
      0004D7 A6 3C            [ 1] 1242 	ld	a, #0x3c
      0004D9 CDr03rAB         [ 4] 1243 	call	_i2c_write
                                   1244 ;	./libs/ssd1306_lib.c: 43: }
      0004DC 5B 1B            [ 2] 1245 	addw	sp, #27
      0004DE 81               [ 4] 1246 	ret
                                   1247 ;	./libs/ssd1306_lib.c: 45: void ssd1306_set_params_to_write(void)
                                   1248 ;	-----------------------------------------
                                   1249 ;	 function ssd1306_set_params_to_write
                                   1250 ;	-----------------------------------------
      0004DF                       1251 _ssd1306_set_params_to_write:
      0004DF 52 07            [ 2] 1252 	sub	sp, #7
                                   1253 ;	./libs/ssd1306_lib.c: 47: uint8_t set_params_buf[7] = {COMMAND,
      0004E1 96               [ 1] 1254 	ldw	x, sp
      0004E2 5C               [ 1] 1255 	incw	x
      0004E3 7F               [ 1] 1256 	clr	(x)
      0004E4 A6 22            [ 1] 1257 	ld	a, #0x22
      0004E6 6B 02            [ 1] 1258 	ld	(0x02, sp), a
      0004E8 0F 03            [ 1] 1259 	clr	(0x03, sp)
      0004EA A6 03            [ 1] 1260 	ld	a, #0x03
      0004EC 6B 04            [ 1] 1261 	ld	(0x04, sp), a
      0004EE A6 21            [ 1] 1262 	ld	a, #0x21
      0004F0 6B 05            [ 1] 1263 	ld	(0x05, sp), a
      0004F2 0F 06            [ 1] 1264 	clr	(0x06, sp)
      0004F4 A6 7F            [ 1] 1265 	ld	a, #0x7f
      0004F6 6B 07            [ 1] 1266 	ld	(0x07, sp), a
                                   1267 ;	./libs/ssd1306_lib.c: 51: i2c_write(I2C_DISPLAY_ADDR,7,set_params_buf);
      0004F8 89               [ 2] 1268 	pushw	x
      0004F9 4B 07            [ 1] 1269 	push	#0x07
      0004FB A6 3C            [ 1] 1270 	ld	a, #0x3c
      0004FD CDr03rAB         [ 4] 1271 	call	_i2c_write
                                   1272 ;	./libs/ssd1306_lib.c: 52: }
      000500 5B 07            [ 2] 1273 	addw	sp, #7
      000502 81               [ 4] 1274 	ret
                                   1275 ;	./libs/ssd1306_lib.c: 54: void ssd1306_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1276 ;	-----------------------------------------
                                   1277 ;	 function ssd1306_draw_pixel
                                   1278 ;	-----------------------------------------
      000503                       1279 _ssd1306_draw_pixel:
      000503 52 08            [ 2] 1280 	sub	sp, #8
      000505 1F 07            [ 2] 1281 	ldw	(0x07, sp), x
                                   1282 ;	./libs/ssd1306_lib.c: 56: buffer[x + ((y / 8) * SSD1306_LCDWIDTH)] = set_bit(buffer[x + ((y / 8) * SSD1306_LCDWIDTH)],(y % 8),color);
      000507 6B 06            [ 1] 1283 	ld	(0x06, sp), a
      000509 0F 05            [ 1] 1284 	clr	(0x05, sp)
      00050B 7B 0B            [ 1] 1285 	ld	a, (0x0b, sp)
      00050D 0F 01            [ 1] 1286 	clr	(0x01, sp)
      00050F 97               [ 1] 1287 	ld	xl, a
      000510 02               [ 1] 1288 	rlwa	x
      000511 4F               [ 1] 1289 	clr	a
      000512 01               [ 1] 1290 	rrwa	x
      000513 5D               [ 2] 1291 	tnzw	x
      000514 2A 03            [ 1] 1292 	jrpl	00103$
      000516 1C 00 07         [ 2] 1293 	addw	x, #0x0007
      000519                       1294 00103$:
      000519 57               [ 2] 1295 	sraw	x
      00051A 57               [ 2] 1296 	sraw	x
      00051B 57               [ 2] 1297 	sraw	x
      00051C 58               [ 2] 1298 	sllw	x
      00051D 58               [ 2] 1299 	sllw	x
      00051E 58               [ 2] 1300 	sllw	x
      00051F 58               [ 2] 1301 	sllw	x
      000520 58               [ 2] 1302 	sllw	x
      000521 58               [ 2] 1303 	sllw	x
      000522 58               [ 2] 1304 	sllw	x
      000523 72 FB 05         [ 2] 1305 	addw	x, (0x05, sp)
      000526 72 FB 07         [ 2] 1306 	addw	x, (0x07, sp)
      000529 1F 03            [ 2] 1307 	ldw	(0x03, sp), x
      00052B 90 5F            [ 1] 1308 	clrw	y
      00052D 61               [ 1] 1309 	exg	a, yl
      00052E 7B 0C            [ 1] 1310 	ld	a, (0x0c, sp)
      000530 61               [ 1] 1311 	exg	a, yl
      000531 A4 07            [ 1] 1312 	and	a, #0x07
      000533 6B 06            [ 1] 1313 	ld	(0x06, sp), a
      000535 0F 05            [ 1] 1314 	clr	(0x05, sp)
      000537 1E 03            [ 2] 1315 	ldw	x, (0x03, sp)
      000539 F6               [ 1] 1316 	ld	a, (x)
      00053A 5F               [ 1] 1317 	clrw	x
      00053B 90 89            [ 2] 1318 	pushw	y
      00053D 16 07            [ 2] 1319 	ldw	y, (0x07, sp)
      00053F 90 89            [ 2] 1320 	pushw	y
      000541 97               [ 1] 1321 	ld	xl, a
      000542 CDr04r38         [ 4] 1322 	call	_set_bit
      000545 9F               [ 1] 1323 	ld	a, xl
      000546 1E 03            [ 2] 1324 	ldw	x, (0x03, sp)
      000548 F7               [ 1] 1325 	ld	(x), a
                                   1326 ;	./libs/ssd1306_lib.c: 57: }
      000549 1E 09            [ 2] 1327 	ldw	x, (9, sp)
      00054B 5B 0C            [ 2] 1328 	addw	sp, #12
      00054D FC               [ 2] 1329 	jp	(x)
                                   1330 ;	./libs/ssd1306_lib.c: 59: void ssd1306_buffer_clean(void)
                                   1331 ;	-----------------------------------------
                                   1332 ;	 function ssd1306_buffer_clean
                                   1333 ;	-----------------------------------------
      00054E                       1334 _ssd1306_buffer_clean:
                                   1335 ;	./libs/ssd1306_lib.c: 61: memset(main_buffer,0,512);
      00054E 4B 00            [ 1] 1336 	push	#0x00
      000550 4B 02            [ 1] 1337 	push	#0x02
      000552 5F               [ 1] 1338 	clrw	x
      000553 89               [ 2] 1339 	pushw	x
      000554 AEr01r21         [ 2] 1340 	ldw	x, #(_main_buffer+0)
      000557 CDr00r00         [ 4] 1341 	call	_memset
                                   1342 ;	./libs/ssd1306_lib.c: 62: }
      00055A 81               [ 4] 1343 	ret
                                   1344 ;	./libs/ssd1306_lib.c: 63: void ssd1306_send_buffer(void)
                                   1345 ;	-----------------------------------------
                                   1346 ;	 function ssd1306_send_buffer
                                   1347 ;	-----------------------------------------
      00055B                       1348 _ssd1306_send_buffer:
      00055B 52 02            [ 2] 1349 	sub	sp, #2
                                   1350 ;	./libs/ssd1306_lib.c: 65: ssd1306_set_params_to_write();
      00055D CDr04rDF         [ 4] 1351 	call	_ssd1306_set_params_to_write
                                   1352 ;	./libs/ssd1306_lib.c: 66: for(int j = 1;j<5;j++)
      000560 5F               [ 1] 1353 	clrw	x
      000561 5C               [ 1] 1354 	incw	x
      000562 1F 01            [ 2] 1355 	ldw	(0x01, sp), x
      000564                       1356 00112$:
      000564 1E 01            [ 2] 1357 	ldw	x, (0x01, sp)
      000566 A3 00 05         [ 2] 1358 	cpw	x, #0x0005
      000569 2E 3D            [ 1] 1359 	jrsge	00114$
                                   1360 ;	./libs/ssd1306_lib.c: 68: if(i2c_send_address(I2C_DISPLAY_ADDR, 0))//Проверка на АСК бит
      00056B 4B 00            [ 1] 1361 	push	#0x00
      00056D A6 3C            [ 1] 1362 	ld	a, #0x3c
      00056F CDr03r12         [ 4] 1363 	call	_i2c_send_address
      000572 4D               [ 1] 1364 	tnz	a
      000573 27 29            [ 1] 1365 	jreq	00105$
                                   1366 ;	./libs/ssd1306_lib.c: 70: i2c_send_byte(SET_DISPLAY_START_LINE);
      000575 A6 40            [ 1] 1367 	ld	a, #0x40
      000577 CDr03r99         [ 4] 1368 	call	_i2c_send_byte
                                   1369 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      00057A 5F               [ 1] 1370 	clrw	x
      00057B                       1371 00109$:
      00057B A3 00 80         [ 2] 1372 	cpw	x, #0x0080
      00057E 2E 19            [ 1] 1373 	jrsge	00103$
                                   1374 ;	./libs/ssd1306_lib.c: 73: if(i2c_send_byte(main_buffer[i*j]))//Проверка на АСК бит
      000580 89               [ 2] 1375 	pushw	x
      000581 16 03            [ 2] 1376 	ldw	y, (0x03, sp)
      000583 90 89            [ 2] 1377 	pushw	y
      000585 CDr00r00         [ 4] 1378 	call	__mulint
      000588 51               [ 1] 1379 	exgw	x, y
      000589 85               [ 2] 1380 	popw	x
      00058A 90 D6u01u21      [ 1] 1381 	ld	a, (_main_buffer+0, y)
      00058E 89               [ 2] 1382 	pushw	x
      00058F CDr03r99         [ 4] 1383 	call	_i2c_send_byte
      000592 85               [ 2] 1384 	popw	x
      000593 4D               [ 1] 1385 	tnz	a
      000594 26 03            [ 1] 1386 	jrne	00103$
                                   1387 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      000596 5C               [ 1] 1388 	incw	x
      000597 20 E2            [ 2] 1389 	jra	00109$
      000599                       1390 00103$:
                                   1391 ;	./libs/ssd1306_lib.c: 78: i2c_stop();
      000599 CDr03r0D         [ 4] 1392 	call	_i2c_stop
      00059C 20 03            [ 2] 1393 	jra	00113$
      00059E                       1394 00105$:
                                   1395 ;	./libs/ssd1306_lib.c: 81: i2c_stop();
      00059E CDr03r0D         [ 4] 1396 	call	_i2c_stop
      0005A1                       1397 00113$:
                                   1398 ;	./libs/ssd1306_lib.c: 66: for(int j = 1;j<5;j++)
      0005A1 1E 01            [ 2] 1399 	ldw	x, (0x01, sp)
      0005A3 5C               [ 1] 1400 	incw	x
      0005A4 1F 01            [ 2] 1401 	ldw	(0x01, sp), x
      0005A6 20 BC            [ 2] 1402 	jra	00112$
      0005A8                       1403 00114$:
                                   1404 ;	./libs/ssd1306_lib.c: 83: }
      0005A8 5B 02            [ 2] 1405 	addw	sp, #2
      0005AA 81               [ 4] 1406 	ret
                                   1407 ;	./libs/ssd1306_lib.c: 84: void ssd1306_buffer_splash(void)
                                   1408 ;	-----------------------------------------
                                   1409 ;	 function ssd1306_buffer_splash
                                   1410 ;	-----------------------------------------
      0005AB                       1411 _ssd1306_buffer_splash:
      0005AB 52 8B            [ 2] 1412 	sub	sp, #139
                                   1413 ;	./libs/ssd1306_lib.c: 87: ssd1306_set_params_to_write();
      0005AD CDr04rDF         [ 4] 1414 	call	_ssd1306_set_params_to_write
                                   1415 ;	./libs/ssd1306_lib.c: 88: uint8_t part[129]={SET_DISPLAY_START_LINE};
      0005B0 A6 40            [ 1] 1416 	ld	a, #0x40
      0005B2 6B 01            [ 1] 1417 	ld	(0x01, sp), a
      0005B4 0F 02            [ 1] 1418 	clr	(0x02, sp)
      0005B6 0F 03            [ 1] 1419 	clr	(0x03, sp)
      0005B8 0F 04            [ 1] 1420 	clr	(0x04, sp)
      0005BA 0F 05            [ 1] 1421 	clr	(0x05, sp)
      0005BC 0F 06            [ 1] 1422 	clr	(0x06, sp)
      0005BE 0F 07            [ 1] 1423 	clr	(0x07, sp)
      0005C0 0F 08            [ 1] 1424 	clr	(0x08, sp)
      0005C2 0F 09            [ 1] 1425 	clr	(0x09, sp)
      0005C4 0F 0A            [ 1] 1426 	clr	(0x0a, sp)
      0005C6 0F 0B            [ 1] 1427 	clr	(0x0b, sp)
      0005C8 0F 0C            [ 1] 1428 	clr	(0x0c, sp)
      0005CA 0F 0D            [ 1] 1429 	clr	(0x0d, sp)
      0005CC 0F 0E            [ 1] 1430 	clr	(0x0e, sp)
      0005CE 0F 0F            [ 1] 1431 	clr	(0x0f, sp)
      0005D0 0F 10            [ 1] 1432 	clr	(0x10, sp)
      0005D2 0F 11            [ 1] 1433 	clr	(0x11, sp)
      0005D4 0F 12            [ 1] 1434 	clr	(0x12, sp)
      0005D6 0F 13            [ 1] 1435 	clr	(0x13, sp)
      0005D8 0F 14            [ 1] 1436 	clr	(0x14, sp)
      0005DA 0F 15            [ 1] 1437 	clr	(0x15, sp)
      0005DC 0F 16            [ 1] 1438 	clr	(0x16, sp)
      0005DE 0F 17            [ 1] 1439 	clr	(0x17, sp)
      0005E0 0F 18            [ 1] 1440 	clr	(0x18, sp)
      0005E2 0F 19            [ 1] 1441 	clr	(0x19, sp)
      0005E4 0F 1A            [ 1] 1442 	clr	(0x1a, sp)
      0005E6 0F 1B            [ 1] 1443 	clr	(0x1b, sp)
      0005E8 0F 1C            [ 1] 1444 	clr	(0x1c, sp)
      0005EA 0F 1D            [ 1] 1445 	clr	(0x1d, sp)
      0005EC 0F 1E            [ 1] 1446 	clr	(0x1e, sp)
      0005EE 0F 1F            [ 1] 1447 	clr	(0x1f, sp)
      0005F0 0F 20            [ 1] 1448 	clr	(0x20, sp)
      0005F2 0F 21            [ 1] 1449 	clr	(0x21, sp)
      0005F4 0F 22            [ 1] 1450 	clr	(0x22, sp)
      0005F6 0F 23            [ 1] 1451 	clr	(0x23, sp)
      0005F8 0F 24            [ 1] 1452 	clr	(0x24, sp)
      0005FA 0F 25            [ 1] 1453 	clr	(0x25, sp)
      0005FC 0F 26            [ 1] 1454 	clr	(0x26, sp)
      0005FE 0F 27            [ 1] 1455 	clr	(0x27, sp)
      000600 0F 28            [ 1] 1456 	clr	(0x28, sp)
      000602 0F 29            [ 1] 1457 	clr	(0x29, sp)
      000604 0F 2A            [ 1] 1458 	clr	(0x2a, sp)
      000606 0F 2B            [ 1] 1459 	clr	(0x2b, sp)
      000608 0F 2C            [ 1] 1460 	clr	(0x2c, sp)
      00060A 0F 2D            [ 1] 1461 	clr	(0x2d, sp)
      00060C 0F 2E            [ 1] 1462 	clr	(0x2e, sp)
      00060E 0F 2F            [ 1] 1463 	clr	(0x2f, sp)
      000610 0F 30            [ 1] 1464 	clr	(0x30, sp)
      000612 0F 31            [ 1] 1465 	clr	(0x31, sp)
      000614 0F 32            [ 1] 1466 	clr	(0x32, sp)
      000616 0F 33            [ 1] 1467 	clr	(0x33, sp)
      000618 0F 34            [ 1] 1468 	clr	(0x34, sp)
      00061A 0F 35            [ 1] 1469 	clr	(0x35, sp)
      00061C 0F 36            [ 1] 1470 	clr	(0x36, sp)
      00061E 0F 37            [ 1] 1471 	clr	(0x37, sp)
      000620 0F 38            [ 1] 1472 	clr	(0x38, sp)
      000622 0F 39            [ 1] 1473 	clr	(0x39, sp)
      000624 0F 3A            [ 1] 1474 	clr	(0x3a, sp)
      000626 0F 3B            [ 1] 1475 	clr	(0x3b, sp)
      000628 0F 3C            [ 1] 1476 	clr	(0x3c, sp)
      00062A 0F 3D            [ 1] 1477 	clr	(0x3d, sp)
      00062C 0F 3E            [ 1] 1478 	clr	(0x3e, sp)
      00062E 0F 3F            [ 1] 1479 	clr	(0x3f, sp)
      000630 0F 40            [ 1] 1480 	clr	(0x40, sp)
      000632 0F 41            [ 1] 1481 	clr	(0x41, sp)
      000634 0F 42            [ 1] 1482 	clr	(0x42, sp)
      000636 0F 43            [ 1] 1483 	clr	(0x43, sp)
      000638 0F 44            [ 1] 1484 	clr	(0x44, sp)
      00063A 0F 45            [ 1] 1485 	clr	(0x45, sp)
      00063C 0F 46            [ 1] 1486 	clr	(0x46, sp)
      00063E 0F 47            [ 1] 1487 	clr	(0x47, sp)
      000640 0F 48            [ 1] 1488 	clr	(0x48, sp)
      000642 0F 49            [ 1] 1489 	clr	(0x49, sp)
      000644 0F 4A            [ 1] 1490 	clr	(0x4a, sp)
      000646 0F 4B            [ 1] 1491 	clr	(0x4b, sp)
      000648 0F 4C            [ 1] 1492 	clr	(0x4c, sp)
      00064A 0F 4D            [ 1] 1493 	clr	(0x4d, sp)
      00064C 0F 4E            [ 1] 1494 	clr	(0x4e, sp)
      00064E 0F 4F            [ 1] 1495 	clr	(0x4f, sp)
      000650 0F 50            [ 1] 1496 	clr	(0x50, sp)
      000652 0F 51            [ 1] 1497 	clr	(0x51, sp)
      000654 0F 52            [ 1] 1498 	clr	(0x52, sp)
      000656 0F 53            [ 1] 1499 	clr	(0x53, sp)
      000658 0F 54            [ 1] 1500 	clr	(0x54, sp)
      00065A 0F 55            [ 1] 1501 	clr	(0x55, sp)
      00065C 0F 56            [ 1] 1502 	clr	(0x56, sp)
      00065E 0F 57            [ 1] 1503 	clr	(0x57, sp)
      000660 0F 58            [ 1] 1504 	clr	(0x58, sp)
      000662 0F 59            [ 1] 1505 	clr	(0x59, sp)
      000664 0F 5A            [ 1] 1506 	clr	(0x5a, sp)
      000666 0F 5B            [ 1] 1507 	clr	(0x5b, sp)
      000668 0F 5C            [ 1] 1508 	clr	(0x5c, sp)
      00066A 0F 5D            [ 1] 1509 	clr	(0x5d, sp)
      00066C 0F 5E            [ 1] 1510 	clr	(0x5e, sp)
      00066E 0F 5F            [ 1] 1511 	clr	(0x5f, sp)
      000670 0F 60            [ 1] 1512 	clr	(0x60, sp)
      000672 0F 61            [ 1] 1513 	clr	(0x61, sp)
      000674 0F 62            [ 1] 1514 	clr	(0x62, sp)
      000676 0F 63            [ 1] 1515 	clr	(0x63, sp)
      000678 0F 64            [ 1] 1516 	clr	(0x64, sp)
      00067A 0F 65            [ 1] 1517 	clr	(0x65, sp)
      00067C 0F 66            [ 1] 1518 	clr	(0x66, sp)
      00067E 0F 67            [ 1] 1519 	clr	(0x67, sp)
      000680 0F 68            [ 1] 1520 	clr	(0x68, sp)
      000682 0F 69            [ 1] 1521 	clr	(0x69, sp)
      000684 0F 6A            [ 1] 1522 	clr	(0x6a, sp)
      000686 0F 6B            [ 1] 1523 	clr	(0x6b, sp)
      000688 0F 6C            [ 1] 1524 	clr	(0x6c, sp)
      00068A 0F 6D            [ 1] 1525 	clr	(0x6d, sp)
      00068C 0F 6E            [ 1] 1526 	clr	(0x6e, sp)
      00068E 0F 6F            [ 1] 1527 	clr	(0x6f, sp)
      000690 0F 70            [ 1] 1528 	clr	(0x70, sp)
      000692 0F 71            [ 1] 1529 	clr	(0x71, sp)
      000694 0F 72            [ 1] 1530 	clr	(0x72, sp)
      000696 0F 73            [ 1] 1531 	clr	(0x73, sp)
      000698 0F 74            [ 1] 1532 	clr	(0x74, sp)
      00069A 0F 75            [ 1] 1533 	clr	(0x75, sp)
      00069C 0F 76            [ 1] 1534 	clr	(0x76, sp)
      00069E 0F 77            [ 1] 1535 	clr	(0x77, sp)
      0006A0 0F 78            [ 1] 1536 	clr	(0x78, sp)
      0006A2 0F 79            [ 1] 1537 	clr	(0x79, sp)
      0006A4 0F 7A            [ 1] 1538 	clr	(0x7a, sp)
      0006A6 0F 7B            [ 1] 1539 	clr	(0x7b, sp)
      0006A8 0F 7C            [ 1] 1540 	clr	(0x7c, sp)
      0006AA 0F 7D            [ 1] 1541 	clr	(0x7d, sp)
      0006AC 0F 7E            [ 1] 1542 	clr	(0x7e, sp)
      0006AE 0F 7F            [ 1] 1543 	clr	(0x7f, sp)
      0006B0 0F 80            [ 1] 1544 	clr	(0x80, sp)
      0006B2 0F 81            [ 1] 1545 	clr	(0x81, sp)
                                   1546 ;	./libs/ssd1306_lib.c: 90: for(int page = 0;page <= 384;page+=128)
      0006B4 5F               [ 1] 1547 	clrw	x
      0006B5 1F 86            [ 2] 1548 	ldw	(0x86, sp), x
      0006B7                       1549 00111$:
      0006B7 1E 86            [ 2] 1550 	ldw	x, (0x86, sp)
      0006B9 A3 01 80         [ 2] 1551 	cpw	x, #0x0180
      0006BC 2C 7C            [ 1] 1552 	jrsgt	00113$
                                   1553 ;	./libs/ssd1306_lib.c: 92: for (int height = 0; height < 8; height++) 
      0006BE 5F               [ 1] 1554 	clrw	x
      0006BF 1F 88            [ 2] 1555 	ldw	(0x88, sp), x
      0006C1                       1556 00108$:
      0006C1 1E 88            [ 2] 1557 	ldw	x, (0x88, sp)
      0006C3 A3 00 08         [ 2] 1558 	cpw	x, #0x0008
      0006C6 2E 5E            [ 1] 1559 	jrsge	00102$
                                   1560 ;	./libs/ssd1306_lib.c: 94: for (int width = 0; width < 128; width++) 
      0006C8 1E 88            [ 2] 1561 	ldw	x, (0x88, sp)
      0006CA 58               [ 2] 1562 	sllw	x
      0006CB 58               [ 2] 1563 	sllw	x
      0006CC 58               [ 2] 1564 	sllw	x
      0006CD 58               [ 2] 1565 	sllw	x
      0006CE 72 FB 86         [ 2] 1566 	addw	x, (0x86, sp)
      0006D1 1F 82            [ 2] 1567 	ldw	(0x82, sp), x
      0006D3 5F               [ 1] 1568 	clrw	x
      0006D4 1F 8A            [ 2] 1569 	ldw	(0x8a, sp), x
      0006D6                       1570 00105$:
      0006D6 1E 8A            [ 2] 1571 	ldw	x, (0x8a, sp)
      0006D8 A3 00 80         [ 2] 1572 	cpw	x, #0x0080
      0006DB 2E 42            [ 1] 1573 	jrsge	00109$
                                   1574 ;	./libs/ssd1306_lib.c: 96: ssd1306_draw_pixel(&part[1], width, height, get_bit(main_buffer[page+(height*16) + (width / 8)], 7 - (width % 8)));
      0006DD 4B 08            [ 1] 1575 	push	#0x08
      0006DF 4B 00            [ 1] 1576 	push	#0x00
      0006E1 1E 8C            [ 2] 1577 	ldw	x, (0x8c, sp)
      0006E3 CDr00r00         [ 4] 1578 	call	__modsint
      0006E6 1F 84            [ 2] 1579 	ldw	(0x84, sp), x
      0006E8 90 AE 00 07      [ 2] 1580 	ldw	y, #0x0007
      0006EC 72 F2 84         [ 2] 1581 	subw	y, (0x84, sp)
      0006EF 1E 8A            [ 2] 1582 	ldw	x, (0x8a, sp)
      0006F1 2A 03            [ 1] 1583 	jrpl	00163$
      0006F3 1C 00 07         [ 2] 1584 	addw	x, #0x0007
      0006F6                       1585 00163$:
      0006F6 57               [ 2] 1586 	sraw	x
      0006F7 57               [ 2] 1587 	sraw	x
      0006F8 57               [ 2] 1588 	sraw	x
      0006F9 72 FB 82         [ 2] 1589 	addw	x, (0x82, sp)
      0006FC D6u01u21         [ 1] 1590 	ld	a, (_main_buffer+0, x)
      0006FF 5F               [ 1] 1591 	clrw	x
      000700 90 89            [ 2] 1592 	pushw	y
      000702 97               [ 1] 1593 	ld	xl, a
      000703 CDr04r23         [ 4] 1594 	call	_get_bit
      000706 7B 89            [ 1] 1595 	ld	a, (0x89, sp)
      000708 02               [ 1] 1596 	rlwa	x
      000709 7B 8B            [ 1] 1597 	ld	a, (0x8b, sp)
      00070B 01               [ 1] 1598 	rrwa	x
      00070C 89               [ 2] 1599 	pushw	x
      00070D 5B 01            [ 2] 1600 	addw	sp, #1
      00070F 88               [ 1] 1601 	push	a
      000710 9E               [ 1] 1602 	ld	a, xh
      000711 96               [ 1] 1603 	ldw	x, sp
      000712 1C 00 04         [ 2] 1604 	addw	x, #4
      000715 CDr05r03         [ 4] 1605 	call	_ssd1306_draw_pixel
                                   1606 ;	./libs/ssd1306_lib.c: 94: for (int width = 0; width < 128; width++) 
      000718 1E 8A            [ 2] 1607 	ldw	x, (0x8a, sp)
      00071A 5C               [ 1] 1608 	incw	x
      00071B 1F 8A            [ 2] 1609 	ldw	(0x8a, sp), x
      00071D 20 B7            [ 2] 1610 	jra	00105$
      00071F                       1611 00109$:
                                   1612 ;	./libs/ssd1306_lib.c: 92: for (int height = 0; height < 8; height++) 
      00071F 1E 88            [ 2] 1613 	ldw	x, (0x88, sp)
      000721 5C               [ 1] 1614 	incw	x
      000722 1F 88            [ 2] 1615 	ldw	(0x88, sp), x
      000724 20 9B            [ 2] 1616 	jra	00108$
      000726                       1617 00102$:
                                   1618 ;	./libs/ssd1306_lib.c: 99: i2c_write(I2C_DISPLAY_ADDR, 129, part);
      000726 96               [ 1] 1619 	ldw	x, sp
      000727 5C               [ 1] 1620 	incw	x
      000728 89               [ 2] 1621 	pushw	x
      000729 4B 81            [ 1] 1622 	push	#0x81
      00072B A6 3C            [ 1] 1623 	ld	a, #0x3c
      00072D CDr03rAB         [ 4] 1624 	call	_i2c_write
                                   1625 ;	./libs/ssd1306_lib.c: 90: for(int page = 0;page <= 384;page+=128)
      000730 1E 86            [ 2] 1626 	ldw	x, (0x86, sp)
      000732 1C 00 80         [ 2] 1627 	addw	x, #0x0080
      000735 1F 86            [ 2] 1628 	ldw	(0x86, sp), x
      000737 CCr06rB7         [ 2] 1629 	jp	00111$
      00073A                       1630 00113$:
                                   1631 ;	./libs/ssd1306_lib.c: 101: }
      00073A 5B 8B            [ 2] 1632 	addw	sp, #139
      00073C 81               [ 4] 1633 	ret
                                   1634 ;	./libs/ssd1306_lib.c: 103: void ssd1306_buffer_write(int x, int y, const uint8_t *data)
                                   1635 ;	-----------------------------------------
                                   1636 ;	 function ssd1306_buffer_write
                                   1637 ;	-----------------------------------------
      00073D                       1638 _ssd1306_buffer_write:
      00073D 52 0D            [ 2] 1639 	sub	sp, #13
      00073F 1F 08            [ 2] 1640 	ldw	(0x08, sp), x
                                   1641 ;	./libs/ssd1306_lib.c: 105: for (int height = 0; height < 8; height++)
      000741 5F               [ 1] 1642 	clrw	x
      000742 1F 0A            [ 2] 1643 	ldw	(0x0a, sp), x
      000744                       1644 00109$:
      000744 1E 0A            [ 2] 1645 	ldw	x, (0x0a, sp)
      000746 A3 00 08         [ 2] 1646 	cpw	x, #0x0008
      000749 2F 03            [ 1] 1647 	jrslt	00150$
      00074B CCr07rD0         [ 2] 1648 	jp	00111$
      00074E                       1649 00150$:
                                   1650 ;	./libs/ssd1306_lib.c: 107: for (int width = 0; width < 8; width++)
      00074E 1E 0A            [ 2] 1651 	ldw	x, (0x0a, sp)
      000750 58               [ 2] 1652 	sllw	x
      000751 58               [ 2] 1653 	sllw	x
      000752 58               [ 2] 1654 	sllw	x
      000753 58               [ 2] 1655 	sllw	x
      000754 1F 05            [ 2] 1656 	ldw	(0x05, sp), x
      000756 5F               [ 1] 1657 	clrw	x
      000757 1F 0C            [ 2] 1658 	ldw	(0x0c, sp), x
      000759                       1659 00106$:
      000759 1E 0C            [ 2] 1660 	ldw	x, (0x0c, sp)
      00075B A3 00 08         [ 2] 1661 	cpw	x, #0x0008
      00075E 2E 68            [ 1] 1662 	jrsge	00110$
                                   1663 ;	./libs/ssd1306_lib.c: 108: if(data[height + width / 8] & (128 >> (width & 7)))
      000760 1E 0A            [ 2] 1664 	ldw	x, (0x0a, sp)
      000762 72 FB 12         [ 2] 1665 	addw	x, (0x12, sp)
      000765 F6               [ 1] 1666 	ld	a, (x)
      000766 97               [ 1] 1667 	ld	xl, a
      000767 7B 0D            [ 1] 1668 	ld	a, (0x0d, sp)
      000769 A4 07            [ 1] 1669 	and	a, #0x07
      00076B 90 AE 00 80      [ 2] 1670 	ldw	y, #0x0080
      00076F 4D               [ 1] 1671 	tnz	a
      000770 27 05            [ 1] 1672 	jreq	00153$
      000772                       1673 00152$:
      000772 90 57            [ 2] 1674 	sraw	y
      000774 4A               [ 1] 1675 	dec	a
      000775 26 FB            [ 1] 1676 	jrne	00152$
      000777                       1677 00153$:
      000777 17 01            [ 2] 1678 	ldw	(0x01, sp), y
      000779 9F               [ 1] 1679 	ld	a, xl
      00077A 14 02            [ 1] 1680 	and	a, (0x02, sp)
      00077C 6B 04            [ 1] 1681 	ld	(0x04, sp), a
      00077E 0F 03            [ 1] 1682 	clr	(0x03, sp)
      000780 1E 03            [ 2] 1683 	ldw	x, (0x03, sp)
      000782 27 3D            [ 1] 1684 	jreq	00107$
                                   1685 ;	./libs/ssd1306_lib.c: 109: ssd1306_draw_pixel(main_buffer, x + width, y + height, get_bit(main_buffer[(height*16) + (width / 8)], 7 - (width % 8)));
      000784 4B 08            [ 1] 1686 	push	#0x08
      000786 4B 00            [ 1] 1687 	push	#0x00
      000788 1E 0E            [ 2] 1688 	ldw	x, (0x0e, sp)
      00078A CDr00r00         [ 4] 1689 	call	__modsint
      00078D 1F 03            [ 2] 1690 	ldw	(0x03, sp), x
      00078F 90 AE 00 07      [ 2] 1691 	ldw	y, #0x0007
      000793 72 F2 03         [ 2] 1692 	subw	y, (0x03, sp)
      000796 1E 05            [ 2] 1693 	ldw	x, (0x05, sp)
      000798 D6u01u21         [ 1] 1694 	ld	a, (_main_buffer+0, x)
      00079B 5F               [ 1] 1695 	clrw	x
      00079C 90 89            [ 2] 1696 	pushw	y
      00079E 97               [ 1] 1697 	ld	xl, a
      00079F CDr04r23         [ 4] 1698 	call	_get_bit
      0007A2 7B 11            [ 1] 1699 	ld	a, (0x11, sp)
      0007A4 6B 07            [ 1] 1700 	ld	(0x07, sp), a
      0007A6 7B 0B            [ 1] 1701 	ld	a, (0x0b, sp)
      0007A8 1B 07            [ 1] 1702 	add	a, (0x07, sp)
      0007AA 95               [ 1] 1703 	ld	xh, a
      0007AB 7B 09            [ 1] 1704 	ld	a, (0x09, sp)
      0007AD 6B 07            [ 1] 1705 	ld	(0x07, sp), a
      0007AF 7B 0D            [ 1] 1706 	ld	a, (0x0d, sp)
      0007B1 1B 07            [ 1] 1707 	add	a, (0x07, sp)
      0007B3 6B 07            [ 1] 1708 	ld	(0x07, sp), a
      0007B5 9F               [ 1] 1709 	ld	a, xl
      0007B6 88               [ 1] 1710 	push	a
      0007B7 9E               [ 1] 1711 	ld	a, xh
      0007B8 88               [ 1] 1712 	push	a
      0007B9 7B 09            [ 1] 1713 	ld	a, (0x09, sp)
      0007BB AEr01r21         [ 2] 1714 	ldw	x, #(_main_buffer+0)
      0007BE CDr05r03         [ 4] 1715 	call	_ssd1306_draw_pixel
      0007C1                       1716 00107$:
                                   1717 ;	./libs/ssd1306_lib.c: 107: for (int width = 0; width < 8; width++)
      0007C1 1E 0C            [ 2] 1718 	ldw	x, (0x0c, sp)
      0007C3 5C               [ 1] 1719 	incw	x
      0007C4 1F 0C            [ 2] 1720 	ldw	(0x0c, sp), x
      0007C6 20 91            [ 2] 1721 	jra	00106$
      0007C8                       1722 00110$:
                                   1723 ;	./libs/ssd1306_lib.c: 105: for (int height = 0; height < 8; height++)
      0007C8 1E 0A            [ 2] 1724 	ldw	x, (0x0a, sp)
      0007CA 5C               [ 1] 1725 	incw	x
      0007CB 1F 0A            [ 2] 1726 	ldw	(0x0a, sp), x
      0007CD CCr07r44         [ 2] 1727 	jp	00109$
      0007D0                       1728 00111$:
                                   1729 ;	./libs/ssd1306_lib.c: 111: }
      0007D0 1E 0E            [ 2] 1730 	ldw	x, (14, sp)
      0007D2 5B 13            [ 2] 1731 	addw	sp, #19
      0007D4 FC               [ 2] 1732 	jp	(x)
                                   1733 ;	./libs/ssd1306_lib.c: 113: void ssd1306_clean(void)
                                   1734 ;	-----------------------------------------
                                   1735 ;	 function ssd1306_clean
                                   1736 ;	-----------------------------------------
      0007D5                       1737 _ssd1306_clean:
                                   1738 ;	./libs/ssd1306_lib.c: 115: ssd1306_buffer_clean();
      0007D5 CDr05r4E         [ 4] 1739 	call	_ssd1306_buffer_clean
                                   1740 ;	./libs/ssd1306_lib.c: 116: ssd1306_send_buffer();
                                   1741 ;	./libs/ssd1306_lib.c: 117: }
      0007D8 CCr05r5B         [ 2] 1742 	jp	_ssd1306_send_buffer
                                   1743 ;	main.c: 3: void setup(void)
                                   1744 ;	-----------------------------------------
                                   1745 ;	 function setup
                                   1746 ;	-----------------------------------------
      0007DB                       1747 _setup:
                                   1748 ;	main.c: 6: CLK_CKDIVR = 0;
      0007DB 35 00 50 C6      [ 1] 1749 	mov	0x50c6+0, #0x00
                                   1750 ;	main.c: 9: i2c_init();
      0007DF CDr02rD8         [ 4] 1751 	call	_i2c_init
                                   1752 ;	main.c: 11: enableInterrupts();
      0007E2 9A               [ 1] 1753 	rim
                                   1754 ;	main.c: 12: }
      0007E3 81               [ 4] 1755 	ret
                                   1756 ;	main.c: 14: void gg(void)
                                   1757 ;	-----------------------------------------
                                   1758 ;	 function gg
                                   1759 ;	-----------------------------------------
      0007E4                       1760 _gg:
                                   1761 ;	main.c: 16: ssd1306_init();
      0007E4 CDr04r6B         [ 4] 1762 	call	_ssd1306_init
                                   1763 ;	main.c: 17: ssd1306_buffer_splash();
                                   1764 ;	main.c: 21: }
      0007E7 CCr05rAB         [ 2] 1765 	jp	_ssd1306_buffer_splash
                                   1766 ;	main.c: 23: int main(void)
                                   1767 ;	-----------------------------------------
                                   1768 ;	 function main
                                   1769 ;	-----------------------------------------
      0007EA                       1770 _main:
                                   1771 ;	main.c: 25: setup();
      0007EA CDr07rDB         [ 4] 1772 	call	_setup
                                   1773 ;	main.c: 26: gg();
      0007ED CDr07rE4         [ 4] 1774 	call	_gg
                                   1775 ;	main.c: 27: while(1);
      0007F0                       1776 00102$:
      0007F0 20 FE            [ 2] 1777 	jra	00102$
                                   1778 ;	main.c: 28: }
      0007F2 81               [ 4] 1779 	ret
                                   1780 	.area CODE
                                   1781 	.area CONST
                                   1782 	.area INITIALIZER
      000000                       1783 __xinit__I2C_IRQ:
      000000 00                    1784 	.db #0x00	; 0
      000001                       1785 __xinit__ttf_eng_a:
      000001 00                    1786 	.db #0x00	; 0
      000002 7E                    1787 	.db #0x7e	; 126
      000003 42                    1788 	.db #0x42	; 66	'B'
      000004 42                    1789 	.db #0x42	; 66	'B'
      000005 7E                    1790 	.db #0x7e	; 126
      000006 42                    1791 	.db #0x42	; 66	'B'
      000007 42                    1792 	.db #0x42	; 66	'B'
      000008 00                    1793 	.db #0x00	; 0
      000009                       1794 __xinit__ttf_eng_b:
      000009 00                    1795 	.db #0x00	; 0
      00000A 7C                    1796 	.db #0x7c	; 124
      00000B 42                    1797 	.db #0x42	; 66	'B'
      00000C 7C                    1798 	.db #0x7c	; 124
      00000D 42                    1799 	.db #0x42	; 66	'B'
      00000E 42                    1800 	.db #0x42	; 66	'B'
      00000F 7C                    1801 	.db #0x7c	; 124
      000010 00                    1802 	.db #0x00	; 0
      000011                       1803 __xinit__ttf_eng_c:
      000011 00                    1804 	.db #0x00	; 0
      000012 7E                    1805 	.db #0x7e	; 126
      000013 40                    1806 	.db #0x40	; 64
      000014 40                    1807 	.db #0x40	; 64
      000015 40                    1808 	.db #0x40	; 64
      000016 40                    1809 	.db #0x40	; 64
      000017 7E                    1810 	.db #0x7e	; 126
      000018 00                    1811 	.db #0x00	; 0
      000019                       1812 __xinit__ttf_eng_d:
      000019 00                    1813 	.db #0x00	; 0
      00001A 7C                    1814 	.db #0x7c	; 124
      00001B 42                    1815 	.db #0x42	; 66	'B'
      00001C 42                    1816 	.db #0x42	; 66	'B'
      00001D 42                    1817 	.db #0x42	; 66	'B'
      00001E 42                    1818 	.db #0x42	; 66	'B'
      00001F 7C                    1819 	.db #0x7c	; 124
      000020 00                    1820 	.db #0x00	; 0
      000021                       1821 __xinit__ttf_eng_e:
      000021 00                    1822 	.db #0x00	; 0
      000022 7E                    1823 	.db #0x7e	; 126
      000023 40                    1824 	.db #0x40	; 64
      000024 7C                    1825 	.db #0x7c	; 124
      000025 40                    1826 	.db #0x40	; 64
      000026 40                    1827 	.db #0x40	; 64
      000027 7E                    1828 	.db #0x7e	; 126
      000028 00                    1829 	.db #0x00	; 0
      000029                       1830 __xinit__ttf_eng_f:
      000029 00                    1831 	.db #0x00	; 0
      00002A 7E                    1832 	.db #0x7e	; 126
      00002B 40                    1833 	.db #0x40	; 64
      00002C 40                    1834 	.db #0x40	; 64
      00002D 7C                    1835 	.db #0x7c	; 124
      00002E 40                    1836 	.db #0x40	; 64
      00002F 40                    1837 	.db #0x40	; 64
      000030 00                    1838 	.db #0x00	; 0
      000031                       1839 __xinit__ttf_eng_g:
      000031 00                    1840 	.db #0x00	; 0
      000032 7E                    1841 	.db #0x7e	; 126
      000033 42                    1842 	.db #0x42	; 66	'B'
      000034 40                    1843 	.db #0x40	; 64
      000035 4E                    1844 	.db #0x4e	; 78	'N'
      000036 42                    1845 	.db #0x42	; 66	'B'
      000037 7E                    1846 	.db #0x7e	; 126
      000038 00                    1847 	.db #0x00	; 0
      000039                       1848 __xinit__ttf_eng_h:
      000039 00                    1849 	.db #0x00	; 0
      00003A 42                    1850 	.db #0x42	; 66	'B'
      00003B 42                    1851 	.db #0x42	; 66	'B'
      00003C 42                    1852 	.db #0x42	; 66	'B'
      00003D 7E                    1853 	.db #0x7e	; 126
      00003E 42                    1854 	.db #0x42	; 66	'B'
      00003F 42                    1855 	.db #0x42	; 66	'B'
      000040 00                    1856 	.db #0x00	; 0
      000041                       1857 __xinit__ttf_eng_i:
      000041 00                    1858 	.db #0x00	; 0
      000042 7E                    1859 	.db #0x7e	; 126
      000043 18                    1860 	.db #0x18	; 24
      000044 18                    1861 	.db #0x18	; 24
      000045 18                    1862 	.db #0x18	; 24
      000046 18                    1863 	.db #0x18	; 24
      000047 7E                    1864 	.db #0x7e	; 126
      000048 00                    1865 	.db #0x00	; 0
      000049                       1866 __xinit__ttf_eng_j:
      000049 00                    1867 	.db #0x00	; 0
      00004A 0C                    1868 	.db #0x0c	; 12
      00004B 0C                    1869 	.db #0x0c	; 12
      00004C 0C                    1870 	.db #0x0c	; 12
      00004D 0C                    1871 	.db #0x0c	; 12
      00004E 6C                    1872 	.db #0x6c	; 108	'l'
      00004F 7C                    1873 	.db #0x7c	; 124
      000050 00                    1874 	.db #0x00	; 0
      000051                       1875 __xinit__ttf_eng_k:
      000051 00                    1876 	.db #0x00	; 0
      000052 66                    1877 	.db #0x66	; 102	'f'
      000053 68                    1878 	.db #0x68	; 104	'h'
      000054 70                    1879 	.db #0x70	; 112	'p'
      000055 70                    1880 	.db #0x70	; 112	'p'
      000056 68                    1881 	.db #0x68	; 104	'h'
      000057 66                    1882 	.db #0x66	; 102	'f'
      000058 00                    1883 	.db #0x00	; 0
      000059                       1884 __xinit__ttf_eng_l:
      000059 00                    1885 	.db #0x00	; 0
      00005A 40                    1886 	.db #0x40	; 64
      00005B 40                    1887 	.db #0x40	; 64
      00005C 40                    1888 	.db #0x40	; 64
      00005D 40                    1889 	.db #0x40	; 64
      00005E 40                    1890 	.db #0x40	; 64
      00005F 7E                    1891 	.db #0x7e	; 126
      000060 00                    1892 	.db #0x00	; 0
      000061                       1893 __xinit__ttf_eng_m:
      000061 00                    1894 	.db #0x00	; 0
      000062 42                    1895 	.db #0x42	; 66	'B'
      000063 66                    1896 	.db #0x66	; 102	'f'
      000064 5A                    1897 	.db #0x5a	; 90	'Z'
      000065 42                    1898 	.db #0x42	; 66	'B'
      000066 42                    1899 	.db #0x42	; 66	'B'
      000067 42                    1900 	.db #0x42	; 66	'B'
      000068 00                    1901 	.db #0x00	; 0
      000069                       1902 __xinit__ttf_eng_n:
      000069 00                    1903 	.db #0x00	; 0
      00006A 42                    1904 	.db #0x42	; 66	'B'
      00006B 62                    1905 	.db #0x62	; 98	'b'
      00006C 52                    1906 	.db #0x52	; 82	'R'
      00006D 4A                    1907 	.db #0x4a	; 74	'J'
      00006E 46                    1908 	.db #0x46	; 70	'F'
      00006F 42                    1909 	.db #0x42	; 66	'B'
      000070 00                    1910 	.db #0x00	; 0
      000071                       1911 __xinit__ttf_eng_o:
      000071 00                    1912 	.db #0x00	; 0
      000072 7E                    1913 	.db #0x7e	; 126
      000073 42                    1914 	.db #0x42	; 66	'B'
      000074 42                    1915 	.db #0x42	; 66	'B'
      000075 42                    1916 	.db #0x42	; 66	'B'
      000076 42                    1917 	.db #0x42	; 66	'B'
      000077 7E                    1918 	.db #0x7e	; 126
      000078 00                    1919 	.db #0x00	; 0
      000079                       1920 __xinit__ttf_eng_p:
      000079 00                    1921 	.db #0x00	; 0
      00007A 7E                    1922 	.db #0x7e	; 126
      00007B 42                    1923 	.db #0x42	; 66	'B'
      00007C 42                    1924 	.db #0x42	; 66	'B'
      00007D 7E                    1925 	.db #0x7e	; 126
      00007E 40                    1926 	.db #0x40	; 64
      00007F 40                    1927 	.db #0x40	; 64
      000080 00                    1928 	.db #0x00	; 0
      000081                       1929 __xinit__ttf_eng_q:
      000081 00                    1930 	.db #0x00	; 0
      000082 7E                    1931 	.db #0x7e	; 126
      000083 42                    1932 	.db #0x42	; 66	'B'
      000084 42                    1933 	.db #0x42	; 66	'B'
      000085 42                    1934 	.db #0x42	; 66	'B'
      000086 7E                    1935 	.db #0x7e	; 126
      000087 04                    1936 	.db #0x04	; 4
      000088 00                    1937 	.db #0x00	; 0
      000089                       1938 __xinit__ttf_eng_r:
      000089 00                    1939 	.db #0x00	; 0
      00008A 7E                    1940 	.db #0x7e	; 126
      00008B 42                    1941 	.db #0x42	; 66	'B'
      00008C 42                    1942 	.db #0x42	; 66	'B'
      00008D 7C                    1943 	.db #0x7c	; 124
      00008E 42                    1944 	.db #0x42	; 66	'B'
      00008F 42                    1945 	.db #0x42	; 66	'B'
      000090 00                    1946 	.db #0x00	; 0
      000091                       1947 __xinit__ttf_eng_s:
      000091 00                    1948 	.db #0x00	; 0
      000092 3E                    1949 	.db #0x3e	; 62
      000093 40                    1950 	.db #0x40	; 64
      000094 3C                    1951 	.db #0x3c	; 60
      000095 02                    1952 	.db #0x02	; 2
      000096 02                    1953 	.db #0x02	; 2
      000097 7C                    1954 	.db #0x7c	; 124
      000098 00                    1955 	.db #0x00	; 0
      000099                       1956 __xinit__ttf_eng_t:
      000099 00                    1957 	.db #0x00	; 0
      00009A 7E                    1958 	.db #0x7e	; 126
      00009B 18                    1959 	.db #0x18	; 24
      00009C 18                    1960 	.db #0x18	; 24
      00009D 18                    1961 	.db #0x18	; 24
      00009E 18                    1962 	.db #0x18	; 24
      00009F 18                    1963 	.db #0x18	; 24
      0000A0 00                    1964 	.db #0x00	; 0
      0000A1                       1965 __xinit__ttf_eng_u:
      0000A1 00                    1966 	.db #0x00	; 0
      0000A2 42                    1967 	.db #0x42	; 66	'B'
      0000A3 42                    1968 	.db #0x42	; 66	'B'
      0000A4 42                    1969 	.db #0x42	; 66	'B'
      0000A5 42                    1970 	.db #0x42	; 66	'B'
      0000A6 42                    1971 	.db #0x42	; 66	'B'
      0000A7 3E                    1972 	.db #0x3e	; 62
      0000A8 00                    1973 	.db #0x00	; 0
      0000A9                       1974 __xinit__ttf_eng_v:
      0000A9 00                    1975 	.db #0x00	; 0
      0000AA 42                    1976 	.db #0x42	; 66	'B'
      0000AB 42                    1977 	.db #0x42	; 66	'B'
      0000AC 42                    1978 	.db #0x42	; 66	'B'
      0000AD 24                    1979 	.db #0x24	; 36
      0000AE 24                    1980 	.db #0x24	; 36
      0000AF 18                    1981 	.db #0x18	; 24
      0000B0 00                    1982 	.db #0x00	; 0
      0000B1                       1983 __xinit__ttf_eng_w:
      0000B1 00                    1984 	.db #0x00	; 0
      0000B2 42                    1985 	.db #0x42	; 66	'B'
      0000B3 42                    1986 	.db #0x42	; 66	'B'
      0000B4 42                    1987 	.db #0x42	; 66	'B'
      0000B5 5A                    1988 	.db #0x5a	; 90	'Z'
      0000B6 5A                    1989 	.db #0x5a	; 90	'Z'
      0000B7 24                    1990 	.db #0x24	; 36
      0000B8 00                    1991 	.db #0x00	; 0
      0000B9                       1992 __xinit__ttf_eng_x:
      0000B9 00                    1993 	.db #0x00	; 0
      0000BA 42                    1994 	.db #0x42	; 66	'B'
      0000BB 24                    1995 	.db #0x24	; 36
      0000BC 18                    1996 	.db #0x18	; 24
      0000BD 18                    1997 	.db #0x18	; 24
      0000BE 22                    1998 	.db #0x22	; 34
      0000BF 42                    1999 	.db #0x42	; 66	'B'
      0000C0 00                    2000 	.db #0x00	; 0
      0000C1                       2001 __xinit__ttf_eng_y:
      0000C1 00                    2002 	.db #0x00	; 0
      0000C2 42                    2003 	.db #0x42	; 66	'B'
      0000C3 24                    2004 	.db #0x24	; 36
      0000C4 18                    2005 	.db #0x18	; 24
      0000C5 18                    2006 	.db #0x18	; 24
      0000C6 18                    2007 	.db #0x18	; 24
      0000C7 18                    2008 	.db #0x18	; 24
      0000C8 00                    2009 	.db #0x00	; 0
      0000C9                       2010 __xinit__ttf_eng_z:
      0000C9 00                    2011 	.db #0x00	; 0
      0000CA 7E                    2012 	.db #0x7e	; 126
      0000CB 04                    2013 	.db #0x04	; 4
      0000CC 08                    2014 	.db #0x08	; 8
      0000CD 10                    2015 	.db #0x10	; 16
      0000CE 20                    2016 	.db #0x20	; 32
      0000CF 7E                    2017 	.db #0x7e	; 126
      0000D0 00                    2018 	.db #0x00	; 0
      0000D1                       2019 __xinit__ttf_eng_1:
      0000D1 00                    2020 	.db #0x00	; 0
      0000D2 18                    2021 	.db #0x18	; 24
      0000D3 38                    2022 	.db #0x38	; 56	'8'
      0000D4 38                    2023 	.db #0x38	; 56	'8'
      0000D5 18                    2024 	.db #0x18	; 24
      0000D6 18                    2025 	.db #0x18	; 24
      0000D7 18                    2026 	.db #0x18	; 24
      0000D8 00                    2027 	.db #0x00	; 0
      0000D9                       2028 __xinit__ttf_eng_2:
      0000D9 00                    2029 	.db #0x00	; 0
      0000DA 38                    2030 	.db #0x38	; 56	'8'
      0000DB 44                    2031 	.db #0x44	; 68	'D'
      0000DC 08                    2032 	.db #0x08	; 8
      0000DD 10                    2033 	.db #0x10	; 16
      0000DE 20                    2034 	.db #0x20	; 32
      0000DF 7C                    2035 	.db #0x7c	; 124
      0000E0 00                    2036 	.db #0x00	; 0
      0000E1                       2037 __xinit__ttf_eng_3:
      0000E1 00                    2038 	.db #0x00	; 0
      0000E2 7C                    2039 	.db #0x7c	; 124
      0000E3 02                    2040 	.db #0x02	; 2
      0000E4 3C                    2041 	.db #0x3c	; 60
      0000E5 02                    2042 	.db #0x02	; 2
      0000E6 02                    2043 	.db #0x02	; 2
      0000E7 7C                    2044 	.db #0x7c	; 124
      0000E8 00                    2045 	.db #0x00	; 0
      0000E9                       2046 __xinit__ttf_eng_4:
      0000E9 00                    2047 	.db #0x00	; 0
      0000EA 42                    2048 	.db #0x42	; 66	'B'
      0000EB 42                    2049 	.db #0x42	; 66	'B'
      0000EC 7E                    2050 	.db #0x7e	; 126
      0000ED 02                    2051 	.db #0x02	; 2
      0000EE 02                    2052 	.db #0x02	; 2
      0000EF 02                    2053 	.db #0x02	; 2
      0000F0 00                    2054 	.db #0x00	; 0
      0000F1                       2055 __xinit__ttf_eng_5:
      0000F1 00                    2056 	.db #0x00	; 0
      0000F2 7E                    2057 	.db #0x7e	; 126
      0000F3 40                    2058 	.db #0x40	; 64
      0000F4 7C                    2059 	.db #0x7c	; 124
      0000F5 02                    2060 	.db #0x02	; 2
      0000F6 02                    2061 	.db #0x02	; 2
      0000F7 7C                    2062 	.db #0x7c	; 124
      0000F8 00                    2063 	.db #0x00	; 0
      0000F9                       2064 __xinit__ttf_eng_6:
      0000F9 00                    2065 	.db #0x00	; 0
      0000FA 3C                    2066 	.db #0x3c	; 60
      0000FB 40                    2067 	.db #0x40	; 64
      0000FC 7C                    2068 	.db #0x7c	; 124
      0000FD 42                    2069 	.db #0x42	; 66	'B'
      0000FE 42                    2070 	.db #0x42	; 66	'B'
      0000FF 3C                    2071 	.db #0x3c	; 60
      000100 00                    2072 	.db #0x00	; 0
      000101                       2073 __xinit__ttf_eng_7:
      000101 00                    2074 	.db #0x00	; 0
      000102 7E                    2075 	.db #0x7e	; 126
      000103 02                    2076 	.db #0x02	; 2
      000104 04                    2077 	.db #0x04	; 4
      000105 08                    2078 	.db #0x08	; 8
      000106 10                    2079 	.db #0x10	; 16
      000107 20                    2080 	.db #0x20	; 32
      000108 00                    2081 	.db #0x00	; 0
      000109                       2082 __xinit__ttf_eng_8:
      000109 00                    2083 	.db #0x00	; 0
      00010A 3C                    2084 	.db #0x3c	; 60
      00010B 42                    2085 	.db #0x42	; 66	'B'
      00010C 3C                    2086 	.db #0x3c	; 60
      00010D 42                    2087 	.db #0x42	; 66	'B'
      00010E 42                    2088 	.db #0x42	; 66	'B'
      00010F 3C                    2089 	.db #0x3c	; 60
      000110 00                    2090 	.db #0x00	; 0
      000111                       2091 __xinit__ttf_eng_9:
      000111 00                    2092 	.db #0x00	; 0
      000112 3C                    2093 	.db #0x3c	; 60
      000113 42                    2094 	.db #0x42	; 66	'B'
      000114 42                    2095 	.db #0x42	; 66	'B'
      000115 3E                    2096 	.db #0x3e	; 62
      000116 02                    2097 	.db #0x02	; 2
      000117 3C                    2098 	.db #0x3c	; 60
      000118 00                    2099 	.db #0x00	; 0
      000119                       2100 __xinit__ttf_eng_0:
      000119 00                    2101 	.db #0x00	; 0
      00011A 3C                    2102 	.db #0x3c	; 60
      00011B 46                    2103 	.db #0x46	; 70	'F'
      00011C 4A                    2104 	.db #0x4a	; 74	'J'
      00011D 52                    2105 	.db #0x52	; 82	'R'
      00011E 62                    2106 	.db #0x62	; 98	'b'
      00011F 3C                    2107 	.db #0x3c	; 60
      000120 00                    2108 	.db #0x00	; 0
      000121                       2109 __xinit__main_buffer:
      000121 FF                    2110 	.db #0xff	; 255
      000122 FF                    2111 	.db #0xff	; 255
      000123 FF                    2112 	.db #0xff	; 255
      000124 FF                    2113 	.db #0xff	; 255
      000125 FF                    2114 	.db #0xff	; 255
      000126 FF                    2115 	.db #0xff	; 255
      000127 FF                    2116 	.db #0xff	; 255
      000128 FF                    2117 	.db #0xff	; 255
      000129 FF                    2118 	.db #0xff	; 255
      00012A FF                    2119 	.db #0xff	; 255
      00012B FF                    2120 	.db #0xff	; 255
      00012C FF                    2121 	.db #0xff	; 255
      00012D FF                    2122 	.db #0xff	; 255
      00012E FF                    2123 	.db #0xff	; 255
      00012F FF                    2124 	.db #0xff	; 255
      000130 FF                    2125 	.db #0xff	; 255
      000131 80                    2126 	.db #0x80	; 128
      000132 00                    2127 	.db #0x00	; 0
      000133 00                    2128 	.db #0x00	; 0
      000134 00                    2129 	.db #0x00	; 0
      000135 00                    2130 	.db #0x00	; 0
      000136 00                    2131 	.db #0x00	; 0
      000137 00                    2132 	.db #0x00	; 0
      000138 00                    2133 	.db #0x00	; 0
      000139 00                    2134 	.db #0x00	; 0
      00013A 00                    2135 	.db #0x00	; 0
      00013B 00                    2136 	.db #0x00	; 0
      00013C 00                    2137 	.db #0x00	; 0
      00013D 00                    2138 	.db #0x00	; 0
      00013E 00                    2139 	.db #0x00	; 0
      00013F 00                    2140 	.db #0x00	; 0
      000140 01                    2141 	.db #0x01	; 1
      000141 80                    2142 	.db #0x80	; 128
      000142 FE                    2143 	.db #0xfe	; 254
      000143 03                    2144 	.db #0x03	; 3
      000144 FF                    2145 	.db #0xff	; 255
      000145 FF                    2146 	.db #0xff	; 255
      000146 FF                    2147 	.db #0xff	; 255
      000147 FF                    2148 	.db #0xff	; 255
      000148 80                    2149 	.db #0x80	; 128
      000149 FF                    2150 	.db #0xff	; 255
      00014A FF                    2151 	.db #0xff	; 255
      00014B F8                    2152 	.db #0xf8	; 248
      00014C 00                    2153 	.db #0x00	; 0
      00014D 1D                    2154 	.db #0x1d	; 29
      00014E 1D                    2155 	.db #0x1d	; 29
      00014F 5C                    2156 	.db #0x5c	; 92
      000150 ED                    2157 	.db #0xed	; 237
      000151 80                    2158 	.db #0x80	; 128
      000152 FE                    2159 	.db #0xfe	; 254
      000153 03                    2160 	.db #0x03	; 3
      000154 FF                    2161 	.db #0xff	; 255
      000155 FF                    2162 	.db #0xff	; 255
      000156 FF                    2163 	.db #0xff	; 255
      000157 FF                    2164 	.db #0xff	; 255
      000158 80                    2165 	.db #0x80	; 128
      000159 FF                    2166 	.db #0xff	; 255
      00015A FF                    2167 	.db #0xff	; 255
      00015B F8                    2168 	.db #0xf8	; 248
      00015C 00                    2169 	.db #0x00	; 0
      00015D 15                    2170 	.db #0x15	; 21
      00015E 15                    2171 	.db #0x15	; 21
      00015F 54                    2172 	.db #0x54	; 84	'T'
      000160 A5                    2173 	.db #0xa5	; 165
      000161 80                    2174 	.db #0x80	; 128
      000162 FE                    2175 	.db #0xfe	; 254
      000163 03                    2176 	.db #0x03	; 3
      000164 FF                    2177 	.db #0xff	; 255
      000165 FF                    2178 	.db #0xff	; 255
      000166 FF                    2179 	.db #0xff	; 255
      000167 FF                    2180 	.db #0xff	; 255
      000168 80                    2181 	.db #0x80	; 128
      000169 FF                    2182 	.db #0xff	; 255
      00016A FF                    2183 	.db #0xff	; 255
      00016B F8                    2184 	.db #0xf8	; 248
      00016C 00                    2185 	.db #0x00	; 0
      00016D 1D                    2186 	.db #0x1d	; 29
      00016E 1D                    2187 	.db #0x1d	; 29
      00016F DC                    2188 	.db #0xdc	; 220
      000170 A5                    2189 	.db #0xa5	; 165
      000171 80                    2190 	.db #0x80	; 128
      000172 FE                    2191 	.db #0xfe	; 254
      000173 03                    2192 	.db #0x03	; 3
      000174 FF                    2193 	.db #0xff	; 255
      000175 FF                    2194 	.db #0xff	; 255
      000176 FF                    2195 	.db #0xff	; 255
      000177 FF                    2196 	.db #0xff	; 255
      000178 80                    2197 	.db #0x80	; 128
      000179 FF                    2198 	.db #0xff	; 255
      00017A FF                    2199 	.db #0xff	; 255
      00017B F8                    2200 	.db #0xf8	; 248
      00017C 00                    2201 	.db #0x00	; 0
      00017D 15                    2202 	.db #0x15	; 21
      00017E D1                    2203 	.db #0xd1	; 209
      00017F 54                    2204 	.db #0x54	; 84	'T'
      000180 E5                    2205 	.db #0xe5	; 229
      000181 80                    2206 	.db #0x80	; 128
      000182 FE                    2207 	.db #0xfe	; 254
      000183 03                    2208 	.db #0x03	; 3
      000184 FF                    2209 	.db #0xff	; 255
      000185 FF                    2210 	.db #0xff	; 255
      000186 FF                    2211 	.db #0xff	; 255
      000187 FF                    2212 	.db #0xff	; 255
      000188 80                    2213 	.db #0x80	; 128
      000189 FF                    2214 	.db #0xff	; 255
      00018A FF                    2215 	.db #0xff	; 255
      00018B F8                    2216 	.db #0xf8	; 248
      00018C 00                    2217 	.db #0x00	; 0
      00018D 00                    2218 	.db #0x00	; 0
      00018E 00                    2219 	.db #0x00	; 0
      00018F 00                    2220 	.db #0x00	; 0
      000190 01                    2221 	.db #0x01	; 1
      000191 80                    2222 	.db #0x80	; 128
      000192 FE                    2223 	.db #0xfe	; 254
      000193 03                    2224 	.db #0x03	; 3
      000194 FF                    2225 	.db #0xff	; 255
      000195 FF                    2226 	.db #0xff	; 255
      000196 FF                    2227 	.db #0xff	; 255
      000197 FF                    2228 	.db #0xff	; 255
      000198 80                    2229 	.db #0x80	; 128
      000199 FF                    2230 	.db #0xff	; 255
      00019A FF                    2231 	.db #0xff	; 255
      00019B F8                    2232 	.db #0xf8	; 248
      00019C 00                    2233 	.db #0x00	; 0
      00019D 00                    2234 	.db #0x00	; 0
      00019E 00                    2235 	.db #0x00	; 0
      00019F 00                    2236 	.db #0x00	; 0
      0001A0 01                    2237 	.db #0x01	; 1
      0001A1 80                    2238 	.db #0x80	; 128
      0001A2 FE                    2239 	.db #0xfe	; 254
      0001A3 03                    2240 	.db #0x03	; 3
      0001A4 FF                    2241 	.db #0xff	; 255
      0001A5 FF                    2242 	.db #0xff	; 255
      0001A6 FF                    2243 	.db #0xff	; 255
      0001A7 FF                    2244 	.db #0xff	; 255
      0001A8 80                    2245 	.db #0x80	; 128
      0001A9 FF                    2246 	.db #0xff	; 255
      0001AA FF                    2247 	.db #0xff	; 255
      0001AB F8                    2248 	.db #0xf8	; 248
      0001AC 00                    2249 	.db #0x00	; 0
      0001AD 00                    2250 	.db #0x00	; 0
      0001AE 00                    2251 	.db #0x00	; 0
      0001AF 00                    2252 	.db #0x00	; 0
      0001B0 01                    2253 	.db #0x01	; 1
      0001B1 80                    2254 	.db #0x80	; 128
      0001B2 FF                    2255 	.db #0xff	; 255
      0001B3 FF                    2256 	.db #0xff	; 255
      0001B4 F8                    2257 	.db #0xf8	; 248
      0001B5 0F                    2258 	.db #0x0f	; 15
      0001B6 E0                    2259 	.db #0xe0	; 224
      0001B7 3F                    2260 	.db #0x3f	; 63
      0001B8 80                    2261 	.db #0x80	; 128
      0001B9 FE                    2262 	.db #0xfe	; 254
      0001BA 03                    2263 	.db #0x03	; 3
      0001BB F8                    2264 	.db #0xf8	; 248
      0001BC 00                    2265 	.db #0x00	; 0
      0001BD 00                    2266 	.db #0x00	; 0
      0001BE 00                    2267 	.db #0x00	; 0
      0001BF 00                    2268 	.db #0x00	; 0
      0001C0 01                    2269 	.db #0x01	; 1
      0001C1 80                    2270 	.db #0x80	; 128
      0001C2 FF                    2271 	.db #0xff	; 255
      0001C3 FF                    2272 	.db #0xff	; 255
      0001C4 F8                    2273 	.db #0xf8	; 248
      0001C5 0F                    2274 	.db #0x0f	; 15
      0001C6 E0                    2275 	.db #0xe0	; 224
      0001C7 3F                    2276 	.db #0x3f	; 63
      0001C8 80                    2277 	.db #0x80	; 128
      0001C9 FE                    2278 	.db #0xfe	; 254
      0001CA 03                    2279 	.db #0x03	; 3
      0001CB F8                    2280 	.db #0xf8	; 248
      0001CC 00                    2281 	.db #0x00	; 0
      0001CD 00                    2282 	.db #0x00	; 0
      0001CE 00                    2283 	.db #0x00	; 0
      0001CF 00                    2284 	.db #0x00	; 0
      0001D0 01                    2285 	.db #0x01	; 1
      0001D1 80                    2286 	.db #0x80	; 128
      0001D2 FF                    2287 	.db #0xff	; 255
      0001D3 FF                    2288 	.db #0xff	; 255
      0001D4 F8                    2289 	.db #0xf8	; 248
      0001D5 0F                    2290 	.db #0x0f	; 15
      0001D6 E0                    2291 	.db #0xe0	; 224
      0001D7 3F                    2292 	.db #0x3f	; 63
      0001D8 80                    2293 	.db #0x80	; 128
      0001D9 FE                    2294 	.db #0xfe	; 254
      0001DA 03                    2295 	.db #0x03	; 3
      0001DB F8                    2296 	.db #0xf8	; 248
      0001DC 00                    2297 	.db #0x00	; 0
      0001DD 00                    2298 	.db #0x00	; 0
      0001DE 00                    2299 	.db #0x00	; 0
      0001DF 00                    2300 	.db #0x00	; 0
      0001E0 01                    2301 	.db #0x01	; 1
      0001E1 80                    2302 	.db #0x80	; 128
      0001E2 FF                    2303 	.db #0xff	; 255
      0001E3 FF                    2304 	.db #0xff	; 255
      0001E4 F8                    2305 	.db #0xf8	; 248
      0001E5 0F                    2306 	.db #0x0f	; 15
      0001E6 E0                    2307 	.db #0xe0	; 224
      0001E7 3F                    2308 	.db #0x3f	; 63
      0001E8 80                    2309 	.db #0x80	; 128
      0001E9 FE                    2310 	.db #0xfe	; 254
      0001EA 03                    2311 	.db #0x03	; 3
      0001EB F8                    2312 	.db #0xf8	; 248
      0001EC 00                    2313 	.db #0x00	; 0
      0001ED 00                    2314 	.db #0x00	; 0
      0001EE 00                    2315 	.db #0x00	; 0
      0001EF 00                    2316 	.db #0x00	; 0
      0001F0 01                    2317 	.db #0x01	; 1
      0001F1 80                    2318 	.db #0x80	; 128
      0001F2 FF                    2319 	.db #0xff	; 255
      0001F3 FF                    2320 	.db #0xff	; 255
      0001F4 F8                    2321 	.db #0xf8	; 248
      0001F5 0F                    2322 	.db #0x0f	; 15
      0001F6 E0                    2323 	.db #0xe0	; 224
      0001F7 3F                    2324 	.db #0x3f	; 63
      0001F8 80                    2325 	.db #0x80	; 128
      0001F9 FE                    2326 	.db #0xfe	; 254
      0001FA 03                    2327 	.db #0x03	; 3
      0001FB F8                    2328 	.db #0xf8	; 248
      0001FC 00                    2329 	.db #0x00	; 0
      0001FD 00                    2330 	.db #0x00	; 0
      0001FE 00                    2331 	.db #0x00	; 0
      0001FF 00                    2332 	.db #0x00	; 0
      000200 01                    2333 	.db #0x01	; 1
      000201 80                    2334 	.db #0x80	; 128
      000202 FF                    2335 	.db #0xff	; 255
      000203 FF                    2336 	.db #0xff	; 255
      000204 F8                    2337 	.db #0xf8	; 248
      000205 0F                    2338 	.db #0x0f	; 15
      000206 E0                    2339 	.db #0xe0	; 224
      000207 3F                    2340 	.db #0x3f	; 63
      000208 80                    2341 	.db #0x80	; 128
      000209 FE                    2342 	.db #0xfe	; 254
      00020A 03                    2343 	.db #0x03	; 3
      00020B F8                    2344 	.db #0xf8	; 248
      00020C 00                    2345 	.db #0x00	; 0
      00020D 00                    2346 	.db #0x00	; 0
      00020E 00                    2347 	.db #0x00	; 0
      00020F 00                    2348 	.db #0x00	; 0
      000210 01                    2349 	.db #0x01	; 1
      000211 80                    2350 	.db #0x80	; 128
      000212 FF                    2351 	.db #0xff	; 255
      000213 FF                    2352 	.db #0xff	; 255
      000214 F8                    2353 	.db #0xf8	; 248
      000215 0F                    2354 	.db #0x0f	; 15
      000216 E0                    2355 	.db #0xe0	; 224
      000217 3F                    2356 	.db #0x3f	; 63
      000218 80                    2357 	.db #0x80	; 128
      000219 FE                    2358 	.db #0xfe	; 254
      00021A 03                    2359 	.db #0x03	; 3
      00021B F8                    2360 	.db #0xf8	; 248
      00021C 00                    2361 	.db #0x00	; 0
      00021D 00                    2362 	.db #0x00	; 0
      00021E 00                    2363 	.db #0x00	; 0
      00021F 00                    2364 	.db #0x00	; 0
      000220 01                    2365 	.db #0x01	; 1
      000221 80                    2366 	.db #0x80	; 128
      000222 FE                    2367 	.db #0xfe	; 254
      000223 03                    2368 	.db #0x03	; 3
      000224 F8                    2369 	.db #0xf8	; 248
      000225 0F                    2370 	.db #0x0f	; 15
      000226 E0                    2371 	.db #0xe0	; 224
      000227 3F                    2372 	.db #0x3f	; 63
      000228 FF                    2373 	.db #0xff	; 255
      000229 FF                    2374 	.db #0xff	; 255
      00022A FC                    2375 	.db #0xfc	; 252
      00022B 00                    2376 	.db #0x00	; 0
      00022C 00                    2377 	.db #0x00	; 0
      00022D 00                    2378 	.db #0x00	; 0
      00022E 00                    2379 	.db #0x00	; 0
      00022F 00                    2380 	.db #0x00	; 0
      000230 01                    2381 	.db #0x01	; 1
      000231 80                    2382 	.db #0x80	; 128
      000232 FE                    2383 	.db #0xfe	; 254
      000233 03                    2384 	.db #0x03	; 3
      000234 F8                    2385 	.db #0xf8	; 248
      000235 0F                    2386 	.db #0x0f	; 15
      000236 E0                    2387 	.db #0xe0	; 224
      000237 3F                    2388 	.db #0x3f	; 63
      000238 FF                    2389 	.db #0xff	; 255
      000239 FF                    2390 	.db #0xff	; 255
      00023A FC                    2391 	.db #0xfc	; 252
      00023B 00                    2392 	.db #0x00	; 0
      00023C 00                    2393 	.db #0x00	; 0
      00023D 00                    2394 	.db #0x00	; 0
      00023E 00                    2395 	.db #0x00	; 0
      00023F 00                    2396 	.db #0x00	; 0
      000240 01                    2397 	.db #0x01	; 1
      000241 80                    2398 	.db #0x80	; 128
      000242 FE                    2399 	.db #0xfe	; 254
      000243 03                    2400 	.db #0x03	; 3
      000244 F8                    2401 	.db #0xf8	; 248
      000245 0F                    2402 	.db #0x0f	; 15
      000246 E0                    2403 	.db #0xe0	; 224
      000247 3F                    2404 	.db #0x3f	; 63
      000248 FF                    2405 	.db #0xff	; 255
      000249 FF                    2406 	.db #0xff	; 255
      00024A FC                    2407 	.db #0xfc	; 252
      00024B 00                    2408 	.db #0x00	; 0
      00024C 00                    2409 	.db #0x00	; 0
      00024D 00                    2410 	.db #0x00	; 0
      00024E 00                    2411 	.db #0x00	; 0
      00024F 00                    2412 	.db #0x00	; 0
      000250 01                    2413 	.db #0x01	; 1
      000251 80                    2414 	.db #0x80	; 128
      000252 FE                    2415 	.db #0xfe	; 254
      000253 03                    2416 	.db #0x03	; 3
      000254 F8                    2417 	.db #0xf8	; 248
      000255 0F                    2418 	.db #0x0f	; 15
      000256 E0                    2419 	.db #0xe0	; 224
      000257 3F                    2420 	.db #0x3f	; 63
      000258 FF                    2421 	.db #0xff	; 255
      000259 FF                    2422 	.db #0xff	; 255
      00025A FC                    2423 	.db #0xfc	; 252
      00025B 00                    2424 	.db #0x00	; 0
      00025C 00                    2425 	.db #0x00	; 0
      00025D 00                    2426 	.db #0x00	; 0
      00025E 00                    2427 	.db #0x00	; 0
      00025F 00                    2428 	.db #0x00	; 0
      000260 01                    2429 	.db #0x01	; 1
      000261 80                    2430 	.db #0x80	; 128
      000262 FE                    2431 	.db #0xfe	; 254
      000263 03                    2432 	.db #0x03	; 3
      000264 F8                    2433 	.db #0xf8	; 248
      000265 0F                    2434 	.db #0x0f	; 15
      000266 E0                    2435 	.db #0xe0	; 224
      000267 3F                    2436 	.db #0x3f	; 63
      000268 FF                    2437 	.db #0xff	; 255
      000269 FF                    2438 	.db #0xff	; 255
      00026A FC                    2439 	.db #0xfc	; 252
      00026B 00                    2440 	.db #0x00	; 0
      00026C 00                    2441 	.db #0x00	; 0
      00026D 00                    2442 	.db #0x00	; 0
      00026E 00                    2443 	.db #0x00	; 0
      00026F 00                    2444 	.db #0x00	; 0
      000270 01                    2445 	.db #0x01	; 1
      000271 80                    2446 	.db #0x80	; 128
      000272 FE                    2447 	.db #0xfe	; 254
      000273 03                    2448 	.db #0x03	; 3
      000274 F8                    2449 	.db #0xf8	; 248
      000275 0F                    2450 	.db #0x0f	; 15
      000276 E0                    2451 	.db #0xe0	; 224
      000277 3F                    2452 	.db #0x3f	; 63
      000278 FF                    2453 	.db #0xff	; 255
      000279 FF                    2454 	.db #0xff	; 255
      00027A FC                    2455 	.db #0xfc	; 252
      00027B 00                    2456 	.db #0x00	; 0
      00027C 00                    2457 	.db #0x00	; 0
      00027D 00                    2458 	.db #0x00	; 0
      00027E 00                    2459 	.db #0x00	; 0
      00027F 00                    2460 	.db #0x00	; 0
      000280 01                    2461 	.db #0x01	; 1
      000281 80                    2462 	.db #0x80	; 128
      000282 FE                    2463 	.db #0xfe	; 254
      000283 03                    2464 	.db #0x03	; 3
      000284 F8                    2465 	.db #0xf8	; 248
      000285 0F                    2466 	.db #0x0f	; 15
      000286 E0                    2467 	.db #0xe0	; 224
      000287 3F                    2468 	.db #0x3f	; 63
      000288 FF                    2469 	.db #0xff	; 255
      000289 FF                    2470 	.db #0xff	; 255
      00028A FC                    2471 	.db #0xfc	; 252
      00028B 00                    2472 	.db #0x00	; 0
      00028C 00                    2473 	.db #0x00	; 0
      00028D 00                    2474 	.db #0x00	; 0
      00028E 00                    2475 	.db #0x00	; 0
      00028F 00                    2476 	.db #0x00	; 0
      000290 01                    2477 	.db #0x01	; 1
      000291 80                    2478 	.db #0x80	; 128
      000292 FE                    2479 	.db #0xfe	; 254
      000293 03                    2480 	.db #0x03	; 3
      000294 F8                    2481 	.db #0xf8	; 248
      000295 0F                    2482 	.db #0x0f	; 15
      000296 E0                    2483 	.db #0xe0	; 224
      000297 3F                    2484 	.db #0x3f	; 63
      000298 80                    2485 	.db #0x80	; 128
      000299 FE                    2486 	.db #0xfe	; 254
      00029A 03                    2487 	.db #0x03	; 3
      00029B F8                    2488 	.db #0xf8	; 248
      00029C FE                    2489 	.db #0xfe	; 254
      00029D 00                    2490 	.db #0x00	; 0
      00029E 00                    2491 	.db #0x00	; 0
      00029F 00                    2492 	.db #0x00	; 0
      0002A0 01                    2493 	.db #0x01	; 1
      0002A1 80                    2494 	.db #0x80	; 128
      0002A2 FE                    2495 	.db #0xfe	; 254
      0002A3 03                    2496 	.db #0x03	; 3
      0002A4 F8                    2497 	.db #0xf8	; 248
      0002A5 0F                    2498 	.db #0x0f	; 15
      0002A6 E0                    2499 	.db #0xe0	; 224
      0002A7 3F                    2500 	.db #0x3f	; 63
      0002A8 80                    2501 	.db #0x80	; 128
      0002A9 FE                    2502 	.db #0xfe	; 254
      0002AA 03                    2503 	.db #0x03	; 3
      0002AB F8                    2504 	.db #0xf8	; 248
      0002AC FE                    2505 	.db #0xfe	; 254
      0002AD 7C                    2506 	.db #0x7c	; 124
      0002AE 7E                    2507 	.db #0x7e	; 126
      0002AF 00                    2508 	.db #0x00	; 0
      0002B0 01                    2509 	.db #0x01	; 1
      0002B1 80                    2510 	.db #0x80	; 128
      0002B2 FE                    2511 	.db #0xfe	; 254
      0002B3 03                    2512 	.db #0x03	; 3
      0002B4 F8                    2513 	.db #0xf8	; 248
      0002B5 0F                    2514 	.db #0x0f	; 15
      0002B6 E0                    2515 	.db #0xe0	; 224
      0002B7 3F                    2516 	.db #0x3f	; 63
      0002B8 80                    2517 	.db #0x80	; 128
      0002B9 FE                    2518 	.db #0xfe	; 254
      0002BA 03                    2519 	.db #0x03	; 3
      0002BB F8                    2520 	.db #0xf8	; 248
      0002BC 38                    2521 	.db #0x38	; 56	'8'
      0002BD 7E                    2522 	.db #0x7e	; 126
      0002BE 7E                    2523 	.db #0x7e	; 126
      0002BF 00                    2524 	.db #0x00	; 0
      0002C0 01                    2525 	.db #0x01	; 1
      0002C1 80                    2526 	.db #0x80	; 128
      0002C2 FE                    2527 	.db #0xfe	; 254
      0002C3 03                    2528 	.db #0x03	; 3
      0002C4 F8                    2529 	.db #0xf8	; 248
      0002C5 0F                    2530 	.db #0x0f	; 15
      0002C6 E0                    2531 	.db #0xe0	; 224
      0002C7 3F                    2532 	.db #0x3f	; 63
      0002C8 80                    2533 	.db #0x80	; 128
      0002C9 FE                    2534 	.db #0xfe	; 254
      0002CA 03                    2535 	.db #0x03	; 3
      0002CB F8                    2536 	.db #0xf8	; 248
      0002CC 38                    2537 	.db #0x38	; 56	'8'
      0002CD 66                    2538 	.db #0x66	; 102	'f'
      0002CE 60                    2539 	.db #0x60	; 96
      0002CF 00                    2540 	.db #0x00	; 0
      0002D0 01                    2541 	.db #0x01	; 1
      0002D1 80                    2542 	.db #0x80	; 128
      0002D2 FE                    2543 	.db #0xfe	; 254
      0002D3 03                    2544 	.db #0x03	; 3
      0002D4 F8                    2545 	.db #0xf8	; 248
      0002D5 0F                    2546 	.db #0x0f	; 15
      0002D6 E0                    2547 	.db #0xe0	; 224
      0002D7 3F                    2548 	.db #0x3f	; 63
      0002D8 80                    2549 	.db #0x80	; 128
      0002D9 FE                    2550 	.db #0xfe	; 254
      0002DA 03                    2551 	.db #0x03	; 3
      0002DB F8                    2552 	.db #0xf8	; 248
      0002DC 38                    2553 	.db #0x38	; 56	'8'
      0002DD 66                    2554 	.db #0x66	; 102	'f'
      0002DE 60                    2555 	.db #0x60	; 96
      0002DF 00                    2556 	.db #0x00	; 0
      0002E0 01                    2557 	.db #0x01	; 1
      0002E1 80                    2558 	.db #0x80	; 128
      0002E2 FE                    2559 	.db #0xfe	; 254
      0002E3 03                    2560 	.db #0x03	; 3
      0002E4 F8                    2561 	.db #0xf8	; 248
      0002E5 0F                    2562 	.db #0x0f	; 15
      0002E6 E0                    2563 	.db #0xe0	; 224
      0002E7 3F                    2564 	.db #0x3f	; 63
      0002E8 80                    2565 	.db #0x80	; 128
      0002E9 FE                    2566 	.db #0xfe	; 254
      0002EA 03                    2567 	.db #0x03	; 3
      0002EB F8                    2568 	.db #0xf8	; 248
      0002EC FE                    2569 	.db #0xfe	; 254
      0002ED 66                    2570 	.db #0x66	; 102	'f'
      0002EE 7E                    2571 	.db #0x7e	; 126
      0002EF 18                    2572 	.db #0x18	; 24
      0002F0 01                    2573 	.db #0x01	; 1
      0002F1 80                    2574 	.db #0x80	; 128
      0002F2 FE                    2575 	.db #0xfe	; 254
      0002F3 03                    2576 	.db #0x03	; 3
      0002F4 F8                    2577 	.db #0xf8	; 248
      0002F5 0F                    2578 	.db #0x0f	; 15
      0002F6 E0                    2579 	.db #0xe0	; 224
      0002F7 3F                    2580 	.db #0x3f	; 63
      0002F8 80                    2581 	.db #0x80	; 128
      0002F9 FE                    2582 	.db #0xfe	; 254
      0002FA 03                    2583 	.db #0x03	; 3
      0002FB F8                    2584 	.db #0xf8	; 248
      0002FC FE                    2585 	.db #0xfe	; 254
      0002FD 66                    2586 	.db #0x66	; 102	'f'
      0002FE 7E                    2587 	.db #0x7e	; 126
      0002FF 18                    2588 	.db #0x18	; 24
      000300 01                    2589 	.db #0x01	; 1
      000301 80                    2590 	.db #0x80	; 128
      000302 00                    2591 	.db #0x00	; 0
      000303 00                    2592 	.db #0x00	; 0
      000304 00                    2593 	.db #0x00	; 0
      000305 00                    2594 	.db #0x00	; 0
      000306 00                    2595 	.db #0x00	; 0
      000307 00                    2596 	.db #0x00	; 0
      000308 00                    2597 	.db #0x00	; 0
      000309 00                    2598 	.db #0x00	; 0
      00030A 00                    2599 	.db #0x00	; 0
      00030B 00                    2600 	.db #0x00	; 0
      00030C 00                    2601 	.db #0x00	; 0
      00030D 00                    2602 	.db #0x00	; 0
      00030E 00                    2603 	.db #0x00	; 0
      00030F 00                    2604 	.db #0x00	; 0
      000310 01                    2605 	.db #0x01	; 1
      000311 FF                    2606 	.db #0xff	; 255
      000312 FF                    2607 	.db #0xff	; 255
      000313 FF                    2608 	.db #0xff	; 255
      000314 FF                    2609 	.db #0xff	; 255
      000315 FF                    2610 	.db #0xff	; 255
      000316 FF                    2611 	.db #0xff	; 255
      000317 FF                    2612 	.db #0xff	; 255
      000318 FF                    2613 	.db #0xff	; 255
      000319 FF                    2614 	.db #0xff	; 255
      00031A FF                    2615 	.db #0xff	; 255
      00031B FF                    2616 	.db #0xff	; 255
      00031C FF                    2617 	.db #0xff	; 255
      00031D FF                    2618 	.db #0xff	; 255
      00031E FF                    2619 	.db #0xff	; 255
      00031F FF                    2620 	.db #0xff	; 255
      000320 FF                    2621 	.db #0xff	; 255
                                   2622 	.area CABS (ABS)
