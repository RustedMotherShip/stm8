#ifndef _SSD1306_LIB_H
#define _SSD1306_LIB_H

#include <stdint.h>

#define WHITE 1
#define BLACK 0
#define SSD1306_LCDWIDTH 128
#define SSD1306_LCDHEIGHT 32
#define I2C_DISPLAY_ADDR 0x3C

void ssd1306_init(void);
void ssd1306_set_params_to_write(void);
void ssd1306_draw_pixel(uint8_t *buffer,uint8_t x, uint8_t y, uint8_t color);
void ssd1306_buffer_splash(void);
void ssd1306_buffer_write(int x, int y, const uint8_t *data);
void ssd1306_clean(void);

//Список всех команд

#define COMMAND 0x00 
#define DISPLAY_OFF 0xAE                  // Выключить дисплей
#define DISPLAY_ON 0xAF                   // Включить дисплей
#define SET_DISPLAY_CLOCK_DIV 0xD5        // Установить делитель тактовой частоты дисплея
#define SET_MULTIPLEX 0xA8                // Установить мультиплексное соотношение
#define SET_DISPLAY_OFFSET 0xD3            // Установить смещение дисплея
#define SET_START_LINE 0x40               // Установить начальную линию
#define CHARGE_PUMP 0x8D                  // Управление зарядным насосом
#define MEMORY_MODE 0x20                  // Установить режим памяти
#define SEG_REMAP 0xA0                    // Переключить отображение сегментов
#define COM_SCAN_DIR 0xC0                 // Установить направление сканирования COM
#define SET_COM_PINS 0xDA                 // Установить пины COM
#define SET_CONTRAST 0x81                 // Установить контрастность
#define PRECHARGE_PERIOD 0xD9             // Установить предзарядный период
#define VCOM_DETECT 0xDB                  // Установить детектор VCOM
#define DISPLAY_ALL_ON_RESUME 0xA4        // Возобновить отображение после полного включения
#define NORMAL_DISPLAY 0xA6               // Установить нормальный режим отображения
#define INVERT_DISPLAY 0xA7               // Инвертировать отображение
#define SET_PAGE_ADDRESS 0x22             // Установить адрес страницы
#define SET_COLUMN_ADDRESS 0x21           // Установить адрес столбца
#define SET_HIGH_COLUMN 0x10              // Установить высокий байт адреса столбца
#define SET_LOW_COLUMN 0x00               // Установить низкий байт адреса столбца
#define DEACTIVATE_SCROLL 0x2E             // Деактивировать прокрутку
#define ACTIVATE_SCROLL 0x2F               // Активировать прокрутку
#define SET_VERTICAL_SCROLL_AREA 0xA3      // Установить область вертикальной прокрутки
#define RIGHT_HORIZONTAL_SCROLL 0x26       // Горизонтальная прокрутка вправо
#define LEFT_HORIZONTAL_SCROLL 0x27        // Горизонтальная прокрутка влево
#define VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29 // Вертикальная и горизонтальная прокрутка вправо
#define VERTICAL_AND_LEFT_HORIZONTAL_SCROLL 0x2A  // Вертикальная и горизонтальная прокрутка влево
#define SET_PRECHARGE_VOLTAGE 0xBB         // Установить напряжение предзарядки
#define SET_VCOMH_DESELECT_LEVEL 0xBE      // Установить уровень VCOMH
#define SET_DISPLAY_START_LINE 0x40        // Установить начальную линию дисплея
#define SET_DISPLAY_MODE 0xA4               // Установить режим отображения
#define SET_INVERSE_DISPLAY 0xA7           // Установить инвертированный режим отображения
#define SET_NORMAL_DISPLAY 0xA6            // Установить нормальный режим отображения

//  _____ _____ _____ 
// |_   _|_   _|  ___|
//   | |   | | | |_   
//   | |   | | |  _|  
//   |_|   |_| |_|   

uint8_t ttf_eng_a[8] =
{
     0b00000000,
     0b01111110,
     0b01000010,
     0b01000010,
     0b01111110,
     0b01000010,
     0b01000010,
     0b00000000,
};
uint8_t ttf_eng_b[8] =
{
     0b00000000,
     0b01111100,
     0b01000010,
     0b01111100,
     0b01000010,
     0b01000010,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_c[8] =
{
     0b00000000,
     0b01111110,
     0b01000000,
     0b01000000,
     0b01000000,
     0b01000000,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_d[8] =
{
     0b00000000,
     0b01111100,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_e[8] =
{
     0b00000000,
     0b01111110,
     0b01000000,
     0b01111100,
     0b01000000,
     0b01000000,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_f[8] =
{
     0b00000000,
     0b01111110,
     0b01000000,
     0b01000000,
     0b01111100,
     0b01000000,
     0b01000000,
     0b00000000,
};
uint8_t ttf_eng_g[8] =
{
     0b00000000,
     0b01111110,
     0b01000010,
     0b01000000,
     0b01001110,
     0b01000010,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_h[8] =
{
     0b00000000,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01111110,
     0b01000010,
     0b01000010,
     0b00000000,
};
uint8_t ttf_eng_i[8] =
{
     0b00000000,
     0b01111110,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00011000,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_j[8] =
{
     0b00000000,
     0b00001100,
     0b00001100,
     0b00001100,
     0b00001100,
     0b01101100,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_k[8] =
{
     0b00000000,
     0b01100110,
     0b01101000,
     0b01110000,
     0b01110000,
     0b01101000,
     0b01100110,
     0b00000000,
};
uint8_t ttf_eng_l[8] =
{
     0b00000000,
     0b01000000,
     0b01000000,
     0b01000000,
     0b01000000,
     0b01000000,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_m[8] =
{
     0b00000000,
     0b01000010,
     0b01100110,
     0b01011010,
     0b01000010,
     0b01000010,
     0b01000010,
     0b00000000,
};
uint8_t ttf_eng_n[8] =
{
     0b00000000,
     0b01000010,
     0b01100010,
     0b01010010,
     0b01001010,
     0b01000110,
     0b01000010,
     0b00000000,
};
uint8_t ttf_eng_o[8] =
{
     0b00000000,
     0b01111110,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_p[8] =
{
     0b00000000,
     0b01111110,
     0b01000010,
     0b01000010,
     0b01111110,
     0b01000000,
     0b01000000,
     0b00000000,
};
uint8_t ttf_eng_q[8] =
{
     0b00000000,
     0b01111110,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01111110,
     0b00000100,
     0b00000000,
};
uint8_t ttf_eng_r[8] =
{
     0b00000000,
     0b01111110,
     0b01000010,
     0b01000010,
     0b01111100,
     0b01000010,
     0b01000010,
     0b00000000,
};
uint8_t ttf_eng_s[8] =
{
     0b00000000,
     0b00111110,
     0b01000000,
     0b00111100,
     0b00000010,
     0b00000010,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_t[8] =
{
     0b00000000,
     0b01111110,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00000000,
};
uint8_t ttf_eng_u[8] =
{
     0b00000000,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01000010,
     0b00111110,
     0b00000000,
};
uint8_t ttf_eng_v[8] =
{
     0b00000000,
     0b01000010,
     0b01000010,
     0b01000010,
     0b00100100,
     0b00100100,
     0b00011000,
     0b00000000,
};
uint8_t ttf_eng_w[8] =
{
     0b00000000,
     0b01000010,
     0b01000010,
     0b01000010,
     0b01011010,
     0b01011010,
     0b00100100,
     0b00000000,
};
uint8_t ttf_eng_x[8] =
{
     0b00000000,
     0b01000010,
     0b00100100,
     0b00011000,
     0b00011000,
     0b00100010,
     0b01000010,
     0b00000000,
};
uint8_t ttf_eng_y[8] =
{
     0b00000000,
     0b01000010,
     0b00100100,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00000000,
};
uint8_t ttf_eng_z[8] =
{
     0b00000000,
     0b01111110,
     0b00000100,
     0b00001000,
     0b00010000,
     0b00100000,
     0b01111110,
     0b00000000,
};
uint8_t ttf_eng_1[8] =
{
     0b00000000,
     0b00011000,
     0b00111000,
     0b00111000,
     0b00011000,
     0b00011000,
     0b00011000,
     0b00000000,
};
uint8_t ttf_eng_2[8] =
{
     0b00000000,
     0b00111000,
     0b01000100,
     0b00001000,
     0b00010000,
     0b00100000,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_3[8] =
{
     0b00000000,
     0b01111100,
     0b00000010,
     0b00111100,
     0b00000010,
     0b00000010,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_4[8] =
{
     0b00000000,
     0b01000010,
     0b01000010,
     0b01111110,
     0b00000010,
     0b00000010,
     0b00000010,
     0b00000000,
};
uint8_t ttf_eng_5[8] =
{
     0b00000000,
     0b01111110,
     0b01000000,
     0b01111100,
     0b00000010,
     0b00000010,
     0b01111100,
     0b00000000,
};
uint8_t ttf_eng_6[8] =
{
     0b00000000,
     0b00111100,
     0b01000000,
     0b01111100,
     0b01000010,
     0b01000010,
     0b00111100,
     0b00000000,
};
uint8_t ttf_eng_7[8] =
{
     0b00000000,
     0b01111110,
     0b00000010,
     0b00000100,
     0b00001000,
     0b00010000,
     0b00100000,
     0b00000000,
};
uint8_t ttf_eng_8[8] =
{
     0b00000000,
     0b00111100,
     0b01000010,
     0b00111100,
     0b01000010,
     0b01000010,
     0b00111100,
     0b00000000,
};
uint8_t ttf_eng_9[8] =
{
     0b00000000,
     0b00111100,
     0b01000010,
     0b01000010,
     0b00111110,
     0b00000010,
     0b00111100,
     0b00000000,
};
uint8_t ttf_eng_0[8] =
{
     0b00000000,
     0b00111100,
     0b01000110,
     0b01001010,
     0b01010010,
     0b01100010,
     0b00111100,
     0b00000000,
};
uint8_t ttf_eng_corner_left_up[8] =
{
     0b11111111,
     0b11111111,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
};
uint8_t ttf_eng_corner_right_up[8] =
{
     0b11111111,
     0b11111111,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
};
uint8_t ttf_eng_corner_left_down[8] =
{
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11111111,
     0b11111111,
};
uint8_t ttf_eng_corner_right_down[8] =
{
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b11111111,
     0b11111111,
};
uint8_t ttf_eng_line_right[8] =
{
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
     0b00000011,
};
uint8_t ttf_eng_line_left[8] =
{
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
     0b11000000,
};
uint8_t ttf_eng_line_up[8] =
{
     0b11111111,
     0b11111111,
     0b00000000,
     0b00000000,
     0b00000000,
     0b00000000,
     0b00000000,
     0b00000000,
};
uint8_t ttf_eng_line_down[8] =
{
     0b00000000,
     0b00000000,
     0b00000000,
     0b00000000,
     0b00000000,
     0b00000000,
     0b11111111,
     0b11111111,
     
};
//  ____  ____  _        _    ____  _   _ 
// / ___||  _ \| |      / \  / ___|| | | |
// \___ \| |_) | |     / _ \ \___ \| |_| |
//  ___) |  __/| |___ / ___ \ ___) |  _  |
// |____/|_|   |_____/_/   \_\____/|_| |_|

uint8_t main_buffer[512] =
{
0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x01,  
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD,  
0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD,  
0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,  
0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD,  
0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,  
0x01, 0x01, 0x01, 0x3D, 0x15, 0x3D, 0x01, 0x3D, 0x21, 0x21, 0x01, 0x3D, 0x15, 0x1D, 0x01, 0x3D,  
0x11, 0x3D, 0x01, 0x3D, 0x15, 0x3D, 0x01, 0x01, 0x3D, 0x25, 0x3D, 0x01, 0x05, 0x3D, 0x01, 0xFF,
0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,  
0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01,  
0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01,  
0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF,  
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,  
0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,  
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80,  
0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,  
0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0x80, 0x80,  
0x80, 0x80, 0x80, 0x80, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,  
0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xBF, 0xBF, 
0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0x80, 0x80, 0xB1, 0xB1, 0xBF, 0xBF, 0xBF, 0xB1, 0xB1, 0x80, 
0x80, 0xBF, 0xBF, 0x83, 0x83, 0xBF, 0xBE, 0x80, 0x80, 0xBF, 0xBF, 0xB3, 0xB3, 0xB3, 0xB3, 0x80, 
0x80, 0x80, 0x80, 0xB0, 0xB0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
};

#endif 