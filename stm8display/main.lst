                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gg
                                     13 	.globl _setup
                                     14 	.globl _tmr2_irq
                                     15 	.globl _menu_set_paragraph
                                     16 	.globl _menu_set_item_menu
                                     17 	.globl _menu_border_splash
                                     18 	.globl _menu_border
                                     19 	.globl _ssd1306_send_buffer
                                     20 	.globl _ssd1306_buffer_clean
                                     21 	.globl _set_bit
                                     22 	.globl _get_bit
                                     23 	.globl _i2c_irq
                                     24 	.globl _memset
                                     25 	.globl _TIM2_IRQ
                                     26 	.globl _paragraph_item
                                     27 	.globl _current_item
                                     28 	.globl _main_buffer
                                     29 	.globl _ttf_eng_line_down
                                     30 	.globl _ttf_eng_line_up
                                     31 	.globl _ttf_eng_line_left
                                     32 	.globl _ttf_eng_line_right
                                     33 	.globl _ttf_eng_corner_right_down
                                     34 	.globl _ttf_eng_corner_left_down
                                     35 	.globl _ttf_eng_corner_right_up
                                     36 	.globl _ttf_eng_corner_left_up
                                     37 	.globl _ttf_eng_0
                                     38 	.globl _ttf_eng_9
                                     39 	.globl _ttf_eng_8
                                     40 	.globl _ttf_eng_7
                                     41 	.globl _ttf_eng_6
                                     42 	.globl _ttf_eng_5
                                     43 	.globl _ttf_eng_4
                                     44 	.globl _ttf_eng_3
                                     45 	.globl _ttf_eng_2
                                     46 	.globl _ttf_eng_1
                                     47 	.globl _ttf_eng_z
                                     48 	.globl _ttf_eng_y
                                     49 	.globl _ttf_eng_x
                                     50 	.globl _ttf_eng_w
                                     51 	.globl _ttf_eng_v
                                     52 	.globl _ttf_eng_u
                                     53 	.globl _ttf_eng_t
                                     54 	.globl _ttf_eng_s
                                     55 	.globl _ttf_eng_r
                                     56 	.globl _ttf_eng_q
                                     57 	.globl _ttf_eng_p
                                     58 	.globl _ttf_eng_o
                                     59 	.globl _ttf_eng_n
                                     60 	.globl _ttf_eng_m
                                     61 	.globl _ttf_eng_l
                                     62 	.globl _ttf_eng_k
                                     63 	.globl _ttf_eng_j
                                     64 	.globl _ttf_eng_i
                                     65 	.globl _ttf_eng_h
                                     66 	.globl _ttf_eng_g
                                     67 	.globl _ttf_eng_f
                                     68 	.globl _ttf_eng_e
                                     69 	.globl _ttf_eng_d
                                     70 	.globl _ttf_eng_c
                                     71 	.globl _ttf_eng_b
                                     72 	.globl _ttf_eng_a
                                     73 	.globl _ttf_eng_void
                                     74 	.globl _I2C_IRQ
                                     75 	.globl _buf_size
                                     76 	.globl _buf_pos
                                     77 	.globl _rx_buf_pointer
                                     78 	.globl _tx_buf_pointer
                                     79 	.globl _uart_transmission_irq
                                     80 	.globl _uart_reciever_irq
                                     81 	.globl _uart_write_irq
                                     82 	.globl _uart_read_irq
                                     83 	.globl _uart_init
                                     84 	.globl _uart_read_byte
                                     85 	.globl _uart_write_byte
                                     86 	.globl _uart_write
                                     87 	.globl _uart_read
                                     88 	.globl _i2c_init
                                     89 	.globl _i2c_start
                                     90 	.globl _i2c_stop
                                     91 	.globl _i2c_send_address
                                     92 	.globl _i2c_read_byte
                                     93 	.globl _i2c_read
                                     94 	.globl _i2c_send_byte
                                     95 	.globl _i2c_write
                                     96 	.globl _i2c_scan
                                     97 	.globl _i2c_start_irq
                                     98 	.globl _i2c_stop_irq
                                     99 	.globl _ssd1306_init
                                    100 	.globl _ssd1306_set_params_to_write
                                    101 	.globl _ssd1306_draw_pixel
                                    102 	.globl _ssd1306_buffer_write
                                    103 	.globl _ssd1306_clean
                                    104 	.globl _delay_s
                                    105 	.globl _delay_ms
                                    106 ;--------------------------------------------------------
                                    107 ; ram data
                                    108 ;--------------------------------------------------------
                                    109 	.area DATA
      000000                        110 _tx_buf_pointer::
      000000                        111 	.ds 2
      000002                        112 _rx_buf_pointer::
      000002                        113 	.ds 2
      000004                        114 _buf_pos::
      000004                        115 	.ds 1
      000005                        116 _buf_size::
      000005                        117 	.ds 1
                                    118 ;--------------------------------------------------------
                                    119 ; ram data
                                    120 ;--------------------------------------------------------
                                    121 	.area INITIALIZED
      000000                        122 _I2C_IRQ::
      000000                        123 	.ds 1
      000001                        124 _ttf_eng_void::
      000001                        125 	.ds 8
      000009                        126 _ttf_eng_a::
      000009                        127 	.ds 8
      000011                        128 _ttf_eng_b::
      000011                        129 	.ds 8
      000019                        130 _ttf_eng_c::
      000019                        131 	.ds 8
      000021                        132 _ttf_eng_d::
      000021                        133 	.ds 8
      000029                        134 _ttf_eng_e::
      000029                        135 	.ds 8
      000031                        136 _ttf_eng_f::
      000031                        137 	.ds 8
      000039                        138 _ttf_eng_g::
      000039                        139 	.ds 8
      000041                        140 _ttf_eng_h::
      000041                        141 	.ds 8
      000049                        142 _ttf_eng_i::
      000049                        143 	.ds 8
      000051                        144 _ttf_eng_j::
      000051                        145 	.ds 8
      000059                        146 _ttf_eng_k::
      000059                        147 	.ds 8
      000061                        148 _ttf_eng_l::
      000061                        149 	.ds 8
      000069                        150 _ttf_eng_m::
      000069                        151 	.ds 8
      000071                        152 _ttf_eng_n::
      000071                        153 	.ds 8
      000079                        154 _ttf_eng_o::
      000079                        155 	.ds 8
      000081                        156 _ttf_eng_p::
      000081                        157 	.ds 8
      000089                        158 _ttf_eng_q::
      000089                        159 	.ds 8
      000091                        160 _ttf_eng_r::
      000091                        161 	.ds 8
      000099                        162 _ttf_eng_s::
      000099                        163 	.ds 8
      0000A1                        164 _ttf_eng_t::
      0000A1                        165 	.ds 8
      0000A9                        166 _ttf_eng_u::
      0000A9                        167 	.ds 8
      0000B1                        168 _ttf_eng_v::
      0000B1                        169 	.ds 8
      0000B9                        170 _ttf_eng_w::
      0000B9                        171 	.ds 8
      0000C1                        172 _ttf_eng_x::
      0000C1                        173 	.ds 8
      0000C9                        174 _ttf_eng_y::
      0000C9                        175 	.ds 8
      0000D1                        176 _ttf_eng_z::
      0000D1                        177 	.ds 8
      0000D9                        178 _ttf_eng_1::
      0000D9                        179 	.ds 8
      0000E1                        180 _ttf_eng_2::
      0000E1                        181 	.ds 8
      0000E9                        182 _ttf_eng_3::
      0000E9                        183 	.ds 8
      0000F1                        184 _ttf_eng_4::
      0000F1                        185 	.ds 8
      0000F9                        186 _ttf_eng_5::
      0000F9                        187 	.ds 8
      000101                        188 _ttf_eng_6::
      000101                        189 	.ds 8
      000109                        190 _ttf_eng_7::
      000109                        191 	.ds 8
      000111                        192 _ttf_eng_8::
      000111                        193 	.ds 8
      000119                        194 _ttf_eng_9::
      000119                        195 	.ds 8
      000121                        196 _ttf_eng_0::
      000121                        197 	.ds 8
      000129                        198 _ttf_eng_corner_left_up::
      000129                        199 	.ds 8
      000131                        200 _ttf_eng_corner_right_up::
      000131                        201 	.ds 8
      000139                        202 _ttf_eng_corner_left_down::
      000139                        203 	.ds 8
      000141                        204 _ttf_eng_corner_right_down::
      000141                        205 	.ds 8
      000149                        206 _ttf_eng_line_right::
      000149                        207 	.ds 8
      000151                        208 _ttf_eng_line_left::
      000151                        209 	.ds 8
      000159                        210 _ttf_eng_line_up::
      000159                        211 	.ds 8
      000161                        212 _ttf_eng_line_down::
      000161                        213 	.ds 8
      000169                        214 _main_buffer::
      000169                        215 	.ds 512
      000369                        216 _current_item::
      000369                        217 	.ds 1
      00036A                        218 _paragraph_item::
      00036A                        219 	.ds 1
      00036B                        220 _TIM2_IRQ::
      00036B                        221 	.ds 1
                                    222 ;--------------------------------------------------------
                                    223 ; Stack segment in internal ram
                                    224 ;--------------------------------------------------------
                                    225 	.area SSEG
      000000                        226 __start__stack:
      000000                        227 	.ds	1
                                    228 
                                    229 ;--------------------------------------------------------
                                    230 ; absolute external ram data
                                    231 ;--------------------------------------------------------
                                    232 	.area DABS (ABS)
                                    233 
                                    234 ; default segment ordering for linker
                                    235 	.area HOME
                                    236 	.area GSINIT
                                    237 	.area GSFINAL
                                    238 	.area CONST
                                    239 	.area INITIALIZER
                                    240 	.area CODE
                                    241 
                                    242 ;--------------------------------------------------------
                                    243 ; interrupt vector
                                    244 ;--------------------------------------------------------
                                    245 	.area HOME
      000000                        246 __interrupt_vect:
      000000 82v00u00u00            247 	int s_GSINIT ; reset
      000004 82 00 00 00            248 	int 0x000000 ; trap
      000008 82 00 00 00            249 	int 0x000000 ; int0
      00000C 82 00 00 00            250 	int 0x000000 ; int1
      000010 82 00 00 00            251 	int 0x000000 ; int2
      000014 82 00 00 00            252 	int 0x000000 ; int3
      000018 82 00 00 00            253 	int 0x000000 ; int4
      00001C 82 00 00 00            254 	int 0x000000 ; int5
      000020 82 00 00 00            255 	int 0x000000 ; int6
      000024 82 00 00 00            256 	int 0x000000 ; int7
      000028 82 00 00 00            257 	int 0x000000 ; int8
      00002C 82 00 00 00            258 	int 0x000000 ; int9
      000030 82 00 00 00            259 	int 0x000000 ; int10
      000034 82 00 00 00            260 	int 0x000000 ; int11
      000038 82 00 00 00            261 	int 0x000000 ; int12
      00003C 82v00u0AuC8            262 	int _tmr2_irq ; int13
      000040 82 00 00 00            263 	int 0x000000 ; int14
      000044 82 00 00 00            264 	int 0x000000 ; int15
      000048 82 00 00 00            265 	int 0x000000 ; int16
      00004C 82v00u00u00            266 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            267 	int _uart_reciever_irq ; int18
      000054 82v00u02u1E            268 	int _i2c_irq ; int19
                                    269 ;--------------------------------------------------------
                                    270 ; global & static initialisations
                                    271 ;--------------------------------------------------------
                                    272 	.area HOME
                                    273 	.area GSINIT
                                    274 	.area GSFINAL
                                    275 	.area GSINIT
      000000 CDr00r00         [ 4]  276 	call	___sdcc_external_startup
      000003 4D               [ 1]  277 	tnz	a
      000004 27 03            [ 1]  278 	jreq	__sdcc_init_data
      000006 CCr00r58         [ 2]  279 	jp	__sdcc_program_startup
      000009                        280 __sdcc_init_data:
                                    281 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  282 	ldw x, #l_DATA
      00000C 27 07            [ 1]  283 	jreq	00002$
      00000E                        284 00001$:
      00000E 72 4FuFFuFF      [ 1]  285 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  286 	decw x
      000013 26 F9            [ 1]  287 	jrne	00001$
      000015                        288 00002$:
      000015 AEr00r00         [ 2]  289 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  290 	jreq	00004$
      00001A                        291 00003$:
      00001A D6uFFuFF         [ 1]  292 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  293 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  294 	decw	x
      000021 26 F7            [ 1]  295 	jrne	00003$
      000023                        296 00004$:
                                    297 ; stm8_genXINIT() end
                                    298 	.area GSFINAL
      000000 CCr00r58         [ 2]  299 	jp	__sdcc_program_startup
                                    300 ;--------------------------------------------------------
                                    301 ; Home
                                    302 ;--------------------------------------------------------
                                    303 	.area HOME
                                    304 	.area HOME
      000058                        305 __sdcc_program_startup:
      000058 CCr0Br9A         [ 2]  306 	jp	_main
                                    307 ;	return from main will return to caller
                                    308 ;--------------------------------------------------------
                                    309 ; code
                                    310 ;--------------------------------------------------------
                                    311 	.area CODE
                                    312 ;	./libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    313 ;	-----------------------------------------
                                    314 ;	 function uart_transmission_irq
                                    315 ;	-----------------------------------------
      000000                        316 _uart_transmission_irq:
                                    317 ;	./libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  318 	ldw	x, #0x5230
      000003 F6               [ 1]  319 	ld	a, (x)
      000004 4E               [ 1]  320 	swap	a
      000005 44               [ 1]  321 	srl	a
      000006 44               [ 1]  322 	srl	a
      000007 44               [ 1]  323 	srl	a
      000008 A5 01            [ 1]  324 	bcp	a, #0x01
      00000A 27 2F            [ 1]  325 	jreq	00107$
                                    326 ;	./libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  327 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  328 	add	a, _buf_pos+0
      000012 97               [ 1]  329 	ld	xl, a
      000013 C6u00u00         [ 1]  330 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  331 	adc	a, #0x00
      000018 95               [ 1]  332 	ld	xh, a
      000019 F6               [ 1]  333 	ld	a, (x)
      00001A 27 1B            [ 1]  334 	jreq	00102$
      00001C C6u00u04         [ 1]  335 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  336 	cp	a, _buf_size+0
      000022 24 13            [ 1]  337 	jrnc	00102$
                                    338 ;	./libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  339 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  340 	inc	_buf_pos+0
      00002B 5F               [ 1]  341 	clrw	x
      00002C 97               [ 1]  342 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  343 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  344 	ld	a, (x)
      000032 C7 52 31         [ 1]  345 	ld	0x5231, a
      000035 20 04            [ 2]  346 	jra	00107$
      000037                        347 00102$:
                                    348 ;	./libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  349 	bres	0x5235, #7
      00003B                        350 00107$:
                                    351 ;	./libs/uart_lib.c: 14: }
      00003B 80               [11]  352 	iret
                                    353 ;	./libs/uart_lib.c: 16: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    354 ;	-----------------------------------------
                                    355 ;	 function uart_reciever_irq
                                    356 ;	-----------------------------------------
      00003C                        357 _uart_reciever_irq:
      00003C 88               [ 1]  358 	push	a
                                    359 ;	./libs/uart_lib.c: 20: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  360 	ld	a, 0x5230
      000040 4E               [ 1]  361 	swap	a
      000041 44               [ 1]  362 	srl	a
      000042 A5 01            [ 1]  363 	bcp	a, #0x01
      000044 27 27            [ 1]  364 	jreq	00107$
                                    365 ;	./libs/uart_lib.c: 22: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  366 	ld	a, 0x5231
                                    367 ;	./libs/uart_lib.c: 23: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  368 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  369 	cp	a, #0x0a
      00004D 27 1A            [ 1]  370 	jreq	00102$
      00004F C6u00u04         [ 1]  371 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  372 	cp	a, _buf_size+0
      000055 24 12            [ 1]  373 	jrnc	00102$
                                    374 ;	./libs/uart_lib.c: 24: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  375 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  376 	inc	_buf_pos+0
      00005E 5F               [ 1]  377 	clrw	x
      00005F 97               [ 1]  378 	ld	xl, a
      000060 72 BBu00u02      [ 2]  379 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  380 	ld	a, (0x01, sp)
      000066 F7               [ 1]  381 	ld	(x), a
      000067 20 04            [ 2]  382 	jra	00107$
      000069                        383 00102$:
                                    384 ;	./libs/uart_lib.c: 26: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  385 	bres	0x5235, #5
      00006D                        386 00107$:
                                    387 ;	./libs/uart_lib.c: 30: }
      00006D 84               [ 1]  388 	pop	a
      00006E 80               [11]  389 	iret
                                    390 ;	./libs/uart_lib.c: 32: void uart_write_irq(uint8_t *data_buf)
                                    391 ;	-----------------------------------------
                                    392 ;	 function uart_write_irq
                                    393 ;	-----------------------------------------
      00006F                        394 _uart_write_irq:
      00006F 52 02            [ 2]  395 	sub	sp, #2
                                    396 ;	./libs/uart_lib.c: 34: tx_buf_pointer = data_buf;
      000071 1F 01            [ 2]  397 	ldw	(0x01, sp), x
      000073 CFu00u00         [ 2]  398 	ldw	_tx_buf_pointer+0, x
                                    399 ;	./libs/uart_lib.c: 35: buf_pos = 0;
      000076 72 5Fu00u04      [ 1]  400 	clr	_buf_pos+0
                                    401 ;	./libs/uart_lib.c: 36: buf_size = 0;
      00007A 72 5Fu00u05      [ 1]  402 	clr	_buf_size+0
                                    403 ;	./libs/uart_lib.c: 37: while (data_buf[buf_size++] != '\0');
      00007E                        404 00101$:
      00007E C6u00u05         [ 1]  405 	ld	a, _buf_size+0
      000081 72 5Cu00u05      [ 1]  406 	inc	_buf_size+0
      000085 5F               [ 1]  407 	clrw	x
      000086 97               [ 1]  408 	ld	xl, a
      000087 72 FB 01         [ 2]  409 	addw	x, (0x01, sp)
      00008A F6               [ 1]  410 	ld	a, (x)
      00008B 26 F1            [ 1]  411 	jrne	00101$
                                    412 ;	./libs/uart_lib.c: 38: UART1_CR2 -> TIEN = 1;
      00008D 72 1E 52 35      [ 1]  413 	bset	0x5235, #7
                                    414 ;	./libs/uart_lib.c: 39: while(UART1_CR2 -> TIEN);
      000091                        415 00104$:
      000091 72 0E 52 35 FB   [ 2]  416 	btjt	0x5235, #7, 00104$
                                    417 ;	./libs/uart_lib.c: 40: }
      000096 5B 02            [ 2]  418 	addw	sp, #2
      000098 81               [ 4]  419 	ret
                                    420 ;	./libs/uart_lib.c: 41: void uart_read_irq(uint8_t *data_buf,int size)
                                    421 ;	-----------------------------------------
                                    422 ;	 function uart_read_irq
                                    423 ;	-----------------------------------------
      000099                        424 _uart_read_irq:
                                    425 ;	./libs/uart_lib.c: 43: rx_buf_pointer = data_buf;
      000099 CFu00u02         [ 2]  426 	ldw	_rx_buf_pointer+0, x
                                    427 ;	./libs/uart_lib.c: 44: buf_pos = 0;
      00009C 72 5Fu00u04      [ 1]  428 	clr	_buf_pos+0
                                    429 ;	./libs/uart_lib.c: 45: buf_size = size;
      0000A0 7B 04            [ 1]  430 	ld	a, (0x04, sp)
      0000A2 C7u00u05         [ 1]  431 	ld	_buf_size+0, a
                                    432 ;	./libs/uart_lib.c: 46: UART1_CR2 -> RIEN = 1;
      0000A5 72 1A 52 35      [ 1]  433 	bset	0x5235, #5
                                    434 ;	./libs/uart_lib.c: 47: while(UART1_CR2 -> RIEN);
      0000A9                        435 00101$:
      0000A9 C6 52 35         [ 1]  436 	ld	a, 0x5235
      0000AC 4E               [ 1]  437 	swap	a
      0000AD 44               [ 1]  438 	srl	a
      0000AE A4 01            [ 1]  439 	and	a, #0x01
      0000B0 26 F7            [ 1]  440 	jrne	00101$
                                    441 ;	./libs/uart_lib.c: 48: }
      0000B2 1E 01            [ 2]  442 	ldw	x, (1, sp)
      0000B4 5B 04            [ 2]  443 	addw	sp, #4
      0000B6 FC               [ 2]  444 	jp	(x)
                                    445 ;	./libs/uart_lib.c: 50: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    446 ;	-----------------------------------------
                                    447 ;	 function uart_init
                                    448 ;	-----------------------------------------
      0000B7                        449 _uart_init:
      0000B7 52 02            [ 2]  450 	sub	sp, #2
      0000B9 1F 01            [ 2]  451 	ldw	(0x01, sp), x
                                    452 ;	./libs/uart_lib.c: 54: UART1_CR2 -> TEN = 1; // Transmitter enable
      0000BB AE 52 35         [ 2]  453 	ldw	x, #0x5235
      0000BE 88               [ 1]  454 	push	a
      0000BF F6               [ 1]  455 	ld	a, (x)
      0000C0 AA 08            [ 1]  456 	or	a, #0x08
      0000C2 F7               [ 1]  457 	ld	(x), a
      0000C3 84               [ 1]  458 	pop	a
                                    459 ;	./libs/uart_lib.c: 55: UART1_CR2 -> REN = 1; // Receiver enable
      0000C4 AE 52 35         [ 2]  460 	ldw	x, #0x5235
      0000C7 88               [ 1]  461 	push	a
      0000C8 F6               [ 1]  462 	ld	a, (x)
      0000C9 AA 04            [ 1]  463 	or	a, #0x04
      0000CB F7               [ 1]  464 	ld	(x), a
      0000CC 84               [ 1]  465 	pop	a
                                    466 ;	./libs/uart_lib.c: 56: switch(stopbit)
      0000CD A1 02            [ 1]  467 	cp	a, #0x02
      0000CF 27 06            [ 1]  468 	jreq	00101$
      0000D1 A1 03            [ 1]  469 	cp	a, #0x03
      0000D3 27 0E            [ 1]  470 	jreq	00102$
      0000D5 20 16            [ 2]  471 	jra	00103$
                                    472 ;	./libs/uart_lib.c: 58: case 2:
      0000D7                        473 00101$:
                                    474 ;	./libs/uart_lib.c: 59: UART1_CR3 -> STOP = 2;
      0000D7 C6 52 36         [ 1]  475 	ld	a, 0x5236
      0000DA A4 CF            [ 1]  476 	and	a, #0xcf
      0000DC AA 20            [ 1]  477 	or	a, #0x20
      0000DE C7 52 36         [ 1]  478 	ld	0x5236, a
                                    479 ;	./libs/uart_lib.c: 60: break;
      0000E1 20 12            [ 2]  480 	jra	00104$
                                    481 ;	./libs/uart_lib.c: 61: case 3:
      0000E3                        482 00102$:
                                    483 ;	./libs/uart_lib.c: 62: UART1_CR3 -> STOP = 3;
      0000E3 C6 52 36         [ 1]  484 	ld	a, 0x5236
      0000E6 AA 30            [ 1]  485 	or	a, #0x30
      0000E8 C7 52 36         [ 1]  486 	ld	0x5236, a
                                    487 ;	./libs/uart_lib.c: 63: break;
      0000EB 20 08            [ 2]  488 	jra	00104$
                                    489 ;	./libs/uart_lib.c: 64: default:
      0000ED                        490 00103$:
                                    491 ;	./libs/uart_lib.c: 65: UART1_CR3 -> STOP = 0;
      0000ED C6 52 36         [ 1]  492 	ld	a, 0x5236
      0000F0 A4 CF            [ 1]  493 	and	a, #0xcf
      0000F2 C7 52 36         [ 1]  494 	ld	0x5236, a
                                    495 ;	./libs/uart_lib.c: 67: }
      0000F5                        496 00104$:
                                    497 ;	./libs/uart_lib.c: 68: switch(baudrate)
      0000F5 1E 01            [ 2]  498 	ldw	x, (0x01, sp)
      0000F7 A3 08 00         [ 2]  499 	cpw	x, #0x0800
      0000FA 26 03            [ 1]  500 	jrne	00186$
      0000FC CCr01r88         [ 2]  501 	jp	00110$
      0000FF                        502 00186$:
      0000FF 1E 01            [ 2]  503 	ldw	x, (0x01, sp)
      000101 A3 09 60         [ 2]  504 	cpw	x, #0x0960
      000104 27 28            [ 1]  505 	jreq	00105$
      000106 1E 01            [ 2]  506 	ldw	x, (0x01, sp)
      000108 A3 10 00         [ 2]  507 	cpw	x, #0x1000
      00010B 26 03            [ 1]  508 	jrne	00192$
      00010D CCr01r98         [ 2]  509 	jp	00111$
      000110                        510 00192$:
      000110 1E 01            [ 2]  511 	ldw	x, (0x01, sp)
      000112 A3 4B 00         [ 2]  512 	cpw	x, #0x4b00
      000115 27 31            [ 1]  513 	jreq	00106$
      000117 1E 01            [ 2]  514 	ldw	x, (0x01, sp)
      000119 A3 84 00         [ 2]  515 	cpw	x, #0x8400
      00011C 27 5A            [ 1]  516 	jreq	00109$
      00011E 1E 01            [ 2]  517 	ldw	x, (0x01, sp)
      000120 A3 C2 00         [ 2]  518 	cpw	x, #0xc200
      000123 27 43            [ 1]  519 	jreq	00108$
      000125 1E 01            [ 2]  520 	ldw	x, (0x01, sp)
      000127 A3 E1 00         [ 2]  521 	cpw	x, #0xe100
      00012A 27 2C            [ 1]  522 	jreq	00107$
      00012C 20 7A            [ 2]  523 	jra	00112$
                                    524 ;	./libs/uart_lib.c: 70: case (unsigned int)2400:
      00012E                        525 00105$:
                                    526 ;	./libs/uart_lib.c: 71: UART1_BRR2 -> MSB = 0x01;
      00012E C6 52 33         [ 1]  527 	ld	a, 0x5233
      000131 A4 0F            [ 1]  528 	and	a, #0x0f
      000133 AA 10            [ 1]  529 	or	a, #0x10
      000135 C7 52 33         [ 1]  530 	ld	0x5233, a
                                    531 ;	./libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0xA0;
      000138 35 A0 52 32      [ 1]  532 	mov	0x5232+0, #0xa0
                                    533 ;	./libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x0B; 
      00013C C6 52 33         [ 1]  534 	ld	a, 0x5233
      00013F A4 F0            [ 1]  535 	and	a, #0xf0
      000141 AA 0B            [ 1]  536 	or	a, #0x0b
      000143 C7 52 33         [ 1]  537 	ld	0x5233, a
                                    538 ;	./libs/uart_lib.c: 74: break;
      000146 20 6E            [ 2]  539 	jra	00114$
                                    540 ;	./libs/uart_lib.c: 75: case (unsigned int)19200:
      000148                        541 00106$:
                                    542 ;	./libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x34;
      000148 35 34 52 32      [ 1]  543 	mov	0x5232+0, #0x34
                                    544 ;	./libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      00014C C6 52 33         [ 1]  545 	ld	a, 0x5233
      00014F A4 F0            [ 1]  546 	and	a, #0xf0
      000151 AA 01            [ 1]  547 	or	a, #0x01
      000153 C7 52 33         [ 1]  548 	ld	0x5233, a
                                    549 ;	./libs/uart_lib.c: 78: break;
      000156 20 5E            [ 2]  550 	jra	00114$
                                    551 ;	./libs/uart_lib.c: 79: case (unsigned int)57600:
      000158                        552 00107$:
                                    553 ;	./libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x11;
      000158 35 11 52 32      [ 1]  554 	mov	0x5232+0, #0x11
                                    555 ;	./libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x06;
      00015C C6 52 33         [ 1]  556 	ld	a, 0x5233
      00015F A4 F0            [ 1]  557 	and	a, #0xf0
      000161 AA 06            [ 1]  558 	or	a, #0x06
      000163 C7 52 33         [ 1]  559 	ld	0x5233, a
                                    560 ;	./libs/uart_lib.c: 82: break;
      000166 20 4E            [ 2]  561 	jra	00114$
                                    562 ;	./libs/uart_lib.c: 83: case (unsigned int)115200:
      000168                        563 00108$:
                                    564 ;	./libs/uart_lib.c: 84: UART1_BRR1 -> DIV = 0x08;
      000168 35 08 52 32      [ 1]  565 	mov	0x5232+0, #0x08
                                    566 ;	./libs/uart_lib.c: 85: UART1_BRR2 -> LSB = 0x0B;
      00016C C6 52 33         [ 1]  567 	ld	a, 0x5233
      00016F A4 F0            [ 1]  568 	and	a, #0xf0
      000171 AA 0B            [ 1]  569 	or	a, #0x0b
      000173 C7 52 33         [ 1]  570 	ld	0x5233, a
                                    571 ;	./libs/uart_lib.c: 86: break;
      000176 20 3E            [ 2]  572 	jra	00114$
                                    573 ;	./libs/uart_lib.c: 87: case (unsigned int)230400:
      000178                        574 00109$:
                                    575 ;	./libs/uart_lib.c: 88: UART1_BRR1 -> DIV = 0x04;
      000178 35 04 52 32      [ 1]  576 	mov	0x5232+0, #0x04
                                    577 ;	./libs/uart_lib.c: 89: UART1_BRR2 -> LSB = 0x05;
      00017C C6 52 33         [ 1]  578 	ld	a, 0x5233
      00017F A4 F0            [ 1]  579 	and	a, #0xf0
      000181 AA 05            [ 1]  580 	or	a, #0x05
      000183 C7 52 33         [ 1]  581 	ld	0x5233, a
                                    582 ;	./libs/uart_lib.c: 90: break;
      000186 20 2E            [ 2]  583 	jra	00114$
                                    584 ;	./libs/uart_lib.c: 91: case (unsigned int)460800:
      000188                        585 00110$:
                                    586 ;	./libs/uart_lib.c: 92: UART1_BRR1 -> DIV = 0x02;
      000188 35 02 52 32      [ 1]  587 	mov	0x5232+0, #0x02
                                    588 ;	./libs/uart_lib.c: 93: UART1_BRR2 -> LSB = 0x03;
      00018C C6 52 33         [ 1]  589 	ld	a, 0x5233
      00018F A4 F0            [ 1]  590 	and	a, #0xf0
      000191 AA 03            [ 1]  591 	or	a, #0x03
      000193 C7 52 33         [ 1]  592 	ld	0x5233, a
                                    593 ;	./libs/uart_lib.c: 94: break;
      000196 20 1E            [ 2]  594 	jra	00114$
                                    595 ;	./libs/uart_lib.c: 95: case (unsigned int)921600:
      000198                        596 00111$:
                                    597 ;	./libs/uart_lib.c: 96: UART1_BRR1 -> DIV = 0x01;
      000198 35 01 52 32      [ 1]  598 	mov	0x5232+0, #0x01
                                    599 ;	./libs/uart_lib.c: 97: UART1_BRR2 -> LSB = 0x01;
      00019C C6 52 33         [ 1]  600 	ld	a, 0x5233
      00019F A4 F0            [ 1]  601 	and	a, #0xf0
      0001A1 AA 01            [ 1]  602 	or	a, #0x01
      0001A3 C7 52 33         [ 1]  603 	ld	0x5233, a
                                    604 ;	./libs/uart_lib.c: 98: break;
      0001A6 20 0E            [ 2]  605 	jra	00114$
                                    606 ;	./libs/uart_lib.c: 99: default:
      0001A8                        607 00112$:
                                    608 ;	./libs/uart_lib.c: 100: UART1_BRR1 -> DIV = 0x68;
      0001A8 35 68 52 32      [ 1]  609 	mov	0x5232+0, #0x68
                                    610 ;	./libs/uart_lib.c: 101: UART1_BRR2 -> LSB = 0x03;
      0001AC C6 52 33         [ 1]  611 	ld	a, 0x5233
      0001AF A4 F0            [ 1]  612 	and	a, #0xf0
      0001B1 AA 03            [ 1]  613 	or	a, #0x03
      0001B3 C7 52 33         [ 1]  614 	ld	0x5233, a
                                    615 ;	./libs/uart_lib.c: 103: }
      0001B6                        616 00114$:
                                    617 ;	./libs/uart_lib.c: 104: }
      0001B6 5B 02            [ 2]  618 	addw	sp, #2
      0001B8 81               [ 4]  619 	ret
                                    620 ;	./libs/uart_lib.c: 106: int uart_read_byte(uint8_t *data)
                                    621 ;	-----------------------------------------
                                    622 ;	 function uart_read_byte
                                    623 ;	-----------------------------------------
      0001B9                        624 _uart_read_byte:
                                    625 ;	./libs/uart_lib.c: 108: while(!(UART1_SR -> RXNE));
      0001B9                        626 00101$:
      0001B9 72 0B 52 30 FB   [ 2]  627 	btjf	0x5230, #5, 00101$
                                    628 ;	./libs/uart_lib.c: 110: return 1;
      0001BE 5F               [ 1]  629 	clrw	x
      0001BF 5C               [ 1]  630 	incw	x
                                    631 ;	./libs/uart_lib.c: 111: }
      0001C0 81               [ 4]  632 	ret
                                    633 ;	./libs/uart_lib.c: 113: int uart_write_byte(uint8_t data)
                                    634 ;	-----------------------------------------
                                    635 ;	 function uart_write_byte
                                    636 ;	-----------------------------------------
      0001C1                        637 _uart_write_byte:
                                    638 ;	./libs/uart_lib.c: 115: UART1_DR -> DR = data;
      0001C1 C7 52 31         [ 1]  639 	ld	0x5231, a
                                    640 ;	./libs/uart_lib.c: 116: while(!(UART1_SR -> TXE));
      0001C4                        641 00101$:
      0001C4 72 0F 52 30 FB   [ 2]  642 	btjf	0x5230, #7, 00101$
                                    643 ;	./libs/uart_lib.c: 117: return 1;
      0001C9 5F               [ 1]  644 	clrw	x
      0001CA 5C               [ 1]  645 	incw	x
                                    646 ;	./libs/uart_lib.c: 118: }
      0001CB 81               [ 4]  647 	ret
                                    648 ;	./libs/uart_lib.c: 120: int uart_write(uint8_t *data_buf)
                                    649 ;	-----------------------------------------
                                    650 ;	 function uart_write
                                    651 ;	-----------------------------------------
      0001CC                        652 _uart_write:
      0001CC 52 04            [ 2]  653 	sub	sp, #4
      0001CE 1F 01            [ 2]  654 	ldw	(0x01, sp), x
                                    655 ;	./libs/uart_lib.c: 122: int count = 0;
      0001D0 5F               [ 1]  656 	clrw	x
      0001D1 1F 03            [ 2]  657 	ldw	(0x03, sp), x
                                    658 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001D3 5F               [ 1]  659 	clrw	x
      0001D4                        660 00103$:
      0001D4 90 93            [ 1]  661 	ldw	y, x
      0001D6 72 F9 01         [ 2]  662 	addw	y, (0x01, sp)
      0001D9 90 F6            [ 1]  663 	ld	a, (y)
      0001DB 27 0E            [ 1]  664 	jreq	00101$
                                    665 ;	./libs/uart_lib.c: 124: count += uart_write_byte(data_buf[i]);
      0001DD 89               [ 2]  666 	pushw	x
      0001DE CDr01rC1         [ 4]  667 	call	_uart_write_byte
      0001E1 51               [ 1]  668 	exgw	x, y
      0001E2 85               [ 2]  669 	popw	x
      0001E3 72 F9 03         [ 2]  670 	addw	y, (0x03, sp)
      0001E6 17 03            [ 2]  671 	ldw	(0x03, sp), y
                                    672 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001E8 5C               [ 1]  673 	incw	x
      0001E9 20 E9            [ 2]  674 	jra	00103$
      0001EB                        675 00101$:
                                    676 ;	./libs/uart_lib.c: 125: return count;
      0001EB 1E 03            [ 2]  677 	ldw	x, (0x03, sp)
                                    678 ;	./libs/uart_lib.c: 126: }
      0001ED 5B 04            [ 2]  679 	addw	sp, #4
      0001EF 81               [ 4]  680 	ret
                                    681 ;	./libs/uart_lib.c: 127: int uart_read(uint8_t *data_buf,int size)
                                    682 ;	-----------------------------------------
                                    683 ;	 function uart_read
                                    684 ;	-----------------------------------------
      0001F0                        685 _uart_read:
      0001F0 52 04            [ 2]  686 	sub	sp, #4
      0001F2 1F 01            [ 2]  687 	ldw	(0x01, sp), x
                                    688 ;	./libs/uart_lib.c: 130: int count = 0;
      0001F4 5F               [ 1]  689 	clrw	x
      0001F5 1F 03            [ 2]  690 	ldw	(0x03, sp), x
                                    691 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001F7 5F               [ 1]  692 	clrw	x
      0001F8                        693 00103$:
      0001F8 90 93            [ 1]  694 	ldw	y, x
      0001FA 72 F9 01         [ 2]  695 	addw	y, (0x01, sp)
      0001FD 90 F6            [ 1]  696 	ld	a, (y)
      0001FF 27 13            [ 1]  697 	jreq	00101$
                                    698 ;	./libs/uart_lib.c: 132: count += uart_read_byte((unsigned char *)data_buf[i]);
      000201 90 5F            [ 1]  699 	clrw	y
      000203 90 97            [ 1]  700 	ld	yl, a
      000205 89               [ 2]  701 	pushw	x
      000206 93               [ 1]  702 	ldw	x, y
      000207 CDr01rB9         [ 4]  703 	call	_uart_read_byte
      00020A 51               [ 1]  704 	exgw	x, y
      00020B 85               [ 2]  705 	popw	x
      00020C 72 F9 03         [ 2]  706 	addw	y, (0x03, sp)
      00020F 17 03            [ 2]  707 	ldw	(0x03, sp), y
                                    708 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      000211 5C               [ 1]  709 	incw	x
      000212 20 E4            [ 2]  710 	jra	00103$
      000214                        711 00101$:
                                    712 ;	./libs/uart_lib.c: 133: return count;
      000214 1E 03            [ 2]  713 	ldw	x, (0x03, sp)
                                    714 ;	./libs/uart_lib.c: 134: }
      000216 5B 04            [ 2]  715 	addw	sp, #4
      000218 90 85            [ 2]  716 	popw	y
      00021A 5B 02            [ 2]  717 	addw	sp, #2
      00021C 90 FC            [ 2]  718 	jp	(y)
                                    719 ;	./libs/i2c_lib.c: 3: void i2c_irq(void) __interrupt(I2C_vector)
                                    720 ;	-----------------------------------------
                                    721 ;	 function i2c_irq
                                    722 ;	-----------------------------------------
      00021E                        723 _i2c_irq:
      00021E 4F               [ 1]  724 	clr	a
      00021F 62               [ 2]  725 	div	x, a
                                    726 ;	./libs/i2c_lib.c: 6: disableInterrupts();
      000220 9B               [ 1]  727 	sim
                                    728 ;	./libs/i2c_lib.c: 7: I2C_IRQ.all = 0;//обнуление флагов регистров
      000221 35 00u00u00      [ 1]  729 	mov	_I2C_IRQ+0, #0x00
                                    730 ;	./libs/i2c_lib.c: 9: if(I2C_SR1 -> ADDR)//прерывание адреса
      000225 AE 52 17         [ 2]  731 	ldw	x, #0x5217
      000228 F6               [ 1]  732 	ld	a, (x)
      000229 44               [ 1]  733 	srl	a
      00022A A4 01            [ 1]  734 	and	a, #0x01
      00022C 27 16            [ 1]  735 	jreq	00102$
                                    736 ;	./libs/i2c_lib.c: 11: clr_sr1();
      00022E C6 52 17         [ 1]  737 	ld	a,0x5217
                                    738 ;	./libs/i2c_lib.c: 12: I2C_IRQ.ADDR = 1;
      000231 72 12u00u00      [ 1]  739 	bset	_I2C_IRQ+0, #1
                                    740 ;	./libs/i2c_lib.c: 13: clr_sr3();//EV6
      000235 C6 52 19         [ 1]  741 	ld	a,0x5219
                                    742 ;	./libs/i2c_lib.c: 14: I2C_ITR -> ITEVTEN = 0;
      000238 72 13 52 1A      [ 1]  743 	bres	0x521a, #1
                                    744 ;	./libs/i2c_lib.c: 15: uart_write_byte(0xE1);
      00023C A6 E1            [ 1]  745 	ld	a, #0xe1
      00023E CDr01rC1         [ 4]  746 	call	_uart_write_byte
                                    747 ;	./libs/i2c_lib.c: 16: return;
      000241 CCr02rD7         [ 2]  748 	jp	00113$
      000244                        749 00102$:
                                    750 ;	./libs/i2c_lib.c: 19: if(I2C_SR1 -> TXE) //прерывание регистра данных(он пуст)
      000244 C6 52 17         [ 1]  751 	ld	a, 0x5217
      000247 4E               [ 1]  752 	swap	a
      000248 44               [ 1]  753 	srl	a
      000249 44               [ 1]  754 	srl	a
      00024A 44               [ 1]  755 	srl	a
      00024B A5 01            [ 1]  756 	bcp	a, #0x01
      00024D 27 17            [ 1]  757 	jreq	00104$
                                    758 ;	./libs/i2c_lib.c: 21: I2C_IRQ.TXE = 1;
      00024F 72 18u00u00      [ 1]  759 	bset	_I2C_IRQ+0, #4
                                    760 ;	./libs/i2c_lib.c: 22: I2C_ITR -> ITBUFEN = 0;
      000253 72 15 52 1A      [ 1]  761 	bres	0x521a, #2
                                    762 ;	./libs/i2c_lib.c: 23: I2C_ITR -> ITEVTEN = 0;
      000257 72 13 52 1A      [ 1]  763 	bres	0x521a, #1
                                    764 ;	./libs/i2c_lib.c: 24: I2C_ITR -> ITERREN = 0;
      00025B 72 11 52 1A      [ 1]  765 	bres	0x521a, #0
                                    766 ;	./libs/i2c_lib.c: 25: uart_write_byte(0xEA);
      00025F A6 EA            [ 1]  767 	ld	a, #0xea
      000261 CDr01rC1         [ 4]  768 	call	_uart_write_byte
                                    769 ;	./libs/i2c_lib.c: 26: return;
      000264 20 71            [ 2]  770 	jra	00113$
      000266                        771 00104$:
                                    772 ;	./libs/i2c_lib.c: 28: if(I2C_SR1 -> RXNE) //прерывание регистра данных(он не пуст)
      000266 C6 52 17         [ 1]  773 	ld	a, 0x5217
      000269 4E               [ 1]  774 	swap	a
      00026A 44               [ 1]  775 	srl	a
      00026B 44               [ 1]  776 	srl	a
      00026C A5 01            [ 1]  777 	bcp	a, #0x01
      00026E 27 17            [ 1]  778 	jreq	00106$
                                    779 ;	./libs/i2c_lib.c: 30: I2C_IRQ.RXNE = 1;
      000270 72 16u00u00      [ 1]  780 	bset	_I2C_IRQ+0, #3
                                    781 ;	./libs/i2c_lib.c: 31: I2C_ITR -> ITBUFEN = 0;
      000274 72 15 52 1A      [ 1]  782 	bres	0x521a, #2
                                    783 ;	./libs/i2c_lib.c: 32: I2C_ITR -> ITEVTEN = 0;
      000278 72 13 52 1A      [ 1]  784 	bres	0x521a, #1
                                    785 ;	./libs/i2c_lib.c: 33: I2C_ITR -> ITERREN = 0;
      00027C 72 11 52 1A      [ 1]  786 	bres	0x521a, #0
                                    787 ;	./libs/i2c_lib.c: 34: uart_write_byte(0xEB);
      000280 A6 EB            [ 1]  788 	ld	a, #0xeb
      000282 CDr01rC1         [ 4]  789 	call	_uart_write_byte
                                    790 ;	./libs/i2c_lib.c: 35: return;
      000285 20 50            [ 2]  791 	jra	00113$
      000287                        792 00106$:
                                    793 ;	./libs/i2c_lib.c: 38: if(I2C_SR1 -> SB)//EV5 прерывание стартового импульса
      000287 C6 52 17         [ 1]  794 	ld	a, 0x5217
      00028A A5 01            [ 1]  795 	bcp	a, #0x01
      00028C 27 0F            [ 1]  796 	jreq	00108$
                                    797 ;	./libs/i2c_lib.c: 40: I2C_IRQ.SB = 1;
      00028E 72 10u00u00      [ 1]  798 	bset	_I2C_IRQ+0, #0
                                    799 ;	./libs/i2c_lib.c: 41: I2C_ITR -> ITEVTEN = 0;
      000292 72 13 52 1A      [ 1]  800 	bres	0x521a, #1
                                    801 ;	./libs/i2c_lib.c: 42: uart_write_byte(0xE2);
      000296 A6 E2            [ 1]  802 	ld	a, #0xe2
      000298 CDr01rC1         [ 4]  803 	call	_uart_write_byte
                                    804 ;	./libs/i2c_lib.c: 43: return;
      00029B 20 3A            [ 2]  805 	jra	00113$
      00029D                        806 00108$:
                                    807 ;	./libs/i2c_lib.c: 45: if(I2C_SR1 -> BTF) //прерывание отправки данных
      00029D C6 52 17         [ 1]  808 	ld	a, 0x5217
      0002A0 44               [ 1]  809 	srl	a
      0002A1 44               [ 1]  810 	srl	a
      0002A2 A5 01            [ 1]  811 	bcp	a, #0x01
      0002A4 27 0F            [ 1]  812 	jreq	00110$
                                    813 ;	./libs/i2c_lib.c: 47: I2C_IRQ.BTF = 1;
      0002A6 72 14u00u00      [ 1]  814 	bset	_I2C_IRQ+0, #2
                                    815 ;	./libs/i2c_lib.c: 48: I2C_ITR -> ITEVTEN = 0;
      0002AA 72 13 52 1A      [ 1]  816 	bres	0x521a, #1
                                    817 ;	./libs/i2c_lib.c: 49: uart_write_byte(0xE3);
      0002AE A6 E3            [ 1]  818 	ld	a, #0xe3
      0002B0 CDr01rC1         [ 4]  819 	call	_uart_write_byte
                                    820 ;	./libs/i2c_lib.c: 50: return;
      0002B3 20 22            [ 2]  821 	jra	00113$
      0002B5                        822 00110$:
                                    823 ;	./libs/i2c_lib.c: 53: if(I2C_SR2 -> AF) //прерывание ошибки NACK
      0002B5 AE 52 18         [ 2]  824 	ldw	x, #0x5218
      0002B8 F6               [ 1]  825 	ld	a, (x)
      0002B9 44               [ 1]  826 	srl	a
      0002BA 44               [ 1]  827 	srl	a
      0002BB A4 01            [ 1]  828 	and	a, #0x01
      0002BD 27 17            [ 1]  829 	jreq	00112$
                                    830 ;	./libs/i2c_lib.c: 55: I2C_IRQ.AF = 1;
      0002BF 72 1Au00u00      [ 1]  831 	bset	_I2C_IRQ+0, #5
                                    832 ;	./libs/i2c_lib.c: 56: I2C_ITR -> ITEVTEN = 0;
      0002C3 72 13 52 1A      [ 1]  833 	bres	0x521a, #1
                                    834 ;	./libs/i2c_lib.c: 57: I2C_ITR -> ITERREN = 0;
      0002C7 72 11 52 1A      [ 1]  835 	bres	0x521a, #0
                                    836 ;	./libs/i2c_lib.c: 58: I2C_ITR -> ITBUFEN = 0;
      0002CB 72 15 52 1A      [ 1]  837 	bres	0x521a, #2
                                    838 ;	./libs/i2c_lib.c: 59: uart_write_byte(0xEE);
      0002CF A6 EE            [ 1]  839 	ld	a, #0xee
      0002D1 CDr01rC1         [ 4]  840 	call	_uart_write_byte
                                    841 ;	./libs/i2c_lib.c: 60: return;
      0002D4 20 01            [ 2]  842 	jra	00113$
      0002D6                        843 00112$:
                                    844 ;	./libs/i2c_lib.c: 63: enableInterrupts(); 
      0002D6 9A               [ 1]  845 	rim
      0002D7                        846 00113$:
                                    847 ;	./libs/i2c_lib.c: 64: }
      0002D7 80               [11]  848 	iret
                                    849 ;	./libs/i2c_lib.c: 66: void i2c_init(void)
                                    850 ;	-----------------------------------------
                                    851 ;	 function i2c_init
                                    852 ;	-----------------------------------------
      0002D8                        853 _i2c_init:
                                    854 ;	./libs/i2c_lib.c: 70: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      0002D8 72 11 52 10      [ 1]  855 	bres	0x5210, #0
                                    856 ;	./libs/i2c_lib.c: 71: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      0002DC C6 52 12         [ 1]  857 	ld	a, 0x5212
      0002DF A4 C0            [ 1]  858 	and	a, #0xc0
      0002E1 AA 10            [ 1]  859 	or	a, #0x10
      0002E3 C7 52 12         [ 1]  860 	ld	0x5212, a
                                    861 ;	./libs/i2c_lib.c: 72: I2C_CCRH -> CCR = 0;// =0
      0002E6 C6 52 1C         [ 1]  862 	ld	a, 0x521c
      0002E9 A4 F0            [ 1]  863 	and	a, #0xf0
      0002EB C7 52 1C         [ 1]  864 	ld	0x521c, a
                                    865 ;	./libs/i2c_lib.c: 73: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      0002EE 35 50 52 1B      [ 1]  866 	mov	0x521b+0, #0x50
                                    867 ;	./libs/i2c_lib.c: 74: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      0002F2 72 1F 52 1C      [ 1]  868 	bres	0x521c, #7
                                    869 ;	./libs/i2c_lib.c: 75: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      0002F6 72 1F 52 14      [ 1]  870 	bres	0x5214, #7
                                    871 ;	./libs/i2c_lib.c: 76: I2C_OARH -> ADDCONF = 1;// see reference manual
      0002FA 72 10 52 14      [ 1]  872 	bset	0x5214, #0
                                    873 ;	./libs/i2c_lib.c: 77: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      0002FE 72 10 52 10      [ 1]  874 	bset	0x5210, #0
                                    875 ;	./libs/i2c_lib.c: 78: }
      000302 81               [ 4]  876 	ret
                                    877 ;	./libs/i2c_lib.c: 80: void i2c_start(void)
                                    878 ;	-----------------------------------------
                                    879 ;	 function i2c_start
                                    880 ;	-----------------------------------------
      000303                        881 _i2c_start:
                                    882 ;	./libs/i2c_lib.c: 82: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000303 72 10 52 11      [ 1]  883 	bset	0x5211, #0
                                    884 ;	./libs/i2c_lib.c: 83: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      000307                        885 00101$:
      000307 72 01 52 17 FB   [ 2]  886 	btjf	0x5217, #0, 00101$
                                    887 ;	./libs/i2c_lib.c: 84: }
      00030C 81               [ 4]  888 	ret
                                    889 ;	./libs/i2c_lib.c: 86: void i2c_stop(void)
                                    890 ;	-----------------------------------------
                                    891 ;	 function i2c_stop
                                    892 ;	-----------------------------------------
      00030D                        893 _i2c_stop:
                                    894 ;	./libs/i2c_lib.c: 88: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00030D 72 12 52 11      [ 1]  895 	bset	0x5211, #1
                                    896 ;	./libs/i2c_lib.c: 89: }
      000311 81               [ 4]  897 	ret
                                    898 ;	./libs/i2c_lib.c: 91: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                    899 ;	-----------------------------------------
                                    900 ;	 function i2c_send_address
                                    901 ;	-----------------------------------------
      000312                        902 _i2c_send_address:
                                    903 ;	./libs/i2c_lib.c: 96: address = address << 1;
      000312 48               [ 1]  904 	sll	a
                                    905 ;	./libs/i2c_lib.c: 93: switch(rw_type)
      000313 88               [ 1]  906 	push	a
      000314 7B 04            [ 1]  907 	ld	a, (0x04, sp)
      000316 4A               [ 1]  908 	dec	a
      000317 84               [ 1]  909 	pop	a
      000318 26 02            [ 1]  910 	jrne	00102$
                                    911 ;	./libs/i2c_lib.c: 96: address = address << 1;
                                    912 ;	./libs/i2c_lib.c: 97: address |= 0x01; // Отправка адреса устройства с битом на чтение
      00031A AA 01            [ 1]  913 	or	a, #0x01
                                    914 ;	./libs/i2c_lib.c: 98: break;
                                    915 ;	./libs/i2c_lib.c: 99: default:
                                    916 ;	./libs/i2c_lib.c: 100: address = address << 1; // Отправка адреса устройства с битом на запись
                                    917 ;	./libs/i2c_lib.c: 102: }
      00031C                        918 00102$:
                                    919 ;	./libs/i2c_lib.c: 103: i2c_start();
      00031C 88               [ 1]  920 	push	a
      00031D CDr03r03         [ 4]  921 	call	_i2c_start
      000320 84               [ 1]  922 	pop	a
                                    923 ;	./libs/i2c_lib.c: 104: I2C_DR -> DR = address;
      000321 C7 52 16         [ 1]  924 	ld	0x5216, a
                                    925 ;	./libs/i2c_lib.c: 105: while(!I2C_SR1 -> ADDR)
      000324                        926 00106$:
      000324 AE 52 17         [ 2]  927 	ldw	x, #0x5217
      000327 F6               [ 1]  928 	ld	a, (x)
      000328 44               [ 1]  929 	srl	a
      000329 A4 01            [ 1]  930 	and	a, #0x01
      00032B 26 08            [ 1]  931 	jrne	00108$
                                    932 ;	./libs/i2c_lib.c: 106: if(I2C_SR2 -> AF)
      00032D 72 05 52 18 F2   [ 2]  933 	btjf	0x5218, #2, 00106$
                                    934 ;	./libs/i2c_lib.c: 107: return 0;
      000332 4F               [ 1]  935 	clr	a
      000333 20 08            [ 2]  936 	jra	00109$
      000335                        937 00108$:
                                    938 ;	./libs/i2c_lib.c: 108: clr_sr1();
      000335 C6 52 17         [ 1]  939 	ld	a,0x5217
                                    940 ;	./libs/i2c_lib.c: 109: clr_sr3();
      000338 C6 52 19         [ 1]  941 	ld	a,0x5219
                                    942 ;	./libs/i2c_lib.c: 110: return 1;
      00033B A6 01            [ 1]  943 	ld	a, #0x01
      00033D                        944 00109$:
                                    945 ;	./libs/i2c_lib.c: 111: }
      00033D 85               [ 2]  946 	popw	x
      00033E 5B 01            [ 2]  947 	addw	sp, #1
      000340 FC               [ 2]  948 	jp	(x)
                                    949 ;	./libs/i2c_lib.c: 113: uint8_t i2c_read_byte(void)
                                    950 ;	-----------------------------------------
                                    951 ;	 function i2c_read_byte
                                    952 ;	-----------------------------------------
      000341                        953 _i2c_read_byte:
                                    954 ;	./libs/i2c_lib.c: 115: while(!I2C_SR1 -> RXNE);
      000341                        955 00101$:
      000341 72 0D 52 17 FB   [ 2]  956 	btjf	0x5217, #6, 00101$
                                    957 ;	./libs/i2c_lib.c: 116: return I2C_DR -> DR;
      000346 C6 52 16         [ 1]  958 	ld	a, 0x5216
                                    959 ;	./libs/i2c_lib.c: 117: }
      000349 81               [ 4]  960 	ret
                                    961 ;	./libs/i2c_lib.c: 119: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                    962 ;	-----------------------------------------
                                    963 ;	 function i2c_read
                                    964 ;	-----------------------------------------
      00034A                        965 _i2c_read:
      00034A 52 04            [ 2]  966 	sub	sp, #4
                                    967 ;	./libs/i2c_lib.c: 121: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      00034C 4B 01            [ 1]  968 	push	#0x01
      00034E CDr03r12         [ 4]  969 	call	_i2c_send_address
      000351 4D               [ 1]  970 	tnz	a
      000352 27 3C            [ 1]  971 	jreq	00103$
                                    972 ;	./libs/i2c_lib.c: 123: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      000354 72 14 52 11      [ 1]  973 	bset	0x5211, #2
                                    974 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000358 5F               [ 1]  975 	clrw	x
      000359 1F 03            [ 2]  976 	ldw	(0x03, sp), x
      00035B                        977 00105$:
      00035B 5F               [ 1]  978 	clrw	x
      00035C 7B 07            [ 1]  979 	ld	a, (0x07, sp)
      00035E 97               [ 1]  980 	ld	xl, a
      00035F 5A               [ 2]  981 	decw	x
      000360 1F 01            [ 2]  982 	ldw	(0x01, sp), x
      000362 1E 03            [ 2]  983 	ldw	x, (0x03, sp)
      000364 13 01            [ 2]  984 	cpw	x, (0x01, sp)
      000366 2E 12            [ 1]  985 	jrsge	00101$
                                    986 ;	./libs/i2c_lib.c: 126: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      000368 1E 08            [ 2]  987 	ldw	x, (0x08, sp)
      00036A 72 FB 03         [ 2]  988 	addw	x, (0x03, sp)
      00036D 89               [ 2]  989 	pushw	x
      00036E CDr03r41         [ 4]  990 	call	_i2c_read_byte
      000371 85               [ 2]  991 	popw	x
      000372 F7               [ 1]  992 	ld	(x), a
                                    993 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000373 1E 03            [ 2]  994 	ldw	x, (0x03, sp)
      000375 5C               [ 1]  995 	incw	x
      000376 1F 03            [ 2]  996 	ldw	(0x03, sp), x
      000378 20 E1            [ 2]  997 	jra	00105$
      00037A                        998 00101$:
                                    999 ;	./libs/i2c_lib.c: 128: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      00037A C6 52 11         [ 1] 1000 	ld	a, 0x5211
      00037D A4 FB            [ 1] 1001 	and	a, #0xfb
      00037F C7 52 11         [ 1] 1002 	ld	0x5211, a
                                   1003 ;	./libs/i2c_lib.c: 130: data[size-1] = i2c_read_byte();
      000382 1E 08            [ 2] 1004 	ldw	x, (0x08, sp)
      000384 72 FB 01         [ 2] 1005 	addw	x, (0x01, sp)
      000387 89               [ 2] 1006 	pushw	x
      000388 CDr03r41         [ 4] 1007 	call	_i2c_read_byte
      00038B 85               [ 2] 1008 	popw	x
      00038C F7               [ 1] 1009 	ld	(x), a
                                   1010 ;	./libs/i2c_lib.c: 132: i2c_stop();
      00038D CDr03r0D         [ 4] 1011 	call	_i2c_stop
      000390                       1012 00103$:
                                   1013 ;	./libs/i2c_lib.c: 135: i2c_stop();
      000390 1E 05            [ 2] 1014 	ldw	x, (5, sp)
      000392 1F 08            [ 2] 1015 	ldw	(8, sp), x
      000394 5B 07            [ 2] 1016 	addw	sp, #7
                                   1017 ;	./libs/i2c_lib.c: 137: }
      000396 CCr03r0D         [ 2] 1018 	jp	_i2c_stop
                                   1019 ;	./libs/i2c_lib.c: 139: uint8_t i2c_send_byte(uint8_t data)
                                   1020 ;	-----------------------------------------
                                   1021 ;	 function i2c_send_byte
                                   1022 ;	-----------------------------------------
      000399                       1023 _i2c_send_byte:
                                   1024 ;	./libs/i2c_lib.c: 141: I2C_DR -> DR = data; //Отправка данных
      000399 C7 52 16         [ 1] 1025 	ld	0x5216, a
                                   1026 ;	./libs/i2c_lib.c: 142: while(!I2C_SR1 -> TXE)
      00039C                       1027 00103$:
      00039C 72 0E 52 17 08   [ 2] 1028 	btjt	0x5217, #7, 00105$
                                   1029 ;	./libs/i2c_lib.c: 143: if(I2C_SR2 -> AF)
      0003A1 72 05 52 18 F6   [ 2] 1030 	btjf	0x5218, #2, 00103$
                                   1031 ;	./libs/i2c_lib.c: 144: return 1;
      0003A6 A6 01            [ 1] 1032 	ld	a, #0x01
      0003A8 81               [ 4] 1033 	ret
      0003A9                       1034 00105$:
                                   1035 ;	./libs/i2c_lib.c: 145: return 0;//флаг ответа
      0003A9 4F               [ 1] 1036 	clr	a
                                   1037 ;	./libs/i2c_lib.c: 146: }
      0003AA 81               [ 4] 1038 	ret
                                   1039 ;	./libs/i2c_lib.c: 148: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                   1040 ;	-----------------------------------------
                                   1041 ;	 function i2c_write
                                   1042 ;	-----------------------------------------
      0003AB                       1043 _i2c_write:
      0003AB 52 02            [ 2] 1044 	sub	sp, #2
                                   1045 ;	./libs/i2c_lib.c: 150: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      0003AD 4B 00            [ 1] 1046 	push	#0x00
      0003AF CDr03r12         [ 4] 1047 	call	_i2c_send_address
      0003B2 4D               [ 1] 1048 	tnz	a
      0003B3 27 1D            [ 1] 1049 	jreq	00105$
                                   1050 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003B5 5F               [ 1] 1051 	clrw	x
      0003B6                       1052 00107$:
      0003B6 7B 05            [ 1] 1053 	ld	a, (0x05, sp)
      0003B8 6B 02            [ 1] 1054 	ld	(0x02, sp), a
      0003BA 0F 01            [ 1] 1055 	clr	(0x01, sp)
      0003BC 13 01            [ 2] 1056 	cpw	x, (0x01, sp)
      0003BE 2E 12            [ 1] 1057 	jrsge	00105$
                                   1058 ;	./libs/i2c_lib.c: 153: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      0003C0 90 93            [ 1] 1059 	ldw	y, x
      0003C2 72 F9 06         [ 2] 1060 	addw	y, (0x06, sp)
      0003C5 90 F6            [ 1] 1061 	ld	a, (y)
      0003C7 89               [ 2] 1062 	pushw	x
      0003C8 CDr03r99         [ 4] 1063 	call	_i2c_send_byte
      0003CB 85               [ 2] 1064 	popw	x
      0003CC 4D               [ 1] 1065 	tnz	a
      0003CD 26 03            [ 1] 1066 	jrne	00105$
                                   1067 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003CF 5C               [ 1] 1068 	incw	x
      0003D0 20 E4            [ 2] 1069 	jra	00107$
      0003D2                       1070 00105$:
                                   1071 ;	./libs/i2c_lib.c: 158: i2c_stop();
      0003D2 1E 03            [ 2] 1072 	ldw	x, (3, sp)
      0003D4 1F 06            [ 2] 1073 	ldw	(6, sp), x
      0003D6 5B 05            [ 2] 1074 	addw	sp, #5
                                   1075 ;	./libs/i2c_lib.c: 159: }
      0003D8 CCr03r0D         [ 2] 1076 	jp	_i2c_stop
                                   1077 ;	./libs/i2c_lib.c: 161: uint8_t i2c_scan(void) 
                                   1078 ;	-----------------------------------------
                                   1079 ;	 function i2c_scan
                                   1080 ;	-----------------------------------------
      0003DB                       1081 _i2c_scan:
      0003DB 52 02            [ 2] 1082 	sub	sp, #2
                                   1083 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      0003DD A6 01            [ 1] 1084 	ld	a, #0x01
      0003DF 6B 01            [ 1] 1085 	ld	(0x01, sp), a
      0003E1                       1086 00105$:
      0003E1 A1 7F            [ 1] 1087 	cp	a, #0x7f
      0003E3 24 22            [ 1] 1088 	jrnc	00103$
                                   1089 ;	./libs/i2c_lib.c: 165: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      0003E5 88               [ 1] 1090 	push	a
      0003E6 4B 00            [ 1] 1091 	push	#0x00
      0003E8 CDr03r12         [ 4] 1092 	call	_i2c_send_address
      0003EB 6B 03            [ 1] 1093 	ld	(0x03, sp), a
      0003ED 84               [ 1] 1094 	pop	a
      0003EE 0D 02            [ 1] 1095 	tnz	(0x02, sp)
      0003F0 27 07            [ 1] 1096 	jreq	00102$
                                   1097 ;	./libs/i2c_lib.c: 167: i2c_stop();//адрес совпал 
      0003F2 CDr03r0D         [ 4] 1098 	call	_i2c_stop
                                   1099 ;	./libs/i2c_lib.c: 168: return addr;// выход из цикла
      0003F5 7B 01            [ 1] 1100 	ld	a, (0x01, sp)
      0003F7 20 12            [ 2] 1101 	jra	00107$
      0003F9                       1102 00102$:
                                   1103 ;	./libs/i2c_lib.c: 170: I2C_SR2 -> AF = 0;//очистка флага ошибки
      0003F9 AE 52 18         [ 2] 1104 	ldw	x, #0x5218
      0003FC 88               [ 1] 1105 	push	a
      0003FD F6               [ 1] 1106 	ld	a, (x)
      0003FE A4 FB            [ 1] 1107 	and	a, #0xfb
      000400 F7               [ 1] 1108 	ld	(x), a
      000401 84               [ 1] 1109 	pop	a
                                   1110 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      000402 4C               [ 1] 1111 	inc	a
      000403 6B 01            [ 1] 1112 	ld	(0x01, sp), a
      000405 20 DA            [ 2] 1113 	jra	00105$
      000407                       1114 00103$:
                                   1115 ;	./libs/i2c_lib.c: 172: i2c_stop();//совпадений нет выход из функции
      000407 CDr03r0D         [ 4] 1116 	call	_i2c_stop
                                   1117 ;	./libs/i2c_lib.c: 173: return 0;
      00040A 4F               [ 1] 1118 	clr	a
      00040B                       1119 00107$:
                                   1120 ;	./libs/i2c_lib.c: 174: }
      00040B 5B 02            [ 2] 1121 	addw	sp, #2
      00040D 81               [ 4] 1122 	ret
                                   1123 ;	./libs/i2c_lib.c: 176: void i2c_start_irq(void)
                                   1124 ;	-----------------------------------------
                                   1125 ;	 function i2c_start_irq
                                   1126 ;	-----------------------------------------
      00040E                       1127 _i2c_start_irq:
                                   1128 ;	./libs/i2c_lib.c: 179: I2C_ITR -> ITEVTEN = 1;//Включение прерываний для обработки сигнала старт
      00040E 72 12 52 1A      [ 1] 1129 	bset	0x521a, #1
                                   1130 ;	./libs/i2c_lib.c: 180: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000412 72 10 52 11      [ 1] 1131 	bset	0x5211, #0
                                   1132 ;	./libs/i2c_lib.c: 181: while(I2C_ITR -> ITEVTEN);// Ожидание отправки стартового сигнала
      000416                       1133 00101$:
      000416 C6 52 1A         [ 1] 1134 	ld	a, 0x521a
      000419 A5 02            [ 1] 1135 	bcp	a, #2
      00041B 26 F9            [ 1] 1136 	jrne	00101$
                                   1137 ;	./libs/i2c_lib.c: 182: }
      00041D 81               [ 4] 1138 	ret
                                   1139 ;	./libs/i2c_lib.c: 184: void i2c_stop_irq(void)
                                   1140 ;	-----------------------------------------
                                   1141 ;	 function i2c_stop_irq
                                   1142 ;	-----------------------------------------
      00041E                       1143 _i2c_stop_irq:
                                   1144 ;	./libs/i2c_lib.c: 186: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00041E 72 12 52 11      [ 1] 1145 	bset	0x5211, #1
                                   1146 ;	./libs/i2c_lib.c: 187: }
      000422 81               [ 4] 1147 	ret
                                   1148 ;	./libs/ssd1306_lib.c: 3: int get_bit(int data,int bit)
                                   1149 ;	-----------------------------------------
                                   1150 ;	 function get_bit
                                   1151 ;	-----------------------------------------
      000423                       1152 _get_bit:
                                   1153 ;	./libs/ssd1306_lib.c: 5: return ((data >> bit) & 1) ? 1 : 0;
      000423 7B 04            [ 1] 1154 	ld	a, (0x04, sp)
      000425 27 04            [ 1] 1155 	jreq	00113$
      000427                       1156 00112$:
      000427 57               [ 2] 1157 	sraw	x
      000428 4A               [ 1] 1158 	dec	a
      000429 26 FC            [ 1] 1159 	jrne	00112$
      00042B                       1160 00113$:
      00042B 54               [ 2] 1161 	srlw	x
      00042C 24 03            [ 1] 1162 	jrnc	00103$
      00042E 5F               [ 1] 1163 	clrw	x
      00042F 5C               [ 1] 1164 	incw	x
      000430 21                    1165 	.byte 0x21
      000431                       1166 00103$:
      000431 5F               [ 1] 1167 	clrw	x
      000432                       1168 00104$:
                                   1169 ;	./libs/ssd1306_lib.c: 6: }
      000432 90 85            [ 2] 1170 	popw	y
      000434 5B 02            [ 2] 1171 	addw	sp, #2
      000436 90 FC            [ 2] 1172 	jp	(y)
                                   1173 ;	./libs/ssd1306_lib.c: 7: int set_bit(int data,int bit, int value)
                                   1174 ;	-----------------------------------------
                                   1175 ;	 function set_bit
                                   1176 ;	-----------------------------------------
      000438                       1177 _set_bit:
      000438 52 04            [ 2] 1178 	sub	sp, #4
      00043A 1F 01            [ 2] 1179 	ldw	(0x01, sp), x
                                   1180 ;	./libs/ssd1306_lib.c: 9: int mask = 1 << bit ;
      00043C 5F               [ 1] 1181 	clrw	x
      00043D 5C               [ 1] 1182 	incw	x
      00043E 1F 03            [ 2] 1183 	ldw	(0x03, sp), x
      000440 7B 08            [ 1] 1184 	ld	a, (0x08, sp)
      000442 27 07            [ 1] 1185 	jreq	00114$
      000444                       1186 00113$:
      000444 08 04            [ 1] 1187 	sll	(0x04, sp)
      000446 09 03            [ 1] 1188 	rlc	(0x03, sp)
      000448 4A               [ 1] 1189 	dec	a
      000449 26 F9            [ 1] 1190 	jrne	00113$
      00044B                       1191 00114$:
                                   1192 ;	./libs/ssd1306_lib.c: 10: switch(value)
      00044B 1E 09            [ 2] 1193 	ldw	x, (0x09, sp)
      00044D 5A               [ 2] 1194 	decw	x
      00044E 26 0B            [ 1] 1195 	jrne	00102$
                                   1196 ;	./libs/ssd1306_lib.c: 13: data |= mask;
      000450 7B 02            [ 1] 1197 	ld	a, (0x02, sp)
      000452 1A 04            [ 1] 1198 	or	a, (0x04, sp)
      000454 97               [ 1] 1199 	ld	xl, a
      000455 7B 01            [ 1] 1200 	ld	a, (0x01, sp)
      000457 1A 03            [ 1] 1201 	or	a, (0x03, sp)
                                   1202 ;	./libs/ssd1306_lib.c: 14: break;
      000459 20 09            [ 2] 1203 	jra	00103$
                                   1204 ;	./libs/ssd1306_lib.c: 16: default:
      00045B                       1205 00102$:
                                   1206 ;	./libs/ssd1306_lib.c: 17: data &= ~mask;
      00045B 1E 03            [ 2] 1207 	ldw	x, (0x03, sp)
      00045D 53               [ 2] 1208 	cplw	x
      00045E 9F               [ 1] 1209 	ld	a, xl
      00045F 14 02            [ 1] 1210 	and	a, (0x02, sp)
      000461 02               [ 1] 1211 	rlwa	x
      000462 14 01            [ 1] 1212 	and	a, (0x01, sp)
                                   1213 ;	./libs/ssd1306_lib.c: 19: }
      000464                       1214 00103$:
                                   1215 ;	./libs/ssd1306_lib.c: 20: return data;
      000464 95               [ 1] 1216 	ld	xh, a
                                   1217 ;	./libs/ssd1306_lib.c: 21: }
      000465 16 05            [ 2] 1218 	ldw	y, (5, sp)
      000467 5B 0A            [ 2] 1219 	addw	sp, #10
      000469 90 FC            [ 2] 1220 	jp	(y)
                                   1221 ;	./libs/ssd1306_lib.c: 23: void ssd1306_init(void)
                                   1222 ;	-----------------------------------------
                                   1223 ;	 function ssd1306_init
                                   1224 ;	-----------------------------------------
      00046B                       1225 _ssd1306_init:
      00046B 52 1B            [ 2] 1226 	sub	sp, #27
                                   1227 ;	./libs/ssd1306_lib.c: 25: uint8_t setup_buffer[27] = {COMMAND, DISPLAY_OFF, 
      00046D 96               [ 1] 1228 	ldw	x, sp
      00046E 5C               [ 1] 1229 	incw	x
      00046F 7F               [ 1] 1230 	clr	(x)
      000470 A6 AE            [ 1] 1231 	ld	a, #0xae
      000472 6B 02            [ 1] 1232 	ld	(0x02, sp), a
      000474 A6 D5            [ 1] 1233 	ld	a, #0xd5
      000476 6B 03            [ 1] 1234 	ld	(0x03, sp), a
      000478 A6 80            [ 1] 1235 	ld	a, #0x80
      00047A 6B 04            [ 1] 1236 	ld	(0x04, sp), a
      00047C A6 A8            [ 1] 1237 	ld	a, #0xa8
      00047E 6B 05            [ 1] 1238 	ld	(0x05, sp), a
      000480 A6 1F            [ 1] 1239 	ld	a, #0x1f
      000482 6B 06            [ 1] 1240 	ld	(0x06, sp), a
      000484 A6 D3            [ 1] 1241 	ld	a, #0xd3
      000486 6B 07            [ 1] 1242 	ld	(0x07, sp), a
      000488 0F 08            [ 1] 1243 	clr	(0x08, sp)
      00048A A6 40            [ 1] 1244 	ld	a, #0x40
      00048C 6B 09            [ 1] 1245 	ld	(0x09, sp), a
      00048E A6 8D            [ 1] 1246 	ld	a, #0x8d
      000490 6B 0A            [ 1] 1247 	ld	(0x0a, sp), a
      000492 A6 14            [ 1] 1248 	ld	a, #0x14
      000494 6B 0B            [ 1] 1249 	ld	(0x0b, sp), a
      000496 A6 DB            [ 1] 1250 	ld	a, #0xdb
      000498 6B 0C            [ 1] 1251 	ld	(0x0c, sp), a
      00049A A6 40            [ 1] 1252 	ld	a, #0x40
      00049C 6B 0D            [ 1] 1253 	ld	(0x0d, sp), a
      00049E A6 A4            [ 1] 1254 	ld	a, #0xa4
      0004A0 6B 0E            [ 1] 1255 	ld	(0x0e, sp), a
      0004A2 A6 A6            [ 1] 1256 	ld	a, #0xa6
      0004A4 6B 0F            [ 1] 1257 	ld	(0x0f, sp), a
      0004A6 A6 DA            [ 1] 1258 	ld	a, #0xda
      0004A8 6B 10            [ 1] 1259 	ld	(0x10, sp), a
      0004AA A6 02            [ 1] 1260 	ld	a, #0x02
      0004AC 6B 11            [ 1] 1261 	ld	(0x11, sp), a
      0004AE A6 81            [ 1] 1262 	ld	a, #0x81
      0004B0 6B 12            [ 1] 1263 	ld	(0x12, sp), a
      0004B2 A6 8F            [ 1] 1264 	ld	a, #0x8f
      0004B4 6B 13            [ 1] 1265 	ld	(0x13, sp), a
      0004B6 A6 D9            [ 1] 1266 	ld	a, #0xd9
      0004B8 6B 14            [ 1] 1267 	ld	(0x14, sp), a
      0004BA A6 F1            [ 1] 1268 	ld	a, #0xf1
      0004BC 6B 15            [ 1] 1269 	ld	(0x15, sp), a
      0004BE A6 20            [ 1] 1270 	ld	a, #0x20
      0004C0 6B 16            [ 1] 1271 	ld	(0x16, sp), a
      0004C2 0F 17            [ 1] 1272 	clr	(0x17, sp)
      0004C4 A6 A0            [ 1] 1273 	ld	a, #0xa0
      0004C6 6B 18            [ 1] 1274 	ld	(0x18, sp), a
      0004C8 A6 C0            [ 1] 1275 	ld	a, #0xc0
      0004CA 6B 19            [ 1] 1276 	ld	(0x19, sp), a
      0004CC A6 1F            [ 1] 1277 	ld	a, #0x1f
      0004CE 6B 1A            [ 1] 1278 	ld	(0x1a, sp), a
      0004D0 A6 AF            [ 1] 1279 	ld	a, #0xaf
      0004D2 6B 1B            [ 1] 1280 	ld	(0x1b, sp), a
                                   1281 ;	./libs/ssd1306_lib.c: 41: i2c_write(I2C_DISPLAY_ADDR, 27, setup_buffer);
      0004D4 89               [ 2] 1282 	pushw	x
      0004D5 4B 1B            [ 1] 1283 	push	#0x1b
      0004D7 A6 3C            [ 1] 1284 	ld	a, #0x3c
      0004D9 CDr03rAB         [ 4] 1285 	call	_i2c_write
                                   1286 ;	./libs/ssd1306_lib.c: 43: }
      0004DC 5B 1B            [ 2] 1287 	addw	sp, #27
      0004DE 81               [ 4] 1288 	ret
                                   1289 ;	./libs/ssd1306_lib.c: 45: void ssd1306_set_params_to_write(void)
                                   1290 ;	-----------------------------------------
                                   1291 ;	 function ssd1306_set_params_to_write
                                   1292 ;	-----------------------------------------
      0004DF                       1293 _ssd1306_set_params_to_write:
      0004DF 52 07            [ 2] 1294 	sub	sp, #7
                                   1295 ;	./libs/ssd1306_lib.c: 47: uint8_t set_params_buf[7] = {COMMAND,
      0004E1 96               [ 1] 1296 	ldw	x, sp
      0004E2 5C               [ 1] 1297 	incw	x
      0004E3 7F               [ 1] 1298 	clr	(x)
      0004E4 A6 22            [ 1] 1299 	ld	a, #0x22
      0004E6 6B 02            [ 1] 1300 	ld	(0x02, sp), a
      0004E8 0F 03            [ 1] 1301 	clr	(0x03, sp)
      0004EA A6 03            [ 1] 1302 	ld	a, #0x03
      0004EC 6B 04            [ 1] 1303 	ld	(0x04, sp), a
      0004EE A6 21            [ 1] 1304 	ld	a, #0x21
      0004F0 6B 05            [ 1] 1305 	ld	(0x05, sp), a
      0004F2 0F 06            [ 1] 1306 	clr	(0x06, sp)
      0004F4 A6 7F            [ 1] 1307 	ld	a, #0x7f
      0004F6 6B 07            [ 1] 1308 	ld	(0x07, sp), a
                                   1309 ;	./libs/ssd1306_lib.c: 51: i2c_write(I2C_DISPLAY_ADDR,7,set_params_buf);
      0004F8 89               [ 2] 1310 	pushw	x
      0004F9 4B 07            [ 1] 1311 	push	#0x07
      0004FB A6 3C            [ 1] 1312 	ld	a, #0x3c
      0004FD CDr03rAB         [ 4] 1313 	call	_i2c_write
                                   1314 ;	./libs/ssd1306_lib.c: 52: }
      000500 5B 07            [ 2] 1315 	addw	sp, #7
      000502 81               [ 4] 1316 	ret
                                   1317 ;	./libs/ssd1306_lib.c: 54: void ssd1306_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1318 ;	-----------------------------------------
                                   1319 ;	 function ssd1306_draw_pixel
                                   1320 ;	-----------------------------------------
      000503                       1321 _ssd1306_draw_pixel:
      000503 52 08            [ 2] 1322 	sub	sp, #8
      000505 1F 07            [ 2] 1323 	ldw	(0x07, sp), x
                                   1324 ;	./libs/ssd1306_lib.c: 56: buffer[x + ((y / 8) * SSD1306_LCDWIDTH)] = set_bit(buffer[x + ((y / 8) * SSD1306_LCDWIDTH)],(y % 8),color);
      000507 6B 06            [ 1] 1325 	ld	(0x06, sp), a
      000509 0F 05            [ 1] 1326 	clr	(0x05, sp)
      00050B 7B 0B            [ 1] 1327 	ld	a, (0x0b, sp)
      00050D 0F 01            [ 1] 1328 	clr	(0x01, sp)
      00050F 97               [ 1] 1329 	ld	xl, a
      000510 02               [ 1] 1330 	rlwa	x
      000511 4F               [ 1] 1331 	clr	a
      000512 01               [ 1] 1332 	rrwa	x
      000513 5D               [ 2] 1333 	tnzw	x
      000514 2A 03            [ 1] 1334 	jrpl	00103$
      000516 1C 00 07         [ 2] 1335 	addw	x, #0x0007
      000519                       1336 00103$:
      000519 57               [ 2] 1337 	sraw	x
      00051A 57               [ 2] 1338 	sraw	x
      00051B 57               [ 2] 1339 	sraw	x
      00051C 58               [ 2] 1340 	sllw	x
      00051D 58               [ 2] 1341 	sllw	x
      00051E 58               [ 2] 1342 	sllw	x
      00051F 58               [ 2] 1343 	sllw	x
      000520 58               [ 2] 1344 	sllw	x
      000521 58               [ 2] 1345 	sllw	x
      000522 58               [ 2] 1346 	sllw	x
      000523 72 FB 05         [ 2] 1347 	addw	x, (0x05, sp)
      000526 72 FB 07         [ 2] 1348 	addw	x, (0x07, sp)
      000529 1F 03            [ 2] 1349 	ldw	(0x03, sp), x
      00052B 90 5F            [ 1] 1350 	clrw	y
      00052D 61               [ 1] 1351 	exg	a, yl
      00052E 7B 0C            [ 1] 1352 	ld	a, (0x0c, sp)
      000530 61               [ 1] 1353 	exg	a, yl
      000531 A4 07            [ 1] 1354 	and	a, #0x07
      000533 6B 06            [ 1] 1355 	ld	(0x06, sp), a
      000535 0F 05            [ 1] 1356 	clr	(0x05, sp)
      000537 1E 03            [ 2] 1357 	ldw	x, (0x03, sp)
      000539 F6               [ 1] 1358 	ld	a, (x)
      00053A 5F               [ 1] 1359 	clrw	x
      00053B 90 89            [ 2] 1360 	pushw	y
      00053D 16 07            [ 2] 1361 	ldw	y, (0x07, sp)
      00053F 90 89            [ 2] 1362 	pushw	y
      000541 97               [ 1] 1363 	ld	xl, a
      000542 CDr04r38         [ 4] 1364 	call	_set_bit
      000545 9F               [ 1] 1365 	ld	a, xl
      000546 1E 03            [ 2] 1366 	ldw	x, (0x03, sp)
      000548 F7               [ 1] 1367 	ld	(x), a
                                   1368 ;	./libs/ssd1306_lib.c: 57: }
      000549 1E 09            [ 2] 1369 	ldw	x, (9, sp)
      00054B 5B 0C            [ 2] 1370 	addw	sp, #12
      00054D FC               [ 2] 1371 	jp	(x)
                                   1372 ;	./libs/ssd1306_lib.c: 59: void ssd1306_buffer_clean(void)
                                   1373 ;	-----------------------------------------
                                   1374 ;	 function ssd1306_buffer_clean
                                   1375 ;	-----------------------------------------
      00054E                       1376 _ssd1306_buffer_clean:
                                   1377 ;	./libs/ssd1306_lib.c: 61: memset(main_buffer,0,512);
      00054E 4B 00            [ 1] 1378 	push	#0x00
      000550 4B 02            [ 1] 1379 	push	#0x02
      000552 5F               [ 1] 1380 	clrw	x
      000553 89               [ 2] 1381 	pushw	x
      000554 AEr01r69         [ 2] 1382 	ldw	x, #(_main_buffer+0)
      000557 CDr00r00         [ 4] 1383 	call	_memset
                                   1384 ;	./libs/ssd1306_lib.c: 62: }
      00055A 81               [ 4] 1385 	ret
                                   1386 ;	./libs/ssd1306_lib.c: 63: void ssd1306_send_buffer(void)
                                   1387 ;	-----------------------------------------
                                   1388 ;	 function ssd1306_send_buffer
                                   1389 ;	-----------------------------------------
      00055B                       1390 _ssd1306_send_buffer:
      00055B 52 04            [ 2] 1391 	sub	sp, #4
                                   1392 ;	./libs/ssd1306_lib.c: 65: ssd1306_set_params_to_write();
      00055D CDr04rDF         [ 4] 1393 	call	_ssd1306_set_params_to_write
                                   1394 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      000560 5F               [ 1] 1395 	clrw	x
      000561 1F 03            [ 2] 1396 	ldw	(0x03, sp), x
      000563                       1397 00112$:
      000563 1E 03            [ 2] 1398 	ldw	x, (0x03, sp)
      000565 A3 00 04         [ 2] 1399 	cpw	x, #0x0004
      000568 2E 43            [ 1] 1400 	jrsge	00114$
                                   1401 ;	./libs/ssd1306_lib.c: 68: if(i2c_send_address(I2C_DISPLAY_ADDR, 0))//Проверка на АСК бит
      00056A 4B 00            [ 1] 1402 	push	#0x00
      00056C A6 3C            [ 1] 1403 	ld	a, #0x3c
      00056E CDr03r12         [ 4] 1404 	call	_i2c_send_address
      000571 4D               [ 1] 1405 	tnz	a
      000572 27 2F            [ 1] 1406 	jreq	00105$
                                   1407 ;	./libs/ssd1306_lib.c: 70: i2c_send_byte(SET_DISPLAY_START_LINE);
      000574 A6 40            [ 1] 1408 	ld	a, #0x40
      000576 CDr03r99         [ 4] 1409 	call	_i2c_send_byte
                                   1410 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      000579 1E 03            [ 2] 1411 	ldw	x, (0x03, sp)
      00057B 58               [ 2] 1412 	sllw	x
      00057C 58               [ 2] 1413 	sllw	x
      00057D 58               [ 2] 1414 	sllw	x
      00057E 58               [ 2] 1415 	sllw	x
      00057F 58               [ 2] 1416 	sllw	x
      000580 58               [ 2] 1417 	sllw	x
      000581 58               [ 2] 1418 	sllw	x
      000582 1F 01            [ 2] 1419 	ldw	(0x01, sp), x
      000584 5F               [ 1] 1420 	clrw	x
      000585                       1421 00109$:
      000585 A3 00 80         [ 2] 1422 	cpw	x, #0x0080
      000588 2E 14            [ 1] 1423 	jrsge	00103$
                                   1424 ;	./libs/ssd1306_lib.c: 73: if(i2c_send_byte(main_buffer[i+(128*j)]))//Проверка на АСК бит
      00058A 90 93            [ 1] 1425 	ldw	y, x
      00058C 72 F9 01         [ 2] 1426 	addw	y, (0x01, sp)
      00058F 90 D6u01u69      [ 1] 1427 	ld	a, (_main_buffer+0, y)
      000593 89               [ 2] 1428 	pushw	x
      000594 CDr03r99         [ 4] 1429 	call	_i2c_send_byte
      000597 85               [ 2] 1430 	popw	x
      000598 4D               [ 1] 1431 	tnz	a
      000599 26 03            [ 1] 1432 	jrne	00103$
                                   1433 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      00059B 5C               [ 1] 1434 	incw	x
      00059C 20 E7            [ 2] 1435 	jra	00109$
      00059E                       1436 00103$:
                                   1437 ;	./libs/ssd1306_lib.c: 78: i2c_stop();
      00059E CDr03r0D         [ 4] 1438 	call	_i2c_stop
      0005A1 20 03            [ 2] 1439 	jra	00113$
      0005A3                       1440 00105$:
                                   1441 ;	./libs/ssd1306_lib.c: 81: i2c_stop();
      0005A3 CDr03r0D         [ 4] 1442 	call	_i2c_stop
      0005A6                       1443 00113$:
                                   1444 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      0005A6 1E 03            [ 2] 1445 	ldw	x, (0x03, sp)
      0005A8 5C               [ 1] 1446 	incw	x
      0005A9 1F 03            [ 2] 1447 	ldw	(0x03, sp), x
      0005AB 20 B6            [ 2] 1448 	jra	00112$
      0005AD                       1449 00114$:
                                   1450 ;	./libs/ssd1306_lib.c: 83: }
      0005AD 5B 04            [ 2] 1451 	addw	sp, #4
      0005AF 81               [ 4] 1452 	ret
                                   1453 ;	./libs/ssd1306_lib.c: 85: void ssd1306_buffer_write(int x, int y, const uint8_t *data)
                                   1454 ;	-----------------------------------------
                                   1455 ;	 function ssd1306_buffer_write
                                   1456 ;	-----------------------------------------
      0005B0                       1457 _ssd1306_buffer_write:
      0005B0 52 0D            [ 2] 1458 	sub	sp, #13
      0005B2 1F 08            [ 2] 1459 	ldw	(0x08, sp), x
                                   1460 ;	./libs/ssd1306_lib.c: 87: for (int height = 0; height < 8; height++)
      0005B4 5F               [ 1] 1461 	clrw	x
      0005B5 1F 0A            [ 2] 1462 	ldw	(0x0a, sp), x
      0005B7                       1463 00109$:
      0005B7 1E 0A            [ 2] 1464 	ldw	x, (0x0a, sp)
      0005B9 A3 00 08         [ 2] 1465 	cpw	x, #0x0008
      0005BC 2F 03            [ 1] 1466 	jrslt	00150$
      0005BE CCr06r40         [ 2] 1467 	jp	00111$
      0005C1                       1468 00150$:
                                   1469 ;	./libs/ssd1306_lib.c: 89: for (int width = 0; width < 8; width++)
      0005C1 1E 12            [ 2] 1470 	ldw	x, (0x12, sp)
      0005C3 72 FB 0A         [ 2] 1471 	addw	x, (0x0a, sp)
      0005C6 1F 05            [ 2] 1472 	ldw	(0x05, sp), x
      0005C8 5F               [ 1] 1473 	clrw	x
      0005C9 1F 0C            [ 2] 1474 	ldw	(0x0c, sp), x
      0005CB                       1475 00106$:
      0005CB 1E 0C            [ 2] 1476 	ldw	x, (0x0c, sp)
      0005CD A3 00 08         [ 2] 1477 	cpw	x, #0x0008
      0005D0 2E 66            [ 1] 1478 	jrsge	00110$
                                   1479 ;	./libs/ssd1306_lib.c: 90: if(data[height + width / 8] & (128 >> (width & 7)))
      0005D2 1E 0A            [ 2] 1480 	ldw	x, (0x0a, sp)
      0005D4 72 FB 12         [ 2] 1481 	addw	x, (0x12, sp)
      0005D7 F6               [ 1] 1482 	ld	a, (x)
      0005D8 6B 07            [ 1] 1483 	ld	(0x07, sp), a
      0005DA 7B 0D            [ 1] 1484 	ld	a, (0x0d, sp)
      0005DC A4 07            [ 1] 1485 	and	a, #0x07
      0005DE AE 00 80         [ 2] 1486 	ldw	x, #0x0080
      0005E1 4D               [ 1] 1487 	tnz	a
      0005E2 27 04            [ 1] 1488 	jreq	00153$
      0005E4                       1489 00152$:
      0005E4 57               [ 2] 1490 	sraw	x
      0005E5 4A               [ 1] 1491 	dec	a
      0005E6 26 FC            [ 1] 1492 	jrne	00152$
      0005E8                       1493 00153$:
      0005E8 1F 01            [ 2] 1494 	ldw	(0x01, sp), x
      0005EA 7B 07            [ 1] 1495 	ld	a, (0x07, sp)
      0005EC 14 02            [ 1] 1496 	and	a, (0x02, sp)
      0005EE 6B 04            [ 1] 1497 	ld	(0x04, sp), a
      0005F0 0F 03            [ 1] 1498 	clr	(0x03, sp)
      0005F2 1E 03            [ 2] 1499 	ldw	x, (0x03, sp)
      0005F4 27 3B            [ 1] 1500 	jreq	00107$
                                   1501 ;	./libs/ssd1306_lib.c: 91: ssd1306_draw_pixel(main_buffer, x + width, y + height, get_bit(data[height], 7 - (width % 8)));
      0005F6 4B 08            [ 1] 1502 	push	#0x08
      0005F8 4B 00            [ 1] 1503 	push	#0x00
      0005FA 1E 0E            [ 2] 1504 	ldw	x, (0x0e, sp)
      0005FC CDr00r00         [ 4] 1505 	call	__modsint
      0005FF 1F 03            [ 2] 1506 	ldw	(0x03, sp), x
      000601 90 AE 00 07      [ 2] 1507 	ldw	y, #0x0007
      000605 72 F2 03         [ 2] 1508 	subw	y, (0x03, sp)
      000608 1E 05            [ 2] 1509 	ldw	x, (0x05, sp)
      00060A F6               [ 1] 1510 	ld	a, (x)
      00060B 5F               [ 1] 1511 	clrw	x
      00060C 90 89            [ 2] 1512 	pushw	y
      00060E 97               [ 1] 1513 	ld	xl, a
      00060F CDr04r23         [ 4] 1514 	call	_get_bit
      000612 7B 11            [ 1] 1515 	ld	a, (0x11, sp)
      000614 6B 07            [ 1] 1516 	ld	(0x07, sp), a
      000616 7B 0B            [ 1] 1517 	ld	a, (0x0b, sp)
      000618 1B 07            [ 1] 1518 	add	a, (0x07, sp)
      00061A 95               [ 1] 1519 	ld	xh, a
      00061B 7B 09            [ 1] 1520 	ld	a, (0x09, sp)
      00061D 6B 07            [ 1] 1521 	ld	(0x07, sp), a
      00061F 7B 0D            [ 1] 1522 	ld	a, (0x0d, sp)
      000621 1B 07            [ 1] 1523 	add	a, (0x07, sp)
      000623 6B 07            [ 1] 1524 	ld	(0x07, sp), a
      000625 9F               [ 1] 1525 	ld	a, xl
      000626 88               [ 1] 1526 	push	a
      000627 9E               [ 1] 1527 	ld	a, xh
      000628 88               [ 1] 1528 	push	a
      000629 7B 09            [ 1] 1529 	ld	a, (0x09, sp)
      00062B AEr01r69         [ 2] 1530 	ldw	x, #(_main_buffer+0)
      00062E CDr05r03         [ 4] 1531 	call	_ssd1306_draw_pixel
      000631                       1532 00107$:
                                   1533 ;	./libs/ssd1306_lib.c: 89: for (int width = 0; width < 8; width++)
      000631 1E 0C            [ 2] 1534 	ldw	x, (0x0c, sp)
      000633 5C               [ 1] 1535 	incw	x
      000634 1F 0C            [ 2] 1536 	ldw	(0x0c, sp), x
      000636 20 93            [ 2] 1537 	jra	00106$
      000638                       1538 00110$:
                                   1539 ;	./libs/ssd1306_lib.c: 87: for (int height = 0; height < 8; height++)
      000638 1E 0A            [ 2] 1540 	ldw	x, (0x0a, sp)
      00063A 5C               [ 1] 1541 	incw	x
      00063B 1F 0A            [ 2] 1542 	ldw	(0x0a, sp), x
      00063D CCr05rB7         [ 2] 1543 	jp	00109$
      000640                       1544 00111$:
                                   1545 ;	./libs/ssd1306_lib.c: 93: }
      000640 1E 0E            [ 2] 1546 	ldw	x, (14, sp)
      000642 5B 13            [ 2] 1547 	addw	sp, #19
      000644 FC               [ 2] 1548 	jp	(x)
                                   1549 ;	./libs/ssd1306_lib.c: 95: void ssd1306_clean(void)
                                   1550 ;	-----------------------------------------
                                   1551 ;	 function ssd1306_clean
                                   1552 ;	-----------------------------------------
      000645                       1553 _ssd1306_clean:
                                   1554 ;	./libs/ssd1306_lib.c: 97: ssd1306_buffer_clean();
      000645 CDr05r4E         [ 4] 1555 	call	_ssd1306_buffer_clean
                                   1556 ;	./libs/ssd1306_lib.c: 98: ssd1306_send_buffer();
                                   1557 ;	./libs/ssd1306_lib.c: 99: }
      000648 CCr05r5B         [ 2] 1558 	jp	_ssd1306_send_buffer
                                   1559 ;	./libs/menu_lib.c: 3: void menu_border(void)
                                   1560 ;	-----------------------------------------
                                   1561 ;	 function menu_border
                                   1562 ;	-----------------------------------------
      00064B                       1563 _menu_border:
      00064B 52 04            [ 2] 1564 	sub	sp, #4
                                   1565 ;	./libs/menu_lib.c: 5: ssd1306_buffer_write(0,0,ttf_eng_corner_left_up);
      00064D 4Br29            [ 1] 1566 	push	#<(_ttf_eng_corner_left_up+0)
      00064F 4Bs01            [ 1] 1567 	push	#((_ttf_eng_corner_left_up+0) >> 8)
      000651 5F               [ 1] 1568 	clrw	x
      000652 89               [ 2] 1569 	pushw	x
      000653 5F               [ 1] 1570 	clrw	x
      000654 CDr05rB0         [ 4] 1571 	call	_ssd1306_buffer_write
                                   1572 ;	./libs/menu_lib.c: 6: for(int x = 1;x<15;x++)
      000657 5F               [ 1] 1573 	clrw	x
      000658 5C               [ 1] 1574 	incw	x
      000659 1F 03            [ 2] 1575 	ldw	(0x03, sp), x
      00065B                       1576 00104$:
      00065B 1E 03            [ 2] 1577 	ldw	x, (0x03, sp)
      00065D A3 00 0F         [ 2] 1578 	cpw	x, #0x000f
      000660 2E 19            [ 1] 1579 	jrsge	00101$
                                   1580 ;	./libs/menu_lib.c: 7: ssd1306_buffer_write(x*8,0,ttf_eng_line_up);
      000662 1E 03            [ 2] 1581 	ldw	x, (0x03, sp)
      000664 58               [ 2] 1582 	sllw	x
      000665 58               [ 2] 1583 	sllw	x
      000666 58               [ 2] 1584 	sllw	x
      000667 1F 01            [ 2] 1585 	ldw	(0x01, sp), x
      000669 4Br59            [ 1] 1586 	push	#<(_ttf_eng_line_up+0)
      00066B 4Bs01            [ 1] 1587 	push	#((_ttf_eng_line_up+0) >> 8)
      00066D 5F               [ 1] 1588 	clrw	x
      00066E 89               [ 2] 1589 	pushw	x
      00066F 1E 05            [ 2] 1590 	ldw	x, (0x05, sp)
      000671 CDr05rB0         [ 4] 1591 	call	_ssd1306_buffer_write
                                   1592 ;	./libs/menu_lib.c: 6: for(int x = 1;x<15;x++)
      000674 1E 03            [ 2] 1593 	ldw	x, (0x03, sp)
      000676 5C               [ 1] 1594 	incw	x
      000677 1F 03            [ 2] 1595 	ldw	(0x03, sp), x
      000679 20 E0            [ 2] 1596 	jra	00104$
      00067B                       1597 00101$:
                                   1598 ;	./libs/menu_lib.c: 8: ssd1306_buffer_write(120,0,ttf_eng_corner_right_up);
      00067B 4Br31            [ 1] 1599 	push	#<(_ttf_eng_corner_right_up+0)
      00067D 4Bs01            [ 1] 1600 	push	#((_ttf_eng_corner_right_up+0) >> 8)
      00067F 5F               [ 1] 1601 	clrw	x
      000680 89               [ 2] 1602 	pushw	x
      000681 AE 00 78         [ 2] 1603 	ldw	x, #0x0078
      000684 CDr05rB0         [ 4] 1604 	call	_ssd1306_buffer_write
                                   1605 ;	./libs/menu_lib.c: 10: ssd1306_buffer_write(0,8,ttf_eng_line_left);
      000687 4Br51            [ 1] 1606 	push	#<(_ttf_eng_line_left+0)
      000689 4Bs01            [ 1] 1607 	push	#((_ttf_eng_line_left+0) >> 8)
      00068B 4B 08            [ 1] 1608 	push	#0x08
      00068D 4B 00            [ 1] 1609 	push	#0x00
      00068F 5F               [ 1] 1610 	clrw	x
      000690 CDr05rB0         [ 4] 1611 	call	_ssd1306_buffer_write
                                   1612 ;	./libs/menu_lib.c: 11: ssd1306_buffer_write(0,16,ttf_eng_line_left);
      000693 4Br51            [ 1] 1613 	push	#<(_ttf_eng_line_left+0)
      000695 4Bs01            [ 1] 1614 	push	#((_ttf_eng_line_left+0) >> 8)
      000697 4B 10            [ 1] 1615 	push	#0x10
      000699 4B 00            [ 1] 1616 	push	#0x00
      00069B 5F               [ 1] 1617 	clrw	x
      00069C CDr05rB0         [ 4] 1618 	call	_ssd1306_buffer_write
                                   1619 ;	./libs/menu_lib.c: 13: ssd1306_buffer_write(120,8,ttf_eng_line_right);
      00069F 4Br49            [ 1] 1620 	push	#<(_ttf_eng_line_right+0)
      0006A1 4Bs01            [ 1] 1621 	push	#((_ttf_eng_line_right+0) >> 8)
      0006A3 4B 08            [ 1] 1622 	push	#0x08
      0006A5 4B 00            [ 1] 1623 	push	#0x00
      0006A7 AE 00 78         [ 2] 1624 	ldw	x, #0x0078
      0006AA CDr05rB0         [ 4] 1625 	call	_ssd1306_buffer_write
                                   1626 ;	./libs/menu_lib.c: 14: ssd1306_buffer_write(120,16,ttf_eng_line_right);
      0006AD 4Br49            [ 1] 1627 	push	#<(_ttf_eng_line_right+0)
      0006AF 4Bs01            [ 1] 1628 	push	#((_ttf_eng_line_right+0) >> 8)
      0006B1 4B 10            [ 1] 1629 	push	#0x10
      0006B3 4B 00            [ 1] 1630 	push	#0x00
      0006B5 AE 00 78         [ 2] 1631 	ldw	x, #0x0078
      0006B8 CDr05rB0         [ 4] 1632 	call	_ssd1306_buffer_write
                                   1633 ;	./libs/menu_lib.c: 16: ssd1306_buffer_write(0,24,ttf_eng_corner_left_down);
      0006BB 4Br39            [ 1] 1634 	push	#<(_ttf_eng_corner_left_down+0)
      0006BD 4Bs01            [ 1] 1635 	push	#((_ttf_eng_corner_left_down+0) >> 8)
      0006BF 4B 18            [ 1] 1636 	push	#0x18
      0006C1 4B 00            [ 1] 1637 	push	#0x00
      0006C3 5F               [ 1] 1638 	clrw	x
      0006C4 CDr05rB0         [ 4] 1639 	call	_ssd1306_buffer_write
                                   1640 ;	./libs/menu_lib.c: 17: for(int x = 1;x<15;x++)
      0006C7 5F               [ 1] 1641 	clrw	x
      0006C8 5C               [ 1] 1642 	incw	x
      0006C9                       1643 00107$:
      0006C9 A3 00 0F         [ 2] 1644 	cpw	x, #0x000f
      0006CC 2E 19            [ 1] 1645 	jrsge	00102$
                                   1646 ;	./libs/menu_lib.c: 18: ssd1306_buffer_write(x*8,24,ttf_eng_line_down);
      0006CE 90 93            [ 1] 1647 	ldw	y, x
      0006D0 90 58            [ 2] 1648 	sllw	y
      0006D2 90 58            [ 2] 1649 	sllw	y
      0006D4 90 58            [ 2] 1650 	sllw	y
      0006D6 89               [ 2] 1651 	pushw	x
      0006D7 4Br61            [ 1] 1652 	push	#<(_ttf_eng_line_down+0)
      0006D9 4Bs01            [ 1] 1653 	push	#((_ttf_eng_line_down+0) >> 8)
      0006DB 4B 18            [ 1] 1654 	push	#0x18
      0006DD 4B 00            [ 1] 1655 	push	#0x00
      0006DF 93               [ 1] 1656 	ldw	x, y
      0006E0 CDr05rB0         [ 4] 1657 	call	_ssd1306_buffer_write
      0006E3 85               [ 2] 1658 	popw	x
                                   1659 ;	./libs/menu_lib.c: 17: for(int x = 1;x<15;x++)
      0006E4 5C               [ 1] 1660 	incw	x
      0006E5 20 E2            [ 2] 1661 	jra	00107$
      0006E7                       1662 00102$:
                                   1663 ;	./libs/menu_lib.c: 19: ssd1306_buffer_write(120,24,ttf_eng_corner_right_down);
      0006E7 4Br41            [ 1] 1664 	push	#<(_ttf_eng_corner_right_down+0)
      0006E9 4Bs01            [ 1] 1665 	push	#((_ttf_eng_corner_right_down+0) >> 8)
      0006EB 4B 18            [ 1] 1666 	push	#0x18
      0006ED 4B 00            [ 1] 1667 	push	#0x00
      0006EF AE 00 78         [ 2] 1668 	ldw	x, #0x0078
      0006F2 CDr05rB0         [ 4] 1669 	call	_ssd1306_buffer_write
                                   1670 ;	./libs/menu_lib.c: 21: }
      0006F5 5B 04            [ 2] 1671 	addw	sp, #4
      0006F7 81               [ 4] 1672 	ret
                                   1673 ;	./libs/menu_lib.c: 23: void menu_border_splash(uint8_t number_of_letters)
                                   1674 ;	-----------------------------------------
                                   1675 ;	 function menu_border_splash
                                   1676 ;	-----------------------------------------
      0006F8                       1677 _menu_border_splash:
      0006F8 52 07            [ 2] 1678 	sub	sp, #7
      0006FA 6B 07            [ 1] 1679 	ld	(0x07, sp), a
                                   1680 ;	./libs/menu_lib.c: 25: ssd1306_buffer_write(6,8,ttf_eng_corner_left_up);
      0006FC 4Br29            [ 1] 1681 	push	#<(_ttf_eng_corner_left_up+0)
      0006FE 4Bs01            [ 1] 1682 	push	#((_ttf_eng_corner_left_up+0) >> 8)
      000700 4B 08            [ 1] 1683 	push	#0x08
      000702 4B 00            [ 1] 1684 	push	#0x00
      000704 AE 00 06         [ 2] 1685 	ldw	x, #0x0006
      000707 CDr05rB0         [ 4] 1686 	call	_ssd1306_buffer_write
                                   1687 ;	./libs/menu_lib.c: 26: ssd1306_buffer_write(6,16,ttf_eng_corner_left_down);
      00070A 4Br39            [ 1] 1688 	push	#<(_ttf_eng_corner_left_down+0)
      00070C 4Bs01            [ 1] 1689 	push	#((_ttf_eng_corner_left_down+0) >> 8)
      00070E 4B 10            [ 1] 1690 	push	#0x10
      000710 4B 00            [ 1] 1691 	push	#0x00
      000712 AE 00 06         [ 2] 1692 	ldw	x, #0x0006
      000715 CDr05rB0         [ 4] 1693 	call	_ssd1306_buffer_write
                                   1694 ;	./libs/menu_lib.c: 27: for(int x = 1;x<number_of_letters+1;x++)
      000718 5F               [ 1] 1695 	clrw	x
      000719 5C               [ 1] 1696 	incw	x
      00071A 1F 05            [ 2] 1697 	ldw	(0x05, sp), x
      00071C                       1698 00104$:
      00071C 90 5F            [ 1] 1699 	clrw	y
      00071E 7B 07            [ 1] 1700 	ld	a, (0x07, sp)
      000720 90 97            [ 1] 1701 	ld	yl, a
      000722 93               [ 1] 1702 	ldw	x, y
      000723 5C               [ 1] 1703 	incw	x
      000724 1F 01            [ 2] 1704 	ldw	(0x01, sp), x
      000726 1E 05            [ 2] 1705 	ldw	x, (0x05, sp)
      000728 13 01            [ 2] 1706 	cpw	x, (0x01, sp)
      00072A 2E 20            [ 1] 1707 	jrsge	00101$
                                   1708 ;	./libs/menu_lib.c: 28: ssd1306_buffer_write(6+x*8,8,ttf_eng_line_up);
      00072C 1E 05            [ 2] 1709 	ldw	x, (0x05, sp)
      00072E 58               [ 2] 1710 	sllw	x
      00072F 58               [ 2] 1711 	sllw	x
      000730 58               [ 2] 1712 	sllw	x
      000731 1F 01            [ 2] 1713 	ldw	(0x01, sp), x
      000733 1C 00 06         [ 2] 1714 	addw	x, #0x0006
      000736 1F 03            [ 2] 1715 	ldw	(0x03, sp), x
      000738 4Br59            [ 1] 1716 	push	#<(_ttf_eng_line_up+0)
      00073A 4Bs01            [ 1] 1717 	push	#((_ttf_eng_line_up+0) >> 8)
      00073C 4B 08            [ 1] 1718 	push	#0x08
      00073E 4B 00            [ 1] 1719 	push	#0x00
      000740 1E 07            [ 2] 1720 	ldw	x, (0x07, sp)
      000742 CDr05rB0         [ 4] 1721 	call	_ssd1306_buffer_write
                                   1722 ;	./libs/menu_lib.c: 27: for(int x = 1;x<number_of_letters+1;x++)
      000745 1E 05            [ 2] 1723 	ldw	x, (0x05, sp)
      000747 5C               [ 1] 1724 	incw	x
      000748 1F 05            [ 2] 1725 	ldw	(0x05, sp), x
      00074A 20 D0            [ 2] 1726 	jra	00104$
      00074C                       1727 00101$:
                                   1728 ;	./libs/menu_lib.c: 29: ssd1306_buffer_write(6+number_of_letters*8,8,ttf_eng_corner_right_up);
      00074C 93               [ 1] 1729 	ldw	x, y
      00074D 58               [ 2] 1730 	sllw	x
      00074E 58               [ 2] 1731 	sllw	x
      00074F 58               [ 2] 1732 	sllw	x
      000750 9F               [ 1] 1733 	ld	a, xl
      000751 AB 06            [ 1] 1734 	add	a, #0x06
      000753 6B 04            [ 1] 1735 	ld	(0x04, sp), a
      000755 9E               [ 1] 1736 	ld	a, xh
      000756 A9 00            [ 1] 1737 	adc	a, #0x00
      000758 6B 03            [ 1] 1738 	ld	(0x03, sp), a
      00075A 89               [ 2] 1739 	pushw	x
      00075B 4Br31            [ 1] 1740 	push	#<(_ttf_eng_corner_right_up+0)
      00075D 4Bs01            [ 1] 1741 	push	#((_ttf_eng_corner_right_up+0) >> 8)
      00075F 4B 08            [ 1] 1742 	push	#0x08
      000761 4B 00            [ 1] 1743 	push	#0x00
      000763 1E 09            [ 2] 1744 	ldw	x, (0x09, sp)
      000765 CDr05rB0         [ 4] 1745 	call	_ssd1306_buffer_write
      000768 85               [ 2] 1746 	popw	x
                                   1747 ;	./libs/menu_lib.c: 30: ssd1306_buffer_write(12+number_of_letters*8,0,ttf_eng_line_left);
      000769 1C 00 0C         [ 2] 1748 	addw	x, #0x000c
      00076C 1F 05            [ 2] 1749 	ldw	(0x05, sp), x
      00076E 4Br51            [ 1] 1750 	push	#<(_ttf_eng_line_left+0)
      000770 4Bs01            [ 1] 1751 	push	#((_ttf_eng_line_left+0) >> 8)
      000772 5F               [ 1] 1752 	clrw	x
      000773 89               [ 2] 1753 	pushw	x
      000774 1E 09            [ 2] 1754 	ldw	x, (0x09, sp)
      000776 CDr05rB0         [ 4] 1755 	call	_ssd1306_buffer_write
                                   1756 ;	./libs/menu_lib.c: 33: ssd1306_buffer_write(6,16,ttf_eng_corner_left_down);
      000779 4Br39            [ 1] 1757 	push	#<(_ttf_eng_corner_left_down+0)
      00077B 4Bs01            [ 1] 1758 	push	#((_ttf_eng_corner_left_down+0) >> 8)
      00077D 4B 10            [ 1] 1759 	push	#0x10
      00077F 4B 00            [ 1] 1760 	push	#0x00
      000781 AE 00 06         [ 2] 1761 	ldw	x, #0x0006
      000784 CDr05rB0         [ 4] 1762 	call	_ssd1306_buffer_write
                                   1763 ;	./libs/menu_lib.c: 34: for(int x = 1;x<number_of_letters+1;x++)
      000787 5F               [ 1] 1764 	clrw	x
      000788 5C               [ 1] 1765 	incw	x
      000789                       1766 00107$:
      000789 13 01            [ 2] 1767 	cpw	x, (0x01, sp)
      00078B 2E 1D            [ 1] 1768 	jrsge	00102$
                                   1769 ;	./libs/menu_lib.c: 35: ssd1306_buffer_write(6+x*8,16,ttf_eng_line_down);
      00078D 90 93            [ 1] 1770 	ldw	y, x
      00078F 90 58            [ 2] 1771 	sllw	y
      000791 90 58            [ 2] 1772 	sllw	y
      000793 90 58            [ 2] 1773 	sllw	y
      000795 72 A9 00 06      [ 2] 1774 	addw	y, #0x0006
      000799 89               [ 2] 1775 	pushw	x
      00079A 4Br61            [ 1] 1776 	push	#<(_ttf_eng_line_down+0)
      00079C 4Bs01            [ 1] 1777 	push	#((_ttf_eng_line_down+0) >> 8)
      00079E 4B 10            [ 1] 1778 	push	#0x10
      0007A0 4B 00            [ 1] 1779 	push	#0x00
      0007A2 93               [ 1] 1780 	ldw	x, y
      0007A3 CDr05rB0         [ 4] 1781 	call	_ssd1306_buffer_write
      0007A6 85               [ 2] 1782 	popw	x
                                   1783 ;	./libs/menu_lib.c: 34: for(int x = 1;x<number_of_letters+1;x++)
      0007A7 5C               [ 1] 1784 	incw	x
      0007A8 20 DF            [ 2] 1785 	jra	00107$
      0007AA                       1786 00102$:
                                   1787 ;	./libs/menu_lib.c: 36: ssd1306_buffer_write(6+number_of_letters*8,16,ttf_eng_corner_right_down);
      0007AA 4Br41            [ 1] 1788 	push	#<(_ttf_eng_corner_right_down+0)
      0007AC 4Bs01            [ 1] 1789 	push	#((_ttf_eng_corner_right_down+0) >> 8)
      0007AE 4B 10            [ 1] 1790 	push	#0x10
      0007B0 4B 00            [ 1] 1791 	push	#0x00
      0007B2 1E 07            [ 2] 1792 	ldw	x, (0x07, sp)
      0007B4 CDr05rB0         [ 4] 1793 	call	_ssd1306_buffer_write
                                   1794 ;	./libs/menu_lib.c: 37: ssd1306_buffer_write(12+number_of_letters*8,24,ttf_eng_line_left);
      0007B7 4Br51            [ 1] 1795 	push	#<(_ttf_eng_line_left+0)
      0007B9 4Bs01            [ 1] 1796 	push	#((_ttf_eng_line_left+0) >> 8)
      0007BB 4B 18            [ 1] 1797 	push	#0x18
      0007BD 4B 00            [ 1] 1798 	push	#0x00
      0007BF 1E 09            [ 2] 1799 	ldw	x, (0x09, sp)
      0007C1 CDr05rB0         [ 4] 1800 	call	_ssd1306_buffer_write
                                   1801 ;	./libs/menu_lib.c: 41: }
      0007C4 5B 07            [ 2] 1802 	addw	sp, #7
      0007C6 81               [ 4] 1803 	ret
                                   1804 ;	./libs/menu_lib.c: 42: void menu_set_item_menu(uint8_t item)
                                   1805 ;	-----------------------------------------
                                   1806 ;	 function menu_set_item_menu
                                   1807 ;	-----------------------------------------
      0007C7                       1808 _menu_set_item_menu:
                                   1809 ;	./libs/menu_lib.c: 45: switch(item)
      0007C7 A1 07            [ 1] 1810 	cp	a, #0x07
      0007C9 23 01            [ 2] 1811 	jrule	00118$
      0007CB 81               [ 4] 1812 	ret
      0007CC                       1813 00118$:
      0007CC 5F               [ 1] 1814 	clrw	x
      0007CD 97               [ 1] 1815 	ld	xl, a
      0007CE 58               [ 2] 1816 	sllw	x
      0007CF DEu07uD3         [ 2] 1817 	ldw	x, (#00119$, x)
      0007D2 FC               [ 2] 1818 	jp	(x)
      0007D3                       1819 00119$:
      0007D3r07rE3                 1820 	.dw	#00109$
      0007D5r07rE3                 1821 	.dw	#00109$
      0007D7r07rE3                 1822 	.dw	#00109$
      0007D9r07rE3                 1823 	.dw	#00109$
      0007DBr07rE3                 1824 	.dw	#00109$
      0007DDr07rE3                 1825 	.dw	#00109$
      0007DFr07rE3                 1826 	.dw	#00109$
      0007E1r07rE3                 1827 	.dw	#00109$
                                   1828 ;	./libs/menu_lib.c: 68: }
      0007E3                       1829 00109$:
                                   1830 ;	./libs/menu_lib.c: 70: }
      0007E3 81               [ 4] 1831 	ret
                                   1832 ;	./libs/menu_lib.c: 71: void menu_set_paragraph(uint8_t paragraph)
                                   1833 ;	-----------------------------------------
                                   1834 ;	 function menu_set_paragraph
                                   1835 ;	-----------------------------------------
      0007E4                       1836 _menu_set_paragraph:
                                   1837 ;	./libs/menu_lib.c: 73: switch(paragraph)
      0007E4 A1 00            [ 1] 1838 	cp	a, #0x00
      0007E6 27 16            [ 1] 1839 	jreq	00101$
      0007E8 A1 01            [ 1] 1840 	cp	a, #0x01
      0007EA 26 03            [ 1] 1841 	jrne	00140$
      0007EC CCr09r86         [ 2] 1842 	jp	00102$
      0007EF                       1843 00140$:
      0007EF A1 02            [ 1] 1844 	cp	a, #0x02
      0007F1 26 03            [ 1] 1845 	jrne	00143$
      0007F3 CCr09rDA         [ 2] 1846 	jp	00103$
      0007F6                       1847 00143$:
      0007F6 A1 03            [ 1] 1848 	cp	a, #0x03
      0007F8 26 03            [ 1] 1849 	jrne	00146$
      0007FA CCr0Ar4A         [ 2] 1850 	jp	00104$
      0007FD                       1851 00146$:
      0007FD 81               [ 4] 1852 	ret
                                   1853 ;	./libs/menu_lib.c: 75: case menu:
      0007FE                       1854 00101$:
                                   1855 ;	./libs/menu_lib.c: 76: ssd1306_buffer_clean();
      0007FE CDr05r4E         [ 4] 1856 	call	_ssd1306_buffer_clean
                                   1857 ;	./libs/menu_lib.c: 77: menu_border();
      000801 CDr06r4B         [ 4] 1858 	call	_menu_border
                                   1859 ;	./libs/menu_lib.c: 78: menu_border_splash(4);
      000804 A6 04            [ 1] 1860 	ld	a, #0x04
      000806 CDr06rF8         [ 4] 1861 	call	_menu_border_splash
                                   1862 ;	./libs/menu_lib.c: 80: ssd1306_buffer_write(10,12,ttf_eng_m);
      000809 4Br69            [ 1] 1863 	push	#<(_ttf_eng_m+0)
      00080B 4Bs00            [ 1] 1864 	push	#((_ttf_eng_m+0) >> 8)
      00080D 4B 0C            [ 1] 1865 	push	#0x0c
      00080F 4B 00            [ 1] 1866 	push	#0x00
      000811 AE 00 0A         [ 2] 1867 	ldw	x, #0x000a
      000814 CDr05rB0         [ 4] 1868 	call	_ssd1306_buffer_write
                                   1869 ;	./libs/menu_lib.c: 81: ssd1306_buffer_write(18,12,ttf_eng_e);
      000817 4Br29            [ 1] 1870 	push	#<(_ttf_eng_e+0)
      000819 4Bs00            [ 1] 1871 	push	#((_ttf_eng_e+0) >> 8)
      00081B 4B 0C            [ 1] 1872 	push	#0x0c
      00081D 4B 00            [ 1] 1873 	push	#0x00
      00081F AE 00 12         [ 2] 1874 	ldw	x, #0x0012
      000822 CDr05rB0         [ 4] 1875 	call	_ssd1306_buffer_write
                                   1876 ;	./libs/menu_lib.c: 82: ssd1306_buffer_write(26,12,ttf_eng_n);
      000825 4Br71            [ 1] 1877 	push	#<(_ttf_eng_n+0)
      000827 4Bs00            [ 1] 1878 	push	#((_ttf_eng_n+0) >> 8)
      000829 4B 0C            [ 1] 1879 	push	#0x0c
      00082B 4B 00            [ 1] 1880 	push	#0x00
      00082D AE 00 1A         [ 2] 1881 	ldw	x, #0x001a
      000830 CDr05rB0         [ 4] 1882 	call	_ssd1306_buffer_write
                                   1883 ;	./libs/menu_lib.c: 83: ssd1306_buffer_write(34,12,ttf_eng_u);
      000833 4BrA9            [ 1] 1884 	push	#<(_ttf_eng_u+0)
      000835 4Bs00            [ 1] 1885 	push	#((_ttf_eng_u+0) >> 8)
      000837 4B 0C            [ 1] 1886 	push	#0x0c
      000839 4B 00            [ 1] 1887 	push	#0x00
      00083B AE 00 22         [ 2] 1888 	ldw	x, #0x0022
      00083E CDr05rB0         [ 4] 1889 	call	_ssd1306_buffer_write
                                   1890 ;	./libs/menu_lib.c: 85: ssd1306_buffer_write(48,4,ttf_eng_c);
      000841 4Br19            [ 1] 1891 	push	#<(_ttf_eng_c+0)
      000843 4Bs00            [ 1] 1892 	push	#((_ttf_eng_c+0) >> 8)
      000845 4B 04            [ 1] 1893 	push	#0x04
      000847 4B 00            [ 1] 1894 	push	#0x00
      000849 AE 00 30         [ 2] 1895 	ldw	x, #0x0030
      00084C CDr05rB0         [ 4] 1896 	call	_ssd1306_buffer_write
                                   1897 ;	./libs/menu_lib.c: 86: ssd1306_buffer_write(56,4,ttf_eng_o);
      00084F 4Br79            [ 1] 1898 	push	#<(_ttf_eng_o+0)
      000851 4Bs00            [ 1] 1899 	push	#((_ttf_eng_o+0) >> 8)
      000853 4B 04            [ 1] 1900 	push	#0x04
      000855 4B 00            [ 1] 1901 	push	#0x00
      000857 AE 00 38         [ 2] 1902 	ldw	x, #0x0038
      00085A CDr05rB0         [ 4] 1903 	call	_ssd1306_buffer_write
                                   1904 ;	./libs/menu_lib.c: 87: ssd1306_buffer_write(64,4,ttf_eng_l);
      00085D 4Br61            [ 1] 1905 	push	#<(_ttf_eng_l+0)
      00085F 4Bs00            [ 1] 1906 	push	#((_ttf_eng_l+0) >> 8)
      000861 4B 04            [ 1] 1907 	push	#0x04
      000863 4B 00            [ 1] 1908 	push	#0x00
      000865 AE 00 40         [ 2] 1909 	ldw	x, #0x0040
      000868 CDr05rB0         [ 4] 1910 	call	_ssd1306_buffer_write
                                   1911 ;	./libs/menu_lib.c: 88: ssd1306_buffer_write(72,4,ttf_eng_o);
      00086B 4Br79            [ 1] 1912 	push	#<(_ttf_eng_o+0)
      00086D 4Bs00            [ 1] 1913 	push	#((_ttf_eng_o+0) >> 8)
      00086F 4B 04            [ 1] 1914 	push	#0x04
      000871 4B 00            [ 1] 1915 	push	#0x00
      000873 AE 00 48         [ 2] 1916 	ldw	x, #0x0048
      000876 CDr05rB0         [ 4] 1917 	call	_ssd1306_buffer_write
                                   1918 ;	./libs/menu_lib.c: 89: ssd1306_buffer_write(80,4,ttf_eng_r);
      000879 4Br91            [ 1] 1919 	push	#<(_ttf_eng_r+0)
      00087B 4Bs00            [ 1] 1920 	push	#((_ttf_eng_r+0) >> 8)
      00087D 4B 04            [ 1] 1921 	push	#0x04
      00087F 4B 00            [ 1] 1922 	push	#0x00
      000881 AE 00 50         [ 2] 1923 	ldw	x, #0x0050
      000884 CDr05rB0         [ 4] 1924 	call	_ssd1306_buffer_write
                                   1925 ;	./libs/menu_lib.c: 90: ssd1306_buffer_write(114,4,ttf_eng_line_left);
      000887 4Br51            [ 1] 1926 	push	#<(_ttf_eng_line_left+0)
      000889 4Bs01            [ 1] 1927 	push	#((_ttf_eng_line_left+0) >> 8)
      00088B 4B 04            [ 1] 1928 	push	#0x04
      00088D 4B 00            [ 1] 1929 	push	#0x00
      00088F AE 00 72         [ 2] 1930 	ldw	x, #0x0072
      000892 CDr05rB0         [ 4] 1931 	call	_ssd1306_buffer_write
                                   1932 ;	./libs/menu_lib.c: 92: ssd1306_buffer_write(48,12,ttf_eng_s);
      000895 4Br99            [ 1] 1933 	push	#<(_ttf_eng_s+0)
      000897 4Bs00            [ 1] 1934 	push	#((_ttf_eng_s+0) >> 8)
      000899 4B 0C            [ 1] 1935 	push	#0x0c
      00089B 4B 00            [ 1] 1936 	push	#0x00
      00089D AE 00 30         [ 2] 1937 	ldw	x, #0x0030
      0008A0 CDr05rB0         [ 4] 1938 	call	_ssd1306_buffer_write
                                   1939 ;	./libs/menu_lib.c: 93: ssd1306_buffer_write(56,12,ttf_eng_e);
      0008A3 4Br29            [ 1] 1940 	push	#<(_ttf_eng_e+0)
      0008A5 4Bs00            [ 1] 1941 	push	#((_ttf_eng_e+0) >> 8)
      0008A7 4B 0C            [ 1] 1942 	push	#0x0c
      0008A9 4B 00            [ 1] 1943 	push	#0x00
      0008AB AE 00 38         [ 2] 1944 	ldw	x, #0x0038
      0008AE CDr05rB0         [ 4] 1945 	call	_ssd1306_buffer_write
                                   1946 ;	./libs/menu_lib.c: 94: ssd1306_buffer_write(64,12,ttf_eng_g);
      0008B1 4Br39            [ 1] 1947 	push	#<(_ttf_eng_g+0)
      0008B3 4Bs00            [ 1] 1948 	push	#((_ttf_eng_g+0) >> 8)
      0008B5 4B 0C            [ 1] 1949 	push	#0x0c
      0008B7 4B 00            [ 1] 1950 	push	#0x00
      0008B9 AE 00 40         [ 2] 1951 	ldw	x, #0x0040
      0008BC CDr05rB0         [ 4] 1952 	call	_ssd1306_buffer_write
                                   1953 ;	./libs/menu_lib.c: 95: ssd1306_buffer_write(72,12,ttf_eng_m);
      0008BF 4Br69            [ 1] 1954 	push	#<(_ttf_eng_m+0)
      0008C1 4Bs00            [ 1] 1955 	push	#((_ttf_eng_m+0) >> 8)
      0008C3 4B 0C            [ 1] 1956 	push	#0x0c
      0008C5 4B 00            [ 1] 1957 	push	#0x00
      0008C7 AE 00 48         [ 2] 1958 	ldw	x, #0x0048
      0008CA CDr05rB0         [ 4] 1959 	call	_ssd1306_buffer_write
                                   1960 ;	./libs/menu_lib.c: 96: ssd1306_buffer_write(80,12,ttf_eng_e);
      0008CD 4Br29            [ 1] 1961 	push	#<(_ttf_eng_e+0)
      0008CF 4Bs00            [ 1] 1962 	push	#((_ttf_eng_e+0) >> 8)
      0008D1 4B 0C            [ 1] 1963 	push	#0x0c
      0008D3 4B 00            [ 1] 1964 	push	#0x00
      0008D5 AE 00 50         [ 2] 1965 	ldw	x, #0x0050
      0008D8 CDr05rB0         [ 4] 1966 	call	_ssd1306_buffer_write
                                   1967 ;	./libs/menu_lib.c: 97: ssd1306_buffer_write(88,12,ttf_eng_n);
      0008DB 4Br71            [ 1] 1968 	push	#<(_ttf_eng_n+0)
      0008DD 4Bs00            [ 1] 1969 	push	#((_ttf_eng_n+0) >> 8)
      0008DF 4B 0C            [ 1] 1970 	push	#0x0c
      0008E1 4B 00            [ 1] 1971 	push	#0x00
      0008E3 AE 00 58         [ 2] 1972 	ldw	x, #0x0058
      0008E6 CDr05rB0         [ 4] 1973 	call	_ssd1306_buffer_write
                                   1974 ;	./libs/menu_lib.c: 98: ssd1306_buffer_write(96,12,ttf_eng_t);
      0008E9 4BrA1            [ 1] 1975 	push	#<(_ttf_eng_t+0)
      0008EB 4Bs00            [ 1] 1976 	push	#((_ttf_eng_t+0) >> 8)
      0008ED 4B 0C            [ 1] 1977 	push	#0x0c
      0008EF 4B 00            [ 1] 1978 	push	#0x00
      0008F1 AE 00 60         [ 2] 1979 	ldw	x, #0x0060
      0008F4 CDr05rB0         [ 4] 1980 	call	_ssd1306_buffer_write
                                   1981 ;	./libs/menu_lib.c: 99: ssd1306_buffer_write(114,12,ttf_eng_void);
      0008F7 4Br01            [ 1] 1982 	push	#<(_ttf_eng_void+0)
      0008F9 4Bs00            [ 1] 1983 	push	#((_ttf_eng_void+0) >> 8)
      0008FB 4B 0C            [ 1] 1984 	push	#0x0c
      0008FD 4B 00            [ 1] 1985 	push	#0x00
      0008FF AE 00 72         [ 2] 1986 	ldw	x, #0x0072
      000902 CDr05rB0         [ 4] 1987 	call	_ssd1306_buffer_write
                                   1988 ;	./libs/menu_lib.c: 101: ssd1306_buffer_write(48,20,ttf_eng_s);
      000905 4Br99            [ 1] 1989 	push	#<(_ttf_eng_s+0)
      000907 4Bs00            [ 1] 1990 	push	#((_ttf_eng_s+0) >> 8)
      000909 4B 14            [ 1] 1991 	push	#0x14
      00090B 4B 00            [ 1] 1992 	push	#0x00
      00090D AE 00 30         [ 2] 1993 	ldw	x, #0x0030
      000910 CDr05rB0         [ 4] 1994 	call	_ssd1306_buffer_write
                                   1995 ;	./libs/menu_lib.c: 102: ssd1306_buffer_write(56,20,ttf_eng_e);
      000913 4Br29            [ 1] 1996 	push	#<(_ttf_eng_e+0)
      000915 4Bs00            [ 1] 1997 	push	#((_ttf_eng_e+0) >> 8)
      000917 4B 14            [ 1] 1998 	push	#0x14
      000919 4B 00            [ 1] 1999 	push	#0x00
      00091B AE 00 38         [ 2] 2000 	ldw	x, #0x0038
      00091E CDr05rB0         [ 4] 2001 	call	_ssd1306_buffer_write
                                   2002 ;	./libs/menu_lib.c: 103: ssd1306_buffer_write(64,20,ttf_eng_t);
      000921 4BrA1            [ 1] 2003 	push	#<(_ttf_eng_t+0)
      000923 4Bs00            [ 1] 2004 	push	#((_ttf_eng_t+0) >> 8)
      000925 4B 14            [ 1] 2005 	push	#0x14
      000927 4B 00            [ 1] 2006 	push	#0x00
      000929 AE 00 40         [ 2] 2007 	ldw	x, #0x0040
      00092C CDr05rB0         [ 4] 2008 	call	_ssd1306_buffer_write
                                   2009 ;	./libs/menu_lib.c: 104: ssd1306_buffer_write(72,20,ttf_eng_t);
      00092F 4BrA1            [ 1] 2010 	push	#<(_ttf_eng_t+0)
      000931 4Bs00            [ 1] 2011 	push	#((_ttf_eng_t+0) >> 8)
      000933 4B 14            [ 1] 2012 	push	#0x14
      000935 4B 00            [ 1] 2013 	push	#0x00
      000937 AE 00 48         [ 2] 2014 	ldw	x, #0x0048
      00093A CDr05rB0         [ 4] 2015 	call	_ssd1306_buffer_write
                                   2016 ;	./libs/menu_lib.c: 105: ssd1306_buffer_write(80,20,ttf_eng_i);
      00093D 4Br49            [ 1] 2017 	push	#<(_ttf_eng_i+0)
      00093F 4Bs00            [ 1] 2018 	push	#((_ttf_eng_i+0) >> 8)
      000941 4B 14            [ 1] 2019 	push	#0x14
      000943 4B 00            [ 1] 2020 	push	#0x00
      000945 AE 00 50         [ 2] 2021 	ldw	x, #0x0050
      000948 CDr05rB0         [ 4] 2022 	call	_ssd1306_buffer_write
                                   2023 ;	./libs/menu_lib.c: 106: ssd1306_buffer_write(88,20,ttf_eng_n);
      00094B 4Br71            [ 1] 2024 	push	#<(_ttf_eng_n+0)
      00094D 4Bs00            [ 1] 2025 	push	#((_ttf_eng_n+0) >> 8)
      00094F 4B 14            [ 1] 2026 	push	#0x14
      000951 4B 00            [ 1] 2027 	push	#0x00
      000953 AE 00 58         [ 2] 2028 	ldw	x, #0x0058
      000956 CDr05rB0         [ 4] 2029 	call	_ssd1306_buffer_write
                                   2030 ;	./libs/menu_lib.c: 107: ssd1306_buffer_write(96,20,ttf_eng_g);
      000959 4Br39            [ 1] 2031 	push	#<(_ttf_eng_g+0)
      00095B 4Bs00            [ 1] 2032 	push	#((_ttf_eng_g+0) >> 8)
      00095D 4B 14            [ 1] 2033 	push	#0x14
      00095F 4B 00            [ 1] 2034 	push	#0x00
      000961 AE 00 60         [ 2] 2035 	ldw	x, #0x0060
      000964 CDr05rB0         [ 4] 2036 	call	_ssd1306_buffer_write
                                   2037 ;	./libs/menu_lib.c: 108: ssd1306_buffer_write(104,20,ttf_eng_s);
      000967 4Br99            [ 1] 2038 	push	#<(_ttf_eng_s+0)
      000969 4Bs00            [ 1] 2039 	push	#((_ttf_eng_s+0) >> 8)
      00096B 4B 14            [ 1] 2040 	push	#0x14
      00096D 4B 00            [ 1] 2041 	push	#0x00
      00096F AE 00 68         [ 2] 2042 	ldw	x, #0x0068
      000972 CDr05rB0         [ 4] 2043 	call	_ssd1306_buffer_write
                                   2044 ;	./libs/menu_lib.c: 109: ssd1306_buffer_write(114,20,ttf_eng_void);
      000975 4Br01            [ 1] 2045 	push	#<(_ttf_eng_void+0)
      000977 4Bs00            [ 1] 2046 	push	#((_ttf_eng_void+0) >> 8)
      000979 4B 14            [ 1] 2047 	push	#0x14
      00097B 4B 00            [ 1] 2048 	push	#0x00
      00097D AE 00 72         [ 2] 2049 	ldw	x, #0x0072
      000980 CDr05rB0         [ 4] 2050 	call	_ssd1306_buffer_write
                                   2051 ;	./libs/menu_lib.c: 111: ssd1306_send_buffer();
                                   2052 ;	./libs/menu_lib.c: 112: break;
      000983 CCr05r5B         [ 2] 2053 	jp	_ssd1306_send_buffer
                                   2054 ;	./libs/menu_lib.c: 113: case color:
      000986                       2055 00102$:
                                   2056 ;	./libs/menu_lib.c: 114: ssd1306_buffer_clean();
      000986 CDr05r4E         [ 4] 2057 	call	_ssd1306_buffer_clean
                                   2058 ;	./libs/menu_lib.c: 115: menu_border();
      000989 CDr06r4B         [ 4] 2059 	call	_menu_border
                                   2060 ;	./libs/menu_lib.c: 116: menu_border_splash(5);
      00098C A6 05            [ 1] 2061 	ld	a, #0x05
      00098E CDr06rF8         [ 4] 2062 	call	_menu_border_splash
                                   2063 ;	./libs/menu_lib.c: 118: ssd1306_buffer_write(10,12,ttf_eng_c);
      000991 4Br19            [ 1] 2064 	push	#<(_ttf_eng_c+0)
      000993 4Bs00            [ 1] 2065 	push	#((_ttf_eng_c+0) >> 8)
      000995 4B 0C            [ 1] 2066 	push	#0x0c
      000997 4B 00            [ 1] 2067 	push	#0x00
      000999 AE 00 0A         [ 2] 2068 	ldw	x, #0x000a
      00099C CDr05rB0         [ 4] 2069 	call	_ssd1306_buffer_write
                                   2070 ;	./libs/menu_lib.c: 119: ssd1306_buffer_write(18,12,ttf_eng_o);
      00099F 4Br79            [ 1] 2071 	push	#<(_ttf_eng_o+0)
      0009A1 4Bs00            [ 1] 2072 	push	#((_ttf_eng_o+0) >> 8)
      0009A3 4B 0C            [ 1] 2073 	push	#0x0c
      0009A5 4B 00            [ 1] 2074 	push	#0x00
      0009A7 AE 00 12         [ 2] 2075 	ldw	x, #0x0012
      0009AA CDr05rB0         [ 4] 2076 	call	_ssd1306_buffer_write
                                   2077 ;	./libs/menu_lib.c: 120: ssd1306_buffer_write(26,12,ttf_eng_l);
      0009AD 4Br61            [ 1] 2078 	push	#<(_ttf_eng_l+0)
      0009AF 4Bs00            [ 1] 2079 	push	#((_ttf_eng_l+0) >> 8)
      0009B1 4B 0C            [ 1] 2080 	push	#0x0c
      0009B3 4B 00            [ 1] 2081 	push	#0x00
      0009B5 AE 00 1A         [ 2] 2082 	ldw	x, #0x001a
      0009B8 CDr05rB0         [ 4] 2083 	call	_ssd1306_buffer_write
                                   2084 ;	./libs/menu_lib.c: 121: ssd1306_buffer_write(34,12,ttf_eng_o);
      0009BB 4Br79            [ 1] 2085 	push	#<(_ttf_eng_o+0)
      0009BD 4Bs00            [ 1] 2086 	push	#((_ttf_eng_o+0) >> 8)
      0009BF 4B 0C            [ 1] 2087 	push	#0x0c
      0009C1 4B 00            [ 1] 2088 	push	#0x00
      0009C3 AE 00 22         [ 2] 2089 	ldw	x, #0x0022
      0009C6 CDr05rB0         [ 4] 2090 	call	_ssd1306_buffer_write
                                   2091 ;	./libs/menu_lib.c: 122: ssd1306_buffer_write(42,12,ttf_eng_r);
      0009C9 4Br91            [ 1] 2092 	push	#<(_ttf_eng_r+0)
      0009CB 4Bs00            [ 1] 2093 	push	#((_ttf_eng_r+0) >> 8)
      0009CD 4B 0C            [ 1] 2094 	push	#0x0c
      0009CF 4B 00            [ 1] 2095 	push	#0x00
      0009D1 AE 00 2A         [ 2] 2096 	ldw	x, #0x002a
      0009D4 CDr05rB0         [ 4] 2097 	call	_ssd1306_buffer_write
                                   2098 ;	./libs/menu_lib.c: 124: ssd1306_send_buffer();
                                   2099 ;	./libs/menu_lib.c: 125: break;
      0009D7 CCr05r5B         [ 2] 2100 	jp	_ssd1306_send_buffer
                                   2101 ;	./libs/menu_lib.c: 126: case segment:
      0009DA                       2102 00103$:
                                   2103 ;	./libs/menu_lib.c: 127: ssd1306_buffer_clean();
      0009DA CDr05r4E         [ 4] 2104 	call	_ssd1306_buffer_clean
                                   2105 ;	./libs/menu_lib.c: 128: menu_border();
      0009DD CDr06r4B         [ 4] 2106 	call	_menu_border
                                   2107 ;	./libs/menu_lib.c: 129: menu_border_splash(7);
      0009E0 A6 07            [ 1] 2108 	ld	a, #0x07
      0009E2 CDr06rF8         [ 4] 2109 	call	_menu_border_splash
                                   2110 ;	./libs/menu_lib.c: 131: ssd1306_buffer_write(10,12,ttf_eng_s);
      0009E5 4Br99            [ 1] 2111 	push	#<(_ttf_eng_s+0)
      0009E7 4Bs00            [ 1] 2112 	push	#((_ttf_eng_s+0) >> 8)
      0009E9 4B 0C            [ 1] 2113 	push	#0x0c
      0009EB 4B 00            [ 1] 2114 	push	#0x00
      0009ED AE 00 0A         [ 2] 2115 	ldw	x, #0x000a
      0009F0 CDr05rB0         [ 4] 2116 	call	_ssd1306_buffer_write
                                   2117 ;	./libs/menu_lib.c: 132: ssd1306_buffer_write(18,12,ttf_eng_e);
      0009F3 4Br29            [ 1] 2118 	push	#<(_ttf_eng_e+0)
      0009F5 4Bs00            [ 1] 2119 	push	#((_ttf_eng_e+0) >> 8)
      0009F7 4B 0C            [ 1] 2120 	push	#0x0c
      0009F9 4B 00            [ 1] 2121 	push	#0x00
      0009FB AE 00 12         [ 2] 2122 	ldw	x, #0x0012
      0009FE CDr05rB0         [ 4] 2123 	call	_ssd1306_buffer_write
                                   2124 ;	./libs/menu_lib.c: 133: ssd1306_buffer_write(26,12,ttf_eng_g);
      000A01 4Br39            [ 1] 2125 	push	#<(_ttf_eng_g+0)
      000A03 4Bs00            [ 1] 2126 	push	#((_ttf_eng_g+0) >> 8)
      000A05 4B 0C            [ 1] 2127 	push	#0x0c
      000A07 4B 00            [ 1] 2128 	push	#0x00
      000A09 AE 00 1A         [ 2] 2129 	ldw	x, #0x001a
      000A0C CDr05rB0         [ 4] 2130 	call	_ssd1306_buffer_write
                                   2131 ;	./libs/menu_lib.c: 134: ssd1306_buffer_write(34,12,ttf_eng_m);
      000A0F 4Br69            [ 1] 2132 	push	#<(_ttf_eng_m+0)
      000A11 4Bs00            [ 1] 2133 	push	#((_ttf_eng_m+0) >> 8)
      000A13 4B 0C            [ 1] 2134 	push	#0x0c
      000A15 4B 00            [ 1] 2135 	push	#0x00
      000A17 AE 00 22         [ 2] 2136 	ldw	x, #0x0022
      000A1A CDr05rB0         [ 4] 2137 	call	_ssd1306_buffer_write
                                   2138 ;	./libs/menu_lib.c: 135: ssd1306_buffer_write(42,12,ttf_eng_e);
      000A1D 4Br29            [ 1] 2139 	push	#<(_ttf_eng_e+0)
      000A1F 4Bs00            [ 1] 2140 	push	#((_ttf_eng_e+0) >> 8)
      000A21 4B 0C            [ 1] 2141 	push	#0x0c
      000A23 4B 00            [ 1] 2142 	push	#0x00
      000A25 AE 00 2A         [ 2] 2143 	ldw	x, #0x002a
      000A28 CDr05rB0         [ 4] 2144 	call	_ssd1306_buffer_write
                                   2145 ;	./libs/menu_lib.c: 136: ssd1306_buffer_write(50,12,ttf_eng_n);
      000A2B 4Br71            [ 1] 2146 	push	#<(_ttf_eng_n+0)
      000A2D 4Bs00            [ 1] 2147 	push	#((_ttf_eng_n+0) >> 8)
      000A2F 4B 0C            [ 1] 2148 	push	#0x0c
      000A31 4B 00            [ 1] 2149 	push	#0x00
      000A33 AE 00 32         [ 2] 2150 	ldw	x, #0x0032
      000A36 CDr05rB0         [ 4] 2151 	call	_ssd1306_buffer_write
                                   2152 ;	./libs/menu_lib.c: 137: ssd1306_buffer_write(58,12,ttf_eng_t);
      000A39 4BrA1            [ 1] 2153 	push	#<(_ttf_eng_t+0)
      000A3B 4Bs00            [ 1] 2154 	push	#((_ttf_eng_t+0) >> 8)
      000A3D 4B 0C            [ 1] 2155 	push	#0x0c
      000A3F 4B 00            [ 1] 2156 	push	#0x00
      000A41 AE 00 3A         [ 2] 2157 	ldw	x, #0x003a
      000A44 CDr05rB0         [ 4] 2158 	call	_ssd1306_buffer_write
                                   2159 ;	./libs/menu_lib.c: 139: ssd1306_send_buffer();
                                   2160 ;	./libs/menu_lib.c: 142: break;
      000A47 CCr05r5B         [ 2] 2161 	jp	_ssd1306_send_buffer
                                   2162 ;	./libs/menu_lib.c: 143: case settings:
      000A4A                       2163 00104$:
                                   2164 ;	./libs/menu_lib.c: 144: ssd1306_buffer_clean();
      000A4A CDr05r4E         [ 4] 2165 	call	_ssd1306_buffer_clean
                                   2166 ;	./libs/menu_lib.c: 145: menu_border();
      000A4D CDr06r4B         [ 4] 2167 	call	_menu_border
                                   2168 ;	./libs/menu_lib.c: 146: menu_border_splash(8);
      000A50 A6 08            [ 1] 2169 	ld	a, #0x08
      000A52 CDr06rF8         [ 4] 2170 	call	_menu_border_splash
                                   2171 ;	./libs/menu_lib.c: 148: ssd1306_buffer_write(10,12,ttf_eng_s);
      000A55 4Br99            [ 1] 2172 	push	#<(_ttf_eng_s+0)
      000A57 4Bs00            [ 1] 2173 	push	#((_ttf_eng_s+0) >> 8)
      000A59 4B 0C            [ 1] 2174 	push	#0x0c
      000A5B 4B 00            [ 1] 2175 	push	#0x00
      000A5D AE 00 0A         [ 2] 2176 	ldw	x, #0x000a
      000A60 CDr05rB0         [ 4] 2177 	call	_ssd1306_buffer_write
                                   2178 ;	./libs/menu_lib.c: 149: ssd1306_buffer_write(18,12,ttf_eng_e);
      000A63 4Br29            [ 1] 2179 	push	#<(_ttf_eng_e+0)
      000A65 4Bs00            [ 1] 2180 	push	#((_ttf_eng_e+0) >> 8)
      000A67 4B 0C            [ 1] 2181 	push	#0x0c
      000A69 4B 00            [ 1] 2182 	push	#0x00
      000A6B AE 00 12         [ 2] 2183 	ldw	x, #0x0012
      000A6E CDr05rB0         [ 4] 2184 	call	_ssd1306_buffer_write
                                   2185 ;	./libs/menu_lib.c: 150: ssd1306_buffer_write(26,12,ttf_eng_t);
      000A71 4BrA1            [ 1] 2186 	push	#<(_ttf_eng_t+0)
      000A73 4Bs00            [ 1] 2187 	push	#((_ttf_eng_t+0) >> 8)
      000A75 4B 0C            [ 1] 2188 	push	#0x0c
      000A77 4B 00            [ 1] 2189 	push	#0x00
      000A79 AE 00 1A         [ 2] 2190 	ldw	x, #0x001a
      000A7C CDr05rB0         [ 4] 2191 	call	_ssd1306_buffer_write
                                   2192 ;	./libs/menu_lib.c: 151: ssd1306_buffer_write(34,12,ttf_eng_t);
      000A7F 4BrA1            [ 1] 2193 	push	#<(_ttf_eng_t+0)
      000A81 4Bs00            [ 1] 2194 	push	#((_ttf_eng_t+0) >> 8)
      000A83 4B 0C            [ 1] 2195 	push	#0x0c
      000A85 4B 00            [ 1] 2196 	push	#0x00
      000A87 AE 00 22         [ 2] 2197 	ldw	x, #0x0022
      000A8A CDr05rB0         [ 4] 2198 	call	_ssd1306_buffer_write
                                   2199 ;	./libs/menu_lib.c: 152: ssd1306_buffer_write(42,12,ttf_eng_i);
      000A8D 4Br49            [ 1] 2200 	push	#<(_ttf_eng_i+0)
      000A8F 4Bs00            [ 1] 2201 	push	#((_ttf_eng_i+0) >> 8)
      000A91 4B 0C            [ 1] 2202 	push	#0x0c
      000A93 4B 00            [ 1] 2203 	push	#0x00
      000A95 AE 00 2A         [ 2] 2204 	ldw	x, #0x002a
      000A98 CDr05rB0         [ 4] 2205 	call	_ssd1306_buffer_write
                                   2206 ;	./libs/menu_lib.c: 153: ssd1306_buffer_write(50,12,ttf_eng_n);
      000A9B 4Br71            [ 1] 2207 	push	#<(_ttf_eng_n+0)
      000A9D 4Bs00            [ 1] 2208 	push	#((_ttf_eng_n+0) >> 8)
      000A9F 4B 0C            [ 1] 2209 	push	#0x0c
      000AA1 4B 00            [ 1] 2210 	push	#0x00
      000AA3 AE 00 32         [ 2] 2211 	ldw	x, #0x0032
      000AA6 CDr05rB0         [ 4] 2212 	call	_ssd1306_buffer_write
                                   2213 ;	./libs/menu_lib.c: 154: ssd1306_buffer_write(58,12,ttf_eng_g);
      000AA9 4Br39            [ 1] 2214 	push	#<(_ttf_eng_g+0)
      000AAB 4Bs00            [ 1] 2215 	push	#((_ttf_eng_g+0) >> 8)
      000AAD 4B 0C            [ 1] 2216 	push	#0x0c
      000AAF 4B 00            [ 1] 2217 	push	#0x00
      000AB1 AE 00 3A         [ 2] 2218 	ldw	x, #0x003a
      000AB4 CDr05rB0         [ 4] 2219 	call	_ssd1306_buffer_write
                                   2220 ;	./libs/menu_lib.c: 155: ssd1306_buffer_write(66,12,ttf_eng_s);
      000AB7 4Br99            [ 1] 2221 	push	#<(_ttf_eng_s+0)
      000AB9 4Bs00            [ 1] 2222 	push	#((_ttf_eng_s+0) >> 8)
      000ABB 4B 0C            [ 1] 2223 	push	#0x0c
      000ABD 4B 00            [ 1] 2224 	push	#0x00
      000ABF AE 00 42         [ 2] 2225 	ldw	x, #0x0042
      000AC2 CDr05rB0         [ 4] 2226 	call	_ssd1306_buffer_write
                                   2227 ;	./libs/menu_lib.c: 157: ssd1306_send_buffer();
                                   2228 ;	./libs/menu_lib.c: 159: }
                                   2229 ;	./libs/menu_lib.c: 160: }
      000AC5 CCr05r5B         [ 2] 2230 	jp	_ssd1306_send_buffer
                                   2231 ;	./libs/tmr2_lib.c: 3: void tmr2_irq(void) __interrupt(TIM2_vector)
                                   2232 ;	-----------------------------------------
                                   2233 ;	 function tmr2_irq
                                   2234 ;	-----------------------------------------
      000AC8                       2235 _tmr2_irq:
      000AC8 4F               [ 1] 2236 	clr	a
      000AC9 62               [ 2] 2237 	div	x, a
                                   2238 ;	./libs/tmr2_lib.c: 6: disableInterrupts();
      000ACA 9B               [ 1] 2239 	sim
                                   2240 ;	./libs/tmr2_lib.c: 7: TIM2_IRQ.all = 0;//обнуление флагов регистров
      000ACB 35 00u03u6B      [ 1] 2241 	mov	_TIM2_IRQ+0, #0x00
                                   2242 ;	./libs/tmr2_lib.c: 9: if(TIM2_SR1 -> UIF)//прерывание таймера
      000ACF AE 53 04         [ 2] 2243 	ldw	x, #0x5304
      000AD2 F6               [ 1] 2244 	ld	a, (x)
      000AD3 A4 01            [ 1] 2245 	and	a, #0x01
      000AD5 27 0B            [ 1] 2246 	jreq	00102$
                                   2247 ;	./libs/tmr2_lib.c: 11: TIM2_IRQ.UIF = 1;
      000AD7 72 1Eu03u6B      [ 1] 2248 	bset	_TIM2_IRQ+0, #7
                                   2249 ;	./libs/tmr2_lib.c: 12: TIM2_IER -> UIE = 0;
      000ADB AE 53 03         [ 2] 2250 	ldw	x, #0x5303
      000ADE F6               [ 1] 2251 	ld	a, (x)
      000ADF A4 FE            [ 1] 2252 	and	a, #0xfe
      000AE1 F7               [ 1] 2253 	ld	(x), a
      000AE2                       2254 00102$:
                                   2255 ;	./libs/tmr2_lib.c: 14: enableInterrupts();
      000AE2 9A               [ 1] 2256 	rim
                                   2257 ;	./libs/tmr2_lib.c: 15: }
      000AE3 80               [11] 2258 	iret
                                   2259 ;	./libs/tmr2_lib.c: 16: void delay_s(uint8_t ticks)
                                   2260 ;	-----------------------------------------
                                   2261 ;	 function delay_s
                                   2262 ;	-----------------------------------------
      000AE4                       2263 _delay_s:
      000AE4 52 07            [ 2] 2264 	sub	sp, #7
      000AE6 6B 05            [ 1] 2265 	ld	(0x05, sp), a
                                   2266 ;	./libs/tmr2_lib.c: 18: for(int i = 0;i<ticks+1;i++)//блять в душе не ебу почему так сработало, но почему-то если на один больше, то таймер нормально работает
      000AE8 5F               [ 1] 2267 	clrw	x
      000AE9 1F 06            [ 2] 2268 	ldw	(0x06, sp), x
      000AEB                       2269 00106$:
      000AEB 7B 05            [ 1] 2270 	ld	a, (0x05, sp)
      000AED 6B 02            [ 1] 2271 	ld	(0x02, sp), a
      000AEF 0F 01            [ 1] 2272 	clr	(0x01, sp)
      000AF1 1E 01            [ 2] 2273 	ldw	x, (0x01, sp)
      000AF3 5C               [ 1] 2274 	incw	x
      000AF4 1F 03            [ 2] 2275 	ldw	(0x03, sp), x
      000AF6 1E 06            [ 2] 2276 	ldw	x, (0x06, sp)
      000AF8 13 03            [ 2] 2277 	cpw	x, (0x03, sp)
      000AFA 2E 2A            [ 1] 2278 	jrsge	00104$
                                   2279 ;	./libs/tmr2_lib.c: 20: TIM2_SR1 -> UIF = 0;
      000AFC 72 11 53 04      [ 1] 2280 	bres	0x5304, #0
                                   2281 ;	./libs/tmr2_lib.c: 21: TIM2_ARRH->ARR = 0x03;
      000B00 35 03 53 0F      [ 1] 2282 	mov	0x530f+0, #0x03
                                   2283 ;	./libs/tmr2_lib.c: 22: TIM2_ARRL->ARR = 0xD1;
      000B04 35 D1 53 10      [ 1] 2284 	mov	0x5310+0, #0xd1
                                   2285 ;	./libs/tmr2_lib.c: 23: TIM2_PSCR -> PSC = 0x0E;
      000B08 C6 53 0E         [ 1] 2286 	ld	a, 0x530e
      000B0B A4 F0            [ 1] 2287 	and	a, #0xf0
      000B0D AA 0E            [ 1] 2288 	or	a, #0x0e
      000B0F C7 53 0E         [ 1] 2289 	ld	0x530e, a
                                   2290 ;	./libs/tmr2_lib.c: 24: TIM2_IER -> UIE = 1;
      000B12 72 10 53 03      [ 1] 2291 	bset	0x5303, #0
                                   2292 ;	./libs/tmr2_lib.c: 25: TIM2_CR1-> CEN = 1;
      000B16 72 10 53 00      [ 1] 2293 	bset	0x5300, #0
                                   2294 ;	./libs/tmr2_lib.c: 26: while(TIM2_IER -> UIE);	
      000B1A                       2295 00101$:
      000B1A 72 00 53 03 FB   [ 2] 2296 	btjt	0x5303, #0, 00101$
                                   2297 ;	./libs/tmr2_lib.c: 18: for(int i = 0;i<ticks+1;i++)//блять в душе не ебу почему так сработало, но почему-то если на один больше, то таймер нормально работает
      000B1F 1E 06            [ 2] 2298 	ldw	x, (0x06, sp)
      000B21 5C               [ 1] 2299 	incw	x
      000B22 1F 06            [ 2] 2300 	ldw	(0x06, sp), x
      000B24 20 C5            [ 2] 2301 	jra	00106$
      000B26                       2302 00104$:
                                   2303 ;	./libs/tmr2_lib.c: 28: TIM2_CR1-> CEN = 0;
      000B26 72 11 53 00      [ 1] 2304 	bres	0x5300, #0
                                   2305 ;	./libs/tmr2_lib.c: 29: }
      000B2A 5B 07            [ 2] 2306 	addw	sp, #7
      000B2C 81               [ 4] 2307 	ret
                                   2308 ;	./libs/tmr2_lib.c: 30: void delay_ms(uint8_t ticks)
                                   2309 ;	-----------------------------------------
                                   2310 ;	 function delay_ms
                                   2311 ;	-----------------------------------------
      000B2D                       2312 _delay_ms:
      000B2D 52 07            [ 2] 2313 	sub	sp, #7
      000B2F 6B 05            [ 1] 2314 	ld	(0x05, sp), a
                                   2315 ;	./libs/tmr2_lib.c: 32: for(int i = 0;i<ticks+1;i++)
      000B31 5F               [ 1] 2316 	clrw	x
      000B32 1F 06            [ 2] 2317 	ldw	(0x06, sp), x
      000B34                       2318 00106$:
      000B34 7B 05            [ 1] 2319 	ld	a, (0x05, sp)
      000B36 6B 02            [ 1] 2320 	ld	(0x02, sp), a
      000B38 0F 01            [ 1] 2321 	clr	(0x01, sp)
      000B3A 1E 01            [ 2] 2322 	ldw	x, (0x01, sp)
      000B3C 5C               [ 1] 2323 	incw	x
      000B3D 1F 03            [ 2] 2324 	ldw	(0x03, sp), x
      000B3F 1E 06            [ 2] 2325 	ldw	x, (0x06, sp)
      000B41 13 03            [ 2] 2326 	cpw	x, (0x03, sp)
      000B43 2E 2A            [ 1] 2327 	jrsge	00104$
                                   2328 ;	./libs/tmr2_lib.c: 34: TIM2_SR1 -> UIF = 0;
      000B45 72 11 53 04      [ 1] 2329 	bres	0x5304, #0
                                   2330 ;	./libs/tmr2_lib.c: 35: TIM2_ARRH->ARR = 0x03;
      000B49 35 03 53 0F      [ 1] 2331 	mov	0x530f+0, #0x03
                                   2332 ;	./libs/tmr2_lib.c: 36: TIM2_ARRL->ARR = 0xD1;
      000B4D 35 D1 53 10      [ 1] 2333 	mov	0x5310+0, #0xd1
                                   2334 ;	./libs/tmr2_lib.c: 37: TIM2_PSCR -> PSC = 0x0E;
      000B51 C6 53 0E         [ 1] 2335 	ld	a, 0x530e
      000B54 A4 F0            [ 1] 2336 	and	a, #0xf0
      000B56 AA 0E            [ 1] 2337 	or	a, #0x0e
      000B58 C7 53 0E         [ 1] 2338 	ld	0x530e, a
                                   2339 ;	./libs/tmr2_lib.c: 38: TIM2_IER -> UIE = 1;
      000B5B 72 10 53 03      [ 1] 2340 	bset	0x5303, #0
                                   2341 ;	./libs/tmr2_lib.c: 39: TIM2_CR1-> CEN = 1;
      000B5F 72 10 53 00      [ 1] 2342 	bset	0x5300, #0
                                   2343 ;	./libs/tmr2_lib.c: 40: while(TIM2_IER -> UIE);	
      000B63                       2344 00101$:
      000B63 72 00 53 03 FB   [ 2] 2345 	btjt	0x5303, #0, 00101$
                                   2346 ;	./libs/tmr2_lib.c: 32: for(int i = 0;i<ticks+1;i++)
      000B68 1E 06            [ 2] 2347 	ldw	x, (0x06, sp)
      000B6A 5C               [ 1] 2348 	incw	x
      000B6B 1F 06            [ 2] 2349 	ldw	(0x06, sp), x
      000B6D 20 C5            [ 2] 2350 	jra	00106$
      000B6F                       2351 00104$:
                                   2352 ;	./libs/tmr2_lib.c: 42: TIM2_CR1-> CEN = 0;
      000B6F 72 11 53 00      [ 1] 2353 	bres	0x5300, #0
                                   2354 ;	./libs/tmr2_lib.c: 43: }
      000B73 5B 07            [ 2] 2355 	addw	sp, #7
      000B75 81               [ 4] 2356 	ret
                                   2357 ;	main.c: 3: void setup(void)
                                   2358 ;	-----------------------------------------
                                   2359 ;	 function setup
                                   2360 ;	-----------------------------------------
      000B76                       2361 _setup:
                                   2362 ;	main.c: 6: CLK_CKDIVR = 0;
      000B76 35 00 50 C6      [ 1] 2363 	mov	0x50c6+0, #0x00
                                   2364 ;	main.c: 8: uart_init(9600,0);
      000B7A 4F               [ 1] 2365 	clr	a
      000B7B AE 25 80         [ 2] 2366 	ldw	x, #0x2580
      000B7E CDr00rB7         [ 4] 2367 	call	_uart_init
                                   2368 ;	main.c: 9: i2c_init();
      000B81 CDr02rD8         [ 4] 2369 	call	_i2c_init
                                   2370 ;	main.c: 11: enableInterrupts();
      000B84 9A               [ 1] 2371 	rim
                                   2372 ;	main.c: 12: }
      000B85 81               [ 4] 2373 	ret
                                   2374 ;	main.c: 14: void gg(void)
                                   2375 ;	-----------------------------------------
                                   2376 ;	 function gg
                                   2377 ;	-----------------------------------------
      000B86                       2378 _gg:
                                   2379 ;	main.c: 16: ssd1306_init();
      000B86 CDr04r6B         [ 4] 2380 	call	_ssd1306_init
                                   2381 ;	main.c: 17: ssd1306_send_buffer();
      000B89 CDr05r5B         [ 4] 2382 	call	_ssd1306_send_buffer
                                   2383 ;	main.c: 18: delay_s(1);
      000B8C A6 01            [ 1] 2384 	ld	a, #0x01
      000B8E CDr0ArE4         [ 4] 2385 	call	_delay_s
                                   2386 ;	main.c: 20: menu_set_paragraph(menu);
      000B91 4F               [ 1] 2387 	clr	a
      000B92 CDr07rE4         [ 4] 2388 	call	_menu_set_paragraph
                                   2389 ;	main.c: 21: delay_s(1);
      000B95 A6 01            [ 1] 2390 	ld	a, #0x01
                                   2391 ;	main.c: 36: }
      000B97 CCr0ArE4         [ 2] 2392 	jp	_delay_s
                                   2393 ;	main.c: 38: int main(void)
                                   2394 ;	-----------------------------------------
                                   2395 ;	 function main
                                   2396 ;	-----------------------------------------
      000B9A                       2397 _main:
                                   2398 ;	main.c: 40: setup();
      000B9A CDr0Br76         [ 4] 2399 	call	_setup
                                   2400 ;	main.c: 41: gg();
      000B9D CDr0Br86         [ 4] 2401 	call	_gg
                                   2402 ;	main.c: 42: while(1);
      000BA0                       2403 00102$:
      000BA0 20 FE            [ 2] 2404 	jra	00102$
                                   2405 ;	main.c: 43: }
      000BA2 81               [ 4] 2406 	ret
                                   2407 	.area CODE
                                   2408 	.area CONST
                                   2409 	.area INITIALIZER
      000000                       2410 __xinit__I2C_IRQ:
      000000 00                    2411 	.db #0x00	; 0
      000001                       2412 __xinit__ttf_eng_void:
      000001 00                    2413 	.db #0x00	; 0
      000002 00                    2414 	.db #0x00	; 0
      000003 00                    2415 	.db #0x00	; 0
      000004 00                    2416 	.db #0x00	; 0
      000005 00                    2417 	.db #0x00	; 0
      000006 00                    2418 	.db #0x00	; 0
      000007 00                    2419 	.db #0x00	; 0
      000008 00                    2420 	.db #0x00	; 0
      000009                       2421 __xinit__ttf_eng_a:
      000009 00                    2422 	.db #0x00	; 0
      00000A 7E                    2423 	.db #0x7e	; 126
      00000B 42                    2424 	.db #0x42	; 66	'B'
      00000C 42                    2425 	.db #0x42	; 66	'B'
      00000D 7E                    2426 	.db #0x7e	; 126
      00000E 42                    2427 	.db #0x42	; 66	'B'
      00000F 42                    2428 	.db #0x42	; 66	'B'
      000010 00                    2429 	.db #0x00	; 0
      000011                       2430 __xinit__ttf_eng_b:
      000011 00                    2431 	.db #0x00	; 0
      000012 7C                    2432 	.db #0x7c	; 124
      000013 42                    2433 	.db #0x42	; 66	'B'
      000014 7C                    2434 	.db #0x7c	; 124
      000015 42                    2435 	.db #0x42	; 66	'B'
      000016 42                    2436 	.db #0x42	; 66	'B'
      000017 7C                    2437 	.db #0x7c	; 124
      000018 00                    2438 	.db #0x00	; 0
      000019                       2439 __xinit__ttf_eng_c:
      000019 00                    2440 	.db #0x00	; 0
      00001A 7E                    2441 	.db #0x7e	; 126
      00001B 40                    2442 	.db #0x40	; 64
      00001C 40                    2443 	.db #0x40	; 64
      00001D 40                    2444 	.db #0x40	; 64
      00001E 40                    2445 	.db #0x40	; 64
      00001F 7E                    2446 	.db #0x7e	; 126
      000020 00                    2447 	.db #0x00	; 0
      000021                       2448 __xinit__ttf_eng_d:
      000021 00                    2449 	.db #0x00	; 0
      000022 7C                    2450 	.db #0x7c	; 124
      000023 42                    2451 	.db #0x42	; 66	'B'
      000024 42                    2452 	.db #0x42	; 66	'B'
      000025 42                    2453 	.db #0x42	; 66	'B'
      000026 42                    2454 	.db #0x42	; 66	'B'
      000027 7C                    2455 	.db #0x7c	; 124
      000028 00                    2456 	.db #0x00	; 0
      000029                       2457 __xinit__ttf_eng_e:
      000029 00                    2458 	.db #0x00	; 0
      00002A 7E                    2459 	.db #0x7e	; 126
      00002B 40                    2460 	.db #0x40	; 64
      00002C 7C                    2461 	.db #0x7c	; 124
      00002D 40                    2462 	.db #0x40	; 64
      00002E 40                    2463 	.db #0x40	; 64
      00002F 7E                    2464 	.db #0x7e	; 126
      000030 00                    2465 	.db #0x00	; 0
      000031                       2466 __xinit__ttf_eng_f:
      000031 00                    2467 	.db #0x00	; 0
      000032 7E                    2468 	.db #0x7e	; 126
      000033 40                    2469 	.db #0x40	; 64
      000034 40                    2470 	.db #0x40	; 64
      000035 7C                    2471 	.db #0x7c	; 124
      000036 40                    2472 	.db #0x40	; 64
      000037 40                    2473 	.db #0x40	; 64
      000038 00                    2474 	.db #0x00	; 0
      000039                       2475 __xinit__ttf_eng_g:
      000039 00                    2476 	.db #0x00	; 0
      00003A 7E                    2477 	.db #0x7e	; 126
      00003B 42                    2478 	.db #0x42	; 66	'B'
      00003C 40                    2479 	.db #0x40	; 64
      00003D 4E                    2480 	.db #0x4e	; 78	'N'
      00003E 42                    2481 	.db #0x42	; 66	'B'
      00003F 7E                    2482 	.db #0x7e	; 126
      000040 00                    2483 	.db #0x00	; 0
      000041                       2484 __xinit__ttf_eng_h:
      000041 00                    2485 	.db #0x00	; 0
      000042 42                    2486 	.db #0x42	; 66	'B'
      000043 42                    2487 	.db #0x42	; 66	'B'
      000044 42                    2488 	.db #0x42	; 66	'B'
      000045 7E                    2489 	.db #0x7e	; 126
      000046 42                    2490 	.db #0x42	; 66	'B'
      000047 42                    2491 	.db #0x42	; 66	'B'
      000048 00                    2492 	.db #0x00	; 0
      000049                       2493 __xinit__ttf_eng_i:
      000049 00                    2494 	.db #0x00	; 0
      00004A 7E                    2495 	.db #0x7e	; 126
      00004B 18                    2496 	.db #0x18	; 24
      00004C 18                    2497 	.db #0x18	; 24
      00004D 18                    2498 	.db #0x18	; 24
      00004E 18                    2499 	.db #0x18	; 24
      00004F 7E                    2500 	.db #0x7e	; 126
      000050 00                    2501 	.db #0x00	; 0
      000051                       2502 __xinit__ttf_eng_j:
      000051 00                    2503 	.db #0x00	; 0
      000052 0C                    2504 	.db #0x0c	; 12
      000053 0C                    2505 	.db #0x0c	; 12
      000054 0C                    2506 	.db #0x0c	; 12
      000055 0C                    2507 	.db #0x0c	; 12
      000056 6C                    2508 	.db #0x6c	; 108	'l'
      000057 7C                    2509 	.db #0x7c	; 124
      000058 00                    2510 	.db #0x00	; 0
      000059                       2511 __xinit__ttf_eng_k:
      000059 00                    2512 	.db #0x00	; 0
      00005A 66                    2513 	.db #0x66	; 102	'f'
      00005B 68                    2514 	.db #0x68	; 104	'h'
      00005C 70                    2515 	.db #0x70	; 112	'p'
      00005D 70                    2516 	.db #0x70	; 112	'p'
      00005E 68                    2517 	.db #0x68	; 104	'h'
      00005F 66                    2518 	.db #0x66	; 102	'f'
      000060 00                    2519 	.db #0x00	; 0
      000061                       2520 __xinit__ttf_eng_l:
      000061 00                    2521 	.db #0x00	; 0
      000062 40                    2522 	.db #0x40	; 64
      000063 40                    2523 	.db #0x40	; 64
      000064 40                    2524 	.db #0x40	; 64
      000065 40                    2525 	.db #0x40	; 64
      000066 40                    2526 	.db #0x40	; 64
      000067 7E                    2527 	.db #0x7e	; 126
      000068 00                    2528 	.db #0x00	; 0
      000069                       2529 __xinit__ttf_eng_m:
      000069 00                    2530 	.db #0x00	; 0
      00006A 42                    2531 	.db #0x42	; 66	'B'
      00006B 66                    2532 	.db #0x66	; 102	'f'
      00006C 5A                    2533 	.db #0x5a	; 90	'Z'
      00006D 42                    2534 	.db #0x42	; 66	'B'
      00006E 42                    2535 	.db #0x42	; 66	'B'
      00006F 42                    2536 	.db #0x42	; 66	'B'
      000070 00                    2537 	.db #0x00	; 0
      000071                       2538 __xinit__ttf_eng_n:
      000071 00                    2539 	.db #0x00	; 0
      000072 42                    2540 	.db #0x42	; 66	'B'
      000073 62                    2541 	.db #0x62	; 98	'b'
      000074 52                    2542 	.db #0x52	; 82	'R'
      000075 4A                    2543 	.db #0x4a	; 74	'J'
      000076 46                    2544 	.db #0x46	; 70	'F'
      000077 42                    2545 	.db #0x42	; 66	'B'
      000078 00                    2546 	.db #0x00	; 0
      000079                       2547 __xinit__ttf_eng_o:
      000079 00                    2548 	.db #0x00	; 0
      00007A 7E                    2549 	.db #0x7e	; 126
      00007B 42                    2550 	.db #0x42	; 66	'B'
      00007C 42                    2551 	.db #0x42	; 66	'B'
      00007D 42                    2552 	.db #0x42	; 66	'B'
      00007E 42                    2553 	.db #0x42	; 66	'B'
      00007F 7E                    2554 	.db #0x7e	; 126
      000080 00                    2555 	.db #0x00	; 0
      000081                       2556 __xinit__ttf_eng_p:
      000081 00                    2557 	.db #0x00	; 0
      000082 7E                    2558 	.db #0x7e	; 126
      000083 42                    2559 	.db #0x42	; 66	'B'
      000084 42                    2560 	.db #0x42	; 66	'B'
      000085 7E                    2561 	.db #0x7e	; 126
      000086 40                    2562 	.db #0x40	; 64
      000087 40                    2563 	.db #0x40	; 64
      000088 00                    2564 	.db #0x00	; 0
      000089                       2565 __xinit__ttf_eng_q:
      000089 00                    2566 	.db #0x00	; 0
      00008A 7E                    2567 	.db #0x7e	; 126
      00008B 42                    2568 	.db #0x42	; 66	'B'
      00008C 42                    2569 	.db #0x42	; 66	'B'
      00008D 42                    2570 	.db #0x42	; 66	'B'
      00008E 7E                    2571 	.db #0x7e	; 126
      00008F 04                    2572 	.db #0x04	; 4
      000090 00                    2573 	.db #0x00	; 0
      000091                       2574 __xinit__ttf_eng_r:
      000091 00                    2575 	.db #0x00	; 0
      000092 7E                    2576 	.db #0x7e	; 126
      000093 42                    2577 	.db #0x42	; 66	'B'
      000094 42                    2578 	.db #0x42	; 66	'B'
      000095 7C                    2579 	.db #0x7c	; 124
      000096 42                    2580 	.db #0x42	; 66	'B'
      000097 42                    2581 	.db #0x42	; 66	'B'
      000098 00                    2582 	.db #0x00	; 0
      000099                       2583 __xinit__ttf_eng_s:
      000099 00                    2584 	.db #0x00	; 0
      00009A 3E                    2585 	.db #0x3e	; 62
      00009B 40                    2586 	.db #0x40	; 64
      00009C 3C                    2587 	.db #0x3c	; 60
      00009D 02                    2588 	.db #0x02	; 2
      00009E 02                    2589 	.db #0x02	; 2
      00009F 7C                    2590 	.db #0x7c	; 124
      0000A0 00                    2591 	.db #0x00	; 0
      0000A1                       2592 __xinit__ttf_eng_t:
      0000A1 00                    2593 	.db #0x00	; 0
      0000A2 7E                    2594 	.db #0x7e	; 126
      0000A3 18                    2595 	.db #0x18	; 24
      0000A4 18                    2596 	.db #0x18	; 24
      0000A5 18                    2597 	.db #0x18	; 24
      0000A6 18                    2598 	.db #0x18	; 24
      0000A7 18                    2599 	.db #0x18	; 24
      0000A8 00                    2600 	.db #0x00	; 0
      0000A9                       2601 __xinit__ttf_eng_u:
      0000A9 00                    2602 	.db #0x00	; 0
      0000AA 42                    2603 	.db #0x42	; 66	'B'
      0000AB 42                    2604 	.db #0x42	; 66	'B'
      0000AC 42                    2605 	.db #0x42	; 66	'B'
      0000AD 42                    2606 	.db #0x42	; 66	'B'
      0000AE 42                    2607 	.db #0x42	; 66	'B'
      0000AF 3E                    2608 	.db #0x3e	; 62
      0000B0 00                    2609 	.db #0x00	; 0
      0000B1                       2610 __xinit__ttf_eng_v:
      0000B1 00                    2611 	.db #0x00	; 0
      0000B2 42                    2612 	.db #0x42	; 66	'B'
      0000B3 42                    2613 	.db #0x42	; 66	'B'
      0000B4 42                    2614 	.db #0x42	; 66	'B'
      0000B5 24                    2615 	.db #0x24	; 36
      0000B6 24                    2616 	.db #0x24	; 36
      0000B7 18                    2617 	.db #0x18	; 24
      0000B8 00                    2618 	.db #0x00	; 0
      0000B9                       2619 __xinit__ttf_eng_w:
      0000B9 00                    2620 	.db #0x00	; 0
      0000BA 42                    2621 	.db #0x42	; 66	'B'
      0000BB 42                    2622 	.db #0x42	; 66	'B'
      0000BC 42                    2623 	.db #0x42	; 66	'B'
      0000BD 5A                    2624 	.db #0x5a	; 90	'Z'
      0000BE 5A                    2625 	.db #0x5a	; 90	'Z'
      0000BF 24                    2626 	.db #0x24	; 36
      0000C0 00                    2627 	.db #0x00	; 0
      0000C1                       2628 __xinit__ttf_eng_x:
      0000C1 00                    2629 	.db #0x00	; 0
      0000C2 42                    2630 	.db #0x42	; 66	'B'
      0000C3 24                    2631 	.db #0x24	; 36
      0000C4 18                    2632 	.db #0x18	; 24
      0000C5 18                    2633 	.db #0x18	; 24
      0000C6 22                    2634 	.db #0x22	; 34
      0000C7 42                    2635 	.db #0x42	; 66	'B'
      0000C8 00                    2636 	.db #0x00	; 0
      0000C9                       2637 __xinit__ttf_eng_y:
      0000C9 00                    2638 	.db #0x00	; 0
      0000CA 42                    2639 	.db #0x42	; 66	'B'
      0000CB 24                    2640 	.db #0x24	; 36
      0000CC 18                    2641 	.db #0x18	; 24
      0000CD 18                    2642 	.db #0x18	; 24
      0000CE 18                    2643 	.db #0x18	; 24
      0000CF 18                    2644 	.db #0x18	; 24
      0000D0 00                    2645 	.db #0x00	; 0
      0000D1                       2646 __xinit__ttf_eng_z:
      0000D1 00                    2647 	.db #0x00	; 0
      0000D2 7E                    2648 	.db #0x7e	; 126
      0000D3 04                    2649 	.db #0x04	; 4
      0000D4 08                    2650 	.db #0x08	; 8
      0000D5 10                    2651 	.db #0x10	; 16
      0000D6 20                    2652 	.db #0x20	; 32
      0000D7 7E                    2653 	.db #0x7e	; 126
      0000D8 00                    2654 	.db #0x00	; 0
      0000D9                       2655 __xinit__ttf_eng_1:
      0000D9 00                    2656 	.db #0x00	; 0
      0000DA 18                    2657 	.db #0x18	; 24
      0000DB 38                    2658 	.db #0x38	; 56	'8'
      0000DC 38                    2659 	.db #0x38	; 56	'8'
      0000DD 18                    2660 	.db #0x18	; 24
      0000DE 18                    2661 	.db #0x18	; 24
      0000DF 18                    2662 	.db #0x18	; 24
      0000E0 00                    2663 	.db #0x00	; 0
      0000E1                       2664 __xinit__ttf_eng_2:
      0000E1 00                    2665 	.db #0x00	; 0
      0000E2 38                    2666 	.db #0x38	; 56	'8'
      0000E3 44                    2667 	.db #0x44	; 68	'D'
      0000E4 08                    2668 	.db #0x08	; 8
      0000E5 10                    2669 	.db #0x10	; 16
      0000E6 20                    2670 	.db #0x20	; 32
      0000E7 7C                    2671 	.db #0x7c	; 124
      0000E8 00                    2672 	.db #0x00	; 0
      0000E9                       2673 __xinit__ttf_eng_3:
      0000E9 00                    2674 	.db #0x00	; 0
      0000EA 7C                    2675 	.db #0x7c	; 124
      0000EB 02                    2676 	.db #0x02	; 2
      0000EC 3C                    2677 	.db #0x3c	; 60
      0000ED 02                    2678 	.db #0x02	; 2
      0000EE 02                    2679 	.db #0x02	; 2
      0000EF 7C                    2680 	.db #0x7c	; 124
      0000F0 00                    2681 	.db #0x00	; 0
      0000F1                       2682 __xinit__ttf_eng_4:
      0000F1 00                    2683 	.db #0x00	; 0
      0000F2 42                    2684 	.db #0x42	; 66	'B'
      0000F3 42                    2685 	.db #0x42	; 66	'B'
      0000F4 7E                    2686 	.db #0x7e	; 126
      0000F5 02                    2687 	.db #0x02	; 2
      0000F6 02                    2688 	.db #0x02	; 2
      0000F7 02                    2689 	.db #0x02	; 2
      0000F8 00                    2690 	.db #0x00	; 0
      0000F9                       2691 __xinit__ttf_eng_5:
      0000F9 00                    2692 	.db #0x00	; 0
      0000FA 7E                    2693 	.db #0x7e	; 126
      0000FB 40                    2694 	.db #0x40	; 64
      0000FC 7C                    2695 	.db #0x7c	; 124
      0000FD 02                    2696 	.db #0x02	; 2
      0000FE 02                    2697 	.db #0x02	; 2
      0000FF 7C                    2698 	.db #0x7c	; 124
      000100 00                    2699 	.db #0x00	; 0
      000101                       2700 __xinit__ttf_eng_6:
      000101 00                    2701 	.db #0x00	; 0
      000102 3C                    2702 	.db #0x3c	; 60
      000103 40                    2703 	.db #0x40	; 64
      000104 7C                    2704 	.db #0x7c	; 124
      000105 42                    2705 	.db #0x42	; 66	'B'
      000106 42                    2706 	.db #0x42	; 66	'B'
      000107 3C                    2707 	.db #0x3c	; 60
      000108 00                    2708 	.db #0x00	; 0
      000109                       2709 __xinit__ttf_eng_7:
      000109 00                    2710 	.db #0x00	; 0
      00010A 7E                    2711 	.db #0x7e	; 126
      00010B 02                    2712 	.db #0x02	; 2
      00010C 04                    2713 	.db #0x04	; 4
      00010D 08                    2714 	.db #0x08	; 8
      00010E 10                    2715 	.db #0x10	; 16
      00010F 20                    2716 	.db #0x20	; 32
      000110 00                    2717 	.db #0x00	; 0
      000111                       2718 __xinit__ttf_eng_8:
      000111 00                    2719 	.db #0x00	; 0
      000112 3C                    2720 	.db #0x3c	; 60
      000113 42                    2721 	.db #0x42	; 66	'B'
      000114 3C                    2722 	.db #0x3c	; 60
      000115 42                    2723 	.db #0x42	; 66	'B'
      000116 42                    2724 	.db #0x42	; 66	'B'
      000117 3C                    2725 	.db #0x3c	; 60
      000118 00                    2726 	.db #0x00	; 0
      000119                       2727 __xinit__ttf_eng_9:
      000119 00                    2728 	.db #0x00	; 0
      00011A 3C                    2729 	.db #0x3c	; 60
      00011B 42                    2730 	.db #0x42	; 66	'B'
      00011C 42                    2731 	.db #0x42	; 66	'B'
      00011D 3E                    2732 	.db #0x3e	; 62
      00011E 02                    2733 	.db #0x02	; 2
      00011F 3C                    2734 	.db #0x3c	; 60
      000120 00                    2735 	.db #0x00	; 0
      000121                       2736 __xinit__ttf_eng_0:
      000121 00                    2737 	.db #0x00	; 0
      000122 3C                    2738 	.db #0x3c	; 60
      000123 46                    2739 	.db #0x46	; 70	'F'
      000124 4A                    2740 	.db #0x4a	; 74	'J'
      000125 52                    2741 	.db #0x52	; 82	'R'
      000126 62                    2742 	.db #0x62	; 98	'b'
      000127 3C                    2743 	.db #0x3c	; 60
      000128 00                    2744 	.db #0x00	; 0
      000129                       2745 __xinit__ttf_eng_corner_left_up:
      000129 FF                    2746 	.db #0xff	; 255
      00012A FF                    2747 	.db #0xff	; 255
      00012B C0                    2748 	.db #0xc0	; 192
      00012C C0                    2749 	.db #0xc0	; 192
      00012D C0                    2750 	.db #0xc0	; 192
      00012E C0                    2751 	.db #0xc0	; 192
      00012F C0                    2752 	.db #0xc0	; 192
      000130 C0                    2753 	.db #0xc0	; 192
      000131                       2754 __xinit__ttf_eng_corner_right_up:
      000131 FF                    2755 	.db #0xff	; 255
      000132 FF                    2756 	.db #0xff	; 255
      000133 03                    2757 	.db #0x03	; 3
      000134 03                    2758 	.db #0x03	; 3
      000135 03                    2759 	.db #0x03	; 3
      000136 03                    2760 	.db #0x03	; 3
      000137 03                    2761 	.db #0x03	; 3
      000138 03                    2762 	.db #0x03	; 3
      000139                       2763 __xinit__ttf_eng_corner_left_down:
      000139 C0                    2764 	.db #0xc0	; 192
      00013A C0                    2765 	.db #0xc0	; 192
      00013B C0                    2766 	.db #0xc0	; 192
      00013C C0                    2767 	.db #0xc0	; 192
      00013D C0                    2768 	.db #0xc0	; 192
      00013E C0                    2769 	.db #0xc0	; 192
      00013F FF                    2770 	.db #0xff	; 255
      000140 FF                    2771 	.db #0xff	; 255
      000141                       2772 __xinit__ttf_eng_corner_right_down:
      000141 03                    2773 	.db #0x03	; 3
      000142 03                    2774 	.db #0x03	; 3
      000143 03                    2775 	.db #0x03	; 3
      000144 03                    2776 	.db #0x03	; 3
      000145 03                    2777 	.db #0x03	; 3
      000146 03                    2778 	.db #0x03	; 3
      000147 FF                    2779 	.db #0xff	; 255
      000148 FF                    2780 	.db #0xff	; 255
      000149                       2781 __xinit__ttf_eng_line_right:
      000149 03                    2782 	.db #0x03	; 3
      00014A 03                    2783 	.db #0x03	; 3
      00014B 03                    2784 	.db #0x03	; 3
      00014C 03                    2785 	.db #0x03	; 3
      00014D 03                    2786 	.db #0x03	; 3
      00014E 03                    2787 	.db #0x03	; 3
      00014F 03                    2788 	.db #0x03	; 3
      000150 03                    2789 	.db #0x03	; 3
      000151                       2790 __xinit__ttf_eng_line_left:
      000151 C0                    2791 	.db #0xc0	; 192
      000152 C0                    2792 	.db #0xc0	; 192
      000153 C0                    2793 	.db #0xc0	; 192
      000154 C0                    2794 	.db #0xc0	; 192
      000155 C0                    2795 	.db #0xc0	; 192
      000156 C0                    2796 	.db #0xc0	; 192
      000157 C0                    2797 	.db #0xc0	; 192
      000158 C0                    2798 	.db #0xc0	; 192
      000159                       2799 __xinit__ttf_eng_line_up:
      000159 FF                    2800 	.db #0xff	; 255
      00015A FF                    2801 	.db #0xff	; 255
      00015B 00                    2802 	.db #0x00	; 0
      00015C 00                    2803 	.db #0x00	; 0
      00015D 00                    2804 	.db #0x00	; 0
      00015E 00                    2805 	.db #0x00	; 0
      00015F 00                    2806 	.db #0x00	; 0
      000160 00                    2807 	.db #0x00	; 0
      000161                       2808 __xinit__ttf_eng_line_down:
      000161 00                    2809 	.db #0x00	; 0
      000162 00                    2810 	.db #0x00	; 0
      000163 00                    2811 	.db #0x00	; 0
      000164 00                    2812 	.db #0x00	; 0
      000165 00                    2813 	.db #0x00	; 0
      000166 00                    2814 	.db #0x00	; 0
      000167 FF                    2815 	.db #0xff	; 255
      000168 FF                    2816 	.db #0xff	; 255
      000169                       2817 __xinit__main_buffer:
      000169 FF                    2818 	.db #0xff	; 255
      00016A 01                    2819 	.db #0x01	; 1
      00016B 01                    2820 	.db #0x01	; 1
      00016C 01                    2821 	.db #0x01	; 1
      00016D 01                    2822 	.db #0x01	; 1
      00016E 01                    2823 	.db #0x01	; 1
      00016F 01                    2824 	.db #0x01	; 1
      000170 01                    2825 	.db #0x01	; 1
      000171 FD                    2826 	.db #0xfd	; 253
      000172 FD                    2827 	.db #0xfd	; 253
      000173 FD                    2828 	.db #0xfd	; 253
      000174 FD                    2829 	.db #0xfd	; 253
      000175 FD                    2830 	.db #0xfd	; 253
      000176 FD                    2831 	.db #0xfd	; 253
      000177 FD                    2832 	.db #0xfd	; 253
      000178 01                    2833 	.db #0x01	; 1
      000179 01                    2834 	.db #0x01	; 1
      00017A 01                    2835 	.db #0x01	; 1
      00017B 01                    2836 	.db #0x01	; 1
      00017C 01                    2837 	.db #0x01	; 1
      00017D 01                    2838 	.db #0x01	; 1
      00017E 01                    2839 	.db #0x01	; 1
      00017F FD                    2840 	.db #0xfd	; 253
      000180 FD                    2841 	.db #0xfd	; 253
      000181 FD                    2842 	.db #0xfd	; 253
      000182 FD                    2843 	.db #0xfd	; 253
      000183 FD                    2844 	.db #0xfd	; 253
      000184 FD                    2845 	.db #0xfd	; 253
      000185 FD                    2846 	.db #0xfd	; 253
      000186 FD                    2847 	.db #0xfd	; 253
      000187 FD                    2848 	.db #0xfd	; 253
      000188 FD                    2849 	.db #0xfd	; 253
      000189 FD                    2850 	.db #0xfd	; 253
      00018A FD                    2851 	.db #0xfd	; 253
      00018B FD                    2852 	.db #0xfd	; 253
      00018C FD                    2853 	.db #0xfd	; 253
      00018D FD                    2854 	.db #0xfd	; 253
      00018E FD                    2855 	.db #0xfd	; 253
      00018F FD                    2856 	.db #0xfd	; 253
      000190 FD                    2857 	.db #0xfd	; 253
      000191 FD                    2858 	.db #0xfd	; 253
      000192 FD                    2859 	.db #0xfd	; 253
      000193 FD                    2860 	.db #0xfd	; 253
      000194 FD                    2861 	.db #0xfd	; 253
      000195 FD                    2862 	.db #0xfd	; 253
      000196 FD                    2863 	.db #0xfd	; 253
      000197 FD                    2864 	.db #0xfd	; 253
      000198 FD                    2865 	.db #0xfd	; 253
      000199 FD                    2866 	.db #0xfd	; 253
      00019A FD                    2867 	.db #0xfd	; 253
      00019B FD                    2868 	.db #0xfd	; 253
      00019C FD                    2869 	.db #0xfd	; 253
      00019D FD                    2870 	.db #0xfd	; 253
      00019E FD                    2871 	.db #0xfd	; 253
      00019F FD                    2872 	.db #0xfd	; 253
      0001A0 FD                    2873 	.db #0xfd	; 253
      0001A1 FD                    2874 	.db #0xfd	; 253
      0001A2 01                    2875 	.db #0x01	; 1
      0001A3 01                    2876 	.db #0x01	; 1
      0001A4 01                    2877 	.db #0x01	; 1
      0001A5 01                    2878 	.db #0x01	; 1
      0001A6 01                    2879 	.db #0x01	; 1
      0001A7 01                    2880 	.db #0x01	; 1
      0001A8 01                    2881 	.db #0x01	; 1
      0001A9 FD                    2882 	.db #0xfd	; 253
      0001AA FD                    2883 	.db #0xfd	; 253
      0001AB FD                    2884 	.db #0xfd	; 253
      0001AC FD                    2885 	.db #0xfd	; 253
      0001AD FD                    2886 	.db #0xfd	; 253
      0001AE FD                    2887 	.db #0xfd	; 253
      0001AF FD                    2888 	.db #0xfd	; 253
      0001B0 FD                    2889 	.db #0xfd	; 253
      0001B1 FD                    2890 	.db #0xfd	; 253
      0001B2 FD                    2891 	.db #0xfd	; 253
      0001B3 FD                    2892 	.db #0xfd	; 253
      0001B4 FD                    2893 	.db #0xfd	; 253
      0001B5 FD                    2894 	.db #0xfd	; 253
      0001B6 FD                    2895 	.db #0xfd	; 253
      0001B7 FD                    2896 	.db #0xfd	; 253
      0001B8 FD                    2897 	.db #0xfd	; 253
      0001B9 FD                    2898 	.db #0xfd	; 253
      0001BA FD                    2899 	.db #0xfd	; 253
      0001BB FD                    2900 	.db #0xfd	; 253
      0001BC FD                    2901 	.db #0xfd	; 253
      0001BD FD                    2902 	.db #0xfd	; 253
      0001BE 01                    2903 	.db #0x01	; 1
      0001BF 01                    2904 	.db #0x01	; 1
      0001C0 01                    2905 	.db #0x01	; 1
      0001C1 01                    2906 	.db #0x01	; 1
      0001C2 01                    2907 	.db #0x01	; 1
      0001C3 01                    2908 	.db #0x01	; 1
      0001C4 01                    2909 	.db #0x01	; 1
      0001C5 01                    2910 	.db #0x01	; 1
      0001C6 01                    2911 	.db #0x01	; 1
      0001C7 01                    2912 	.db #0x01	; 1
      0001C8 01                    2913 	.db #0x01	; 1
      0001C9 01                    2914 	.db #0x01	; 1
      0001CA 01                    2915 	.db #0x01	; 1
      0001CB 01                    2916 	.db #0x01	; 1
      0001CC 3D                    2917 	.db #0x3d	; 61
      0001CD 15                    2918 	.db #0x15	; 21
      0001CE 3D                    2919 	.db #0x3d	; 61
      0001CF 01                    2920 	.db #0x01	; 1
      0001D0 3D                    2921 	.db #0x3d	; 61
      0001D1 21                    2922 	.db #0x21	; 33
      0001D2 21                    2923 	.db #0x21	; 33
      0001D3 01                    2924 	.db #0x01	; 1
      0001D4 3D                    2925 	.db #0x3d	; 61
      0001D5 15                    2926 	.db #0x15	; 21
      0001D6 1D                    2927 	.db #0x1d	; 29
      0001D7 01                    2928 	.db #0x01	; 1
      0001D8 3D                    2929 	.db #0x3d	; 61
      0001D9 11                    2930 	.db #0x11	; 17
      0001DA 3D                    2931 	.db #0x3d	; 61
      0001DB 01                    2932 	.db #0x01	; 1
      0001DC 3D                    2933 	.db #0x3d	; 61
      0001DD 15                    2934 	.db #0x15	; 21
      0001DE 3D                    2935 	.db #0x3d	; 61
      0001DF 01                    2936 	.db #0x01	; 1
      0001E0 01                    2937 	.db #0x01	; 1
      0001E1 3D                    2938 	.db #0x3d	; 61
      0001E2 25                    2939 	.db #0x25	; 37
      0001E3 3D                    2940 	.db #0x3d	; 61
      0001E4 01                    2941 	.db #0x01	; 1
      0001E5 05                    2942 	.db #0x05	; 5
      0001E6 3D                    2943 	.db #0x3d	; 61
      0001E7 01                    2944 	.db #0x01	; 1
      0001E8 FF                    2945 	.db #0xff	; 255
      0001E9 FF                    2946 	.db #0xff	; 255
      0001EA 00                    2947 	.db #0x00	; 0
      0001EB 00                    2948 	.db #0x00	; 0
      0001EC 00                    2949 	.db #0x00	; 0
      0001ED 00                    2950 	.db #0x00	; 0
      0001EE 00                    2951 	.db #0x00	; 0
      0001EF 00                    2952 	.db #0x00	; 0
      0001F0 00                    2953 	.db #0x00	; 0
      0001F1 FF                    2954 	.db #0xff	; 255
      0001F2 FF                    2955 	.db #0xff	; 255
      0001F3 FF                    2956 	.db #0xff	; 255
      0001F4 FF                    2957 	.db #0xff	; 255
      0001F5 FF                    2958 	.db #0xff	; 255
      0001F6 FF                    2959 	.db #0xff	; 255
      0001F7 FF                    2960 	.db #0xff	; 255
      0001F8 FE                    2961 	.db #0xfe	; 254
      0001F9 FE                    2962 	.db #0xfe	; 254
      0001FA FE                    2963 	.db #0xfe	; 254
      0001FB FE                    2964 	.db #0xfe	; 254
      0001FC FE                    2965 	.db #0xfe	; 254
      0001FD FE                    2966 	.db #0xfe	; 254
      0001FE FE                    2967 	.db #0xfe	; 254
      0001FF FF                    2968 	.db #0xff	; 255
      000200 FF                    2969 	.db #0xff	; 255
      000201 FF                    2970 	.db #0xff	; 255
      000202 FF                    2971 	.db #0xff	; 255
      000203 FF                    2972 	.db #0xff	; 255
      000204 FF                    2973 	.db #0xff	; 255
      000205 FF                    2974 	.db #0xff	; 255
      000206 01                    2975 	.db #0x01	; 1
      000207 01                    2976 	.db #0x01	; 1
      000208 01                    2977 	.db #0x01	; 1
      000209 01                    2978 	.db #0x01	; 1
      00020A 01                    2979 	.db #0x01	; 1
      00020B 01                    2980 	.db #0x01	; 1
      00020C 01                    2981 	.db #0x01	; 1
      00020D FF                    2982 	.db #0xff	; 255
      00020E FF                    2983 	.db #0xff	; 255
      00020F FF                    2984 	.db #0xff	; 255
      000210 FF                    2985 	.db #0xff	; 255
      000211 FF                    2986 	.db #0xff	; 255
      000212 FF                    2987 	.db #0xff	; 255
      000213 FF                    2988 	.db #0xff	; 255
      000214 01                    2989 	.db #0x01	; 1
      000215 01                    2990 	.db #0x01	; 1
      000216 01                    2991 	.db #0x01	; 1
      000217 01                    2992 	.db #0x01	; 1
      000218 01                    2993 	.db #0x01	; 1
      000219 01                    2994 	.db #0x01	; 1
      00021A 01                    2995 	.db #0x01	; 1
      00021B FF                    2996 	.db #0xff	; 255
      00021C FF                    2997 	.db #0xff	; 255
      00021D FF                    2998 	.db #0xff	; 255
      00021E FF                    2999 	.db #0xff	; 255
      00021F FF                    3000 	.db #0xff	; 255
      000220 FF                    3001 	.db #0xff	; 255
      000221 FF                    3002 	.db #0xff	; 255
      000222 00                    3003 	.db #0x00	; 0
      000223 00                    3004 	.db #0x00	; 0
      000224 00                    3005 	.db #0x00	; 0
      000225 00                    3006 	.db #0x00	; 0
      000226 00                    3007 	.db #0x00	; 0
      000227 00                    3008 	.db #0x00	; 0
      000228 00                    3009 	.db #0x00	; 0
      000229 FF                    3010 	.db #0xff	; 255
      00022A FF                    3011 	.db #0xff	; 255
      00022B FF                    3012 	.db #0xff	; 255
      00022C FF                    3013 	.db #0xff	; 255
      00022D FF                    3014 	.db #0xff	; 255
      00022E FF                    3015 	.db #0xff	; 255
      00022F FF                    3016 	.db #0xff	; 255
      000230 01                    3017 	.db #0x01	; 1
      000231 01                    3018 	.db #0x01	; 1
      000232 01                    3019 	.db #0x01	; 1
      000233 01                    3020 	.db #0x01	; 1
      000234 01                    3021 	.db #0x01	; 1
      000235 01                    3022 	.db #0x01	; 1
      000236 01                    3023 	.db #0x01	; 1
      000237 FF                    3024 	.db #0xff	; 255
      000238 FF                    3025 	.db #0xff	; 255
      000239 FF                    3026 	.db #0xff	; 255
      00023A FF                    3027 	.db #0xff	; 255
      00023B FF                    3028 	.db #0xff	; 255
      00023C FF                    3029 	.db #0xff	; 255
      00023D FF                    3030 	.db #0xff	; 255
      00023E 00                    3031 	.db #0x00	; 0
      00023F 00                    3032 	.db #0x00	; 0
      000240 00                    3033 	.db #0x00	; 0
      000241 00                    3034 	.db #0x00	; 0
      000242 00                    3035 	.db #0x00	; 0
      000243 00                    3036 	.db #0x00	; 0
      000244 00                    3037 	.db #0x00	; 0
      000245 00                    3038 	.db #0x00	; 0
      000246 00                    3039 	.db #0x00	; 0
      000247 00                    3040 	.db #0x00	; 0
      000248 00                    3041 	.db #0x00	; 0
      000249 00                    3042 	.db #0x00	; 0
      00024A 00                    3043 	.db #0x00	; 0
      00024B 00                    3044 	.db #0x00	; 0
      00024C 00                    3045 	.db #0x00	; 0
      00024D 00                    3046 	.db #0x00	; 0
      00024E 00                    3047 	.db #0x00	; 0
      00024F 00                    3048 	.db #0x00	; 0
      000250 00                    3049 	.db #0x00	; 0
      000251 00                    3050 	.db #0x00	; 0
      000252 00                    3051 	.db #0x00	; 0
      000253 00                    3052 	.db #0x00	; 0
      000254 00                    3053 	.db #0x00	; 0
      000255 00                    3054 	.db #0x00	; 0
      000256 00                    3055 	.db #0x00	; 0
      000257 00                    3056 	.db #0x00	; 0
      000258 00                    3057 	.db #0x00	; 0
      000259 00                    3058 	.db #0x00	; 0
      00025A 00                    3059 	.db #0x00	; 0
      00025B 00                    3060 	.db #0x00	; 0
      00025C 00                    3061 	.db #0x00	; 0
      00025D 00                    3062 	.db #0x00	; 0
      00025E 00                    3063 	.db #0x00	; 0
      00025F 00                    3064 	.db #0x00	; 0
      000260 00                    3065 	.db #0x00	; 0
      000261 00                    3066 	.db #0x00	; 0
      000262 00                    3067 	.db #0x00	; 0
      000263 00                    3068 	.db #0x00	; 0
      000264 00                    3069 	.db #0x00	; 0
      000265 00                    3070 	.db #0x00	; 0
      000266 00                    3071 	.db #0x00	; 0
      000267 00                    3072 	.db #0x00	; 0
      000268 FF                    3073 	.db #0xff	; 255
      000269 FF                    3074 	.db #0xff	; 255
      00026A 00                    3075 	.db #0x00	; 0
      00026B 00                    3076 	.db #0x00	; 0
      00026C 00                    3077 	.db #0x00	; 0
      00026D 00                    3078 	.db #0x00	; 0
      00026E 00                    3079 	.db #0x00	; 0
      00026F 00                    3080 	.db #0x00	; 0
      000270 00                    3081 	.db #0x00	; 0
      000271 FF                    3082 	.db #0xff	; 255
      000272 FF                    3083 	.db #0xff	; 255
      000273 FF                    3084 	.db #0xff	; 255
      000274 FF                    3085 	.db #0xff	; 255
      000275 FF                    3086 	.db #0xff	; 255
      000276 FF                    3087 	.db #0xff	; 255
      000277 FF                    3088 	.db #0xff	; 255
      000278 00                    3089 	.db #0x00	; 0
      000279 00                    3090 	.db #0x00	; 0
      00027A 00                    3091 	.db #0x00	; 0
      00027B 00                    3092 	.db #0x00	; 0
      00027C 00                    3093 	.db #0x00	; 0
      00027D 00                    3094 	.db #0x00	; 0
      00027E 00                    3095 	.db #0x00	; 0
      00027F FF                    3096 	.db #0xff	; 255
      000280 FF                    3097 	.db #0xff	; 255
      000281 FF                    3098 	.db #0xff	; 255
      000282 FF                    3099 	.db #0xff	; 255
      000283 FF                    3100 	.db #0xff	; 255
      000284 FF                    3101 	.db #0xff	; 255
      000285 FF                    3102 	.db #0xff	; 255
      000286 00                    3103 	.db #0x00	; 0
      000287 00                    3104 	.db #0x00	; 0
      000288 00                    3105 	.db #0x00	; 0
      000289 00                    3106 	.db #0x00	; 0
      00028A 00                    3107 	.db #0x00	; 0
      00028B 00                    3108 	.db #0x00	; 0
      00028C 00                    3109 	.db #0x00	; 0
      00028D FF                    3110 	.db #0xff	; 255
      00028E FF                    3111 	.db #0xff	; 255
      00028F FF                    3112 	.db #0xff	; 255
      000290 FF                    3113 	.db #0xff	; 255
      000291 FF                    3114 	.db #0xff	; 255
      000292 FF                    3115 	.db #0xff	; 255
      000293 FF                    3116 	.db #0xff	; 255
      000294 00                    3117 	.db #0x00	; 0
      000295 00                    3118 	.db #0x00	; 0
      000296 00                    3119 	.db #0x00	; 0
      000297 00                    3120 	.db #0x00	; 0
      000298 00                    3121 	.db #0x00	; 0
      000299 00                    3122 	.db #0x00	; 0
      00029A 00                    3123 	.db #0x00	; 0
      00029B FF                    3124 	.db #0xff	; 255
      00029C FF                    3125 	.db #0xff	; 255
      00029D FF                    3126 	.db #0xff	; 255
      00029E FF                    3127 	.db #0xff	; 255
      00029F FF                    3128 	.db #0xff	; 255
      0002A0 FF                    3129 	.db #0xff	; 255
      0002A1 FF                    3130 	.db #0xff	; 255
      0002A2 7F                    3131 	.db #0x7f	; 127
      0002A3 7F                    3132 	.db #0x7f	; 127
      0002A4 7F                    3133 	.db #0x7f	; 127
      0002A5 7F                    3134 	.db #0x7f	; 127
      0002A6 7F                    3135 	.db #0x7f	; 127
      0002A7 7F                    3136 	.db #0x7f	; 127
      0002A8 7F                    3137 	.db #0x7f	; 127
      0002A9 FF                    3138 	.db #0xff	; 255
      0002AA FF                    3139 	.db #0xff	; 255
      0002AB FF                    3140 	.db #0xff	; 255
      0002AC FF                    3141 	.db #0xff	; 255
      0002AD FF                    3142 	.db #0xff	; 255
      0002AE FF                    3143 	.db #0xff	; 255
      0002AF FF                    3144 	.db #0xff	; 255
      0002B0 7F                    3145 	.db #0x7f	; 127
      0002B1 7F                    3146 	.db #0x7f	; 127
      0002B2 7F                    3147 	.db #0x7f	; 127
      0002B3 7F                    3148 	.db #0x7f	; 127
      0002B4 7F                    3149 	.db #0x7f	; 127
      0002B5 7F                    3150 	.db #0x7f	; 127
      0002B6 7F                    3151 	.db #0x7f	; 127
      0002B7 80                    3152 	.db #0x80	; 128
      0002B8 80                    3153 	.db #0x80	; 128
      0002B9 80                    3154 	.db #0x80	; 128
      0002BA 80                    3155 	.db #0x80	; 128
      0002BB 80                    3156 	.db #0x80	; 128
      0002BC 80                    3157 	.db #0x80	; 128
      0002BD 80                    3158 	.db #0x80	; 128
      0002BE 00                    3159 	.db #0x00	; 0
      0002BF 00                    3160 	.db #0x00	; 0
      0002C0 00                    3161 	.db #0x00	; 0
      0002C1 80                    3162 	.db #0x80	; 128
      0002C2 80                    3163 	.db #0x80	; 128
      0002C3 80                    3164 	.db #0x80	; 128
      0002C4 80                    3165 	.db #0x80	; 128
      0002C5 80                    3166 	.db #0x80	; 128
      0002C6 80                    3167 	.db #0x80	; 128
      0002C7 80                    3168 	.db #0x80	; 128
      0002C8 00                    3169 	.db #0x00	; 0
      0002C9 00                    3170 	.db #0x00	; 0
      0002CA 00                    3171 	.db #0x00	; 0
      0002CB 00                    3172 	.db #0x00	; 0
      0002CC 00                    3173 	.db #0x00	; 0
      0002CD 00                    3174 	.db #0x00	; 0
      0002CE 00                    3175 	.db #0x00	; 0
      0002CF 00                    3176 	.db #0x00	; 0
      0002D0 00                    3177 	.db #0x00	; 0
      0002D1 00                    3178 	.db #0x00	; 0
      0002D2 00                    3179 	.db #0x00	; 0
      0002D3 00                    3180 	.db #0x00	; 0
      0002D4 00                    3181 	.db #0x00	; 0
      0002D5 00                    3182 	.db #0x00	; 0
      0002D6 00                    3183 	.db #0x00	; 0
      0002D7 00                    3184 	.db #0x00	; 0
      0002D8 00                    3185 	.db #0x00	; 0
      0002D9 00                    3186 	.db #0x00	; 0
      0002DA 00                    3187 	.db #0x00	; 0
      0002DB 00                    3188 	.db #0x00	; 0
      0002DC 00                    3189 	.db #0x00	; 0
      0002DD 00                    3190 	.db #0x00	; 0
      0002DE 00                    3191 	.db #0x00	; 0
      0002DF 00                    3192 	.db #0x00	; 0
      0002E0 00                    3193 	.db #0x00	; 0
      0002E1 00                    3194 	.db #0x00	; 0
      0002E2 00                    3195 	.db #0x00	; 0
      0002E3 00                    3196 	.db #0x00	; 0
      0002E4 00                    3197 	.db #0x00	; 0
      0002E5 00                    3198 	.db #0x00	; 0
      0002E6 00                    3199 	.db #0x00	; 0
      0002E7 00                    3200 	.db #0x00	; 0
      0002E8 FF                    3201 	.db #0xff	; 255
      0002E9 FF                    3202 	.db #0xff	; 255
      0002EA 80                    3203 	.db #0x80	; 128
      0002EB 80                    3204 	.db #0x80	; 128
      0002EC 80                    3205 	.db #0x80	; 128
      0002ED 80                    3206 	.db #0x80	; 128
      0002EE 80                    3207 	.db #0x80	; 128
      0002EF 80                    3208 	.db #0x80	; 128
      0002F0 80                    3209 	.db #0x80	; 128
      0002F1 BF                    3210 	.db #0xbf	; 191
      0002F2 BF                    3211 	.db #0xbf	; 191
      0002F3 BF                    3212 	.db #0xbf	; 191
      0002F4 BF                    3213 	.db #0xbf	; 191
      0002F5 BF                    3214 	.db #0xbf	; 191
      0002F6 BF                    3215 	.db #0xbf	; 191
      0002F7 BF                    3216 	.db #0xbf	; 191
      0002F8 80                    3217 	.db #0x80	; 128
      0002F9 80                    3218 	.db #0x80	; 128
      0002FA 80                    3219 	.db #0x80	; 128
      0002FB 80                    3220 	.db #0x80	; 128
      0002FC 80                    3221 	.db #0x80	; 128
      0002FD 80                    3222 	.db #0x80	; 128
      0002FE 80                    3223 	.db #0x80	; 128
      0002FF BF                    3224 	.db #0xbf	; 191
      000300 BF                    3225 	.db #0xbf	; 191
      000301 BF                    3226 	.db #0xbf	; 191
      000302 BF                    3227 	.db #0xbf	; 191
      000303 BF                    3228 	.db #0xbf	; 191
      000304 BF                    3229 	.db #0xbf	; 191
      000305 BF                    3230 	.db #0xbf	; 191
      000306 80                    3231 	.db #0x80	; 128
      000307 80                    3232 	.db #0x80	; 128
      000308 80                    3233 	.db #0x80	; 128
      000309 80                    3234 	.db #0x80	; 128
      00030A 80                    3235 	.db #0x80	; 128
      00030B 80                    3236 	.db #0x80	; 128
      00030C 80                    3237 	.db #0x80	; 128
      00030D BF                    3238 	.db #0xbf	; 191
      00030E BF                    3239 	.db #0xbf	; 191
      00030F BF                    3240 	.db #0xbf	; 191
      000310 BF                    3241 	.db #0xbf	; 191
      000311 BF                    3242 	.db #0xbf	; 191
      000312 BF                    3243 	.db #0xbf	; 191
      000313 BF                    3244 	.db #0xbf	; 191
      000314 80                    3245 	.db #0x80	; 128
      000315 80                    3246 	.db #0x80	; 128
      000316 80                    3247 	.db #0x80	; 128
      000317 80                    3248 	.db #0x80	; 128
      000318 80                    3249 	.db #0x80	; 128
      000319 80                    3250 	.db #0x80	; 128
      00031A 80                    3251 	.db #0x80	; 128
      00031B BF                    3252 	.db #0xbf	; 191
      00031C BF                    3253 	.db #0xbf	; 191
      00031D BF                    3254 	.db #0xbf	; 191
      00031E BF                    3255 	.db #0xbf	; 191
      00031F BF                    3256 	.db #0xbf	; 191
      000320 BF                    3257 	.db #0xbf	; 191
      000321 BF                    3258 	.db #0xbf	; 191
      000322 80                    3259 	.db #0x80	; 128
      000323 80                    3260 	.db #0x80	; 128
      000324 80                    3261 	.db #0x80	; 128
      000325 80                    3262 	.db #0x80	; 128
      000326 80                    3263 	.db #0x80	; 128
      000327 80                    3264 	.db #0x80	; 128
      000328 80                    3265 	.db #0x80	; 128
      000329 BF                    3266 	.db #0xbf	; 191
      00032A BF                    3267 	.db #0xbf	; 191
      00032B BF                    3268 	.db #0xbf	; 191
      00032C BF                    3269 	.db #0xbf	; 191
      00032D BF                    3270 	.db #0xbf	; 191
      00032E BF                    3271 	.db #0xbf	; 191
      00032F BF                    3272 	.db #0xbf	; 191
      000330 80                    3273 	.db #0x80	; 128
      000331 80                    3274 	.db #0x80	; 128
      000332 80                    3275 	.db #0x80	; 128
      000333 80                    3276 	.db #0x80	; 128
      000334 80                    3277 	.db #0x80	; 128
      000335 80                    3278 	.db #0x80	; 128
      000336 80                    3279 	.db #0x80	; 128
      000337 BF                    3280 	.db #0xbf	; 191
      000338 BF                    3281 	.db #0xbf	; 191
      000339 BF                    3282 	.db #0xbf	; 191
      00033A BF                    3283 	.db #0xbf	; 191
      00033B BF                    3284 	.db #0xbf	; 191
      00033C BF                    3285 	.db #0xbf	; 191
      00033D BF                    3286 	.db #0xbf	; 191
      00033E 80                    3287 	.db #0x80	; 128
      00033F 80                    3288 	.db #0x80	; 128
      000340 80                    3289 	.db #0x80	; 128
      000341 B1                    3290 	.db #0xb1	; 177
      000342 B1                    3291 	.db #0xb1	; 177
      000343 BF                    3292 	.db #0xbf	; 191
      000344 BF                    3293 	.db #0xbf	; 191
      000345 BF                    3294 	.db #0xbf	; 191
      000346 B1                    3295 	.db #0xb1	; 177
      000347 B1                    3296 	.db #0xb1	; 177
      000348 80                    3297 	.db #0x80	; 128
      000349 80                    3298 	.db #0x80	; 128
      00034A BF                    3299 	.db #0xbf	; 191
      00034B BF                    3300 	.db #0xbf	; 191
      00034C 83                    3301 	.db #0x83	; 131
      00034D 83                    3302 	.db #0x83	; 131
      00034E BF                    3303 	.db #0xbf	; 191
      00034F BE                    3304 	.db #0xbe	; 190
      000350 80                    3305 	.db #0x80	; 128
      000351 80                    3306 	.db #0x80	; 128
      000352 BF                    3307 	.db #0xbf	; 191
      000353 BF                    3308 	.db #0xbf	; 191
      000354 B3                    3309 	.db #0xb3	; 179
      000355 B3                    3310 	.db #0xb3	; 179
      000356 B3                    3311 	.db #0xb3	; 179
      000357 B3                    3312 	.db #0xb3	; 179
      000358 80                    3313 	.db #0x80	; 128
      000359 80                    3314 	.db #0x80	; 128
      00035A 80                    3315 	.db #0x80	; 128
      00035B 80                    3316 	.db #0x80	; 128
      00035C B0                    3317 	.db #0xb0	; 176
      00035D B0                    3318 	.db #0xb0	; 176
      00035E 80                    3319 	.db #0x80	; 128
      00035F 80                    3320 	.db #0x80	; 128
      000360 80                    3321 	.db #0x80	; 128
      000361 80                    3322 	.db #0x80	; 128
      000362 80                    3323 	.db #0x80	; 128
      000363 80                    3324 	.db #0x80	; 128
      000364 80                    3325 	.db #0x80	; 128
      000365 80                    3326 	.db #0x80	; 128
      000366 80                    3327 	.db #0x80	; 128
      000367 80                    3328 	.db #0x80	; 128
      000368 FF                    3329 	.db #0xff	; 255
      000369                       3330 __xinit__current_item:
      000369 00                    3331 	.db #0x00	; 0
      00036A                       3332 __xinit__paragraph_item:
      00036A 00                    3333 	.db #0x00	; 0
      00036B                       3334 __xinit__TIM2_IRQ:
      00036B 00                    3335 	.db #0x00	; 0
                                   3336 	.area CABS (ABS)
