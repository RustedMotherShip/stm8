                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gg
                                     13 	.globl _setup
                                     14 	.globl _params_default_conf
                                     15 	.globl _menu_set_paragraph
                                     16 	.globl _menu_set_item_menu
                                     17 	.globl _menu_set_params_value
                                     18 	.globl _menu_border_item
                                     19 	.globl _menu_border_paragraph
                                     20 	.globl _menu_border
                                     21 	.globl _ssd1306_send_buffer
                                     22 	.globl _ssd1306_buffer_clean
                                     23 	.globl _set_bit
                                     24 	.globl _get_bit
                                     25 	.globl _i2c_irq
                                     26 	.globl _tmr2_irq
                                     27 	.globl _memset
                                     28 	.globl _main_buffer
                                     29 	.globl _ttf_line_down
                                     30 	.globl _ttf_line_up
                                     31 	.globl _ttf_line_left
                                     32 	.globl _ttf_line_right
                                     33 	.globl _ttf_corner_right_down
                                     34 	.globl _ttf_corner_left_down
                                     35 	.globl _ttf_corner_right_up
                                     36 	.globl _ttf_corner_left_up
                                     37 	.globl _ttf_num_0
                                     38 	.globl _ttf_num_9
                                     39 	.globl _ttf_num_8
                                     40 	.globl _ttf_num_7
                                     41 	.globl _ttf_num_6
                                     42 	.globl _ttf_num_5
                                     43 	.globl _ttf_num_4
                                     44 	.globl _ttf_num_3
                                     45 	.globl _ttf_num_2
                                     46 	.globl _ttf_num_1
                                     47 	.globl _ttf_void
                                     48 	.globl _I2C_IRQ
                                     49 	.globl _TIM2_IRQ
                                     50 	.globl _ttf_rus_20
                                     51 	.globl _ttf_rus_19
                                     52 	.globl _ttf_rus_18
                                     53 	.globl _ttf_rus_17
                                     54 	.globl _ttf_rus_16
                                     55 	.globl _ttf_rus_15
                                     56 	.globl _ttf_rus_14
                                     57 	.globl _ttf_rus_13
                                     58 	.globl _ttf_rus_12
                                     59 	.globl _ttf_rus_11
                                     60 	.globl _ttf_rus_10
                                     61 	.globl _ttf_rus_9
                                     62 	.globl _ttf_rus_8
                                     63 	.globl _ttf_rus_7
                                     64 	.globl _ttf_rus_6
                                     65 	.globl _ttf_rus_5
                                     66 	.globl _ttf_rus_4
                                     67 	.globl _ttf_rus_3
                                     68 	.globl _ttf_rus_2
                                     69 	.globl _ttf_rus_1
                                     70 	.globl _params_value
                                     71 	.globl _buf_size
                                     72 	.globl _buf_pos
                                     73 	.globl _rx_buf_pointer
                                     74 	.globl _tx_buf_pointer
                                     75 	.globl _uart_transmission_irq
                                     76 	.globl _uart_reciever_irq
                                     77 	.globl _uart_write_irq
                                     78 	.globl _uart_read_irq
                                     79 	.globl _uart_init
                                     80 	.globl _uart_read_byte
                                     81 	.globl _uart_write_byte
                                     82 	.globl _uart_write
                                     83 	.globl _uart_read
                                     84 	.globl _delay_s
                                     85 	.globl _delay_ms
                                     86 	.globl _i2c_init
                                     87 	.globl _i2c_start
                                     88 	.globl _i2c_stop
                                     89 	.globl _i2c_send_address
                                     90 	.globl _i2c_read_byte
                                     91 	.globl _i2c_read
                                     92 	.globl _i2c_send_byte
                                     93 	.globl _i2c_write
                                     94 	.globl _i2c_scan
                                     95 	.globl _i2c_start_irq
                                     96 	.globl _i2c_stop_irq
                                     97 	.globl _ssd1306_init
                                     98 	.globl _ssd1306_set_params_to_write
                                     99 	.globl _ssd1306_draw_pixel
                                    100 	.globl _ssd1306_buffer_write
                                    101 	.globl _ssd1306_clean
                                    102 	.globl _adc_init
                                    103 	.globl _adc_read
                                    104 ;--------------------------------------------------------
                                    105 ; ram data
                                    106 ;--------------------------------------------------------
                                    107 	.area DATA
      000000                        108 _tx_buf_pointer::
      000000                        109 	.ds 2
      000002                        110 _rx_buf_pointer::
      000002                        111 	.ds 2
      000004                        112 _buf_pos::
      000004                        113 	.ds 1
      000005                        114 _buf_size::
      000005                        115 	.ds 1
      000006                        116 _params_value::
      000006                        117 	.ds 8
      00000E                        118 _menu_set_params_value_numbers_10000_186:
      00000E                        119 	.ds 20
                                    120 ;--------------------------------------------------------
                                    121 ; ram data
                                    122 ;--------------------------------------------------------
                                    123 	.area INITIALIZED
      000000                        124 _ttf_rus_1::
      000000                        125 	.ds 8
      000008                        126 _ttf_rus_2::
      000008                        127 	.ds 8
      000010                        128 _ttf_rus_3::
      000010                        129 	.ds 8
      000018                        130 _ttf_rus_4::
      000018                        131 	.ds 8
      000020                        132 _ttf_rus_5::
      000020                        133 	.ds 8
      000028                        134 _ttf_rus_6::
      000028                        135 	.ds 8
      000030                        136 _ttf_rus_7::
      000030                        137 	.ds 8
      000038                        138 _ttf_rus_8::
      000038                        139 	.ds 8
      000040                        140 _ttf_rus_9::
      000040                        141 	.ds 8
      000048                        142 _ttf_rus_10::
      000048                        143 	.ds 8
      000050                        144 _ttf_rus_11::
      000050                        145 	.ds 8
      000058                        146 _ttf_rus_12::
      000058                        147 	.ds 8
      000060                        148 _ttf_rus_13::
      000060                        149 	.ds 8
      000068                        150 _ttf_rus_14::
      000068                        151 	.ds 8
      000070                        152 _ttf_rus_15::
      000070                        153 	.ds 8
      000078                        154 _ttf_rus_16::
      000078                        155 	.ds 8
      000080                        156 _ttf_rus_17::
      000080                        157 	.ds 8
      000088                        158 _ttf_rus_18::
      000088                        159 	.ds 8
      000090                        160 _ttf_rus_19::
      000090                        161 	.ds 8
      000098                        162 _ttf_rus_20::
      000098                        163 	.ds 8
      0000A0                        164 _TIM2_IRQ::
      0000A0                        165 	.ds 1
      0000A1                        166 _I2C_IRQ::
      0000A1                        167 	.ds 1
      0000A2                        168 _ttf_void::
      0000A2                        169 	.ds 8
      0000AA                        170 _ttf_num_1::
      0000AA                        171 	.ds 8
      0000B2                        172 _ttf_num_2::
      0000B2                        173 	.ds 8
      0000BA                        174 _ttf_num_3::
      0000BA                        175 	.ds 8
      0000C2                        176 _ttf_num_4::
      0000C2                        177 	.ds 8
      0000CA                        178 _ttf_num_5::
      0000CA                        179 	.ds 8
      0000D2                        180 _ttf_num_6::
      0000D2                        181 	.ds 8
      0000DA                        182 _ttf_num_7::
      0000DA                        183 	.ds 8
      0000E2                        184 _ttf_num_8::
      0000E2                        185 	.ds 8
      0000EA                        186 _ttf_num_9::
      0000EA                        187 	.ds 8
      0000F2                        188 _ttf_num_0::
      0000F2                        189 	.ds 8
      0000FA                        190 _ttf_corner_left_up::
      0000FA                        191 	.ds 8
      000102                        192 _ttf_corner_right_up::
      000102                        193 	.ds 8
      00010A                        194 _ttf_corner_left_down::
      00010A                        195 	.ds 8
      000112                        196 _ttf_corner_right_down::
      000112                        197 	.ds 8
      00011A                        198 _ttf_line_right::
      00011A                        199 	.ds 8
      000122                        200 _ttf_line_left::
      000122                        201 	.ds 8
      00012A                        202 _ttf_line_up::
      00012A                        203 	.ds 8
      000132                        204 _ttf_line_down::
      000132                        205 	.ds 8
      00013A                        206 _main_buffer::
      00013A                        207 	.ds 512
                                    208 ;--------------------------------------------------------
                                    209 ; Stack segment in internal ram
                                    210 ;--------------------------------------------------------
                                    211 	.area SSEG
      000000                        212 __start__stack:
      000000                        213 	.ds	1
                                    214 
                                    215 ;--------------------------------------------------------
                                    216 ; absolute external ram data
                                    217 ;--------------------------------------------------------
                                    218 	.area DABS (ABS)
                                    219 
                                    220 ; default segment ordering for linker
                                    221 	.area HOME
                                    222 	.area GSINIT
                                    223 	.area GSFINAL
                                    224 	.area CONST
                                    225 	.area INITIALIZER
                                    226 	.area CODE
                                    227 
                                    228 ;--------------------------------------------------------
                                    229 ; interrupt vector
                                    230 ;--------------------------------------------------------
                                    231 	.area HOME
      000000                        232 __interrupt_vect:
      000000 82v00u00u00            233 	int s_GSINIT ; reset
      000004 82 00 00 00            234 	int 0x000000 ; trap
      000008 82 00 00 00            235 	int 0x000000 ; int0
      00000C 82 00 00 00            236 	int 0x000000 ; int1
      000010 82 00 00 00            237 	int 0x000000 ; int2
      000014 82 00 00 00            238 	int 0x000000 ; int3
      000018 82 00 00 00            239 	int 0x000000 ; int4
      00001C 82 00 00 00            240 	int 0x000000 ; int5
      000020 82 00 00 00            241 	int 0x000000 ; int6
      000024 82 00 00 00            242 	int 0x000000 ; int7
      000028 82 00 00 00            243 	int 0x000000 ; int8
      00002C 82 00 00 00            244 	int 0x000000 ; int9
      000030 82 00 00 00            245 	int 0x000000 ; int10
      000034 82 00 00 00            246 	int 0x000000 ; int11
      000038 82 00 00 00            247 	int 0x000000 ; int12
      00003C 82v00u02u1E            248 	int _tmr2_irq ; int13
      000040 82 00 00 00            249 	int 0x000000 ; int14
      000044 82 00 00 00            250 	int 0x000000 ; int15
      000048 82 00 00 00            251 	int 0x000000 ; int16
      00004C 82v00u00u00            252 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            253 	int _uart_reciever_irq ; int18
      000054 82v00u02uC0            254 	int _i2c_irq ; int19
                                    255 ;--------------------------------------------------------
                                    256 ; global & static initialisations
                                    257 ;--------------------------------------------------------
                                    258 	.area HOME
                                    259 	.area GSINIT
                                    260 	.area GSFINAL
                                    261 	.area GSINIT
      000000 CDr00r00         [ 4]  262 	call	___sdcc_external_startup
      000003 4D               [ 1]  263 	tnz	a
      000004 27 03            [ 1]  264 	jreq	__sdcc_init_data
      000006 CCr00r58         [ 2]  265 	jp	__sdcc_program_startup
      000009                        266 __sdcc_init_data:
                                    267 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  268 	ldw x, #l_DATA
      00000C 27 07            [ 1]  269 	jreq	00002$
      00000E                        270 00001$:
      00000E 72 4FuFFuFF      [ 1]  271 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  272 	decw x
      000013 26 F9            [ 1]  273 	jrne	00001$
      000015                        274 00002$:
      000015 AEr00r00         [ 2]  275 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  276 	jreq	00004$
      00001A                        277 00003$:
      00001A D6uFFuFF         [ 1]  278 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  279 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  280 	decw	x
      000021 26 F7            [ 1]  281 	jrne	00003$
      000023                        282 00004$:
                                    283 ; stm8_genXINIT() end
                                    284 ;	./libs/menu_lib.c: 63: static uint8_t *numbers[] = {&ttf_num_0[0],&ttf_num_1[0],&ttf_num_2[0],&ttf_num_3[0],&ttf_num_4[0],&ttf_num_5[0],&ttf_num_6[0],&ttf_num_7[0],&ttf_num_8[0],&ttf_num_9[0]};
      000023 AEr00rF2         [ 2]  285 	ldw	x, #_ttf_num_0+0
      000026 CFu00u0E         [ 2]  286 	ldw	_menu_set_params_value_numbers_10000_186+0, x
      000029 AEr00rAA         [ 2]  287 	ldw	x, #_ttf_num_1+0
      00002C CFu00u10         [ 2]  288 	ldw	_menu_set_params_value_numbers_10000_186+2, x
      00002F AEr00rB2         [ 2]  289 	ldw	x, #_ttf_num_2+0
      000032 CFu00u12         [ 2]  290 	ldw	_menu_set_params_value_numbers_10000_186+4, x
      000035 AEr00rBA         [ 2]  291 	ldw	x, #_ttf_num_3+0
      000038 CFu00u14         [ 2]  292 	ldw	_menu_set_params_value_numbers_10000_186+6, x
      00003B AEr00rC2         [ 2]  293 	ldw	x, #_ttf_num_4+0
      00003E CFu00u16         [ 2]  294 	ldw	_menu_set_params_value_numbers_10000_186+8, x
      000041 AEr00rCA         [ 2]  295 	ldw	x, #_ttf_num_5+0
      000044 CFu00u18         [ 2]  296 	ldw	_menu_set_params_value_numbers_10000_186+10, x
      000047 AEr00rD2         [ 2]  297 	ldw	x, #_ttf_num_6+0
      00004A CFu00u1A         [ 2]  298 	ldw	_menu_set_params_value_numbers_10000_186+12, x
      00004D AEr00rDA         [ 2]  299 	ldw	x, #_ttf_num_7+0
      000050 CFu00u1C         [ 2]  300 	ldw	_menu_set_params_value_numbers_10000_186+14, x
      000053 AEr00rE2         [ 2]  301 	ldw	x, #_ttf_num_8+0
      000056 CFu00u1E         [ 2]  302 	ldw	_menu_set_params_value_numbers_10000_186+16, x
      000059 AEr00rEA         [ 2]  303 	ldw	x, #_ttf_num_9+0
      00005C CFu00u20         [ 2]  304 	ldw	_menu_set_params_value_numbers_10000_186+18, x
                                    305 	.area GSFINAL
      000000 CCr00r58         [ 2]  306 	jp	__sdcc_program_startup
                                    307 ;--------------------------------------------------------
                                    308 ; Home
                                    309 ;--------------------------------------------------------
                                    310 	.area HOME
                                    311 	.area HOME
      000058                        312 __sdcc_program_startup:
      000058 CCr0Er07         [ 2]  313 	jp	_main
                                    314 ;	return from main will return to caller
                                    315 ;--------------------------------------------------------
                                    316 ; code
                                    317 ;--------------------------------------------------------
                                    318 	.area CODE
                                    319 ;	./libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    320 ;	-----------------------------------------
                                    321 ;	 function uart_transmission_irq
                                    322 ;	-----------------------------------------
      000000                        323 _uart_transmission_irq:
                                    324 ;	./libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  325 	ldw	x, #0x5230
      000003 F6               [ 1]  326 	ld	a, (x)
      000004 4E               [ 1]  327 	swap	a
      000005 44               [ 1]  328 	srl	a
      000006 44               [ 1]  329 	srl	a
      000007 44               [ 1]  330 	srl	a
      000008 A5 01            [ 1]  331 	bcp	a, #0x01
      00000A 27 2F            [ 1]  332 	jreq	00107$
                                    333 ;	./libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  334 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  335 	add	a, _buf_pos+0
      000012 97               [ 1]  336 	ld	xl, a
      000013 C6u00u00         [ 1]  337 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  338 	adc	a, #0x00
      000018 95               [ 1]  339 	ld	xh, a
      000019 F6               [ 1]  340 	ld	a, (x)
      00001A 27 1B            [ 1]  341 	jreq	00102$
      00001C C6u00u04         [ 1]  342 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  343 	cp	a, _buf_size+0
      000022 24 13            [ 1]  344 	jrnc	00102$
                                    345 ;	./libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  346 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  347 	inc	_buf_pos+0
      00002B 5F               [ 1]  348 	clrw	x
      00002C 97               [ 1]  349 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  350 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  351 	ld	a, (x)
      000032 C7 52 31         [ 1]  352 	ld	0x5231, a
      000035 20 04            [ 2]  353 	jra	00107$
      000037                        354 00102$:
                                    355 ;	./libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  356 	bres	0x5235, #7
      00003B                        357 00107$:
                                    358 ;	./libs/uart_lib.c: 14: }
      00003B 80               [11]  359 	iret
                                    360 ;	./libs/uart_lib.c: 16: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    361 ;	-----------------------------------------
                                    362 ;	 function uart_reciever_irq
                                    363 ;	-----------------------------------------
      00003C                        364 _uart_reciever_irq:
      00003C 88               [ 1]  365 	push	a
                                    366 ;	./libs/uart_lib.c: 20: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  367 	ld	a, 0x5230
      000040 4E               [ 1]  368 	swap	a
      000041 44               [ 1]  369 	srl	a
      000042 A5 01            [ 1]  370 	bcp	a, #0x01
      000044 27 27            [ 1]  371 	jreq	00107$
                                    372 ;	./libs/uart_lib.c: 22: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  373 	ld	a, 0x5231
                                    374 ;	./libs/uart_lib.c: 23: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  375 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  376 	cp	a, #0x0a
      00004D 27 1A            [ 1]  377 	jreq	00102$
      00004F C6u00u04         [ 1]  378 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  379 	cp	a, _buf_size+0
      000055 24 12            [ 1]  380 	jrnc	00102$
                                    381 ;	./libs/uart_lib.c: 24: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  382 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  383 	inc	_buf_pos+0
      00005E 5F               [ 1]  384 	clrw	x
      00005F 97               [ 1]  385 	ld	xl, a
      000060 72 BBu00u02      [ 2]  386 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  387 	ld	a, (0x01, sp)
      000066 F7               [ 1]  388 	ld	(x), a
      000067 20 04            [ 2]  389 	jra	00107$
      000069                        390 00102$:
                                    391 ;	./libs/uart_lib.c: 26: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  392 	bres	0x5235, #5
      00006D                        393 00107$:
                                    394 ;	./libs/uart_lib.c: 30: }
      00006D 84               [ 1]  395 	pop	a
      00006E 80               [11]  396 	iret
                                    397 ;	./libs/uart_lib.c: 32: void uart_write_irq(uint8_t *data_buf)
                                    398 ;	-----------------------------------------
                                    399 ;	 function uart_write_irq
                                    400 ;	-----------------------------------------
      00006F                        401 _uart_write_irq:
      00006F 52 02            [ 2]  402 	sub	sp, #2
                                    403 ;	./libs/uart_lib.c: 34: tx_buf_pointer = data_buf;
      000071 1F 01            [ 2]  404 	ldw	(0x01, sp), x
      000073 CFu00u00         [ 2]  405 	ldw	_tx_buf_pointer+0, x
                                    406 ;	./libs/uart_lib.c: 35: buf_pos = 0;
      000076 72 5Fu00u04      [ 1]  407 	clr	_buf_pos+0
                                    408 ;	./libs/uart_lib.c: 36: buf_size = 0;
      00007A 72 5Fu00u05      [ 1]  409 	clr	_buf_size+0
                                    410 ;	./libs/uart_lib.c: 37: while (data_buf[buf_size++] != '\0');
      00007E                        411 00101$:
      00007E C6u00u05         [ 1]  412 	ld	a, _buf_size+0
      000081 72 5Cu00u05      [ 1]  413 	inc	_buf_size+0
      000085 5F               [ 1]  414 	clrw	x
      000086 97               [ 1]  415 	ld	xl, a
      000087 72 FB 01         [ 2]  416 	addw	x, (0x01, sp)
      00008A F6               [ 1]  417 	ld	a, (x)
      00008B 26 F1            [ 1]  418 	jrne	00101$
                                    419 ;	./libs/uart_lib.c: 38: UART1_CR2 -> TIEN = 1;
      00008D 72 1E 52 35      [ 1]  420 	bset	0x5235, #7
                                    421 ;	./libs/uart_lib.c: 39: while(UART1_CR2 -> TIEN);
      000091                        422 00104$:
      000091 72 0E 52 35 FB   [ 2]  423 	btjt	0x5235, #7, 00104$
                                    424 ;	./libs/uart_lib.c: 40: }
      000096 5B 02            [ 2]  425 	addw	sp, #2
      000098 81               [ 4]  426 	ret
                                    427 ;	./libs/uart_lib.c: 41: void uart_read_irq(uint8_t *data_buf,int size)
                                    428 ;	-----------------------------------------
                                    429 ;	 function uart_read_irq
                                    430 ;	-----------------------------------------
      000099                        431 _uart_read_irq:
                                    432 ;	./libs/uart_lib.c: 43: rx_buf_pointer = data_buf;
      000099 CFu00u02         [ 2]  433 	ldw	_rx_buf_pointer+0, x
                                    434 ;	./libs/uart_lib.c: 44: buf_pos = 0;
      00009C 72 5Fu00u04      [ 1]  435 	clr	_buf_pos+0
                                    436 ;	./libs/uart_lib.c: 45: buf_size = size;
      0000A0 7B 04            [ 1]  437 	ld	a, (0x04, sp)
      0000A2 C7u00u05         [ 1]  438 	ld	_buf_size+0, a
                                    439 ;	./libs/uart_lib.c: 46: UART1_CR2 -> RIEN = 1;
      0000A5 72 1A 52 35      [ 1]  440 	bset	0x5235, #5
                                    441 ;	./libs/uart_lib.c: 47: while(UART1_CR2 -> RIEN);
      0000A9                        442 00101$:
      0000A9 C6 52 35         [ 1]  443 	ld	a, 0x5235
      0000AC 4E               [ 1]  444 	swap	a
      0000AD 44               [ 1]  445 	srl	a
      0000AE A4 01            [ 1]  446 	and	a, #0x01
      0000B0 26 F7            [ 1]  447 	jrne	00101$
                                    448 ;	./libs/uart_lib.c: 48: }
      0000B2 1E 01            [ 2]  449 	ldw	x, (1, sp)
      0000B4 5B 04            [ 2]  450 	addw	sp, #4
      0000B6 FC               [ 2]  451 	jp	(x)
                                    452 ;	./libs/uart_lib.c: 50: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    453 ;	-----------------------------------------
                                    454 ;	 function uart_init
                                    455 ;	-----------------------------------------
      0000B7                        456 _uart_init:
      0000B7 52 02            [ 2]  457 	sub	sp, #2
      0000B9 1F 01            [ 2]  458 	ldw	(0x01, sp), x
                                    459 ;	./libs/uart_lib.c: 54: UART1_CR2 -> TEN = 1; // Transmitter enable
      0000BB AE 52 35         [ 2]  460 	ldw	x, #0x5235
      0000BE 88               [ 1]  461 	push	a
      0000BF F6               [ 1]  462 	ld	a, (x)
      0000C0 AA 08            [ 1]  463 	or	a, #0x08
      0000C2 F7               [ 1]  464 	ld	(x), a
      0000C3 84               [ 1]  465 	pop	a
                                    466 ;	./libs/uart_lib.c: 55: UART1_CR2 -> REN = 1; // Receiver enable
      0000C4 AE 52 35         [ 2]  467 	ldw	x, #0x5235
      0000C7 88               [ 1]  468 	push	a
      0000C8 F6               [ 1]  469 	ld	a, (x)
      0000C9 AA 04            [ 1]  470 	or	a, #0x04
      0000CB F7               [ 1]  471 	ld	(x), a
      0000CC 84               [ 1]  472 	pop	a
                                    473 ;	./libs/uart_lib.c: 56: switch(stopbit)
      0000CD A1 02            [ 1]  474 	cp	a, #0x02
      0000CF 27 06            [ 1]  475 	jreq	00101$
      0000D1 A1 03            [ 1]  476 	cp	a, #0x03
      0000D3 27 0E            [ 1]  477 	jreq	00102$
      0000D5 20 16            [ 2]  478 	jra	00103$
                                    479 ;	./libs/uart_lib.c: 58: case 2:
      0000D7                        480 00101$:
                                    481 ;	./libs/uart_lib.c: 59: UART1_CR3 -> STOP = 2;
      0000D7 C6 52 36         [ 1]  482 	ld	a, 0x5236
      0000DA A4 CF            [ 1]  483 	and	a, #0xcf
      0000DC AA 20            [ 1]  484 	or	a, #0x20
      0000DE C7 52 36         [ 1]  485 	ld	0x5236, a
                                    486 ;	./libs/uart_lib.c: 60: break;
      0000E1 20 12            [ 2]  487 	jra	00104$
                                    488 ;	./libs/uart_lib.c: 61: case 3:
      0000E3                        489 00102$:
                                    490 ;	./libs/uart_lib.c: 62: UART1_CR3 -> STOP = 3;
      0000E3 C6 52 36         [ 1]  491 	ld	a, 0x5236
      0000E6 AA 30            [ 1]  492 	or	a, #0x30
      0000E8 C7 52 36         [ 1]  493 	ld	0x5236, a
                                    494 ;	./libs/uart_lib.c: 63: break;
      0000EB 20 08            [ 2]  495 	jra	00104$
                                    496 ;	./libs/uart_lib.c: 64: default:
      0000ED                        497 00103$:
                                    498 ;	./libs/uart_lib.c: 65: UART1_CR3 -> STOP = 0;
      0000ED C6 52 36         [ 1]  499 	ld	a, 0x5236
      0000F0 A4 CF            [ 1]  500 	and	a, #0xcf
      0000F2 C7 52 36         [ 1]  501 	ld	0x5236, a
                                    502 ;	./libs/uart_lib.c: 67: }
      0000F5                        503 00104$:
                                    504 ;	./libs/uart_lib.c: 68: switch(baudrate)
      0000F5 1E 01            [ 2]  505 	ldw	x, (0x01, sp)
      0000F7 A3 08 00         [ 2]  506 	cpw	x, #0x0800
      0000FA 26 03            [ 1]  507 	jrne	00186$
      0000FC CCr01r88         [ 2]  508 	jp	00110$
      0000FF                        509 00186$:
      0000FF 1E 01            [ 2]  510 	ldw	x, (0x01, sp)
      000101 A3 09 60         [ 2]  511 	cpw	x, #0x0960
      000104 27 28            [ 1]  512 	jreq	00105$
      000106 1E 01            [ 2]  513 	ldw	x, (0x01, sp)
      000108 A3 10 00         [ 2]  514 	cpw	x, #0x1000
      00010B 26 03            [ 1]  515 	jrne	00192$
      00010D CCr01r98         [ 2]  516 	jp	00111$
      000110                        517 00192$:
      000110 1E 01            [ 2]  518 	ldw	x, (0x01, sp)
      000112 A3 4B 00         [ 2]  519 	cpw	x, #0x4b00
      000115 27 31            [ 1]  520 	jreq	00106$
      000117 1E 01            [ 2]  521 	ldw	x, (0x01, sp)
      000119 A3 84 00         [ 2]  522 	cpw	x, #0x8400
      00011C 27 5A            [ 1]  523 	jreq	00109$
      00011E 1E 01            [ 2]  524 	ldw	x, (0x01, sp)
      000120 A3 C2 00         [ 2]  525 	cpw	x, #0xc200
      000123 27 43            [ 1]  526 	jreq	00108$
      000125 1E 01            [ 2]  527 	ldw	x, (0x01, sp)
      000127 A3 E1 00         [ 2]  528 	cpw	x, #0xe100
      00012A 27 2C            [ 1]  529 	jreq	00107$
      00012C 20 7A            [ 2]  530 	jra	00112$
                                    531 ;	./libs/uart_lib.c: 70: case (unsigned int)2400:
      00012E                        532 00105$:
                                    533 ;	./libs/uart_lib.c: 71: UART1_BRR2 -> MSB = 0x01;
      00012E C6 52 33         [ 1]  534 	ld	a, 0x5233
      000131 A4 0F            [ 1]  535 	and	a, #0x0f
      000133 AA 10            [ 1]  536 	or	a, #0x10
      000135 C7 52 33         [ 1]  537 	ld	0x5233, a
                                    538 ;	./libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0xA0;
      000138 35 A0 52 32      [ 1]  539 	mov	0x5232+0, #0xa0
                                    540 ;	./libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x0B; 
      00013C C6 52 33         [ 1]  541 	ld	a, 0x5233
      00013F A4 F0            [ 1]  542 	and	a, #0xf0
      000141 AA 0B            [ 1]  543 	or	a, #0x0b
      000143 C7 52 33         [ 1]  544 	ld	0x5233, a
                                    545 ;	./libs/uart_lib.c: 74: break;
      000146 20 6E            [ 2]  546 	jra	00114$
                                    547 ;	./libs/uart_lib.c: 75: case (unsigned int)19200:
      000148                        548 00106$:
                                    549 ;	./libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x34;
      000148 35 34 52 32      [ 1]  550 	mov	0x5232+0, #0x34
                                    551 ;	./libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      00014C C6 52 33         [ 1]  552 	ld	a, 0x5233
      00014F A4 F0            [ 1]  553 	and	a, #0xf0
      000151 AA 01            [ 1]  554 	or	a, #0x01
      000153 C7 52 33         [ 1]  555 	ld	0x5233, a
                                    556 ;	./libs/uart_lib.c: 78: break;
      000156 20 5E            [ 2]  557 	jra	00114$
                                    558 ;	./libs/uart_lib.c: 79: case (unsigned int)57600:
      000158                        559 00107$:
                                    560 ;	./libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x11;
      000158 35 11 52 32      [ 1]  561 	mov	0x5232+0, #0x11
                                    562 ;	./libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x06;
      00015C C6 52 33         [ 1]  563 	ld	a, 0x5233
      00015F A4 F0            [ 1]  564 	and	a, #0xf0
      000161 AA 06            [ 1]  565 	or	a, #0x06
      000163 C7 52 33         [ 1]  566 	ld	0x5233, a
                                    567 ;	./libs/uart_lib.c: 82: break;
      000166 20 4E            [ 2]  568 	jra	00114$
                                    569 ;	./libs/uart_lib.c: 83: case (unsigned int)115200:
      000168                        570 00108$:
                                    571 ;	./libs/uart_lib.c: 84: UART1_BRR1 -> DIV = 0x08;
      000168 35 08 52 32      [ 1]  572 	mov	0x5232+0, #0x08
                                    573 ;	./libs/uart_lib.c: 85: UART1_BRR2 -> LSB = 0x0B;
      00016C C6 52 33         [ 1]  574 	ld	a, 0x5233
      00016F A4 F0            [ 1]  575 	and	a, #0xf0
      000171 AA 0B            [ 1]  576 	or	a, #0x0b
      000173 C7 52 33         [ 1]  577 	ld	0x5233, a
                                    578 ;	./libs/uart_lib.c: 86: break;
      000176 20 3E            [ 2]  579 	jra	00114$
                                    580 ;	./libs/uart_lib.c: 87: case (unsigned int)230400:
      000178                        581 00109$:
                                    582 ;	./libs/uart_lib.c: 88: UART1_BRR1 -> DIV = 0x04;
      000178 35 04 52 32      [ 1]  583 	mov	0x5232+0, #0x04
                                    584 ;	./libs/uart_lib.c: 89: UART1_BRR2 -> LSB = 0x05;
      00017C C6 52 33         [ 1]  585 	ld	a, 0x5233
      00017F A4 F0            [ 1]  586 	and	a, #0xf0
      000181 AA 05            [ 1]  587 	or	a, #0x05
      000183 C7 52 33         [ 1]  588 	ld	0x5233, a
                                    589 ;	./libs/uart_lib.c: 90: break;
      000186 20 2E            [ 2]  590 	jra	00114$
                                    591 ;	./libs/uart_lib.c: 91: case (unsigned int)460800:
      000188                        592 00110$:
                                    593 ;	./libs/uart_lib.c: 92: UART1_BRR1 -> DIV = 0x02;
      000188 35 02 52 32      [ 1]  594 	mov	0x5232+0, #0x02
                                    595 ;	./libs/uart_lib.c: 93: UART1_BRR2 -> LSB = 0x03;
      00018C C6 52 33         [ 1]  596 	ld	a, 0x5233
      00018F A4 F0            [ 1]  597 	and	a, #0xf0
      000191 AA 03            [ 1]  598 	or	a, #0x03
      000193 C7 52 33         [ 1]  599 	ld	0x5233, a
                                    600 ;	./libs/uart_lib.c: 94: break;
      000196 20 1E            [ 2]  601 	jra	00114$
                                    602 ;	./libs/uart_lib.c: 95: case (unsigned int)921600:
      000198                        603 00111$:
                                    604 ;	./libs/uart_lib.c: 96: UART1_BRR1 -> DIV = 0x01;
      000198 35 01 52 32      [ 1]  605 	mov	0x5232+0, #0x01
                                    606 ;	./libs/uart_lib.c: 97: UART1_BRR2 -> LSB = 0x01;
      00019C C6 52 33         [ 1]  607 	ld	a, 0x5233
      00019F A4 F0            [ 1]  608 	and	a, #0xf0
      0001A1 AA 01            [ 1]  609 	or	a, #0x01
      0001A3 C7 52 33         [ 1]  610 	ld	0x5233, a
                                    611 ;	./libs/uart_lib.c: 98: break;
      0001A6 20 0E            [ 2]  612 	jra	00114$
                                    613 ;	./libs/uart_lib.c: 99: default:
      0001A8                        614 00112$:
                                    615 ;	./libs/uart_lib.c: 100: UART1_BRR1 -> DIV = 0x68;
      0001A8 35 68 52 32      [ 1]  616 	mov	0x5232+0, #0x68
                                    617 ;	./libs/uart_lib.c: 101: UART1_BRR2 -> LSB = 0x03;
      0001AC C6 52 33         [ 1]  618 	ld	a, 0x5233
      0001AF A4 F0            [ 1]  619 	and	a, #0xf0
      0001B1 AA 03            [ 1]  620 	or	a, #0x03
      0001B3 C7 52 33         [ 1]  621 	ld	0x5233, a
                                    622 ;	./libs/uart_lib.c: 103: }
      0001B6                        623 00114$:
                                    624 ;	./libs/uart_lib.c: 104: }
      0001B6 5B 02            [ 2]  625 	addw	sp, #2
      0001B8 81               [ 4]  626 	ret
                                    627 ;	./libs/uart_lib.c: 106: int uart_read_byte(uint8_t *data)
                                    628 ;	-----------------------------------------
                                    629 ;	 function uart_read_byte
                                    630 ;	-----------------------------------------
      0001B9                        631 _uart_read_byte:
                                    632 ;	./libs/uart_lib.c: 108: while(!(UART1_SR -> RXNE));
      0001B9                        633 00101$:
      0001B9 72 0B 52 30 FB   [ 2]  634 	btjf	0x5230, #5, 00101$
                                    635 ;	./libs/uart_lib.c: 110: return 1;
      0001BE 5F               [ 1]  636 	clrw	x
      0001BF 5C               [ 1]  637 	incw	x
                                    638 ;	./libs/uart_lib.c: 111: }
      0001C0 81               [ 4]  639 	ret
                                    640 ;	./libs/uart_lib.c: 113: int uart_write_byte(uint8_t data)
                                    641 ;	-----------------------------------------
                                    642 ;	 function uart_write_byte
                                    643 ;	-----------------------------------------
      0001C1                        644 _uart_write_byte:
                                    645 ;	./libs/uart_lib.c: 115: UART1_DR -> DR = data;
      0001C1 C7 52 31         [ 1]  646 	ld	0x5231, a
                                    647 ;	./libs/uart_lib.c: 116: while(!(UART1_SR -> TXE));
      0001C4                        648 00101$:
      0001C4 72 0F 52 30 FB   [ 2]  649 	btjf	0x5230, #7, 00101$
                                    650 ;	./libs/uart_lib.c: 117: return 1;
      0001C9 5F               [ 1]  651 	clrw	x
      0001CA 5C               [ 1]  652 	incw	x
                                    653 ;	./libs/uart_lib.c: 118: }
      0001CB 81               [ 4]  654 	ret
                                    655 ;	./libs/uart_lib.c: 120: int uart_write(uint8_t *data_buf)
                                    656 ;	-----------------------------------------
                                    657 ;	 function uart_write
                                    658 ;	-----------------------------------------
      0001CC                        659 _uart_write:
      0001CC 52 04            [ 2]  660 	sub	sp, #4
      0001CE 1F 01            [ 2]  661 	ldw	(0x01, sp), x
                                    662 ;	./libs/uart_lib.c: 122: int count = 0;
      0001D0 5F               [ 1]  663 	clrw	x
      0001D1 1F 03            [ 2]  664 	ldw	(0x03, sp), x
                                    665 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001D3 5F               [ 1]  666 	clrw	x
      0001D4                        667 00103$:
      0001D4 90 93            [ 1]  668 	ldw	y, x
      0001D6 72 F9 01         [ 2]  669 	addw	y, (0x01, sp)
      0001D9 90 F6            [ 1]  670 	ld	a, (y)
      0001DB 27 0E            [ 1]  671 	jreq	00101$
                                    672 ;	./libs/uart_lib.c: 124: count += uart_write_byte(data_buf[i]);
      0001DD 89               [ 2]  673 	pushw	x
      0001DE CDr01rC1         [ 4]  674 	call	_uart_write_byte
      0001E1 51               [ 1]  675 	exgw	x, y
      0001E2 85               [ 2]  676 	popw	x
      0001E3 72 F9 03         [ 2]  677 	addw	y, (0x03, sp)
      0001E6 17 03            [ 2]  678 	ldw	(0x03, sp), y
                                    679 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001E8 5C               [ 1]  680 	incw	x
      0001E9 20 E9            [ 2]  681 	jra	00103$
      0001EB                        682 00101$:
                                    683 ;	./libs/uart_lib.c: 125: return count;
      0001EB 1E 03            [ 2]  684 	ldw	x, (0x03, sp)
                                    685 ;	./libs/uart_lib.c: 126: }
      0001ED 5B 04            [ 2]  686 	addw	sp, #4
      0001EF 81               [ 4]  687 	ret
                                    688 ;	./libs/uart_lib.c: 127: int uart_read(uint8_t *data_buf,int size)
                                    689 ;	-----------------------------------------
                                    690 ;	 function uart_read
                                    691 ;	-----------------------------------------
      0001F0                        692 _uart_read:
      0001F0 52 04            [ 2]  693 	sub	sp, #4
      0001F2 1F 01            [ 2]  694 	ldw	(0x01, sp), x
                                    695 ;	./libs/uart_lib.c: 130: int count = 0;
      0001F4 5F               [ 1]  696 	clrw	x
      0001F5 1F 03            [ 2]  697 	ldw	(0x03, sp), x
                                    698 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001F7 5F               [ 1]  699 	clrw	x
      0001F8                        700 00103$:
      0001F8 90 93            [ 1]  701 	ldw	y, x
      0001FA 72 F9 01         [ 2]  702 	addw	y, (0x01, sp)
      0001FD 90 F6            [ 1]  703 	ld	a, (y)
      0001FF 27 13            [ 1]  704 	jreq	00101$
                                    705 ;	./libs/uart_lib.c: 132: count += uart_read_byte((unsigned char *)data_buf[i]);
      000201 90 5F            [ 1]  706 	clrw	y
      000203 90 97            [ 1]  707 	ld	yl, a
      000205 89               [ 2]  708 	pushw	x
      000206 93               [ 1]  709 	ldw	x, y
      000207 CDr01rB9         [ 4]  710 	call	_uart_read_byte
      00020A 51               [ 1]  711 	exgw	x, y
      00020B 85               [ 2]  712 	popw	x
      00020C 72 F9 03         [ 2]  713 	addw	y, (0x03, sp)
      00020F 17 03            [ 2]  714 	ldw	(0x03, sp), y
                                    715 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      000211 5C               [ 1]  716 	incw	x
      000212 20 E4            [ 2]  717 	jra	00103$
      000214                        718 00101$:
                                    719 ;	./libs/uart_lib.c: 133: return count;
      000214 1E 03            [ 2]  720 	ldw	x, (0x03, sp)
                                    721 ;	./libs/uart_lib.c: 134: }
      000216 5B 04            [ 2]  722 	addw	sp, #4
      000218 90 85            [ 2]  723 	popw	y
      00021A 5B 02            [ 2]  724 	addw	sp, #2
      00021C 90 FC            [ 2]  725 	jp	(y)
                                    726 ;	./libs/tmr2_lib.c: 3: void tmr2_irq(void) __interrupt(TIM2_vector)
                                    727 ;	-----------------------------------------
                                    728 ;	 function tmr2_irq
                                    729 ;	-----------------------------------------
      00021E                        730 _tmr2_irq:
      00021E 4F               [ 1]  731 	clr	a
      00021F 62               [ 2]  732 	div	x, a
                                    733 ;	./libs/tmr2_lib.c: 6: disableInterrupts();
      000220 9B               [ 1]  734 	sim
                                    735 ;	./libs/tmr2_lib.c: 7: TIM2_IRQ.all = 0;//обнуление флагов регистров
      000221 35 00u00uA0      [ 1]  736 	mov	_TIM2_IRQ+0, #0x00
                                    737 ;	./libs/tmr2_lib.c: 9: if(TIM2_SR1 -> UIF)//прерывание таймера
      000225 AE 53 04         [ 2]  738 	ldw	x, #0x5304
      000228 F6               [ 1]  739 	ld	a, (x)
      000229 A4 01            [ 1]  740 	and	a, #0x01
      00022B 27 0B            [ 1]  741 	jreq	00102$
                                    742 ;	./libs/tmr2_lib.c: 11: TIM2_IRQ.UIF = 1;
      00022D 72 1Eu00uA0      [ 1]  743 	bset	_TIM2_IRQ+0, #7
                                    744 ;	./libs/tmr2_lib.c: 12: TIM2_IER -> UIE = 0;
      000231 AE 53 03         [ 2]  745 	ldw	x, #0x5303
      000234 F6               [ 1]  746 	ld	a, (x)
      000235 A4 FE            [ 1]  747 	and	a, #0xfe
      000237 F7               [ 1]  748 	ld	(x), a
      000238                        749 00102$:
                                    750 ;	./libs/tmr2_lib.c: 14: enableInterrupts();
      000238 9A               [ 1]  751 	rim
                                    752 ;	./libs/tmr2_lib.c: 15: }
      000239 80               [11]  753 	iret
                                    754 ;	./libs/tmr2_lib.c: 16: void delay_s(uint8_t ticks)
                                    755 ;	-----------------------------------------
                                    756 ;	 function delay_s
                                    757 ;	-----------------------------------------
      00023A                        758 _delay_s:
      00023A 52 05            [ 2]  759 	sub	sp, #5
      00023C 6B 03            [ 1]  760 	ld	(0x03, sp), a
                                    761 ;	./libs/tmr2_lib.c: 18: for(int i = 0;i<ticks;i++)
      00023E 5F               [ 1]  762 	clrw	x
      00023F 1F 04            [ 2]  763 	ldw	(0x04, sp), x
      000241                        764 00106$:
      000241 7B 03            [ 1]  765 	ld	a, (0x03, sp)
      000243 6B 02            [ 1]  766 	ld	(0x02, sp), a
      000245 0F 01            [ 1]  767 	clr	(0x01, sp)
      000247 1E 04            [ 2]  768 	ldw	x, (0x04, sp)
      000249 13 01            [ 2]  769 	cpw	x, (0x01, sp)
      00024B 2E 2A            [ 1]  770 	jrsge	00104$
                                    771 ;	./libs/tmr2_lib.c: 20: TIM2_SR1 -> UIF = 0;
      00024D 72 11 53 04      [ 1]  772 	bres	0x5304, #0
                                    773 ;	./libs/tmr2_lib.c: 21: TIM2_ARRH->ARR = 0x03;
      000251 35 03 53 0F      [ 1]  774 	mov	0x530f+0, #0x03
                                    775 ;	./libs/tmr2_lib.c: 22: TIM2_ARRL->ARR = 0xD1;
      000255 35 D1 53 10      [ 1]  776 	mov	0x5310+0, #0xd1
                                    777 ;	./libs/tmr2_lib.c: 23: TIM2_PSCR -> PSC = 0x0E;
      000259 C6 53 0E         [ 1]  778 	ld	a, 0x530e
      00025C A4 F0            [ 1]  779 	and	a, #0xf0
      00025E AA 0E            [ 1]  780 	or	a, #0x0e
      000260 C7 53 0E         [ 1]  781 	ld	0x530e, a
                                    782 ;	./libs/tmr2_lib.c: 24: TIM2_IER -> UIE = 1;
      000263 72 10 53 03      [ 1]  783 	bset	0x5303, #0
                                    784 ;	./libs/tmr2_lib.c: 25: TIM2_CR1-> CEN = 1;
      000267 72 10 53 00      [ 1]  785 	bset	0x5300, #0
                                    786 ;	./libs/tmr2_lib.c: 26: while(TIM2_IER -> UIE);	
      00026B                        787 00101$:
      00026B 72 00 53 03 FB   [ 2]  788 	btjt	0x5303, #0, 00101$
                                    789 ;	./libs/tmr2_lib.c: 18: for(int i = 0;i<ticks;i++)
      000270 1E 04            [ 2]  790 	ldw	x, (0x04, sp)
      000272 5C               [ 1]  791 	incw	x
      000273 1F 04            [ 2]  792 	ldw	(0x04, sp), x
      000275 20 CA            [ 2]  793 	jra	00106$
      000277                        794 00104$:
                                    795 ;	./libs/tmr2_lib.c: 28: TIM2_CR1-> CEN = 0;
      000277 72 11 53 00      [ 1]  796 	bres	0x5300, #0
                                    797 ;	./libs/tmr2_lib.c: 29: }
      00027B 5B 05            [ 2]  798 	addw	sp, #5
      00027D 81               [ 4]  799 	ret
                                    800 ;	./libs/tmr2_lib.c: 30: void delay_ms(uint8_t ticks)
                                    801 ;	-----------------------------------------
                                    802 ;	 function delay_ms
                                    803 ;	-----------------------------------------
      00027E                        804 _delay_ms:
      00027E 52 05            [ 2]  805 	sub	sp, #5
      000280 6B 03            [ 1]  806 	ld	(0x03, sp), a
                                    807 ;	./libs/tmr2_lib.c: 32: for(int i = 0;i<ticks;i++)
      000282 5F               [ 1]  808 	clrw	x
      000283 1F 04            [ 2]  809 	ldw	(0x04, sp), x
      000285                        810 00106$:
      000285 7B 03            [ 1]  811 	ld	a, (0x03, sp)
      000287 6B 02            [ 1]  812 	ld	(0x02, sp), a
      000289 0F 01            [ 1]  813 	clr	(0x01, sp)
      00028B 1E 04            [ 2]  814 	ldw	x, (0x04, sp)
      00028D 13 01            [ 2]  815 	cpw	x, (0x01, sp)
      00028F 2E 28            [ 1]  816 	jrsge	00104$
                                    817 ;	./libs/tmr2_lib.c: 34: TIM2_SR1 -> UIF = 0;
      000291 72 11 53 04      [ 1]  818 	bres	0x5304, #0
                                    819 ;	./libs/tmr2_lib.c: 35: TIM2_ARRH->ARR = 0x00;
      000295 35 00 53 0F      [ 1]  820 	mov	0x530f+0, #0x00
                                    821 ;	./libs/tmr2_lib.c: 36: TIM2_ARRL->ARR = 0x7D;
      000299 35 7D 53 10      [ 1]  822 	mov	0x5310+0, #0x7d
                                    823 ;	./libs/tmr2_lib.c: 37: TIM2_PSCR -> PSC = 0x0F;
      00029D C6 53 0E         [ 1]  824 	ld	a, 0x530e
      0002A0 AA 0F            [ 1]  825 	or	a, #0x0f
      0002A2 C7 53 0E         [ 1]  826 	ld	0x530e, a
                                    827 ;	./libs/tmr2_lib.c: 38: TIM2_IER -> UIE = 1;
      0002A5 72 10 53 03      [ 1]  828 	bset	0x5303, #0
                                    829 ;	./libs/tmr2_lib.c: 39: TIM2_CR1-> CEN = 1;
      0002A9 72 10 53 00      [ 1]  830 	bset	0x5300, #0
                                    831 ;	./libs/tmr2_lib.c: 40: while(TIM2_IER -> UIE);	
      0002AD                        832 00101$:
      0002AD 72 00 53 03 FB   [ 2]  833 	btjt	0x5303, #0, 00101$
                                    834 ;	./libs/tmr2_lib.c: 32: for(int i = 0;i<ticks;i++)
      0002B2 1E 04            [ 2]  835 	ldw	x, (0x04, sp)
      0002B4 5C               [ 1]  836 	incw	x
      0002B5 1F 04            [ 2]  837 	ldw	(0x04, sp), x
      0002B7 20 CC            [ 2]  838 	jra	00106$
      0002B9                        839 00104$:
                                    840 ;	./libs/tmr2_lib.c: 42: TIM2_CR1-> CEN = 0;
      0002B9 72 11 53 00      [ 1]  841 	bres	0x5300, #0
                                    842 ;	./libs/tmr2_lib.c: 43: }
      0002BD 5B 05            [ 2]  843 	addw	sp, #5
      0002BF 81               [ 4]  844 	ret
                                    845 ;	./libs/i2c_lib.c: 3: void i2c_irq(void) __interrupt(I2C_vector)
                                    846 ;	-----------------------------------------
                                    847 ;	 function i2c_irq
                                    848 ;	-----------------------------------------
      0002C0                        849 _i2c_irq:
      0002C0 4F               [ 1]  850 	clr	a
      0002C1 62               [ 2]  851 	div	x, a
                                    852 ;	./libs/i2c_lib.c: 6: disableInterrupts();
      0002C2 9B               [ 1]  853 	sim
                                    854 ;	./libs/i2c_lib.c: 7: I2C_IRQ.all = 0;//обнуление флагов регистров
      0002C3 35 00u00uA1      [ 1]  855 	mov	_I2C_IRQ+0, #0x00
                                    856 ;	./libs/i2c_lib.c: 9: if(I2C_SR1 -> ADDR)//прерывание адреса
      0002C7 AE 52 17         [ 2]  857 	ldw	x, #0x5217
      0002CA F6               [ 1]  858 	ld	a, (x)
      0002CB 44               [ 1]  859 	srl	a
      0002CC A4 01            [ 1]  860 	and	a, #0x01
      0002CE 27 16            [ 1]  861 	jreq	00102$
                                    862 ;	./libs/i2c_lib.c: 11: clr_sr1();
      0002D0 C6 52 17         [ 1]  863 	ld	a,0x5217
                                    864 ;	./libs/i2c_lib.c: 12: I2C_IRQ.ADDR = 1;
      0002D3 72 12u00uA1      [ 1]  865 	bset	_I2C_IRQ+0, #1
                                    866 ;	./libs/i2c_lib.c: 13: clr_sr3();//EV6
      0002D7 C6 52 19         [ 1]  867 	ld	a,0x5219
                                    868 ;	./libs/i2c_lib.c: 14: I2C_ITR -> ITEVTEN = 0;
      0002DA 72 13 52 1A      [ 1]  869 	bres	0x521a, #1
                                    870 ;	./libs/i2c_lib.c: 15: uart_write_byte(0xE1);
      0002DE A6 E1            [ 1]  871 	ld	a, #0xe1
      0002E0 CDr01rC1         [ 4]  872 	call	_uart_write_byte
                                    873 ;	./libs/i2c_lib.c: 16: return;
      0002E3 CCr03r79         [ 2]  874 	jp	00113$
      0002E6                        875 00102$:
                                    876 ;	./libs/i2c_lib.c: 19: if(I2C_SR1 -> TXE) //прерывание регистра данных(он пуст)
      0002E6 C6 52 17         [ 1]  877 	ld	a, 0x5217
      0002E9 4E               [ 1]  878 	swap	a
      0002EA 44               [ 1]  879 	srl	a
      0002EB 44               [ 1]  880 	srl	a
      0002EC 44               [ 1]  881 	srl	a
      0002ED A5 01            [ 1]  882 	bcp	a, #0x01
      0002EF 27 17            [ 1]  883 	jreq	00104$
                                    884 ;	./libs/i2c_lib.c: 21: I2C_IRQ.TXE = 1;
      0002F1 72 18u00uA1      [ 1]  885 	bset	_I2C_IRQ+0, #4
                                    886 ;	./libs/i2c_lib.c: 22: I2C_ITR -> ITBUFEN = 0;
      0002F5 72 15 52 1A      [ 1]  887 	bres	0x521a, #2
                                    888 ;	./libs/i2c_lib.c: 23: I2C_ITR -> ITEVTEN = 0;
      0002F9 72 13 52 1A      [ 1]  889 	bres	0x521a, #1
                                    890 ;	./libs/i2c_lib.c: 24: I2C_ITR -> ITERREN = 0;
      0002FD 72 11 52 1A      [ 1]  891 	bres	0x521a, #0
                                    892 ;	./libs/i2c_lib.c: 25: uart_write_byte(0xEA);
      000301 A6 EA            [ 1]  893 	ld	a, #0xea
      000303 CDr01rC1         [ 4]  894 	call	_uart_write_byte
                                    895 ;	./libs/i2c_lib.c: 26: return;
      000306 20 71            [ 2]  896 	jra	00113$
      000308                        897 00104$:
                                    898 ;	./libs/i2c_lib.c: 28: if(I2C_SR1 -> RXNE) //прерывание регистра данных(он не пуст)
      000308 C6 52 17         [ 1]  899 	ld	a, 0x5217
      00030B 4E               [ 1]  900 	swap	a
      00030C 44               [ 1]  901 	srl	a
      00030D 44               [ 1]  902 	srl	a
      00030E A5 01            [ 1]  903 	bcp	a, #0x01
      000310 27 17            [ 1]  904 	jreq	00106$
                                    905 ;	./libs/i2c_lib.c: 30: I2C_IRQ.RXNE = 1;
      000312 72 16u00uA1      [ 1]  906 	bset	_I2C_IRQ+0, #3
                                    907 ;	./libs/i2c_lib.c: 31: I2C_ITR -> ITBUFEN = 0;
      000316 72 15 52 1A      [ 1]  908 	bres	0x521a, #2
                                    909 ;	./libs/i2c_lib.c: 32: I2C_ITR -> ITEVTEN = 0;
      00031A 72 13 52 1A      [ 1]  910 	bres	0x521a, #1
                                    911 ;	./libs/i2c_lib.c: 33: I2C_ITR -> ITERREN = 0;
      00031E 72 11 52 1A      [ 1]  912 	bres	0x521a, #0
                                    913 ;	./libs/i2c_lib.c: 34: uart_write_byte(0xEB);
      000322 A6 EB            [ 1]  914 	ld	a, #0xeb
      000324 CDr01rC1         [ 4]  915 	call	_uart_write_byte
                                    916 ;	./libs/i2c_lib.c: 35: return;
      000327 20 50            [ 2]  917 	jra	00113$
      000329                        918 00106$:
                                    919 ;	./libs/i2c_lib.c: 38: if(I2C_SR1 -> SB)//EV5 прерывание стартового импульса
      000329 C6 52 17         [ 1]  920 	ld	a, 0x5217
      00032C A5 01            [ 1]  921 	bcp	a, #0x01
      00032E 27 0F            [ 1]  922 	jreq	00108$
                                    923 ;	./libs/i2c_lib.c: 40: I2C_IRQ.SB = 1;
      000330 72 10u00uA1      [ 1]  924 	bset	_I2C_IRQ+0, #0
                                    925 ;	./libs/i2c_lib.c: 41: I2C_ITR -> ITEVTEN = 0;
      000334 72 13 52 1A      [ 1]  926 	bres	0x521a, #1
                                    927 ;	./libs/i2c_lib.c: 42: uart_write_byte(0xE2);
      000338 A6 E2            [ 1]  928 	ld	a, #0xe2
      00033A CDr01rC1         [ 4]  929 	call	_uart_write_byte
                                    930 ;	./libs/i2c_lib.c: 43: return;
      00033D 20 3A            [ 2]  931 	jra	00113$
      00033F                        932 00108$:
                                    933 ;	./libs/i2c_lib.c: 45: if(I2C_SR1 -> BTF) //прерывание отправки данных
      00033F C6 52 17         [ 1]  934 	ld	a, 0x5217
      000342 44               [ 1]  935 	srl	a
      000343 44               [ 1]  936 	srl	a
      000344 A5 01            [ 1]  937 	bcp	a, #0x01
      000346 27 0F            [ 1]  938 	jreq	00110$
                                    939 ;	./libs/i2c_lib.c: 47: I2C_IRQ.BTF = 1;
      000348 72 14u00uA1      [ 1]  940 	bset	_I2C_IRQ+0, #2
                                    941 ;	./libs/i2c_lib.c: 48: I2C_ITR -> ITEVTEN = 0;
      00034C 72 13 52 1A      [ 1]  942 	bres	0x521a, #1
                                    943 ;	./libs/i2c_lib.c: 49: uart_write_byte(0xE3);
      000350 A6 E3            [ 1]  944 	ld	a, #0xe3
      000352 CDr01rC1         [ 4]  945 	call	_uart_write_byte
                                    946 ;	./libs/i2c_lib.c: 50: return;
      000355 20 22            [ 2]  947 	jra	00113$
      000357                        948 00110$:
                                    949 ;	./libs/i2c_lib.c: 53: if(I2C_SR2 -> AF) //прерывание ошибки NACK
      000357 AE 52 18         [ 2]  950 	ldw	x, #0x5218
      00035A F6               [ 1]  951 	ld	a, (x)
      00035B 44               [ 1]  952 	srl	a
      00035C 44               [ 1]  953 	srl	a
      00035D A4 01            [ 1]  954 	and	a, #0x01
      00035F 27 17            [ 1]  955 	jreq	00112$
                                    956 ;	./libs/i2c_lib.c: 55: I2C_IRQ.AF = 1;
      000361 72 1Au00uA1      [ 1]  957 	bset	_I2C_IRQ+0, #5
                                    958 ;	./libs/i2c_lib.c: 56: I2C_ITR -> ITEVTEN = 0;
      000365 72 13 52 1A      [ 1]  959 	bres	0x521a, #1
                                    960 ;	./libs/i2c_lib.c: 57: I2C_ITR -> ITERREN = 0;
      000369 72 11 52 1A      [ 1]  961 	bres	0x521a, #0
                                    962 ;	./libs/i2c_lib.c: 58: I2C_ITR -> ITBUFEN = 0;
      00036D 72 15 52 1A      [ 1]  963 	bres	0x521a, #2
                                    964 ;	./libs/i2c_lib.c: 59: uart_write_byte(0xEE);
      000371 A6 EE            [ 1]  965 	ld	a, #0xee
      000373 CDr01rC1         [ 4]  966 	call	_uart_write_byte
                                    967 ;	./libs/i2c_lib.c: 60: return;
      000376 20 01            [ 2]  968 	jra	00113$
      000378                        969 00112$:
                                    970 ;	./libs/i2c_lib.c: 63: enableInterrupts(); 
      000378 9A               [ 1]  971 	rim
      000379                        972 00113$:
                                    973 ;	./libs/i2c_lib.c: 64: }
      000379 80               [11]  974 	iret
                                    975 ;	./libs/i2c_lib.c: 66: void i2c_init(void)
                                    976 ;	-----------------------------------------
                                    977 ;	 function i2c_init
                                    978 ;	-----------------------------------------
      00037A                        979 _i2c_init:
                                    980 ;	./libs/i2c_lib.c: 70: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      00037A 72 11 52 10      [ 1]  981 	bres	0x5210, #0
                                    982 ;	./libs/i2c_lib.c: 71: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      00037E C6 52 12         [ 1]  983 	ld	a, 0x5212
      000381 A4 C0            [ 1]  984 	and	a, #0xc0
      000383 AA 10            [ 1]  985 	or	a, #0x10
      000385 C7 52 12         [ 1]  986 	ld	0x5212, a
                                    987 ;	./libs/i2c_lib.c: 72: I2C_CCRH -> CCR = 0;// =0
      000388 C6 52 1C         [ 1]  988 	ld	a, 0x521c
      00038B A4 F0            [ 1]  989 	and	a, #0xf0
      00038D C7 52 1C         [ 1]  990 	ld	0x521c, a
                                    991 ;	./libs/i2c_lib.c: 73: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      000390 35 50 52 1B      [ 1]  992 	mov	0x521b+0, #0x50
                                    993 ;	./libs/i2c_lib.c: 74: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      000394 72 1F 52 1C      [ 1]  994 	bres	0x521c, #7
                                    995 ;	./libs/i2c_lib.c: 75: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      000398 72 1F 52 14      [ 1]  996 	bres	0x5214, #7
                                    997 ;	./libs/i2c_lib.c: 76: I2C_OARH -> ADDCONF = 1;// see reference manual
      00039C 72 10 52 14      [ 1]  998 	bset	0x5214, #0
                                    999 ;	./libs/i2c_lib.c: 77: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      0003A0 72 10 52 10      [ 1] 1000 	bset	0x5210, #0
                                   1001 ;	./libs/i2c_lib.c: 78: }
      0003A4 81               [ 4] 1002 	ret
                                   1003 ;	./libs/i2c_lib.c: 80: void i2c_start(void)
                                   1004 ;	-----------------------------------------
                                   1005 ;	 function i2c_start
                                   1006 ;	-----------------------------------------
      0003A5                       1007 _i2c_start:
                                   1008 ;	./libs/i2c_lib.c: 82: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      0003A5 72 10 52 11      [ 1] 1009 	bset	0x5211, #0
                                   1010 ;	./libs/i2c_lib.c: 83: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      0003A9                       1011 00101$:
      0003A9 72 01 52 17 FB   [ 2] 1012 	btjf	0x5217, #0, 00101$
                                   1013 ;	./libs/i2c_lib.c: 84: }
      0003AE 81               [ 4] 1014 	ret
                                   1015 ;	./libs/i2c_lib.c: 86: void i2c_stop(void)
                                   1016 ;	-----------------------------------------
                                   1017 ;	 function i2c_stop
                                   1018 ;	-----------------------------------------
      0003AF                       1019 _i2c_stop:
                                   1020 ;	./libs/i2c_lib.c: 88: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      0003AF 72 12 52 11      [ 1] 1021 	bset	0x5211, #1
                                   1022 ;	./libs/i2c_lib.c: 89: }
      0003B3 81               [ 4] 1023 	ret
                                   1024 ;	./libs/i2c_lib.c: 91: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                   1025 ;	-----------------------------------------
                                   1026 ;	 function i2c_send_address
                                   1027 ;	-----------------------------------------
      0003B4                       1028 _i2c_send_address:
                                   1029 ;	./libs/i2c_lib.c: 96: address = address << 1;
      0003B4 48               [ 1] 1030 	sll	a
                                   1031 ;	./libs/i2c_lib.c: 93: switch(rw_type)
      0003B5 88               [ 1] 1032 	push	a
      0003B6 7B 04            [ 1] 1033 	ld	a, (0x04, sp)
      0003B8 4A               [ 1] 1034 	dec	a
      0003B9 84               [ 1] 1035 	pop	a
      0003BA 26 02            [ 1] 1036 	jrne	00102$
                                   1037 ;	./libs/i2c_lib.c: 96: address = address << 1;
                                   1038 ;	./libs/i2c_lib.c: 97: address |= 0x01; // Отправка адреса устройства с битом на чтение
      0003BC AA 01            [ 1] 1039 	or	a, #0x01
                                   1040 ;	./libs/i2c_lib.c: 98: break;
                                   1041 ;	./libs/i2c_lib.c: 99: default:
                                   1042 ;	./libs/i2c_lib.c: 100: address = address << 1; // Отправка адреса устройства с битом на запись
                                   1043 ;	./libs/i2c_lib.c: 102: }
      0003BE                       1044 00102$:
                                   1045 ;	./libs/i2c_lib.c: 103: i2c_start();
      0003BE 88               [ 1] 1046 	push	a
      0003BF CDr03rA5         [ 4] 1047 	call	_i2c_start
      0003C2 84               [ 1] 1048 	pop	a
                                   1049 ;	./libs/i2c_lib.c: 104: I2C_DR -> DR = address;
      0003C3 C7 52 16         [ 1] 1050 	ld	0x5216, a
                                   1051 ;	./libs/i2c_lib.c: 105: while(!I2C_SR1 -> ADDR)
      0003C6                       1052 00106$:
      0003C6 AE 52 17         [ 2] 1053 	ldw	x, #0x5217
      0003C9 F6               [ 1] 1054 	ld	a, (x)
      0003CA 44               [ 1] 1055 	srl	a
      0003CB A4 01            [ 1] 1056 	and	a, #0x01
      0003CD 26 08            [ 1] 1057 	jrne	00108$
                                   1058 ;	./libs/i2c_lib.c: 106: if(I2C_SR2 -> AF)
      0003CF 72 05 52 18 F2   [ 2] 1059 	btjf	0x5218, #2, 00106$
                                   1060 ;	./libs/i2c_lib.c: 107: return 0;
      0003D4 4F               [ 1] 1061 	clr	a
      0003D5 20 08            [ 2] 1062 	jra	00109$
      0003D7                       1063 00108$:
                                   1064 ;	./libs/i2c_lib.c: 108: clr_sr1();
      0003D7 C6 52 17         [ 1] 1065 	ld	a,0x5217
                                   1066 ;	./libs/i2c_lib.c: 109: clr_sr3();
      0003DA C6 52 19         [ 1] 1067 	ld	a,0x5219
                                   1068 ;	./libs/i2c_lib.c: 110: return 1;
      0003DD A6 01            [ 1] 1069 	ld	a, #0x01
      0003DF                       1070 00109$:
                                   1071 ;	./libs/i2c_lib.c: 111: }
      0003DF 85               [ 2] 1072 	popw	x
      0003E0 5B 01            [ 2] 1073 	addw	sp, #1
      0003E2 FC               [ 2] 1074 	jp	(x)
                                   1075 ;	./libs/i2c_lib.c: 113: uint8_t i2c_read_byte(void)
                                   1076 ;	-----------------------------------------
                                   1077 ;	 function i2c_read_byte
                                   1078 ;	-----------------------------------------
      0003E3                       1079 _i2c_read_byte:
                                   1080 ;	./libs/i2c_lib.c: 115: while(!I2C_SR1 -> RXNE);
      0003E3                       1081 00101$:
      0003E3 72 0D 52 17 FB   [ 2] 1082 	btjf	0x5217, #6, 00101$
                                   1083 ;	./libs/i2c_lib.c: 116: return I2C_DR -> DR;
      0003E8 C6 52 16         [ 1] 1084 	ld	a, 0x5216
                                   1085 ;	./libs/i2c_lib.c: 117: }
      0003EB 81               [ 4] 1086 	ret
                                   1087 ;	./libs/i2c_lib.c: 119: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                   1088 ;	-----------------------------------------
                                   1089 ;	 function i2c_read
                                   1090 ;	-----------------------------------------
      0003EC                       1091 _i2c_read:
      0003EC 52 04            [ 2] 1092 	sub	sp, #4
                                   1093 ;	./libs/i2c_lib.c: 121: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      0003EE 4B 01            [ 1] 1094 	push	#0x01
      0003F0 CDr03rB4         [ 4] 1095 	call	_i2c_send_address
      0003F3 4D               [ 1] 1096 	tnz	a
      0003F4 27 3C            [ 1] 1097 	jreq	00103$
                                   1098 ;	./libs/i2c_lib.c: 123: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      0003F6 72 14 52 11      [ 1] 1099 	bset	0x5211, #2
                                   1100 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      0003FA 5F               [ 1] 1101 	clrw	x
      0003FB 1F 03            [ 2] 1102 	ldw	(0x03, sp), x
      0003FD                       1103 00105$:
      0003FD 5F               [ 1] 1104 	clrw	x
      0003FE 7B 07            [ 1] 1105 	ld	a, (0x07, sp)
      000400 97               [ 1] 1106 	ld	xl, a
      000401 5A               [ 2] 1107 	decw	x
      000402 1F 01            [ 2] 1108 	ldw	(0x01, sp), x
      000404 1E 03            [ 2] 1109 	ldw	x, (0x03, sp)
      000406 13 01            [ 2] 1110 	cpw	x, (0x01, sp)
      000408 2E 12            [ 1] 1111 	jrsge	00101$
                                   1112 ;	./libs/i2c_lib.c: 126: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      00040A 1E 08            [ 2] 1113 	ldw	x, (0x08, sp)
      00040C 72 FB 03         [ 2] 1114 	addw	x, (0x03, sp)
      00040F 89               [ 2] 1115 	pushw	x
      000410 CDr03rE3         [ 4] 1116 	call	_i2c_read_byte
      000413 85               [ 2] 1117 	popw	x
      000414 F7               [ 1] 1118 	ld	(x), a
                                   1119 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000415 1E 03            [ 2] 1120 	ldw	x, (0x03, sp)
      000417 5C               [ 1] 1121 	incw	x
      000418 1F 03            [ 2] 1122 	ldw	(0x03, sp), x
      00041A 20 E1            [ 2] 1123 	jra	00105$
      00041C                       1124 00101$:
                                   1125 ;	./libs/i2c_lib.c: 128: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      00041C C6 52 11         [ 1] 1126 	ld	a, 0x5211
      00041F A4 FB            [ 1] 1127 	and	a, #0xfb
      000421 C7 52 11         [ 1] 1128 	ld	0x5211, a
                                   1129 ;	./libs/i2c_lib.c: 130: data[size-1] = i2c_read_byte();
      000424 1E 08            [ 2] 1130 	ldw	x, (0x08, sp)
      000426 72 FB 01         [ 2] 1131 	addw	x, (0x01, sp)
      000429 89               [ 2] 1132 	pushw	x
      00042A CDr03rE3         [ 4] 1133 	call	_i2c_read_byte
      00042D 85               [ 2] 1134 	popw	x
      00042E F7               [ 1] 1135 	ld	(x), a
                                   1136 ;	./libs/i2c_lib.c: 132: i2c_stop();
      00042F CDr03rAF         [ 4] 1137 	call	_i2c_stop
      000432                       1138 00103$:
                                   1139 ;	./libs/i2c_lib.c: 135: i2c_stop();
      000432 1E 05            [ 2] 1140 	ldw	x, (5, sp)
      000434 1F 08            [ 2] 1141 	ldw	(8, sp), x
      000436 5B 07            [ 2] 1142 	addw	sp, #7
                                   1143 ;	./libs/i2c_lib.c: 137: }
      000438 CCr03rAF         [ 2] 1144 	jp	_i2c_stop
                                   1145 ;	./libs/i2c_lib.c: 139: uint8_t i2c_send_byte(uint8_t data)
                                   1146 ;	-----------------------------------------
                                   1147 ;	 function i2c_send_byte
                                   1148 ;	-----------------------------------------
      00043B                       1149 _i2c_send_byte:
                                   1150 ;	./libs/i2c_lib.c: 141: I2C_DR -> DR = data; //Отправка данных
      00043B C7 52 16         [ 1] 1151 	ld	0x5216, a
                                   1152 ;	./libs/i2c_lib.c: 142: while(!I2C_SR1 -> TXE)
      00043E                       1153 00103$:
      00043E 72 0E 52 17 08   [ 2] 1154 	btjt	0x5217, #7, 00105$
                                   1155 ;	./libs/i2c_lib.c: 143: if(I2C_SR2 -> AF)
      000443 72 05 52 18 F6   [ 2] 1156 	btjf	0x5218, #2, 00103$
                                   1157 ;	./libs/i2c_lib.c: 144: return 1;
      000448 A6 01            [ 1] 1158 	ld	a, #0x01
      00044A 81               [ 4] 1159 	ret
      00044B                       1160 00105$:
                                   1161 ;	./libs/i2c_lib.c: 145: return 0;//флаг ответа
      00044B 4F               [ 1] 1162 	clr	a
                                   1163 ;	./libs/i2c_lib.c: 146: }
      00044C 81               [ 4] 1164 	ret
                                   1165 ;	./libs/i2c_lib.c: 148: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                   1166 ;	-----------------------------------------
                                   1167 ;	 function i2c_write
                                   1168 ;	-----------------------------------------
      00044D                       1169 _i2c_write:
      00044D 52 02            [ 2] 1170 	sub	sp, #2
                                   1171 ;	./libs/i2c_lib.c: 150: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      00044F 4B 00            [ 1] 1172 	push	#0x00
      000451 CDr03rB4         [ 4] 1173 	call	_i2c_send_address
      000454 4D               [ 1] 1174 	tnz	a
      000455 27 1D            [ 1] 1175 	jreq	00105$
                                   1176 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      000457 5F               [ 1] 1177 	clrw	x
      000458                       1178 00107$:
      000458 7B 05            [ 1] 1179 	ld	a, (0x05, sp)
      00045A 6B 02            [ 1] 1180 	ld	(0x02, sp), a
      00045C 0F 01            [ 1] 1181 	clr	(0x01, sp)
      00045E 13 01            [ 2] 1182 	cpw	x, (0x01, sp)
      000460 2E 12            [ 1] 1183 	jrsge	00105$
                                   1184 ;	./libs/i2c_lib.c: 153: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      000462 90 93            [ 1] 1185 	ldw	y, x
      000464 72 F9 06         [ 2] 1186 	addw	y, (0x06, sp)
      000467 90 F6            [ 1] 1187 	ld	a, (y)
      000469 89               [ 2] 1188 	pushw	x
      00046A CDr04r3B         [ 4] 1189 	call	_i2c_send_byte
      00046D 85               [ 2] 1190 	popw	x
      00046E 4D               [ 1] 1191 	tnz	a
      00046F 26 03            [ 1] 1192 	jrne	00105$
                                   1193 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      000471 5C               [ 1] 1194 	incw	x
      000472 20 E4            [ 2] 1195 	jra	00107$
      000474                       1196 00105$:
                                   1197 ;	./libs/i2c_lib.c: 158: i2c_stop();
      000474 1E 03            [ 2] 1198 	ldw	x, (3, sp)
      000476 1F 06            [ 2] 1199 	ldw	(6, sp), x
      000478 5B 05            [ 2] 1200 	addw	sp, #5
                                   1201 ;	./libs/i2c_lib.c: 159: }
      00047A CCr03rAF         [ 2] 1202 	jp	_i2c_stop
                                   1203 ;	./libs/i2c_lib.c: 161: uint8_t i2c_scan(void) 
                                   1204 ;	-----------------------------------------
                                   1205 ;	 function i2c_scan
                                   1206 ;	-----------------------------------------
      00047D                       1207 _i2c_scan:
      00047D 52 02            [ 2] 1208 	sub	sp, #2
                                   1209 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      00047F A6 01            [ 1] 1210 	ld	a, #0x01
      000481 6B 01            [ 1] 1211 	ld	(0x01, sp), a
      000483                       1212 00105$:
      000483 A1 7F            [ 1] 1213 	cp	a, #0x7f
      000485 24 22            [ 1] 1214 	jrnc	00103$
                                   1215 ;	./libs/i2c_lib.c: 165: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      000487 88               [ 1] 1216 	push	a
      000488 4B 00            [ 1] 1217 	push	#0x00
      00048A CDr03rB4         [ 4] 1218 	call	_i2c_send_address
      00048D 6B 03            [ 1] 1219 	ld	(0x03, sp), a
      00048F 84               [ 1] 1220 	pop	a
      000490 0D 02            [ 1] 1221 	tnz	(0x02, sp)
      000492 27 07            [ 1] 1222 	jreq	00102$
                                   1223 ;	./libs/i2c_lib.c: 167: i2c_stop();//адрес совпал 
      000494 CDr03rAF         [ 4] 1224 	call	_i2c_stop
                                   1225 ;	./libs/i2c_lib.c: 168: return addr;// выход из цикла
      000497 7B 01            [ 1] 1226 	ld	a, (0x01, sp)
      000499 20 12            [ 2] 1227 	jra	00107$
      00049B                       1228 00102$:
                                   1229 ;	./libs/i2c_lib.c: 170: I2C_SR2 -> AF = 0;//очистка флага ошибки
      00049B AE 52 18         [ 2] 1230 	ldw	x, #0x5218
      00049E 88               [ 1] 1231 	push	a
      00049F F6               [ 1] 1232 	ld	a, (x)
      0004A0 A4 FB            [ 1] 1233 	and	a, #0xfb
      0004A2 F7               [ 1] 1234 	ld	(x), a
      0004A3 84               [ 1] 1235 	pop	a
                                   1236 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      0004A4 4C               [ 1] 1237 	inc	a
      0004A5 6B 01            [ 1] 1238 	ld	(0x01, sp), a
      0004A7 20 DA            [ 2] 1239 	jra	00105$
      0004A9                       1240 00103$:
                                   1241 ;	./libs/i2c_lib.c: 172: i2c_stop();//совпадений нет выход из функции
      0004A9 CDr03rAF         [ 4] 1242 	call	_i2c_stop
                                   1243 ;	./libs/i2c_lib.c: 173: return 0;
      0004AC 4F               [ 1] 1244 	clr	a
      0004AD                       1245 00107$:
                                   1246 ;	./libs/i2c_lib.c: 174: }
      0004AD 5B 02            [ 2] 1247 	addw	sp, #2
      0004AF 81               [ 4] 1248 	ret
                                   1249 ;	./libs/i2c_lib.c: 176: void i2c_start_irq(void)
                                   1250 ;	-----------------------------------------
                                   1251 ;	 function i2c_start_irq
                                   1252 ;	-----------------------------------------
      0004B0                       1253 _i2c_start_irq:
                                   1254 ;	./libs/i2c_lib.c: 179: I2C_ITR -> ITEVTEN = 1;//Включение прерываний для обработки сигнала старт
      0004B0 72 12 52 1A      [ 1] 1255 	bset	0x521a, #1
                                   1256 ;	./libs/i2c_lib.c: 180: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      0004B4 72 10 52 11      [ 1] 1257 	bset	0x5211, #0
                                   1258 ;	./libs/i2c_lib.c: 181: while(I2C_ITR -> ITEVTEN);// Ожидание отправки стартового сигнала
      0004B8                       1259 00101$:
      0004B8 C6 52 1A         [ 1] 1260 	ld	a, 0x521a
      0004BB A5 02            [ 1] 1261 	bcp	a, #2
      0004BD 26 F9            [ 1] 1262 	jrne	00101$
                                   1263 ;	./libs/i2c_lib.c: 182: }
      0004BF 81               [ 4] 1264 	ret
                                   1265 ;	./libs/i2c_lib.c: 184: void i2c_stop_irq(void)
                                   1266 ;	-----------------------------------------
                                   1267 ;	 function i2c_stop_irq
                                   1268 ;	-----------------------------------------
      0004C0                       1269 _i2c_stop_irq:
                                   1270 ;	./libs/i2c_lib.c: 186: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      0004C0 72 12 52 11      [ 1] 1271 	bset	0x5211, #1
                                   1272 ;	./libs/i2c_lib.c: 187: }
      0004C4 81               [ 4] 1273 	ret
                                   1274 ;	./libs/ssd1306_lib.c: 3: int get_bit(int data,int bit)
                                   1275 ;	-----------------------------------------
                                   1276 ;	 function get_bit
                                   1277 ;	-----------------------------------------
      0004C5                       1278 _get_bit:
                                   1279 ;	./libs/ssd1306_lib.c: 5: return ((data >> bit) & 1) ? 1 : 0;
      0004C5 7B 04            [ 1] 1280 	ld	a, (0x04, sp)
      0004C7 27 04            [ 1] 1281 	jreq	00113$
      0004C9                       1282 00112$:
      0004C9 57               [ 2] 1283 	sraw	x
      0004CA 4A               [ 1] 1284 	dec	a
      0004CB 26 FC            [ 1] 1285 	jrne	00112$
      0004CD                       1286 00113$:
      0004CD 54               [ 2] 1287 	srlw	x
      0004CE 24 03            [ 1] 1288 	jrnc	00103$
      0004D0 5F               [ 1] 1289 	clrw	x
      0004D1 5C               [ 1] 1290 	incw	x
      0004D2 21                    1291 	.byte 0x21
      0004D3                       1292 00103$:
      0004D3 5F               [ 1] 1293 	clrw	x
      0004D4                       1294 00104$:
                                   1295 ;	./libs/ssd1306_lib.c: 6: }
      0004D4 90 85            [ 2] 1296 	popw	y
      0004D6 5B 02            [ 2] 1297 	addw	sp, #2
      0004D8 90 FC            [ 2] 1298 	jp	(y)
                                   1299 ;	./libs/ssd1306_lib.c: 7: int set_bit(int data,int bit, int value)
                                   1300 ;	-----------------------------------------
                                   1301 ;	 function set_bit
                                   1302 ;	-----------------------------------------
      0004DA                       1303 _set_bit:
      0004DA 52 04            [ 2] 1304 	sub	sp, #4
      0004DC 1F 01            [ 2] 1305 	ldw	(0x01, sp), x
                                   1306 ;	./libs/ssd1306_lib.c: 9: int mask = 1 << bit ;
      0004DE 5F               [ 1] 1307 	clrw	x
      0004DF 5C               [ 1] 1308 	incw	x
      0004E0 1F 03            [ 2] 1309 	ldw	(0x03, sp), x
      0004E2 7B 08            [ 1] 1310 	ld	a, (0x08, sp)
      0004E4 27 07            [ 1] 1311 	jreq	00114$
      0004E6                       1312 00113$:
      0004E6 08 04            [ 1] 1313 	sll	(0x04, sp)
      0004E8 09 03            [ 1] 1314 	rlc	(0x03, sp)
      0004EA 4A               [ 1] 1315 	dec	a
      0004EB 26 F9            [ 1] 1316 	jrne	00113$
      0004ED                       1317 00114$:
                                   1318 ;	./libs/ssd1306_lib.c: 10: switch(value)
      0004ED 1E 09            [ 2] 1319 	ldw	x, (0x09, sp)
      0004EF 5A               [ 2] 1320 	decw	x
      0004F0 26 0B            [ 1] 1321 	jrne	00102$
                                   1322 ;	./libs/ssd1306_lib.c: 13: data |= mask;
      0004F2 7B 02            [ 1] 1323 	ld	a, (0x02, sp)
      0004F4 1A 04            [ 1] 1324 	or	a, (0x04, sp)
      0004F6 97               [ 1] 1325 	ld	xl, a
      0004F7 7B 01            [ 1] 1326 	ld	a, (0x01, sp)
      0004F9 1A 03            [ 1] 1327 	or	a, (0x03, sp)
                                   1328 ;	./libs/ssd1306_lib.c: 14: break;
      0004FB 20 09            [ 2] 1329 	jra	00103$
                                   1330 ;	./libs/ssd1306_lib.c: 16: default:
      0004FD                       1331 00102$:
                                   1332 ;	./libs/ssd1306_lib.c: 17: data &= ~mask;
      0004FD 1E 03            [ 2] 1333 	ldw	x, (0x03, sp)
      0004FF 53               [ 2] 1334 	cplw	x
      000500 9F               [ 1] 1335 	ld	a, xl
      000501 14 02            [ 1] 1336 	and	a, (0x02, sp)
      000503 02               [ 1] 1337 	rlwa	x
      000504 14 01            [ 1] 1338 	and	a, (0x01, sp)
                                   1339 ;	./libs/ssd1306_lib.c: 19: }
      000506                       1340 00103$:
                                   1341 ;	./libs/ssd1306_lib.c: 20: return data;
      000506 95               [ 1] 1342 	ld	xh, a
                                   1343 ;	./libs/ssd1306_lib.c: 21: }
      000507 16 05            [ 2] 1344 	ldw	y, (5, sp)
      000509 5B 0A            [ 2] 1345 	addw	sp, #10
      00050B 90 FC            [ 2] 1346 	jp	(y)
                                   1347 ;	./libs/ssd1306_lib.c: 23: void ssd1306_init(void)
                                   1348 ;	-----------------------------------------
                                   1349 ;	 function ssd1306_init
                                   1350 ;	-----------------------------------------
      00050D                       1351 _ssd1306_init:
      00050D 52 1B            [ 2] 1352 	sub	sp, #27
                                   1353 ;	./libs/ssd1306_lib.c: 25: uint8_t setup_buffer[27] = {COMMAND, DISPLAY_OFF, 
      00050F 96               [ 1] 1354 	ldw	x, sp
      000510 5C               [ 1] 1355 	incw	x
      000511 7F               [ 1] 1356 	clr	(x)
      000512 A6 AE            [ 1] 1357 	ld	a, #0xae
      000514 6B 02            [ 1] 1358 	ld	(0x02, sp), a
      000516 A6 D5            [ 1] 1359 	ld	a, #0xd5
      000518 6B 03            [ 1] 1360 	ld	(0x03, sp), a
      00051A A6 80            [ 1] 1361 	ld	a, #0x80
      00051C 6B 04            [ 1] 1362 	ld	(0x04, sp), a
      00051E A6 A8            [ 1] 1363 	ld	a, #0xa8
      000520 6B 05            [ 1] 1364 	ld	(0x05, sp), a
      000522 A6 1F            [ 1] 1365 	ld	a, #0x1f
      000524 6B 06            [ 1] 1366 	ld	(0x06, sp), a
      000526 A6 D3            [ 1] 1367 	ld	a, #0xd3
      000528 6B 07            [ 1] 1368 	ld	(0x07, sp), a
      00052A 0F 08            [ 1] 1369 	clr	(0x08, sp)
      00052C A6 40            [ 1] 1370 	ld	a, #0x40
      00052E 6B 09            [ 1] 1371 	ld	(0x09, sp), a
      000530 A6 8D            [ 1] 1372 	ld	a, #0x8d
      000532 6B 0A            [ 1] 1373 	ld	(0x0a, sp), a
      000534 A6 14            [ 1] 1374 	ld	a, #0x14
      000536 6B 0B            [ 1] 1375 	ld	(0x0b, sp), a
      000538 A6 DB            [ 1] 1376 	ld	a, #0xdb
      00053A 6B 0C            [ 1] 1377 	ld	(0x0c, sp), a
      00053C A6 40            [ 1] 1378 	ld	a, #0x40
      00053E 6B 0D            [ 1] 1379 	ld	(0x0d, sp), a
      000540 A6 A4            [ 1] 1380 	ld	a, #0xa4
      000542 6B 0E            [ 1] 1381 	ld	(0x0e, sp), a
      000544 A6 A6            [ 1] 1382 	ld	a, #0xa6
      000546 6B 0F            [ 1] 1383 	ld	(0x0f, sp), a
      000548 A6 DA            [ 1] 1384 	ld	a, #0xda
      00054A 6B 10            [ 1] 1385 	ld	(0x10, sp), a
      00054C A6 02            [ 1] 1386 	ld	a, #0x02
      00054E 6B 11            [ 1] 1387 	ld	(0x11, sp), a
      000550 A6 81            [ 1] 1388 	ld	a, #0x81
      000552 6B 12            [ 1] 1389 	ld	(0x12, sp), a
      000554 A6 8F            [ 1] 1390 	ld	a, #0x8f
      000556 6B 13            [ 1] 1391 	ld	(0x13, sp), a
      000558 A6 D9            [ 1] 1392 	ld	a, #0xd9
      00055A 6B 14            [ 1] 1393 	ld	(0x14, sp), a
      00055C A6 F1            [ 1] 1394 	ld	a, #0xf1
      00055E 6B 15            [ 1] 1395 	ld	(0x15, sp), a
      000560 A6 20            [ 1] 1396 	ld	a, #0x20
      000562 6B 16            [ 1] 1397 	ld	(0x16, sp), a
      000564 0F 17            [ 1] 1398 	clr	(0x17, sp)
      000566 A6 A0            [ 1] 1399 	ld	a, #0xa0
      000568 6B 18            [ 1] 1400 	ld	(0x18, sp), a
      00056A A6 C0            [ 1] 1401 	ld	a, #0xc0
      00056C 6B 19            [ 1] 1402 	ld	(0x19, sp), a
      00056E A6 1F            [ 1] 1403 	ld	a, #0x1f
      000570 6B 1A            [ 1] 1404 	ld	(0x1a, sp), a
      000572 A6 AF            [ 1] 1405 	ld	a, #0xaf
      000574 6B 1B            [ 1] 1406 	ld	(0x1b, sp), a
                                   1407 ;	./libs/ssd1306_lib.c: 41: i2c_write(I2C_DISPLAY_ADDR, 27, setup_buffer);
      000576 89               [ 2] 1408 	pushw	x
      000577 4B 1B            [ 1] 1409 	push	#0x1b
      000579 A6 3C            [ 1] 1410 	ld	a, #0x3c
      00057B CDr04r4D         [ 4] 1411 	call	_i2c_write
                                   1412 ;	./libs/ssd1306_lib.c: 43: }
      00057E 5B 1B            [ 2] 1413 	addw	sp, #27
      000580 81               [ 4] 1414 	ret
                                   1415 ;	./libs/ssd1306_lib.c: 45: void ssd1306_set_params_to_write(void)
                                   1416 ;	-----------------------------------------
                                   1417 ;	 function ssd1306_set_params_to_write
                                   1418 ;	-----------------------------------------
      000581                       1419 _ssd1306_set_params_to_write:
      000581 52 07            [ 2] 1420 	sub	sp, #7
                                   1421 ;	./libs/ssd1306_lib.c: 47: uint8_t set_params_buf[7] = {COMMAND,
      000583 96               [ 1] 1422 	ldw	x, sp
      000584 5C               [ 1] 1423 	incw	x
      000585 7F               [ 1] 1424 	clr	(x)
      000586 A6 22            [ 1] 1425 	ld	a, #0x22
      000588 6B 02            [ 1] 1426 	ld	(0x02, sp), a
      00058A 0F 03            [ 1] 1427 	clr	(0x03, sp)
      00058C A6 03            [ 1] 1428 	ld	a, #0x03
      00058E 6B 04            [ 1] 1429 	ld	(0x04, sp), a
      000590 A6 21            [ 1] 1430 	ld	a, #0x21
      000592 6B 05            [ 1] 1431 	ld	(0x05, sp), a
      000594 0F 06            [ 1] 1432 	clr	(0x06, sp)
      000596 A6 7F            [ 1] 1433 	ld	a, #0x7f
      000598 6B 07            [ 1] 1434 	ld	(0x07, sp), a
                                   1435 ;	./libs/ssd1306_lib.c: 51: i2c_write(I2C_DISPLAY_ADDR,7,set_params_buf);
      00059A 89               [ 2] 1436 	pushw	x
      00059B 4B 07            [ 1] 1437 	push	#0x07
      00059D A6 3C            [ 1] 1438 	ld	a, #0x3c
      00059F CDr04r4D         [ 4] 1439 	call	_i2c_write
                                   1440 ;	./libs/ssd1306_lib.c: 52: }
      0005A2 5B 07            [ 2] 1441 	addw	sp, #7
      0005A4 81               [ 4] 1442 	ret
                                   1443 ;	./libs/ssd1306_lib.c: 54: void ssd1306_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1444 ;	-----------------------------------------
                                   1445 ;	 function ssd1306_draw_pixel
                                   1446 ;	-----------------------------------------
      0005A5                       1447 _ssd1306_draw_pixel:
      0005A5 52 08            [ 2] 1448 	sub	sp, #8
      0005A7 1F 07            [ 2] 1449 	ldw	(0x07, sp), x
                                   1450 ;	./libs/ssd1306_lib.c: 56: buffer[x + ((y / 8) * SSD1306_LCDWIDTH)] = set_bit(buffer[x + ((y / 8) * SSD1306_LCDWIDTH)],(y % 8),color);
      0005A9 6B 06            [ 1] 1451 	ld	(0x06, sp), a
      0005AB 0F 05            [ 1] 1452 	clr	(0x05, sp)
      0005AD 7B 0B            [ 1] 1453 	ld	a, (0x0b, sp)
      0005AF 0F 01            [ 1] 1454 	clr	(0x01, sp)
      0005B1 97               [ 1] 1455 	ld	xl, a
      0005B2 02               [ 1] 1456 	rlwa	x
      0005B3 4F               [ 1] 1457 	clr	a
      0005B4 01               [ 1] 1458 	rrwa	x
      0005B5 5D               [ 2] 1459 	tnzw	x
      0005B6 2A 03            [ 1] 1460 	jrpl	00103$
      0005B8 1C 00 07         [ 2] 1461 	addw	x, #0x0007
      0005BB                       1462 00103$:
      0005BB 57               [ 2] 1463 	sraw	x
      0005BC 57               [ 2] 1464 	sraw	x
      0005BD 57               [ 2] 1465 	sraw	x
      0005BE 58               [ 2] 1466 	sllw	x
      0005BF 58               [ 2] 1467 	sllw	x
      0005C0 58               [ 2] 1468 	sllw	x
      0005C1 58               [ 2] 1469 	sllw	x
      0005C2 58               [ 2] 1470 	sllw	x
      0005C3 58               [ 2] 1471 	sllw	x
      0005C4 58               [ 2] 1472 	sllw	x
      0005C5 72 FB 05         [ 2] 1473 	addw	x, (0x05, sp)
      0005C8 72 FB 07         [ 2] 1474 	addw	x, (0x07, sp)
      0005CB 1F 03            [ 2] 1475 	ldw	(0x03, sp), x
      0005CD 90 5F            [ 1] 1476 	clrw	y
      0005CF 61               [ 1] 1477 	exg	a, yl
      0005D0 7B 0C            [ 1] 1478 	ld	a, (0x0c, sp)
      0005D2 61               [ 1] 1479 	exg	a, yl
      0005D3 A4 07            [ 1] 1480 	and	a, #0x07
      0005D5 6B 06            [ 1] 1481 	ld	(0x06, sp), a
      0005D7 0F 05            [ 1] 1482 	clr	(0x05, sp)
      0005D9 1E 03            [ 2] 1483 	ldw	x, (0x03, sp)
      0005DB F6               [ 1] 1484 	ld	a, (x)
      0005DC 5F               [ 1] 1485 	clrw	x
      0005DD 90 89            [ 2] 1486 	pushw	y
      0005DF 16 07            [ 2] 1487 	ldw	y, (0x07, sp)
      0005E1 90 89            [ 2] 1488 	pushw	y
      0005E3 97               [ 1] 1489 	ld	xl, a
      0005E4 CDr04rDA         [ 4] 1490 	call	_set_bit
      0005E7 9F               [ 1] 1491 	ld	a, xl
      0005E8 1E 03            [ 2] 1492 	ldw	x, (0x03, sp)
      0005EA F7               [ 1] 1493 	ld	(x), a
                                   1494 ;	./libs/ssd1306_lib.c: 57: }
      0005EB 1E 09            [ 2] 1495 	ldw	x, (9, sp)
      0005ED 5B 0C            [ 2] 1496 	addw	sp, #12
      0005EF FC               [ 2] 1497 	jp	(x)
                                   1498 ;	./libs/ssd1306_lib.c: 59: void ssd1306_buffer_clean(void)
                                   1499 ;	-----------------------------------------
                                   1500 ;	 function ssd1306_buffer_clean
                                   1501 ;	-----------------------------------------
      0005F0                       1502 _ssd1306_buffer_clean:
                                   1503 ;	./libs/ssd1306_lib.c: 61: memset(main_buffer,0,512);
      0005F0 4B 00            [ 1] 1504 	push	#0x00
      0005F2 4B 02            [ 1] 1505 	push	#0x02
      0005F4 5F               [ 1] 1506 	clrw	x
      0005F5 89               [ 2] 1507 	pushw	x
      0005F6 AEr01r3A         [ 2] 1508 	ldw	x, #(_main_buffer+0)
      0005F9 CDr00r00         [ 4] 1509 	call	_memset
                                   1510 ;	./libs/ssd1306_lib.c: 62: }
      0005FC 81               [ 4] 1511 	ret
                                   1512 ;	./libs/ssd1306_lib.c: 63: void ssd1306_send_buffer(void)
                                   1513 ;	-----------------------------------------
                                   1514 ;	 function ssd1306_send_buffer
                                   1515 ;	-----------------------------------------
      0005FD                       1516 _ssd1306_send_buffer:
      0005FD 52 04            [ 2] 1517 	sub	sp, #4
                                   1518 ;	./libs/ssd1306_lib.c: 65: ssd1306_set_params_to_write();
      0005FF CDr05r81         [ 4] 1519 	call	_ssd1306_set_params_to_write
                                   1520 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      000602 5F               [ 1] 1521 	clrw	x
      000603 1F 03            [ 2] 1522 	ldw	(0x03, sp), x
      000605                       1523 00112$:
      000605 1E 03            [ 2] 1524 	ldw	x, (0x03, sp)
      000607 A3 00 04         [ 2] 1525 	cpw	x, #0x0004
      00060A 2E 43            [ 1] 1526 	jrsge	00114$
                                   1527 ;	./libs/ssd1306_lib.c: 68: if(i2c_send_address(I2C_DISPLAY_ADDR, 0))//Проверка на АСК бит
      00060C 4B 00            [ 1] 1528 	push	#0x00
      00060E A6 3C            [ 1] 1529 	ld	a, #0x3c
      000610 CDr03rB4         [ 4] 1530 	call	_i2c_send_address
      000613 4D               [ 1] 1531 	tnz	a
      000614 27 2F            [ 1] 1532 	jreq	00105$
                                   1533 ;	./libs/ssd1306_lib.c: 70: i2c_send_byte(SET_DISPLAY_START_LINE);
      000616 A6 40            [ 1] 1534 	ld	a, #0x40
      000618 CDr04r3B         [ 4] 1535 	call	_i2c_send_byte
                                   1536 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      00061B 1E 03            [ 2] 1537 	ldw	x, (0x03, sp)
      00061D 58               [ 2] 1538 	sllw	x
      00061E 58               [ 2] 1539 	sllw	x
      00061F 58               [ 2] 1540 	sllw	x
      000620 58               [ 2] 1541 	sllw	x
      000621 58               [ 2] 1542 	sllw	x
      000622 58               [ 2] 1543 	sllw	x
      000623 58               [ 2] 1544 	sllw	x
      000624 1F 01            [ 2] 1545 	ldw	(0x01, sp), x
      000626 5F               [ 1] 1546 	clrw	x
      000627                       1547 00109$:
      000627 A3 00 80         [ 2] 1548 	cpw	x, #0x0080
      00062A 2E 14            [ 1] 1549 	jrsge	00103$
                                   1550 ;	./libs/ssd1306_lib.c: 73: if(i2c_send_byte(main_buffer[i+(128*j)]))//Проверка на АСК бит
      00062C 90 93            [ 1] 1551 	ldw	y, x
      00062E 72 F9 01         [ 2] 1552 	addw	y, (0x01, sp)
      000631 90 D6u01u3A      [ 1] 1553 	ld	a, (_main_buffer+0, y)
      000635 89               [ 2] 1554 	pushw	x
      000636 CDr04r3B         [ 4] 1555 	call	_i2c_send_byte
      000639 85               [ 2] 1556 	popw	x
      00063A 4D               [ 1] 1557 	tnz	a
      00063B 26 03            [ 1] 1558 	jrne	00103$
                                   1559 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      00063D 5C               [ 1] 1560 	incw	x
      00063E 20 E7            [ 2] 1561 	jra	00109$
      000640                       1562 00103$:
                                   1563 ;	./libs/ssd1306_lib.c: 78: i2c_stop();
      000640 CDr03rAF         [ 4] 1564 	call	_i2c_stop
      000643 20 03            [ 2] 1565 	jra	00113$
      000645                       1566 00105$:
                                   1567 ;	./libs/ssd1306_lib.c: 81: i2c_stop();
      000645 CDr03rAF         [ 4] 1568 	call	_i2c_stop
      000648                       1569 00113$:
                                   1570 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      000648 1E 03            [ 2] 1571 	ldw	x, (0x03, sp)
      00064A 5C               [ 1] 1572 	incw	x
      00064B 1F 03            [ 2] 1573 	ldw	(0x03, sp), x
      00064D 20 B6            [ 2] 1574 	jra	00112$
      00064F                       1575 00114$:
                                   1576 ;	./libs/ssd1306_lib.c: 83: }
      00064F 5B 04            [ 2] 1577 	addw	sp, #4
      000651 81               [ 4] 1578 	ret
                                   1579 ;	./libs/ssd1306_lib.c: 85: void ssd1306_buffer_write(int x, int y, const uint8_t *data)
                                   1580 ;	-----------------------------------------
                                   1581 ;	 function ssd1306_buffer_write
                                   1582 ;	-----------------------------------------
      000652                       1583 _ssd1306_buffer_write:
      000652 52 0D            [ 2] 1584 	sub	sp, #13
      000654 1F 08            [ 2] 1585 	ldw	(0x08, sp), x
                                   1586 ;	./libs/ssd1306_lib.c: 87: for (int height = 0; height < 8; height++)
      000656 5F               [ 1] 1587 	clrw	x
      000657 1F 0A            [ 2] 1588 	ldw	(0x0a, sp), x
      000659                       1589 00109$:
      000659 1E 0A            [ 2] 1590 	ldw	x, (0x0a, sp)
      00065B A3 00 08         [ 2] 1591 	cpw	x, #0x0008
      00065E 2F 03            [ 1] 1592 	jrslt	00150$
      000660 CCr06rE2         [ 2] 1593 	jp	00111$
      000663                       1594 00150$:
                                   1595 ;	./libs/ssd1306_lib.c: 89: for (int width = 0; width < 8; width++)
      000663 1E 12            [ 2] 1596 	ldw	x, (0x12, sp)
      000665 72 FB 0A         [ 2] 1597 	addw	x, (0x0a, sp)
      000668 1F 05            [ 2] 1598 	ldw	(0x05, sp), x
      00066A 5F               [ 1] 1599 	clrw	x
      00066B 1F 0C            [ 2] 1600 	ldw	(0x0c, sp), x
      00066D                       1601 00106$:
      00066D 1E 0C            [ 2] 1602 	ldw	x, (0x0c, sp)
      00066F A3 00 08         [ 2] 1603 	cpw	x, #0x0008
      000672 2E 66            [ 1] 1604 	jrsge	00110$
                                   1605 ;	./libs/ssd1306_lib.c: 90: if(data[height + width / 8] & (128 >> (width & 7)))
      000674 1E 0A            [ 2] 1606 	ldw	x, (0x0a, sp)
      000676 72 FB 12         [ 2] 1607 	addw	x, (0x12, sp)
      000679 F6               [ 1] 1608 	ld	a, (x)
      00067A 6B 07            [ 1] 1609 	ld	(0x07, sp), a
      00067C 7B 0D            [ 1] 1610 	ld	a, (0x0d, sp)
      00067E A4 07            [ 1] 1611 	and	a, #0x07
      000680 AE 00 80         [ 2] 1612 	ldw	x, #0x0080
      000683 4D               [ 1] 1613 	tnz	a
      000684 27 04            [ 1] 1614 	jreq	00153$
      000686                       1615 00152$:
      000686 57               [ 2] 1616 	sraw	x
      000687 4A               [ 1] 1617 	dec	a
      000688 26 FC            [ 1] 1618 	jrne	00152$
      00068A                       1619 00153$:
      00068A 1F 01            [ 2] 1620 	ldw	(0x01, sp), x
      00068C 7B 07            [ 1] 1621 	ld	a, (0x07, sp)
      00068E 14 02            [ 1] 1622 	and	a, (0x02, sp)
      000690 6B 04            [ 1] 1623 	ld	(0x04, sp), a
      000692 0F 03            [ 1] 1624 	clr	(0x03, sp)
      000694 1E 03            [ 2] 1625 	ldw	x, (0x03, sp)
      000696 27 3B            [ 1] 1626 	jreq	00107$
                                   1627 ;	./libs/ssd1306_lib.c: 91: ssd1306_draw_pixel(main_buffer, x + width, y + height, get_bit(data[height], 7 - (width % 8)));
      000698 4B 08            [ 1] 1628 	push	#0x08
      00069A 4B 00            [ 1] 1629 	push	#0x00
      00069C 1E 0E            [ 2] 1630 	ldw	x, (0x0e, sp)
      00069E CDr00r00         [ 4] 1631 	call	__modsint
      0006A1 1F 03            [ 2] 1632 	ldw	(0x03, sp), x
      0006A3 90 AE 00 07      [ 2] 1633 	ldw	y, #0x0007
      0006A7 72 F2 03         [ 2] 1634 	subw	y, (0x03, sp)
      0006AA 1E 05            [ 2] 1635 	ldw	x, (0x05, sp)
      0006AC F6               [ 1] 1636 	ld	a, (x)
      0006AD 5F               [ 1] 1637 	clrw	x
      0006AE 90 89            [ 2] 1638 	pushw	y
      0006B0 97               [ 1] 1639 	ld	xl, a
      0006B1 CDr04rC5         [ 4] 1640 	call	_get_bit
      0006B4 7B 11            [ 1] 1641 	ld	a, (0x11, sp)
      0006B6 6B 07            [ 1] 1642 	ld	(0x07, sp), a
      0006B8 7B 0B            [ 1] 1643 	ld	a, (0x0b, sp)
      0006BA 1B 07            [ 1] 1644 	add	a, (0x07, sp)
      0006BC 95               [ 1] 1645 	ld	xh, a
      0006BD 7B 09            [ 1] 1646 	ld	a, (0x09, sp)
      0006BF 6B 07            [ 1] 1647 	ld	(0x07, sp), a
      0006C1 7B 0D            [ 1] 1648 	ld	a, (0x0d, sp)
      0006C3 1B 07            [ 1] 1649 	add	a, (0x07, sp)
      0006C5 6B 07            [ 1] 1650 	ld	(0x07, sp), a
      0006C7 9F               [ 1] 1651 	ld	a, xl
      0006C8 88               [ 1] 1652 	push	a
      0006C9 9E               [ 1] 1653 	ld	a, xh
      0006CA 88               [ 1] 1654 	push	a
      0006CB 7B 09            [ 1] 1655 	ld	a, (0x09, sp)
      0006CD AEr01r3A         [ 2] 1656 	ldw	x, #(_main_buffer+0)
      0006D0 CDr05rA5         [ 4] 1657 	call	_ssd1306_draw_pixel
      0006D3                       1658 00107$:
                                   1659 ;	./libs/ssd1306_lib.c: 89: for (int width = 0; width < 8; width++)
      0006D3 1E 0C            [ 2] 1660 	ldw	x, (0x0c, sp)
      0006D5 5C               [ 1] 1661 	incw	x
      0006D6 1F 0C            [ 2] 1662 	ldw	(0x0c, sp), x
      0006D8 20 93            [ 2] 1663 	jra	00106$
      0006DA                       1664 00110$:
                                   1665 ;	./libs/ssd1306_lib.c: 87: for (int height = 0; height < 8; height++)
      0006DA 1E 0A            [ 2] 1666 	ldw	x, (0x0a, sp)
      0006DC 5C               [ 1] 1667 	incw	x
      0006DD 1F 0A            [ 2] 1668 	ldw	(0x0a, sp), x
      0006DF CCr06r59         [ 2] 1669 	jp	00109$
      0006E2                       1670 00111$:
                                   1671 ;	./libs/ssd1306_lib.c: 93: }
      0006E2 1E 0E            [ 2] 1672 	ldw	x, (14, sp)
      0006E4 5B 13            [ 2] 1673 	addw	sp, #19
      0006E6 FC               [ 2] 1674 	jp	(x)
                                   1675 ;	./libs/ssd1306_lib.c: 95: void ssd1306_clean(void)
                                   1676 ;	-----------------------------------------
                                   1677 ;	 function ssd1306_clean
                                   1678 ;	-----------------------------------------
      0006E7                       1679 _ssd1306_clean:
                                   1680 ;	./libs/ssd1306_lib.c: 97: ssd1306_buffer_clean();
      0006E7 CDr05rF0         [ 4] 1681 	call	_ssd1306_buffer_clean
                                   1682 ;	./libs/ssd1306_lib.c: 98: ssd1306_send_buffer();
                                   1683 ;	./libs/ssd1306_lib.c: 99: }
      0006EA CCr05rFD         [ 2] 1684 	jp	_ssd1306_send_buffer
                                   1685 ;	./libs/menu_lib.c: 3: void menu_border(void)
                                   1686 ;	-----------------------------------------
                                   1687 ;	 function menu_border
                                   1688 ;	-----------------------------------------
      0006ED                       1689 _menu_border:
      0006ED 52 04            [ 2] 1690 	sub	sp, #4
                                   1691 ;	./libs/menu_lib.c: 6: ssd1306_buffer_write(0,0,ttf_corner_left_up);
      0006EF 4BrFA            [ 1] 1692 	push	#<(_ttf_corner_left_up+0)
      0006F1 4Bs00            [ 1] 1693 	push	#((_ttf_corner_left_up+0) >> 8)
      0006F3 5F               [ 1] 1694 	clrw	x
      0006F4 89               [ 2] 1695 	pushw	x
      0006F5 5F               [ 1] 1696 	clrw	x
      0006F6 CDr06r52         [ 4] 1697 	call	_ssd1306_buffer_write
                                   1698 ;	./libs/menu_lib.c: 7: for(int x = 1;x<15;x++)
      0006F9 5F               [ 1] 1699 	clrw	x
      0006FA 5C               [ 1] 1700 	incw	x
      0006FB 1F 03            [ 2] 1701 	ldw	(0x03, sp), x
      0006FD                       1702 00104$:
      0006FD 1E 03            [ 2] 1703 	ldw	x, (0x03, sp)
      0006FF A3 00 0F         [ 2] 1704 	cpw	x, #0x000f
      000702 2E 19            [ 1] 1705 	jrsge	00101$
                                   1706 ;	./libs/menu_lib.c: 8: ssd1306_buffer_write(x*8,0,ttf_line_up);
      000704 1E 03            [ 2] 1707 	ldw	x, (0x03, sp)
      000706 58               [ 2] 1708 	sllw	x
      000707 58               [ 2] 1709 	sllw	x
      000708 58               [ 2] 1710 	sllw	x
      000709 1F 01            [ 2] 1711 	ldw	(0x01, sp), x
      00070B 4Br2A            [ 1] 1712 	push	#<(_ttf_line_up+0)
      00070D 4Bs01            [ 1] 1713 	push	#((_ttf_line_up+0) >> 8)
      00070F 5F               [ 1] 1714 	clrw	x
      000710 89               [ 2] 1715 	pushw	x
      000711 1E 05            [ 2] 1716 	ldw	x, (0x05, sp)
      000713 CDr06r52         [ 4] 1717 	call	_ssd1306_buffer_write
                                   1718 ;	./libs/menu_lib.c: 7: for(int x = 1;x<15;x++)
      000716 1E 03            [ 2] 1719 	ldw	x, (0x03, sp)
      000718 5C               [ 1] 1720 	incw	x
      000719 1F 03            [ 2] 1721 	ldw	(0x03, sp), x
      00071B 20 E0            [ 2] 1722 	jra	00104$
      00071D                       1723 00101$:
                                   1724 ;	./libs/menu_lib.c: 9: ssd1306_buffer_write(120,0,ttf_corner_right_up);
      00071D 4Br02            [ 1] 1725 	push	#<(_ttf_corner_right_up+0)
      00071F 4Bs01            [ 1] 1726 	push	#((_ttf_corner_right_up+0) >> 8)
      000721 5F               [ 1] 1727 	clrw	x
      000722 89               [ 2] 1728 	pushw	x
      000723 AE 00 78         [ 2] 1729 	ldw	x, #0x0078
      000726 CDr06r52         [ 4] 1730 	call	_ssd1306_buffer_write
                                   1731 ;	./libs/menu_lib.c: 11: ssd1306_buffer_write(0,8,ttf_line_left);
      000729 4Br22            [ 1] 1732 	push	#<(_ttf_line_left+0)
      00072B 4Bs01            [ 1] 1733 	push	#((_ttf_line_left+0) >> 8)
      00072D 4B 08            [ 1] 1734 	push	#0x08
      00072F 4B 00            [ 1] 1735 	push	#0x00
      000731 5F               [ 1] 1736 	clrw	x
      000732 CDr06r52         [ 4] 1737 	call	_ssd1306_buffer_write
                                   1738 ;	./libs/menu_lib.c: 12: ssd1306_buffer_write(0,16,ttf_line_left);
      000735 4Br22            [ 1] 1739 	push	#<(_ttf_line_left+0)
      000737 4Bs01            [ 1] 1740 	push	#((_ttf_line_left+0) >> 8)
      000739 4B 10            [ 1] 1741 	push	#0x10
      00073B 4B 00            [ 1] 1742 	push	#0x00
      00073D 5F               [ 1] 1743 	clrw	x
      00073E CDr06r52         [ 4] 1744 	call	_ssd1306_buffer_write
                                   1745 ;	./libs/menu_lib.c: 14: ssd1306_buffer_write(120,8,ttf_line_right);
      000741 4Br1A            [ 1] 1746 	push	#<(_ttf_line_right+0)
      000743 4Bs01            [ 1] 1747 	push	#((_ttf_line_right+0) >> 8)
      000745 4B 08            [ 1] 1748 	push	#0x08
      000747 4B 00            [ 1] 1749 	push	#0x00
      000749 AE 00 78         [ 2] 1750 	ldw	x, #0x0078
      00074C CDr06r52         [ 4] 1751 	call	_ssd1306_buffer_write
                                   1752 ;	./libs/menu_lib.c: 15: ssd1306_buffer_write(120,16,ttf_line_right);
      00074F 4Br1A            [ 1] 1753 	push	#<(_ttf_line_right+0)
      000751 4Bs01            [ 1] 1754 	push	#((_ttf_line_right+0) >> 8)
      000753 4B 10            [ 1] 1755 	push	#0x10
      000755 4B 00            [ 1] 1756 	push	#0x00
      000757 AE 00 78         [ 2] 1757 	ldw	x, #0x0078
      00075A CDr06r52         [ 4] 1758 	call	_ssd1306_buffer_write
                                   1759 ;	./libs/menu_lib.c: 17: ssd1306_buffer_write(0,24,ttf_corner_left_down);
      00075D 4Br0A            [ 1] 1760 	push	#<(_ttf_corner_left_down+0)
      00075F 4Bs01            [ 1] 1761 	push	#((_ttf_corner_left_down+0) >> 8)
      000761 4B 18            [ 1] 1762 	push	#0x18
      000763 4B 00            [ 1] 1763 	push	#0x00
      000765 5F               [ 1] 1764 	clrw	x
      000766 CDr06r52         [ 4] 1765 	call	_ssd1306_buffer_write
                                   1766 ;	./libs/menu_lib.c: 18: for(int x = 1;x<15;x++)
      000769 5F               [ 1] 1767 	clrw	x
      00076A 5C               [ 1] 1768 	incw	x
      00076B                       1769 00107$:
      00076B A3 00 0F         [ 2] 1770 	cpw	x, #0x000f
      00076E 2E 19            [ 1] 1771 	jrsge	00102$
                                   1772 ;	./libs/menu_lib.c: 19: ssd1306_buffer_write(x*8,24,ttf_line_down);
      000770 90 93            [ 1] 1773 	ldw	y, x
      000772 90 58            [ 2] 1774 	sllw	y
      000774 90 58            [ 2] 1775 	sllw	y
      000776 90 58            [ 2] 1776 	sllw	y
      000778 89               [ 2] 1777 	pushw	x
      000779 4Br32            [ 1] 1778 	push	#<(_ttf_line_down+0)
      00077B 4Bs01            [ 1] 1779 	push	#((_ttf_line_down+0) >> 8)
      00077D 4B 18            [ 1] 1780 	push	#0x18
      00077F 4B 00            [ 1] 1781 	push	#0x00
      000781 93               [ 1] 1782 	ldw	x, y
      000782 CDr06r52         [ 4] 1783 	call	_ssd1306_buffer_write
      000785 85               [ 2] 1784 	popw	x
                                   1785 ;	./libs/menu_lib.c: 18: for(int x = 1;x<15;x++)
      000786 5C               [ 1] 1786 	incw	x
      000787 20 E2            [ 2] 1787 	jra	00107$
      000789                       1788 00102$:
                                   1789 ;	./libs/menu_lib.c: 20: ssd1306_buffer_write(120,24,ttf_corner_right_down);
      000789 4Br12            [ 1] 1790 	push	#<(_ttf_corner_right_down+0)
      00078B 4Bs01            [ 1] 1791 	push	#((_ttf_corner_right_down+0) >> 8)
      00078D 4B 18            [ 1] 1792 	push	#0x18
      00078F 4B 00            [ 1] 1793 	push	#0x00
      000791 AE 00 78         [ 2] 1794 	ldw	x, #0x0078
      000794 CDr06r52         [ 4] 1795 	call	_ssd1306_buffer_write
                                   1796 ;	./libs/menu_lib.c: 21: }
      000797 5B 04            [ 2] 1797 	addw	sp, #4
      000799 81               [ 4] 1798 	ret
                                   1799 ;	./libs/menu_lib.c: 23: void menu_border_paragraph(uint8_t number_of_letters)
                                   1800 ;	-----------------------------------------
                                   1801 ;	 function menu_border_paragraph
                                   1802 ;	-----------------------------------------
      00079A                       1803 _menu_border_paragraph:
      00079A 52 07            [ 2] 1804 	sub	sp, #7
      00079C 6B 07            [ 1] 1805 	ld	(0x07, sp), a
                                   1806 ;	./libs/menu_lib.c: 26: ssd1306_buffer_write(6,8,ttf_corner_left_up);
      00079E 4BrFA            [ 1] 1807 	push	#<(_ttf_corner_left_up+0)
      0007A0 4Bs00            [ 1] 1808 	push	#((_ttf_corner_left_up+0) >> 8)
      0007A2 4B 08            [ 1] 1809 	push	#0x08
      0007A4 4B 00            [ 1] 1810 	push	#0x00
      0007A6 AE 00 06         [ 2] 1811 	ldw	x, #0x0006
      0007A9 CDr06r52         [ 4] 1812 	call	_ssd1306_buffer_write
                                   1813 ;	./libs/menu_lib.c: 27: ssd1306_buffer_write(6,16,ttf_corner_left_down);
      0007AC 4Br0A            [ 1] 1814 	push	#<(_ttf_corner_left_down+0)
      0007AE 4Bs01            [ 1] 1815 	push	#((_ttf_corner_left_down+0) >> 8)
      0007B0 4B 10            [ 1] 1816 	push	#0x10
      0007B2 4B 00            [ 1] 1817 	push	#0x00
      0007B4 AE 00 06         [ 2] 1818 	ldw	x, #0x0006
      0007B7 CDr06r52         [ 4] 1819 	call	_ssd1306_buffer_write
                                   1820 ;	./libs/menu_lib.c: 28: for(int x = 1;x<number_of_letters+1;x++)
      0007BA 5F               [ 1] 1821 	clrw	x
      0007BB 5C               [ 1] 1822 	incw	x
      0007BC 1F 05            [ 2] 1823 	ldw	(0x05, sp), x
      0007BE                       1824 00104$:
      0007BE 90 5F            [ 1] 1825 	clrw	y
      0007C0 7B 07            [ 1] 1826 	ld	a, (0x07, sp)
      0007C2 90 97            [ 1] 1827 	ld	yl, a
      0007C4 93               [ 1] 1828 	ldw	x, y
      0007C5 5C               [ 1] 1829 	incw	x
      0007C6 1F 01            [ 2] 1830 	ldw	(0x01, sp), x
      0007C8 1E 05            [ 2] 1831 	ldw	x, (0x05, sp)
      0007CA 13 01            [ 2] 1832 	cpw	x, (0x01, sp)
      0007CC 2E 20            [ 1] 1833 	jrsge	00101$
                                   1834 ;	./libs/menu_lib.c: 29: ssd1306_buffer_write(6+x*8,8,ttf_line_up);
      0007CE 1E 05            [ 2] 1835 	ldw	x, (0x05, sp)
      0007D0 58               [ 2] 1836 	sllw	x
      0007D1 58               [ 2] 1837 	sllw	x
      0007D2 58               [ 2] 1838 	sllw	x
      0007D3 1F 01            [ 2] 1839 	ldw	(0x01, sp), x
      0007D5 1C 00 06         [ 2] 1840 	addw	x, #0x0006
      0007D8 1F 03            [ 2] 1841 	ldw	(0x03, sp), x
      0007DA 4Br2A            [ 1] 1842 	push	#<(_ttf_line_up+0)
      0007DC 4Bs01            [ 1] 1843 	push	#((_ttf_line_up+0) >> 8)
      0007DE 4B 08            [ 1] 1844 	push	#0x08
      0007E0 4B 00            [ 1] 1845 	push	#0x00
      0007E2 1E 07            [ 2] 1846 	ldw	x, (0x07, sp)
      0007E4 CDr06r52         [ 4] 1847 	call	_ssd1306_buffer_write
                                   1848 ;	./libs/menu_lib.c: 28: for(int x = 1;x<number_of_letters+1;x++)
      0007E7 1E 05            [ 2] 1849 	ldw	x, (0x05, sp)
      0007E9 5C               [ 1] 1850 	incw	x
      0007EA 1F 05            [ 2] 1851 	ldw	(0x05, sp), x
      0007EC 20 D0            [ 2] 1852 	jra	00104$
      0007EE                       1853 00101$:
                                   1854 ;	./libs/menu_lib.c: 30: ssd1306_buffer_write(6+number_of_letters*8,8,ttf_corner_right_up);
      0007EE 93               [ 1] 1855 	ldw	x, y
      0007EF 58               [ 2] 1856 	sllw	x
      0007F0 58               [ 2] 1857 	sllw	x
      0007F1 58               [ 2] 1858 	sllw	x
      0007F2 9F               [ 1] 1859 	ld	a, xl
      0007F3 AB 06            [ 1] 1860 	add	a, #0x06
      0007F5 6B 04            [ 1] 1861 	ld	(0x04, sp), a
      0007F7 9E               [ 1] 1862 	ld	a, xh
      0007F8 A9 00            [ 1] 1863 	adc	a, #0x00
      0007FA 6B 03            [ 1] 1864 	ld	(0x03, sp), a
      0007FC 89               [ 2] 1865 	pushw	x
      0007FD 4Br02            [ 1] 1866 	push	#<(_ttf_corner_right_up+0)
      0007FF 4Bs01            [ 1] 1867 	push	#((_ttf_corner_right_up+0) >> 8)
      000801 4B 08            [ 1] 1868 	push	#0x08
      000803 4B 00            [ 1] 1869 	push	#0x00
      000805 1E 09            [ 2] 1870 	ldw	x, (0x09, sp)
      000807 CDr06r52         [ 4] 1871 	call	_ssd1306_buffer_write
      00080A 85               [ 2] 1872 	popw	x
                                   1873 ;	./libs/menu_lib.c: 31: ssd1306_buffer_write(12+number_of_letters*8,0,ttf_line_left);
      00080B 1C 00 0C         [ 2] 1874 	addw	x, #0x000c
      00080E 1F 05            [ 2] 1875 	ldw	(0x05, sp), x
      000810 4Br22            [ 1] 1876 	push	#<(_ttf_line_left+0)
      000812 4Bs01            [ 1] 1877 	push	#((_ttf_line_left+0) >> 8)
      000814 5F               [ 1] 1878 	clrw	x
      000815 89               [ 2] 1879 	pushw	x
      000816 1E 09            [ 2] 1880 	ldw	x, (0x09, sp)
      000818 CDr06r52         [ 4] 1881 	call	_ssd1306_buffer_write
                                   1882 ;	./libs/menu_lib.c: 34: ssd1306_buffer_write(6,16,ttf_corner_left_down);
      00081B 4Br0A            [ 1] 1883 	push	#<(_ttf_corner_left_down+0)
      00081D 4Bs01            [ 1] 1884 	push	#((_ttf_corner_left_down+0) >> 8)
      00081F 4B 10            [ 1] 1885 	push	#0x10
      000821 4B 00            [ 1] 1886 	push	#0x00
      000823 AE 00 06         [ 2] 1887 	ldw	x, #0x0006
      000826 CDr06r52         [ 4] 1888 	call	_ssd1306_buffer_write
                                   1889 ;	./libs/menu_lib.c: 35: for(int x = 1;x<number_of_letters+1;x++)
      000829 5F               [ 1] 1890 	clrw	x
      00082A 5C               [ 1] 1891 	incw	x
      00082B                       1892 00107$:
      00082B 13 01            [ 2] 1893 	cpw	x, (0x01, sp)
      00082D 2E 1D            [ 1] 1894 	jrsge	00102$
                                   1895 ;	./libs/menu_lib.c: 36: ssd1306_buffer_write(6+x*8,16,ttf_line_down);
      00082F 90 93            [ 1] 1896 	ldw	y, x
      000831 90 58            [ 2] 1897 	sllw	y
      000833 90 58            [ 2] 1898 	sllw	y
      000835 90 58            [ 2] 1899 	sllw	y
      000837 72 A9 00 06      [ 2] 1900 	addw	y, #0x0006
      00083B 89               [ 2] 1901 	pushw	x
      00083C 4Br32            [ 1] 1902 	push	#<(_ttf_line_down+0)
      00083E 4Bs01            [ 1] 1903 	push	#((_ttf_line_down+0) >> 8)
      000840 4B 10            [ 1] 1904 	push	#0x10
      000842 4B 00            [ 1] 1905 	push	#0x00
      000844 93               [ 1] 1906 	ldw	x, y
      000845 CDr06r52         [ 4] 1907 	call	_ssd1306_buffer_write
      000848 85               [ 2] 1908 	popw	x
                                   1909 ;	./libs/menu_lib.c: 35: for(int x = 1;x<number_of_letters+1;x++)
      000849 5C               [ 1] 1910 	incw	x
      00084A 20 DF            [ 2] 1911 	jra	00107$
      00084C                       1912 00102$:
                                   1913 ;	./libs/menu_lib.c: 37: ssd1306_buffer_write(6+number_of_letters*8,16,ttf_corner_right_down);
      00084C 4Br12            [ 1] 1914 	push	#<(_ttf_corner_right_down+0)
      00084E 4Bs01            [ 1] 1915 	push	#((_ttf_corner_right_down+0) >> 8)
      000850 4B 10            [ 1] 1916 	push	#0x10
      000852 4B 00            [ 1] 1917 	push	#0x00
      000854 1E 07            [ 2] 1918 	ldw	x, (0x07, sp)
      000856 CDr06r52         [ 4] 1919 	call	_ssd1306_buffer_write
                                   1920 ;	./libs/menu_lib.c: 38: ssd1306_buffer_write(12+number_of_letters*8,24,ttf_line_left);
      000859 4Br22            [ 1] 1921 	push	#<(_ttf_line_left+0)
      00085B 4Bs01            [ 1] 1922 	push	#((_ttf_line_left+0) >> 8)
      00085D 4B 18            [ 1] 1923 	push	#0x18
      00085F 4B 00            [ 1] 1924 	push	#0x00
      000861 1E 09            [ 2] 1925 	ldw	x, (0x09, sp)
      000863 CDr06r52         [ 4] 1926 	call	_ssd1306_buffer_write
                                   1927 ;	./libs/menu_lib.c: 40: }
      000866 5B 07            [ 2] 1928 	addw	sp, #7
      000868 81               [ 4] 1929 	ret
                                   1930 ;	./libs/menu_lib.c: 42: void menu_border_item(uint8_t number_of_letters)
                                   1931 ;	-----------------------------------------
                                   1932 ;	 function menu_border_item
                                   1933 ;	-----------------------------------------
      000869                       1934 _menu_border_item:
      000869 52 06            [ 2] 1935 	sub	sp, #6
                                   1936 ;	./libs/menu_lib.c: 45: ssd1306_buffer_write(12+number_of_letters*8,7,ttf_corner_left_down);
      00086B 6B 02            [ 1] 1937 	ld	(0x02, sp), a
      00086D 0F 01            [ 1] 1938 	clr	(0x01, sp)
      00086F 1E 01            [ 2] 1939 	ldw	x, (0x01, sp)
      000871 58               [ 2] 1940 	sllw	x
      000872 58               [ 2] 1941 	sllw	x
      000873 58               [ 2] 1942 	sllw	x
      000874 1C 00 0C         [ 2] 1943 	addw	x, #0x000c
      000877 1F 03            [ 2] 1944 	ldw	(0x03, sp), x
      000879 4Br0A            [ 1] 1945 	push	#<(_ttf_corner_left_down+0)
      00087B 4Bs01            [ 1] 1946 	push	#((_ttf_corner_left_down+0) >> 8)
      00087D 4B 07            [ 1] 1947 	push	#0x07
      00087F 4B 00            [ 1] 1948 	push	#0x00
      000881 1E 07            [ 2] 1949 	ldw	x, (0x07, sp)
      000883 CDr06r52         [ 4] 1950 	call	_ssd1306_buffer_write
                                   1951 ;	./libs/menu_lib.c: 46: for(int x = 1;x<14-number_of_letters;x++)
      000886 A6 0E            [ 1] 1952 	ld	a, #0x0e
      000888 10 02            [ 1] 1953 	sub	a, (0x02, sp)
      00088A 6B 06            [ 1] 1954 	ld	(0x06, sp), a
      00088C 4F               [ 1] 1955 	clr	a
      00088D 12 01            [ 1] 1956 	sbc	a, (0x01, sp)
      00088F 6B 05            [ 1] 1957 	ld	(0x05, sp), a
      000891 5F               [ 1] 1958 	clrw	x
      000892 5C               [ 1] 1959 	incw	x
      000893                       1960 00103$:
      000893 13 05            [ 2] 1961 	cpw	x, (0x05, sp)
      000895 2E 1C            [ 1] 1962 	jrsge	00101$
                                   1963 ;	./libs/menu_lib.c: 47: ssd1306_buffer_write(12+number_of_letters*8+x*8,7,ttf_line_down);
      000897 90 93            [ 1] 1964 	ldw	y, x
      000899 90 58            [ 2] 1965 	sllw	y
      00089B 90 58            [ 2] 1966 	sllw	y
      00089D 90 58            [ 2] 1967 	sllw	y
      00089F 72 F9 03         [ 2] 1968 	addw	y, (0x03, sp)
      0008A2 89               [ 2] 1969 	pushw	x
      0008A3 4Br32            [ 1] 1970 	push	#<(_ttf_line_down+0)
      0008A5 4Bs01            [ 1] 1971 	push	#((_ttf_line_down+0) >> 8)
      0008A7 4B 07            [ 1] 1972 	push	#0x07
      0008A9 4B 00            [ 1] 1973 	push	#0x00
      0008AB 93               [ 1] 1974 	ldw	x, y
      0008AC CDr06r52         [ 4] 1975 	call	_ssd1306_buffer_write
      0008AF 85               [ 2] 1976 	popw	x
                                   1977 ;	./libs/menu_lib.c: 46: for(int x = 1;x<14-number_of_letters;x++)
      0008B0 5C               [ 1] 1978 	incw	x
      0008B1 20 E0            [ 2] 1979 	jra	00103$
      0008B3                       1980 00101$:
                                   1981 ;	./libs/menu_lib.c: 48: ssd1306_buffer_write(120,7,ttf_corner_right_down);
      0008B3 4Br12            [ 1] 1982 	push	#<(_ttf_corner_right_down+0)
      0008B5 4Bs01            [ 1] 1983 	push	#((_ttf_corner_right_down+0) >> 8)
      0008B7 4B 07            [ 1] 1984 	push	#0x07
      0008B9 4B 00            [ 1] 1985 	push	#0x00
      0008BB AE 00 78         [ 2] 1986 	ldw	x, #0x0078
      0008BE CDr06r52         [ 4] 1987 	call	_ssd1306_buffer_write
                                   1988 ;	./libs/menu_lib.c: 51: ssd1306_buffer_write(97,15,ttf_line_left);
      0008C1 4Br22            [ 1] 1989 	push	#<(_ttf_line_left+0)
      0008C3 4Bs01            [ 1] 1990 	push	#((_ttf_line_left+0) >> 8)
      0008C5 4B 0F            [ 1] 1991 	push	#0x0f
      0008C7 4B 00            [ 1] 1992 	push	#0x00
      0008C9 AE 00 61         [ 2] 1993 	ldw	x, #0x0061
      0008CC CDr06r52         [ 4] 1994 	call	_ssd1306_buffer_write
                                   1995 ;	./libs/menu_lib.c: 52: ssd1306_buffer_write(97,17,ttf_corner_left_down);
      0008CF 4Br0A            [ 1] 1996 	push	#<(_ttf_corner_left_down+0)
      0008D1 4Bs01            [ 1] 1997 	push	#((_ttf_corner_left_down+0) >> 8)
      0008D3 4B 11            [ 1] 1998 	push	#0x11
      0008D5 4B 00            [ 1] 1999 	push	#0x00
      0008D7 AE 00 61         [ 2] 2000 	ldw	x, #0x0061
      0008DA CDr06r52         [ 4] 2001 	call	_ssd1306_buffer_write
                                   2002 ;	./libs/menu_lib.c: 53: ssd1306_buffer_write(104,17,ttf_line_down);
      0008DD 4Br32            [ 1] 2003 	push	#<(_ttf_line_down+0)
      0008DF 4Bs01            [ 1] 2004 	push	#((_ttf_line_down+0) >> 8)
      0008E1 4B 11            [ 1] 2005 	push	#0x11
      0008E3 4B 00            [ 1] 2006 	push	#0x00
      0008E5 AE 00 68         [ 2] 2007 	ldw	x, #0x0068
      0008E8 CDr06r52         [ 4] 2008 	call	_ssd1306_buffer_write
                                   2009 ;	./libs/menu_lib.c: 54: ssd1306_buffer_write(112,17,ttf_line_down);
      0008EB 4Br32            [ 1] 2010 	push	#<(_ttf_line_down+0)
      0008ED 4Bs01            [ 1] 2011 	push	#((_ttf_line_down+0) >> 8)
      0008EF 4B 11            [ 1] 2012 	push	#0x11
      0008F1 4B 00            [ 1] 2013 	push	#0x00
      0008F3 AE 00 70         [ 2] 2014 	ldw	x, #0x0070
      0008F6 CDr06r52         [ 4] 2015 	call	_ssd1306_buffer_write
                                   2016 ;	./libs/menu_lib.c: 55: ssd1306_buffer_write(120,17,ttf_line_down);
      0008F9 4Br32            [ 1] 2017 	push	#<(_ttf_line_down+0)
      0008FB 4Bs01            [ 1] 2018 	push	#((_ttf_line_down+0) >> 8)
      0008FD 4B 11            [ 1] 2019 	push	#0x11
      0008FF 4B 00            [ 1] 2020 	push	#0x00
      000901 AE 00 78         [ 2] 2021 	ldw	x, #0x0078
      000904 CDr06r52         [ 4] 2022 	call	_ssd1306_buffer_write
                                   2023 ;	./libs/menu_lib.c: 58: }
      000907 5B 06            [ 2] 2024 	addw	sp, #6
      000909 81               [ 4] 2025 	ret
                                   2026 ;	./libs/menu_lib.c: 60: void menu_set_params_value(uint8_t number)
                                   2027 ;	-----------------------------------------
                                   2028 ;	 function menu_set_params_value
                                   2029 ;	-----------------------------------------
      00090A                       2030 _menu_set_params_value:
      00090A 52 05            [ 2] 2031 	sub	sp, #5
                                   2032 ;	./libs/menu_lib.c: 64: do {
      00090C 0F 05            [ 1] 2033 	clr	(0x05, sp)
      00090E                       2034 00101$:
                                   2035 ;	./libs/menu_lib.c: 65: ssd1306_buffer_write(117-8*index,15,numbers[number % 10]); // Получаем последнюю цифру
      00090E 6B 02            [ 1] 2036 	ld	(0x02, sp), a
      000910 0F 01            [ 1] 2037 	clr	(0x01, sp)
      000912 4B 0A            [ 1] 2038 	push	#0x0a
      000914 4B 00            [ 1] 2039 	push	#0x00
      000916 1E 03            [ 2] 2040 	ldw	x, (0x03, sp)
      000918 CDr00r00         [ 4] 2041 	call	__modsint
      00091B 58               [ 2] 2042 	sllw	x
      00091C DEu00u0E         [ 2] 2043 	ldw	x, (_menu_set_params_value_numbers_10000_186+0, x)
      00091F 90 93            [ 1] 2044 	ldw	y, x
      000921 5F               [ 1] 2045 	clrw	x
      000922 7B 05            [ 1] 2046 	ld	a, (0x05, sp)
      000924 97               [ 1] 2047 	ld	xl, a
      000925 58               [ 2] 2048 	sllw	x
      000926 58               [ 2] 2049 	sllw	x
      000927 58               [ 2] 2050 	sllw	x
      000928 1F 03            [ 2] 2051 	ldw	(0x03, sp), x
      00092A AE 00 75         [ 2] 2052 	ldw	x, #0x0075
      00092D 72 F0 03         [ 2] 2053 	subw	x, (0x03, sp)
      000930 90 89            [ 2] 2054 	pushw	y
      000932 4B 0F            [ 1] 2055 	push	#0x0f
      000934 4B 00            [ 1] 2056 	push	#0x00
      000936 CDr06r52         [ 4] 2057 	call	_ssd1306_buffer_write
                                   2058 ;	./libs/menu_lib.c: 66: number /= 10; // Убираем последнюю цифру
      000939 4B 0A            [ 1] 2059 	push	#0x0a
      00093B 4B 00            [ 1] 2060 	push	#0x00
      00093D 1E 03            [ 2] 2061 	ldw	x, (0x03, sp)
      00093F CDr00r00         [ 4] 2062 	call	__divsint
      000942 9F               [ 1] 2063 	ld	a, xl
                                   2064 ;	./libs/menu_lib.c: 67: index++;
      000943 0C 05            [ 1] 2065 	inc	(0x05, sp)
                                   2066 ;	./libs/menu_lib.c: 68: } while (number > 0);
      000945 4D               [ 1] 2067 	tnz	a
      000946 26 C6            [ 1] 2068 	jrne	00101$
                                   2069 ;	./libs/menu_lib.c: 69: }
      000948 5B 05            [ 2] 2070 	addw	sp, #5
      00094A 81               [ 4] 2071 	ret
                                   2072 ;	./libs/menu_lib.c: 70: void menu_set_item_menu(uint8_t item)
                                   2073 ;	-----------------------------------------
                                   2074 ;	 function menu_set_item_menu
                                   2075 ;	-----------------------------------------
      00094B                       2076 _menu_set_item_menu:
                                   2077 ;	./libs/menu_lib.c: 73: switch(item)
      00094B A1 07            [ 1] 2078 	cp	a, #0x07
      00094D 23 01            [ 2] 2079 	jrule	00118$
      00094F 81               [ 4] 2080 	ret
      000950                       2081 00118$:
      000950 5F               [ 1] 2082 	clrw	x
      000951 97               [ 1] 2083 	ld	xl, a
      000952 58               [ 2] 2084 	sllw	x
      000953 DEu09u57         [ 2] 2085 	ldw	x, (#00119$, x)
      000956 FC               [ 2] 2086 	jp	(x)
      000957                       2087 00119$:
      000957r0ArC5                 2088 	.dw	#00109$
      000959r09r67                 2089 	.dw	#00101$
      00095Br09rD4                 2090 	.dw	#00102$
      00095Dr0Ar41                 2091 	.dw	#00103$
      00095Fr0Ar92                 2092 	.dw	#00104$
      000961r0ArA0                 2093 	.dw	#00105$
      000963r0ArAF                 2094 	.dw	#00106$
      000965r0ArBA                 2095 	.dw	#00107$
                                   2096 ;	./libs/menu_lib.c: 75: case red:
      000967                       2097 00101$:
                                   2098 ;	./libs/menu_lib.c: 76: menu_border_item(color);
      000967 A6 04            [ 1] 2099 	ld	a, #0x04
      000969 CDr08r69         [ 4] 2100 	call	_menu_border_item
                                   2101 ;	./libs/menu_lib.c: 78: ssd1306_buffer_write(15+color*8,4,ttf_rus_13);
      00096C 4Br60            [ 1] 2102 	push	#<(_ttf_rus_13+0)
      00096E 4Bs00            [ 1] 2103 	push	#((_ttf_rus_13+0) >> 8)
      000970 4B 04            [ 1] 2104 	push	#0x04
      000972 4B 00            [ 1] 2105 	push	#0x00
      000974 AE 00 2F         [ 2] 2106 	ldw	x, #0x002f
      000977 CDr06r52         [ 4] 2107 	call	_ssd1306_buffer_write
                                   2108 ;	./libs/menu_lib.c: 79: ssd1306_buffer_write(15+color*8+8,4,ttf_rus_14);
      00097A 4Br68            [ 1] 2109 	push	#<(_ttf_rus_14+0)
      00097C 4Bs00            [ 1] 2110 	push	#((_ttf_rus_14+0) >> 8)
      00097E 4B 04            [ 1] 2111 	push	#0x04
      000980 4B 00            [ 1] 2112 	push	#0x00
      000982 AE 00 37         [ 2] 2113 	ldw	x, #0x0037
      000985 CDr06r52         [ 4] 2114 	call	_ssd1306_buffer_write
                                   2115 ;	./libs/menu_lib.c: 80: ssd1306_buffer_write(15+color*8+16,4,ttf_rus_5);
      000988 4Br20            [ 1] 2116 	push	#<(_ttf_rus_5+0)
      00098A 4Bs00            [ 1] 2117 	push	#((_ttf_rus_5+0) >> 8)
      00098C 4B 04            [ 1] 2118 	push	#0x04
      00098E 4B 00            [ 1] 2119 	push	#0x00
      000990 AE 00 3F         [ 2] 2120 	ldw	x, #0x003f
      000993 CDr06r52         [ 4] 2121 	call	_ssd1306_buffer_write
                                   2122 ;	./libs/menu_lib.c: 81: ssd1306_buffer_write(15+color*8+24,4,ttf_rus_6);
      000996 4Br28            [ 1] 2123 	push	#<(_ttf_rus_6+0)
      000998 4Bs00            [ 1] 2124 	push	#((_ttf_rus_6+0) >> 8)
      00099A 4B 04            [ 1] 2125 	push	#0x04
      00099C 4B 00            [ 1] 2126 	push	#0x00
      00099E AE 00 47         [ 2] 2127 	ldw	x, #0x0047
      0009A1 CDr06r52         [ 4] 2128 	call	_ssd1306_buffer_write
                                   2129 ;	./libs/menu_lib.c: 82: ssd1306_buffer_write(15+color*8+32,4,ttf_rus_9);
      0009A4 4Br40            [ 1] 2130 	push	#<(_ttf_rus_9+0)
      0009A6 4Bs00            [ 1] 2131 	push	#((_ttf_rus_9+0) >> 8)
      0009A8 4B 04            [ 1] 2132 	push	#0x04
      0009AA 4B 00            [ 1] 2133 	push	#0x00
      0009AC AE 00 4F         [ 2] 2134 	ldw	x, #0x004f
      0009AF CDr06r52         [ 4] 2135 	call	_ssd1306_buffer_write
                                   2136 ;	./libs/menu_lib.c: 83: ssd1306_buffer_write(15+color*8+40,4,ttf_rus_15);
      0009B2 4Br70            [ 1] 2137 	push	#<(_ttf_rus_15+0)
      0009B4 4Bs00            [ 1] 2138 	push	#((_ttf_rus_15+0) >> 8)
      0009B6 4B 04            [ 1] 2139 	push	#0x04
      0009B8 4B 00            [ 1] 2140 	push	#0x00
      0009BA AE 00 57         [ 2] 2141 	ldw	x, #0x0057
      0009BD CDr06r52         [ 4] 2142 	call	_ssd1306_buffer_write
                                   2143 ;	./libs/menu_lib.c: 84: ssd1306_buffer_write(15+color*8+48,4,ttf_rus_16);
      0009C0 4Br78            [ 1] 2144 	push	#<(_ttf_rus_16+0)
      0009C2 4Bs00            [ 1] 2145 	push	#((_ttf_rus_16+0) >> 8)
      0009C4 4B 04            [ 1] 2146 	push	#0x04
      0009C6 4B 00            [ 1] 2147 	push	#0x00
      0009C8 AE 00 5F         [ 2] 2148 	ldw	x, #0x005f
      0009CB CDr06r52         [ 4] 2149 	call	_ssd1306_buffer_write
                                   2150 ;	./libs/menu_lib.c: 86: menu_set_params_value(params_value.current_red);
      0009CE C6u00u08         [ 1] 2151 	ld	a, _params_value+2
                                   2152 ;	./libs/menu_lib.c: 88: break;
      0009D1 CCr09r0A         [ 2] 2153 	jp	_menu_set_params_value
                                   2154 ;	./libs/menu_lib.c: 89: case green:
      0009D4                       2155 00102$:
                                   2156 ;	./libs/menu_lib.c: 90: menu_border_item(color);
      0009D4 A6 04            [ 1] 2157 	ld	a, #0x04
      0009D6 CDr08r69         [ 4] 2158 	call	_menu_border_item
                                   2159 ;	./libs/menu_lib.c: 92: ssd1306_buffer_write(15+color*8,4,ttf_rus_17);
      0009D9 4Br80            [ 1] 2160 	push	#<(_ttf_rus_17+0)
      0009DB 4Bs00            [ 1] 2161 	push	#((_ttf_rus_17+0) >> 8)
      0009DD 4B 04            [ 1] 2162 	push	#0x04
      0009DF 4B 00            [ 1] 2163 	push	#0x00
      0009E1 AE 00 2F         [ 2] 2164 	ldw	x, #0x002f
      0009E4 CDr06r52         [ 4] 2165 	call	_ssd1306_buffer_write
                                   2166 ;	./libs/menu_lib.c: 93: ssd1306_buffer_write(15+color*8+8,4,ttf_rus_3);
      0009E7 4Br10            [ 1] 2167 	push	#<(_ttf_rus_3+0)
      0009E9 4Bs00            [ 1] 2168 	push	#((_ttf_rus_3+0) >> 8)
      0009EB 4B 04            [ 1] 2169 	push	#0x04
      0009ED 4B 00            [ 1] 2170 	push	#0x00
      0009EF AE 00 37         [ 2] 2171 	ldw	x, #0x0037
      0009F2 CDr06r52         [ 4] 2172 	call	_ssd1306_buffer_write
                                   2173 ;	./libs/menu_lib.c: 94: ssd1306_buffer_write(15+color*8+16,4,ttf_rus_18);
      0009F5 4Br88            [ 1] 2174 	push	#<(_ttf_rus_18+0)
      0009F7 4Bs00            [ 1] 2175 	push	#((_ttf_rus_18+0) >> 8)
      0009F9 4B 04            [ 1] 2176 	push	#0x04
      0009FB 4B 00            [ 1] 2177 	push	#0x00
      0009FD AE 00 3F         [ 2] 2178 	ldw	x, #0x003f
      000A00 CDr06r52         [ 4] 2179 	call	_ssd1306_buffer_write
                                   2180 ;	./libs/menu_lib.c: 95: ssd1306_buffer_write(15+color*8+24,4,ttf_rus_3);
      000A03 4Br10            [ 1] 2181 	push	#<(_ttf_rus_3+0)
      000A05 4Bs00            [ 1] 2182 	push	#((_ttf_rus_3+0) >> 8)
      000A07 4B 04            [ 1] 2183 	push	#0x04
      000A09 4B 00            [ 1] 2184 	push	#0x00
      000A0B AE 00 47         [ 2] 2185 	ldw	x, #0x0047
      000A0E CDr06r52         [ 4] 2186 	call	_ssd1306_buffer_write
                                   2187 ;	./libs/menu_lib.c: 96: ssd1306_buffer_write(15+color*8+32,4,ttf_rus_9);
      000A11 4Br40            [ 1] 2188 	push	#<(_ttf_rus_9+0)
      000A13 4Bs00            [ 1] 2189 	push	#((_ttf_rus_9+0) >> 8)
      000A15 4B 04            [ 1] 2190 	push	#0x04
      000A17 4B 00            [ 1] 2191 	push	#0x00
      000A19 AE 00 4F         [ 2] 2192 	ldw	x, #0x004f
      000A1C CDr06r52         [ 4] 2193 	call	_ssd1306_buffer_write
                                   2194 ;	./libs/menu_lib.c: 97: ssd1306_buffer_write(15+color*8+40,4,ttf_rus_15);
      000A1F 4Br70            [ 1] 2195 	push	#<(_ttf_rus_15+0)
      000A21 4Bs00            [ 1] 2196 	push	#((_ttf_rus_15+0) >> 8)
      000A23 4B 04            [ 1] 2197 	push	#0x04
      000A25 4B 00            [ 1] 2198 	push	#0x00
      000A27 AE 00 57         [ 2] 2199 	ldw	x, #0x0057
      000A2A CDr06r52         [ 4] 2200 	call	_ssd1306_buffer_write
                                   2201 ;	./libs/menu_lib.c: 98: ssd1306_buffer_write(15+color*8+48,4,ttf_rus_16);
      000A2D 4Br78            [ 1] 2202 	push	#<(_ttf_rus_16+0)
      000A2F 4Bs00            [ 1] 2203 	push	#((_ttf_rus_16+0) >> 8)
      000A31 4B 04            [ 1] 2204 	push	#0x04
      000A33 4B 00            [ 1] 2205 	push	#0x00
      000A35 AE 00 5F         [ 2] 2206 	ldw	x, #0x005f
      000A38 CDr06r52         [ 4] 2207 	call	_ssd1306_buffer_write
                                   2208 ;	./libs/menu_lib.c: 100: menu_set_params_value(params_value.current_green);
      000A3B C6u00u09         [ 1] 2209 	ld	a, _params_value+3
                                   2210 ;	./libs/menu_lib.c: 103: break;
      000A3E CCr09r0A         [ 2] 2211 	jp	_menu_set_params_value
                                   2212 ;	./libs/menu_lib.c: 104: case blue:
      000A41                       2213 00103$:
                                   2214 ;	./libs/menu_lib.c: 105: menu_border_item(color);
      000A41 A6 04            [ 1] 2215 	ld	a, #0x04
      000A43 CDr08r69         [ 4] 2216 	call	_menu_border_item
                                   2217 ;	./libs/menu_lib.c: 107: ssd1306_buffer_write(15+color*8,4,ttf_rus_6);
      000A46 4Br28            [ 1] 2218 	push	#<(_ttf_rus_6+0)
      000A48 4Bs00            [ 1] 2219 	push	#((_ttf_rus_6+0) >> 8)
      000A4A 4B 04            [ 1] 2220 	push	#0x04
      000A4C 4B 00            [ 1] 2221 	push	#0x00
      000A4E AE 00 2F         [ 2] 2222 	ldw	x, #0x002f
      000A51 CDr06r52         [ 4] 2223 	call	_ssd1306_buffer_write
                                   2224 ;	./libs/menu_lib.c: 108: ssd1306_buffer_write(15+color*8+8,4,ttf_rus_12);
      000A54 4Br58            [ 1] 2225 	push	#<(_ttf_rus_12+0)
      000A56 4Bs00            [ 1] 2226 	push	#((_ttf_rus_12+0) >> 8)
      000A58 4B 04            [ 1] 2227 	push	#0x04
      000A5A 4B 00            [ 1] 2228 	push	#0x00
      000A5C AE 00 37         [ 2] 2229 	ldw	x, #0x0037
      000A5F CDr06r52         [ 4] 2230 	call	_ssd1306_buffer_write
                                   2231 ;	./libs/menu_lib.c: 109: ssd1306_buffer_write(15+color*8+16,4,ttf_rus_9);
      000A62 4Br40            [ 1] 2232 	push	#<(_ttf_rus_9+0)
      000A64 4Bs00            [ 1] 2233 	push	#((_ttf_rus_9+0) >> 8)
      000A66 4B 04            [ 1] 2234 	push	#0x04
      000A68 4B 00            [ 1] 2235 	push	#0x00
      000A6A AE 00 3F         [ 2] 2236 	ldw	x, #0x003f
      000A6D CDr06r52         [ 4] 2237 	call	_ssd1306_buffer_write
                                   2238 ;	./libs/menu_lib.c: 110: ssd1306_buffer_write(15+color*8+24,4,ttf_rus_12);
      000A70 4Br58            [ 1] 2239 	push	#<(_ttf_rus_12+0)
      000A72 4Bs00            [ 1] 2240 	push	#((_ttf_rus_12+0) >> 8)
      000A74 4B 04            [ 1] 2241 	push	#0x04
      000A76 4B 00            [ 1] 2242 	push	#0x00
      000A78 AE 00 47         [ 2] 2243 	ldw	x, #0x0047
      000A7B CDr06r52         [ 4] 2244 	call	_ssd1306_buffer_write
                                   2245 ;	./libs/menu_lib.c: 111: ssd1306_buffer_write(15+color*8+32,4,ttf_rus_16);
      000A7E 4Br78            [ 1] 2246 	push	#<(_ttf_rus_16+0)
      000A80 4Bs00            [ 1] 2247 	push	#((_ttf_rus_16+0) >> 8)
      000A82 4B 04            [ 1] 2248 	push	#0x04
      000A84 4B 00            [ 1] 2249 	push	#0x00
      000A86 AE 00 4F         [ 2] 2250 	ldw	x, #0x004f
      000A89 CDr06r52         [ 4] 2251 	call	_ssd1306_buffer_write
                                   2252 ;	./libs/menu_lib.c: 113: menu_set_params_value(params_value.current_blue);
      000A8C C6u00u0A         [ 1] 2253 	ld	a, _params_value+4
                                   2254 ;	./libs/menu_lib.c: 114: break;
      000A8F CCr09r0A         [ 2] 2255 	jp	_menu_set_params_value
                                   2256 ;	./libs/menu_lib.c: 115: case first:
      000A92                       2257 00104$:
                                   2258 ;	./libs/menu_lib.c: 116: menu_border_item(segment);
      000A92 A6 07            [ 1] 2259 	ld	a, #0x07
      000A94 CDr08r69         [ 4] 2260 	call	_menu_border_item
                                   2261 ;	./libs/menu_lib.c: 124: menu_set_params_value(params_value.current_first);
      000A97 AEr00r0B         [ 2] 2262 	ldw	x, #_params_value+5
      000A9A F6               [ 1] 2263 	ld	a, (x)
      000A9B A4 0F            [ 1] 2264 	and	a, #0x0f
                                   2265 ;	./libs/menu_lib.c: 125: break;
      000A9D CCr09r0A         [ 2] 2266 	jp	_menu_set_params_value
                                   2267 ;	./libs/menu_lib.c: 126: case second:
      000AA0                       2268 00105$:
                                   2269 ;	./libs/menu_lib.c: 127: menu_border_item(segment);
      000AA0 A6 07            [ 1] 2270 	ld	a, #0x07
      000AA2 CDr08r69         [ 4] 2271 	call	_menu_border_item
                                   2272 ;	./libs/menu_lib.c: 136: menu_set_params_value(params_value.current_second);
      000AA5 AEr00r0B         [ 2] 2273 	ldw	x, #_params_value+5
      000AA8 F6               [ 1] 2274 	ld	a, (x)
      000AA9 4E               [ 1] 2275 	swap	a
      000AAA A4 0F            [ 1] 2276 	and	a, #0x0f
                                   2277 ;	./libs/menu_lib.c: 137: break;
      000AAC CCr09r0A         [ 2] 2278 	jp	_menu_set_params_value
                                   2279 ;	./libs/menu_lib.c: 138: case sens:
      000AAF                       2280 00106$:
                                   2281 ;	./libs/menu_lib.c: 139: menu_border_item(settings);
      000AAF A6 05            [ 1] 2282 	ld	a, #0x05
      000AB1 CDr08r69         [ 4] 2283 	call	_menu_border_item
                                   2284 ;	./libs/menu_lib.c: 146: menu_set_params_value(params_value.current_sens);
      000AB4 C6u00u0C         [ 1] 2285 	ld	a, _params_value+6
                                   2286 ;	./libs/menu_lib.c: 147: break;
      000AB7 CCr09r0A         [ 2] 2287 	jp	_menu_set_params_value
                                   2288 ;	./libs/menu_lib.c: 148: case vers:
      000ABA                       2289 00107$:
                                   2290 ;	./libs/menu_lib.c: 149: menu_border_item(settings);
      000ABA A6 05            [ 1] 2291 	ld	a, #0x05
      000ABC CDr08r69         [ 4] 2292 	call	_menu_border_item
                                   2293 ;	./libs/menu_lib.c: 156: menu_set_params_value(params_value.current_vers);
      000ABF C6u00u0D         [ 1] 2294 	ld	a, _params_value+7
      000AC2 CCr09r0A         [ 2] 2295 	jp	_menu_set_params_value
                                   2296 ;	./libs/menu_lib.c: 158: }
      000AC5                       2297 00109$:
                                   2298 ;	./libs/menu_lib.c: 160: }
      000AC5 81               [ 4] 2299 	ret
                                   2300 ;	./libs/menu_lib.c: 165: void menu_set_paragraph(uint8_t paragraph)
                                   2301 ;	-----------------------------------------
                                   2302 ;	 function menu_set_paragraph
                                   2303 ;	-----------------------------------------
      000AC6                       2304 _menu_set_paragraph:
                                   2305 ;	./libs/menu_lib.c: 167: switch(paragraph)
      000AC6 A1 00            [ 1] 2306 	cp	a, #0x00
      000AC8 27 16            [ 1] 2307 	jreq	00101$
      000ACA A1 04            [ 1] 2308 	cp	a, #0x04
      000ACC 26 03            [ 1] 2309 	jrne	00140$
      000ACE CCr0Cr30         [ 2] 2310 	jp	00102$
      000AD1                       2311 00140$:
      000AD1 A1 05            [ 1] 2312 	cp	a, #0x05
      000AD3 26 03            [ 1] 2313 	jrne	00143$
      000AD5 CCr0CrF0         [ 2] 2314 	jp	00104$
      000AD8                       2315 00143$:
      000AD8 A1 07            [ 1] 2316 	cp	a, #0x07
      000ADA 26 03            [ 1] 2317 	jrne	00146$
      000ADC CCr0Cr7B         [ 2] 2318 	jp	00103$
      000ADF                       2319 00146$:
      000ADF 81               [ 4] 2320 	ret
                                   2321 ;	./libs/menu_lib.c: 169: case menu:
      000AE0                       2322 00101$:
                                   2323 ;	./libs/menu_lib.c: 170: ssd1306_buffer_clean();
      000AE0 CDr05rF0         [ 4] 2324 	call	_ssd1306_buffer_clean
                                   2325 ;	./libs/menu_lib.c: 171: menu_border();
      000AE3 CDr06rED         [ 4] 2326 	call	_menu_border
                                   2327 ;	./libs/menu_lib.c: 172: menu_border_paragraph(4);
      000AE6 A6 04            [ 1] 2328 	ld	a, #0x04
      000AE8 CDr07r9A         [ 4] 2329 	call	_menu_border_paragraph
                                   2330 ;	./libs/menu_lib.c: 174: ssd1306_buffer_write(10,12,ttf_rus_8);
      000AEB 4Br38            [ 1] 2331 	push	#<(_ttf_rus_8+0)
      000AED 4Bs00            [ 1] 2332 	push	#((_ttf_rus_8+0) >> 8)
      000AEF 4B 0C            [ 1] 2333 	push	#0x0c
      000AF1 4B 00            [ 1] 2334 	push	#0x00
      000AF3 AE 00 0A         [ 2] 2335 	ldw	x, #0x000a
      000AF6 CDr06r52         [ 4] 2336 	call	_ssd1306_buffer_write
                                   2337 ;	./libs/menu_lib.c: 175: ssd1306_buffer_write(18,12,ttf_rus_3);
      000AF9 4Br10            [ 1] 2338 	push	#<(_ttf_rus_3+0)
      000AFB 4Bs00            [ 1] 2339 	push	#((_ttf_rus_3+0) >> 8)
      000AFD 4B 0C            [ 1] 2340 	push	#0x0c
      000AFF 4B 00            [ 1] 2341 	push	#0x00
      000B01 AE 00 12         [ 2] 2342 	ldw	x, #0x0012
      000B04 CDr06r52         [ 4] 2343 	call	_ssd1306_buffer_write
                                   2344 ;	./libs/menu_lib.c: 176: ssd1306_buffer_write(26,12,ttf_rus_9);
      000B07 4Br40            [ 1] 2345 	push	#<(_ttf_rus_9+0)
      000B09 4Bs00            [ 1] 2346 	push	#((_ttf_rus_9+0) >> 8)
      000B0B 4B 0C            [ 1] 2347 	push	#0x0c
      000B0D 4B 00            [ 1] 2348 	push	#0x00
      000B0F AE 00 1A         [ 2] 2349 	ldw	x, #0x001a
      000B12 CDr06r52         [ 4] 2350 	call	_ssd1306_buffer_write
                                   2351 ;	./libs/menu_lib.c: 177: ssd1306_buffer_write(34,12,ttf_rus_20);
      000B15 4Br98            [ 1] 2352 	push	#<(_ttf_rus_20+0)
      000B17 4Bs00            [ 1] 2353 	push	#((_ttf_rus_20+0) >> 8)
      000B19 4B 0C            [ 1] 2354 	push	#0x0c
      000B1B 4B 00            [ 1] 2355 	push	#0x00
      000B1D AE 00 22         [ 2] 2356 	ldw	x, #0x0022
      000B20 CDr06r52         [ 4] 2357 	call	_ssd1306_buffer_write
                                   2358 ;	./libs/menu_lib.c: 179: ssd1306_buffer_write(48,4,ttf_rus_1);
      000B23 4Br00            [ 1] 2359 	push	#<(_ttf_rus_1+0)
      000B25 4Bs00            [ 1] 2360 	push	#((_ttf_rus_1+0) >> 8)
      000B27 4B 04            [ 1] 2361 	push	#0x04
      000B29 4B 00            [ 1] 2362 	push	#0x00
      000B2B AE 00 30         [ 2] 2363 	ldw	x, #0x0030
      000B2E CDr06r52         [ 4] 2364 	call	_ssd1306_buffer_write
                                   2365 ;	./libs/menu_lib.c: 180: ssd1306_buffer_write(56,4,ttf_rus_2);
      000B31 4Br08            [ 1] 2366 	push	#<(_ttf_rus_2+0)
      000B33 4Bs00            [ 1] 2367 	push	#((_ttf_rus_2+0) >> 8)
      000B35 4B 04            [ 1] 2368 	push	#0x04
      000B37 4B 00            [ 1] 2369 	push	#0x00
      000B39 AE 00 38         [ 2] 2370 	ldw	x, #0x0038
      000B3C CDr06r52         [ 4] 2371 	call	_ssd1306_buffer_write
                                   2372 ;	./libs/menu_lib.c: 181: ssd1306_buffer_write(64,4,ttf_rus_3);
      000B3F 4Br10            [ 1] 2373 	push	#<(_ttf_rus_3+0)
      000B41 4Bs00            [ 1] 2374 	push	#((_ttf_rus_3+0) >> 8)
      000B43 4B 04            [ 1] 2375 	push	#0x04
      000B45 4B 00            [ 1] 2376 	push	#0x00
      000B47 AE 00 40         [ 2] 2377 	ldw	x, #0x0040
      000B4A CDr06r52         [ 4] 2378 	call	_ssd1306_buffer_write
                                   2379 ;	./libs/menu_lib.c: 182: ssd1306_buffer_write(72,4,ttf_rus_4);
      000B4D 4Br18            [ 1] 2380 	push	#<(_ttf_rus_4+0)
      000B4F 4Bs00            [ 1] 2381 	push	#((_ttf_rus_4+0) >> 8)
      000B51 4B 04            [ 1] 2382 	push	#0x04
      000B53 4B 00            [ 1] 2383 	push	#0x00
      000B55 AE 00 48         [ 2] 2384 	ldw	x, #0x0048
      000B58 CDr06r52         [ 4] 2385 	call	_ssd1306_buffer_write
                                   2386 ;	./libs/menu_lib.c: 183: ssd1306_buffer_write(114,4,ttf_line_left);
      000B5B 4Br22            [ 1] 2387 	push	#<(_ttf_line_left+0)
      000B5D 4Bs01            [ 1] 2388 	push	#((_ttf_line_left+0) >> 8)
      000B5F 4B 04            [ 1] 2389 	push	#0x04
      000B61 4B 00            [ 1] 2390 	push	#0x00
      000B63 AE 00 72         [ 2] 2391 	ldw	x, #0x0072
      000B66 CDr06r52         [ 4] 2392 	call	_ssd1306_buffer_write
                                   2393 ;	./libs/menu_lib.c: 185: ssd1306_buffer_write(48,12,ttf_rus_6);
      000B69 4Br28            [ 1] 2394 	push	#<(_ttf_rus_6+0)
      000B6B 4Bs00            [ 1] 2395 	push	#((_ttf_rus_6+0) >> 8)
      000B6D 4B 0C            [ 1] 2396 	push	#0x0c
      000B6F 4B 00            [ 1] 2397 	push	#0x00
      000B71 AE 00 30         [ 2] 2398 	ldw	x, #0x0030
      000B74 CDr06r52         [ 4] 2399 	call	_ssd1306_buffer_write
                                   2400 ;	./libs/menu_lib.c: 186: ssd1306_buffer_write(56,12,ttf_rus_3);
      000B77 4Br10            [ 1] 2401 	push	#<(_ttf_rus_3+0)
      000B79 4Bs00            [ 1] 2402 	push	#((_ttf_rus_3+0) >> 8)
      000B7B 4B 0C            [ 1] 2403 	push	#0x0c
      000B7D 4B 00            [ 1] 2404 	push	#0x00
      000B7F AE 00 38         [ 2] 2405 	ldw	x, #0x0038
      000B82 CDr06r52         [ 4] 2406 	call	_ssd1306_buffer_write
                                   2407 ;	./libs/menu_lib.c: 187: ssd1306_buffer_write(64,12,ttf_rus_7);
      000B85 4Br30            [ 1] 2408 	push	#<(_ttf_rus_7+0)
      000B87 4Bs00            [ 1] 2409 	push	#((_ttf_rus_7+0) >> 8)
      000B89 4B 0C            [ 1] 2410 	push	#0x0c
      000B8B 4B 00            [ 1] 2411 	push	#0x00
      000B8D AE 00 40         [ 2] 2412 	ldw	x, #0x0040
      000B90 CDr06r52         [ 4] 2413 	call	_ssd1306_buffer_write
                                   2414 ;	./libs/menu_lib.c: 188: ssd1306_buffer_write(72,12,ttf_rus_8);
      000B93 4Br38            [ 1] 2415 	push	#<(_ttf_rus_8+0)
      000B95 4Bs00            [ 1] 2416 	push	#((_ttf_rus_8+0) >> 8)
      000B97 4B 0C            [ 1] 2417 	push	#0x0c
      000B99 4B 00            [ 1] 2418 	push	#0x00
      000B9B AE 00 48         [ 2] 2419 	ldw	x, #0x0048
      000B9E CDr06r52         [ 4] 2420 	call	_ssd1306_buffer_write
                                   2421 ;	./libs/menu_lib.c: 189: ssd1306_buffer_write(80,12,ttf_rus_3);
      000BA1 4Br10            [ 1] 2422 	push	#<(_ttf_rus_3+0)
      000BA3 4Bs00            [ 1] 2423 	push	#((_ttf_rus_3+0) >> 8)
      000BA5 4B 0C            [ 1] 2424 	push	#0x0c
      000BA7 4B 00            [ 1] 2425 	push	#0x00
      000BA9 AE 00 50         [ 2] 2426 	ldw	x, #0x0050
      000BAC CDr06r52         [ 4] 2427 	call	_ssd1306_buffer_write
                                   2428 ;	./libs/menu_lib.c: 190: ssd1306_buffer_write(88,12,ttf_rus_9);
      000BAF 4Br40            [ 1] 2429 	push	#<(_ttf_rus_9+0)
      000BB1 4Bs00            [ 1] 2430 	push	#((_ttf_rus_9+0) >> 8)
      000BB3 4B 0C            [ 1] 2431 	push	#0x0c
      000BB5 4B 00            [ 1] 2432 	push	#0x00
      000BB7 AE 00 58         [ 2] 2433 	ldw	x, #0x0058
      000BBA CDr06r52         [ 4] 2434 	call	_ssd1306_buffer_write
                                   2435 ;	./libs/menu_lib.c: 191: ssd1306_buffer_write(96,12,ttf_rus_4);
      000BBD 4Br18            [ 1] 2436 	push	#<(_ttf_rus_4+0)
      000BBF 4Bs00            [ 1] 2437 	push	#((_ttf_rus_4+0) >> 8)
      000BC1 4B 0C            [ 1] 2438 	push	#0x0c
      000BC3 4B 00            [ 1] 2439 	push	#0x00
      000BC5 AE 00 60         [ 2] 2440 	ldw	x, #0x0060
      000BC8 CDr06r52         [ 4] 2441 	call	_ssd1306_buffer_write
                                   2442 ;	./libs/menu_lib.c: 192: ssd1306_buffer_write(106,12,ttf_void);
      000BCB 4BrA2            [ 1] 2443 	push	#<(_ttf_void+0)
      000BCD 4Bs00            [ 1] 2444 	push	#((_ttf_void+0) >> 8)
      000BCF 4B 0C            [ 1] 2445 	push	#0x0c
      000BD1 4B 00            [ 1] 2446 	push	#0x00
      000BD3 AE 00 6A         [ 2] 2447 	ldw	x, #0x006a
      000BD6 CDr06r52         [ 4] 2448 	call	_ssd1306_buffer_write
                                   2449 ;	./libs/menu_lib.c: 194: ssd1306_buffer_write(48,20,ttf_rus_10);
      000BD9 4Br48            [ 1] 2450 	push	#<(_ttf_rus_10+0)
      000BDB 4Bs00            [ 1] 2451 	push	#((_ttf_rus_10+0) >> 8)
      000BDD 4B 14            [ 1] 2452 	push	#0x14
      000BDF 4B 00            [ 1] 2453 	push	#0x00
      000BE1 AE 00 30         [ 2] 2454 	ldw	x, #0x0030
      000BE4 CDr06r52         [ 4] 2455 	call	_ssd1306_buffer_write
                                   2456 ;	./libs/menu_lib.c: 195: ssd1306_buffer_write(56,20,ttf_rus_11);
      000BE7 4Br50            [ 1] 2457 	push	#<(_ttf_rus_11+0)
      000BE9 4Bs00            [ 1] 2458 	push	#((_ttf_rus_11+0) >> 8)
      000BEB 4B 14            [ 1] 2459 	push	#0x14
      000BED 4B 00            [ 1] 2460 	push	#0x00
      000BEF AE 00 38         [ 2] 2461 	ldw	x, #0x0038
      000BF2 CDr06r52         [ 4] 2462 	call	_ssd1306_buffer_write
                                   2463 ;	./libs/menu_lib.c: 196: ssd1306_buffer_write(64,20,ttf_rus_1);
      000BF5 4Br00            [ 1] 2464 	push	#<(_ttf_rus_1+0)
      000BF7 4Bs00            [ 1] 2465 	push	#((_ttf_rus_1+0) >> 8)
      000BF9 4B 14            [ 1] 2466 	push	#0x14
      000BFB 4B 00            [ 1] 2467 	push	#0x00
      000BFD AE 00 40         [ 2] 2468 	ldw	x, #0x0040
      000C00 CDr06r52         [ 4] 2469 	call	_ssd1306_buffer_write
                                   2470 ;	./libs/menu_lib.c: 197: ssd1306_buffer_write(72,20,ttf_rus_12);
      000C03 4Br58            [ 1] 2471 	push	#<(_ttf_rus_12+0)
      000C05 4Bs00            [ 1] 2472 	push	#((_ttf_rus_12+0) >> 8)
      000C07 4B 14            [ 1] 2473 	push	#0x14
      000C09 4B 00            [ 1] 2474 	push	#0x00
      000C0B AE 00 48         [ 2] 2475 	ldw	x, #0x0048
      000C0E CDr06r52         [ 4] 2476 	call	_ssd1306_buffer_write
                                   2477 ;	./libs/menu_lib.c: 198: ssd1306_buffer_write(80,20,ttf_rus_12);
      000C11 4Br58            [ 1] 2478 	push	#<(_ttf_rus_12+0)
      000C13 4Bs00            [ 1] 2479 	push	#((_ttf_rus_12+0) >> 8)
      000C15 4B 14            [ 1] 2480 	push	#0x14
      000C17 4B 00            [ 1] 2481 	push	#0x00
      000C19 AE 00 50         [ 2] 2482 	ldw	x, #0x0050
      000C1C CDr06r52         [ 4] 2483 	call	_ssd1306_buffer_write
                                   2484 ;	./libs/menu_lib.c: 199: ssd1306_buffer_write(106,20,ttf_void);
      000C1F 4BrA2            [ 1] 2485 	push	#<(_ttf_void+0)
      000C21 4Bs00            [ 1] 2486 	push	#((_ttf_void+0) >> 8)
      000C23 4B 14            [ 1] 2487 	push	#0x14
      000C25 4B 00            [ 1] 2488 	push	#0x00
      000C27 AE 00 6A         [ 2] 2489 	ldw	x, #0x006a
      000C2A CDr06r52         [ 4] 2490 	call	_ssd1306_buffer_write
                                   2491 ;	./libs/menu_lib.c: 201: ssd1306_send_buffer();
                                   2492 ;	./libs/menu_lib.c: 202: break;
      000C2D CCr05rFD         [ 2] 2493 	jp	_ssd1306_send_buffer
                                   2494 ;	./libs/menu_lib.c: 203: case color:
      000C30                       2495 00102$:
                                   2496 ;	./libs/menu_lib.c: 204: ssd1306_buffer_clean();
      000C30 CDr05rF0         [ 4] 2497 	call	_ssd1306_buffer_clean
                                   2498 ;	./libs/menu_lib.c: 205: menu_border();
      000C33 CDr06rED         [ 4] 2499 	call	_menu_border
                                   2500 ;	./libs/menu_lib.c: 206: menu_border_paragraph(color);
      000C36 A6 04            [ 1] 2501 	ld	a, #0x04
      000C38 CDr07r9A         [ 4] 2502 	call	_menu_border_paragraph
                                   2503 ;	./libs/menu_lib.c: 208: ssd1306_buffer_write(10,12,ttf_rus_1);
      000C3B 4Br00            [ 1] 2504 	push	#<(_ttf_rus_1+0)
      000C3D 4Bs00            [ 1] 2505 	push	#((_ttf_rus_1+0) >> 8)
      000C3F 4B 0C            [ 1] 2506 	push	#0x0c
      000C41 4B 00            [ 1] 2507 	push	#0x00
      000C43 AE 00 0A         [ 2] 2508 	ldw	x, #0x000a
      000C46 CDr06r52         [ 4] 2509 	call	_ssd1306_buffer_write
                                   2510 ;	./libs/menu_lib.c: 209: ssd1306_buffer_write(18,12,ttf_rus_2);
      000C49 4Br08            [ 1] 2511 	push	#<(_ttf_rus_2+0)
      000C4B 4Bs00            [ 1] 2512 	push	#((_ttf_rus_2+0) >> 8)
      000C4D 4B 0C            [ 1] 2513 	push	#0x0c
      000C4F 4B 00            [ 1] 2514 	push	#0x00
      000C51 AE 00 12         [ 2] 2515 	ldw	x, #0x0012
      000C54 CDr06r52         [ 4] 2516 	call	_ssd1306_buffer_write
                                   2517 ;	./libs/menu_lib.c: 210: ssd1306_buffer_write(26,12,ttf_rus_3);
      000C57 4Br10            [ 1] 2518 	push	#<(_ttf_rus_3+0)
      000C59 4Bs00            [ 1] 2519 	push	#((_ttf_rus_3+0) >> 8)
      000C5B 4B 0C            [ 1] 2520 	push	#0x0c
      000C5D 4B 00            [ 1] 2521 	push	#0x00
      000C5F AE 00 1A         [ 2] 2522 	ldw	x, #0x001a
      000C62 CDr06r52         [ 4] 2523 	call	_ssd1306_buffer_write
                                   2524 ;	./libs/menu_lib.c: 211: ssd1306_buffer_write(34,12,ttf_rus_4);
      000C65 4Br18            [ 1] 2525 	push	#<(_ttf_rus_4+0)
      000C67 4Bs00            [ 1] 2526 	push	#((_ttf_rus_4+0) >> 8)
      000C69 4B 0C            [ 1] 2527 	push	#0x0c
      000C6B 4B 00            [ 1] 2528 	push	#0x00
      000C6D AE 00 22         [ 2] 2529 	ldw	x, #0x0022
      000C70 CDr06r52         [ 4] 2530 	call	_ssd1306_buffer_write
                                   2531 ;	./libs/menu_lib.c: 213: menu_set_item_menu(red);
      000C73 A6 01            [ 1] 2532 	ld	a, #0x01
      000C75 CDr09r4B         [ 4] 2533 	call	_menu_set_item_menu
                                   2534 ;	./libs/menu_lib.c: 215: ssd1306_send_buffer();
                                   2535 ;	./libs/menu_lib.c: 216: break;
      000C78 CCr05rFD         [ 2] 2536 	jp	_ssd1306_send_buffer
                                   2537 ;	./libs/menu_lib.c: 217: case segment:
      000C7B                       2538 00103$:
                                   2539 ;	./libs/menu_lib.c: 218: ssd1306_buffer_clean();
      000C7B CDr05rF0         [ 4] 2540 	call	_ssd1306_buffer_clean
                                   2541 ;	./libs/menu_lib.c: 219: menu_border();
      000C7E CDr06rED         [ 4] 2542 	call	_menu_border
                                   2543 ;	./libs/menu_lib.c: 220: menu_border_paragraph(segment);
      000C81 A6 07            [ 1] 2544 	ld	a, #0x07
      000C83 CDr07r9A         [ 4] 2545 	call	_menu_border_paragraph
                                   2546 ;	./libs/menu_lib.c: 222: ssd1306_buffer_write(10,12,ttf_rus_6);
      000C86 4Br28            [ 1] 2547 	push	#<(_ttf_rus_6+0)
      000C88 4Bs00            [ 1] 2548 	push	#((_ttf_rus_6+0) >> 8)
      000C8A 4B 0C            [ 1] 2549 	push	#0x0c
      000C8C 4B 00            [ 1] 2550 	push	#0x00
      000C8E AE 00 0A         [ 2] 2551 	ldw	x, #0x000a
      000C91 CDr06r52         [ 4] 2552 	call	_ssd1306_buffer_write
                                   2553 ;	./libs/menu_lib.c: 223: ssd1306_buffer_write(18,12,ttf_rus_3);
      000C94 4Br10            [ 1] 2554 	push	#<(_ttf_rus_3+0)
      000C96 4Bs00            [ 1] 2555 	push	#((_ttf_rus_3+0) >> 8)
      000C98 4B 0C            [ 1] 2556 	push	#0x0c
      000C9A 4B 00            [ 1] 2557 	push	#0x00
      000C9C AE 00 12         [ 2] 2558 	ldw	x, #0x0012
      000C9F CDr06r52         [ 4] 2559 	call	_ssd1306_buffer_write
                                   2560 ;	./libs/menu_lib.c: 224: ssd1306_buffer_write(26,12,ttf_rus_7);
      000CA2 4Br30            [ 1] 2561 	push	#<(_ttf_rus_7+0)
      000CA4 4Bs00            [ 1] 2562 	push	#((_ttf_rus_7+0) >> 8)
      000CA6 4B 0C            [ 1] 2563 	push	#0x0c
      000CA8 4B 00            [ 1] 2564 	push	#0x00
      000CAA AE 00 1A         [ 2] 2565 	ldw	x, #0x001a
      000CAD CDr06r52         [ 4] 2566 	call	_ssd1306_buffer_write
                                   2567 ;	./libs/menu_lib.c: 225: ssd1306_buffer_write(34,12,ttf_rus_8);
      000CB0 4Br38            [ 1] 2568 	push	#<(_ttf_rus_8+0)
      000CB2 4Bs00            [ 1] 2569 	push	#((_ttf_rus_8+0) >> 8)
      000CB4 4B 0C            [ 1] 2570 	push	#0x0c
      000CB6 4B 00            [ 1] 2571 	push	#0x00
      000CB8 AE 00 22         [ 2] 2572 	ldw	x, #0x0022
      000CBB CDr06r52         [ 4] 2573 	call	_ssd1306_buffer_write
                                   2574 ;	./libs/menu_lib.c: 226: ssd1306_buffer_write(42,12,ttf_rus_3);
      000CBE 4Br10            [ 1] 2575 	push	#<(_ttf_rus_3+0)
      000CC0 4Bs00            [ 1] 2576 	push	#((_ttf_rus_3+0) >> 8)
      000CC2 4B 0C            [ 1] 2577 	push	#0x0c
      000CC4 4B 00            [ 1] 2578 	push	#0x00
      000CC6 AE 00 2A         [ 2] 2579 	ldw	x, #0x002a
      000CC9 CDr06r52         [ 4] 2580 	call	_ssd1306_buffer_write
                                   2581 ;	./libs/menu_lib.c: 227: ssd1306_buffer_write(50,12,ttf_rus_9);
      000CCC 4Br40            [ 1] 2582 	push	#<(_ttf_rus_9+0)
      000CCE 4Bs00            [ 1] 2583 	push	#((_ttf_rus_9+0) >> 8)
      000CD0 4B 0C            [ 1] 2584 	push	#0x0c
      000CD2 4B 00            [ 1] 2585 	push	#0x00
      000CD4 AE 00 32         [ 2] 2586 	ldw	x, #0x0032
      000CD7 CDr06r52         [ 4] 2587 	call	_ssd1306_buffer_write
                                   2588 ;	./libs/menu_lib.c: 228: ssd1306_buffer_write(58,12,ttf_rus_4);
      000CDA 4Br18            [ 1] 2589 	push	#<(_ttf_rus_4+0)
      000CDC 4Bs00            [ 1] 2590 	push	#((_ttf_rus_4+0) >> 8)
      000CDE 4B 0C            [ 1] 2591 	push	#0x0c
      000CE0 4B 00            [ 1] 2592 	push	#0x00
      000CE2 AE 00 3A         [ 2] 2593 	ldw	x, #0x003a
      000CE5 CDr06r52         [ 4] 2594 	call	_ssd1306_buffer_write
                                   2595 ;	./libs/menu_lib.c: 230: menu_set_item_menu(first);
      000CE8 A6 04            [ 1] 2596 	ld	a, #0x04
      000CEA CDr09r4B         [ 4] 2597 	call	_menu_set_item_menu
                                   2598 ;	./libs/menu_lib.c: 232: ssd1306_send_buffer();
                                   2599 ;	./libs/menu_lib.c: 235: break;
      000CED CCr05rFD         [ 2] 2600 	jp	_ssd1306_send_buffer
                                   2601 ;	./libs/menu_lib.c: 236: case settings:
      000CF0                       2602 00104$:
                                   2603 ;	./libs/menu_lib.c: 237: ssd1306_buffer_clean();
      000CF0 CDr05rF0         [ 4] 2604 	call	_ssd1306_buffer_clean
                                   2605 ;	./libs/menu_lib.c: 238: menu_border();
      000CF3 CDr06rED         [ 4] 2606 	call	_menu_border
                                   2607 ;	./libs/menu_lib.c: 239: menu_border_paragraph(settings);
      000CF6 A6 05            [ 1] 2608 	ld	a, #0x05
      000CF8 CDr07r9A         [ 4] 2609 	call	_menu_border_paragraph
                                   2610 ;	./libs/menu_lib.c: 241: ssd1306_buffer_write(10,12,ttf_rus_10);
      000CFB 4Br48            [ 1] 2611 	push	#<(_ttf_rus_10+0)
      000CFD 4Bs00            [ 1] 2612 	push	#((_ttf_rus_10+0) >> 8)
      000CFF 4B 0C            [ 1] 2613 	push	#0x0c
      000D01 4B 00            [ 1] 2614 	push	#0x00
      000D03 AE 00 0A         [ 2] 2615 	ldw	x, #0x000a
      000D06 CDr06r52         [ 4] 2616 	call	_ssd1306_buffer_write
                                   2617 ;	./libs/menu_lib.c: 242: ssd1306_buffer_write(18,12,ttf_rus_11);
      000D09 4Br50            [ 1] 2618 	push	#<(_ttf_rus_11+0)
      000D0B 4Bs00            [ 1] 2619 	push	#((_ttf_rus_11+0) >> 8)
      000D0D 4B 0C            [ 1] 2620 	push	#0x0c
      000D0F 4B 00            [ 1] 2621 	push	#0x00
      000D11 AE 00 12         [ 2] 2622 	ldw	x, #0x0012
      000D14 CDr06r52         [ 4] 2623 	call	_ssd1306_buffer_write
                                   2624 ;	./libs/menu_lib.c: 243: ssd1306_buffer_write(26,12,ttf_rus_1);
      000D17 4Br00            [ 1] 2625 	push	#<(_ttf_rus_1+0)
      000D19 4Bs00            [ 1] 2626 	push	#((_ttf_rus_1+0) >> 8)
      000D1B 4B 0C            [ 1] 2627 	push	#0x0c
      000D1D 4B 00            [ 1] 2628 	push	#0x00
      000D1F AE 00 1A         [ 2] 2629 	ldw	x, #0x001a
      000D22 CDr06r52         [ 4] 2630 	call	_ssd1306_buffer_write
                                   2631 ;	./libs/menu_lib.c: 244: ssd1306_buffer_write(34,12,ttf_rus_12);
      000D25 4Br58            [ 1] 2632 	push	#<(_ttf_rus_12+0)
      000D27 4Bs00            [ 1] 2633 	push	#((_ttf_rus_12+0) >> 8)
      000D29 4B 0C            [ 1] 2634 	push	#0x0c
      000D2B 4B 00            [ 1] 2635 	push	#0x00
      000D2D AE 00 22         [ 2] 2636 	ldw	x, #0x0022
      000D30 CDr06r52         [ 4] 2637 	call	_ssd1306_buffer_write
                                   2638 ;	./libs/menu_lib.c: 245: ssd1306_buffer_write(42,12,ttf_rus_12);
      000D33 4Br58            [ 1] 2639 	push	#<(_ttf_rus_12+0)
      000D35 4Bs00            [ 1] 2640 	push	#((_ttf_rus_12+0) >> 8)
      000D37 4B 0C            [ 1] 2641 	push	#0x0c
      000D39 4B 00            [ 1] 2642 	push	#0x00
      000D3B AE 00 2A         [ 2] 2643 	ldw	x, #0x002a
      000D3E CDr06r52         [ 4] 2644 	call	_ssd1306_buffer_write
                                   2645 ;	./libs/menu_lib.c: 247: menu_set_item_menu(sens);
      000D41 A6 06            [ 1] 2646 	ld	a, #0x06
      000D43 CDr09r4B         [ 4] 2647 	call	_menu_set_item_menu
                                   2648 ;	./libs/menu_lib.c: 249: ssd1306_send_buffer();
                                   2649 ;	./libs/menu_lib.c: 251: }
                                   2650 ;	./libs/menu_lib.c: 252: }
      000D46 CCr05rFD         [ 2] 2651 	jp	_ssd1306_send_buffer
                                   2652 ;	./libs/adc_lib.c: 2: void adc_init(void) {
                                   2653 ;	-----------------------------------------
                                   2654 ;	 function adc_init
                                   2655 ;	-----------------------------------------
      000D49                       2656 _adc_init:
                                   2657 ;	./libs/adc_lib.c: 4: ADC_CSR -> CH = 3; // Select channel 2 (AIN2=PC4)
      000D49 C6 54 00         [ 1] 2658 	ld	a, 0x5400
      000D4C A4 F0            [ 1] 2659 	and	a, #0xf0
      000D4E AA 03            [ 1] 2660 	or	a, #0x03
      000D50 C7 54 00         [ 1] 2661 	ld	0x5400, a
                                   2662 ;	./libs/adc_lib.c: 6: ADC_CR1 -> ADON = 1; // ADON
      000D53 72 10 54 01      [ 1] 2663 	bset	0x5401, #0
                                   2664 ;	./libs/adc_lib.c: 7: ADC_CR2 -> ALIGN = 0; // Align left
      000D57 AE 54 02         [ 2] 2665 	ldw	x, #0x5402
      000D5A 72 17 54 02      [ 1] 2666 	bres	0x5402, #3
                                   2667 ;	./libs/adc_lib.c: 9: delay_s(1); // Give little time to be ready for first conversion
      000D5E A6 01            [ 1] 2668 	ld	a, #0x01
                                   2669 ;	./libs/adc_lib.c: 10: }
      000D60 CCr02r3A         [ 2] 2670 	jp	_delay_s
                                   2671 ;	./libs/adc_lib.c: 12: uint16_t adc_read(void) {
                                   2672 ;	-----------------------------------------
                                   2673 ;	 function adc_read
                                   2674 ;	-----------------------------------------
      000D63                       2675 _adc_read:
                                   2676 ;	./libs/adc_lib.c: 13: ADC_CR1 -> CONT = 0; // Single conversion mode
      000D63 72 13 54 01      [ 1] 2677 	bres	0x5401, #1
                                   2678 ;	./libs/adc_lib.c: 14: ADC_CR1 -> ADON = 1; // Start conversion
      000D67 72 10 54 01      [ 1] 2679 	bset	0x5401, #0
                                   2680 ;	./libs/adc_lib.c: 15: while(!(ADC_CSR -> EOC));
      000D6B                       2681 00101$:
      000D6B AE 54 00         [ 2] 2682 	ldw	x, #0x5400
      000D6E F6               [ 1] 2683 	ld	a, (x)
      000D6F 4E               [ 1] 2684 	swap	a
      000D70 44               [ 1] 2685 	srl	a
      000D71 44               [ 1] 2686 	srl	a
      000D72 44               [ 1] 2687 	srl	a
      000D73 A4 01            [ 1] 2688 	and	a, #0x01
      000D75 27 F4            [ 1] 2689 	jreq	00101$
                                   2690 ;	./libs/adc_lib.c: 17: nop(); 
      000D77 9D               [ 1] 2691 	nop
                                   2692 ;	./libs/adc_lib.c: 19: ADC_CSR  -> EOC = 0; // Clear "End of conversion"-flag
      000D78 72 1F 54 00      [ 1] 2693 	bres	0x5400, #7
                                   2694 ;	./libs/adc_lib.c: 20: return (ADC_DRL -> DH << 2) | (ADC_DRL -> DH >> 6);  // Left aligned
      000D7C C6 54 05         [ 1] 2695 	ld	a, 0x5405
      000D7F 5F               [ 1] 2696 	clrw	x
      000D80 97               [ 1] 2697 	ld	xl, a
      000D81 58               [ 2] 2698 	sllw	x
      000D82 58               [ 2] 2699 	sllw	x
      000D83 4E               [ 1] 2700 	swap	a
      000D84 A4 0F            [ 1] 2701 	and	a, #0x0f
      000D86 44               [ 1] 2702 	srl	a
      000D87 44               [ 1] 2703 	srl	a
      000D88 89               [ 2] 2704 	pushw	x
      000D89 1A 02            [ 1] 2705 	or	a, (2, sp)
      000D8B 85               [ 2] 2706 	popw	x
      000D8C 97               [ 1] 2707 	ld	xl, a
                                   2708 ;	./libs/adc_lib.c: 21: }
      000D8D 81               [ 4] 2709 	ret
                                   2710 ;	main.c: 3: void params_default_conf(void)
                                   2711 ;	-----------------------------------------
                                   2712 ;	 function params_default_conf
                                   2713 ;	-----------------------------------------
      000D8E                       2714 _params_default_conf:
                                   2715 ;	main.c: 5: params_value.current_red = 255;
      000D8E 35 FFu00u08      [ 1] 2716 	mov	_params_value+2, #0xff
                                   2717 ;	main.c: 6: params_value.current_green = 255;
      000D92 35 FFu00u09      [ 1] 2718 	mov	_params_value+3, #0xff
                                   2719 ;	main.c: 7: params_value.current_blue = 255;
      000D96 35 FFu00u0A      [ 1] 2720 	mov	_params_value+4, #0xff
                                   2721 ;	main.c: 9: params_value.current_first = 0;
      000D9A AEr00r0B         [ 2] 2722 	ldw	x, #(_params_value+0)+5
      000D9D F6               [ 1] 2723 	ld	a, (x)
      000D9E A4 F0            [ 1] 2724 	and	a, #0xf0
                                   2725 ;	main.c: 10: params_value.current_second = 15;
      000DA0 F7               [ 1] 2726 	ld	(x), a
      000DA1 AA F0            [ 1] 2727 	or	a, #0xf0
      000DA3 F7               [ 1] 2728 	ld	(x), a
                                   2729 ;	main.c: 12: params_value.current_sens = 10;
      000DA4 35 0Au00u0C      [ 1] 2730 	mov	_params_value+6, #0x0a
                                   2731 ;	main.c: 13: params_value.current_vers = 0xA1;
      000DA8 35 A1u00u0D      [ 1] 2732 	mov	_params_value+7, #0xa1
                                   2733 ;	main.c: 14: }
      000DAC 81               [ 4] 2734 	ret
                                   2735 ;	main.c: 16: void setup(void)
                                   2736 ;	-----------------------------------------
                                   2737 ;	 function setup
                                   2738 ;	-----------------------------------------
      000DAD                       2739 _setup:
                                   2740 ;	main.c: 19: CLK_CKDIVR = 0;
      000DAD 35 00 50 C6      [ 1] 2741 	mov	0x50c6+0, #0x00
                                   2742 ;	main.c: 21: params_value.all = 0;
      000DB1 35 00u00u06      [ 1] 2743 	mov	_params_value+0, #0x00
                                   2744 ;	main.c: 24: uart_init(9600,0);
      000DB5 4F               [ 1] 2745 	clr	a
      000DB6 AE 25 80         [ 2] 2746 	ldw	x, #0x2580
      000DB9 CDr00rB7         [ 4] 2747 	call	_uart_init
                                   2748 ;	main.c: 25: i2c_init();
      000DBC CDr03r7A         [ 4] 2749 	call	_i2c_init
                                   2750 ;	main.c: 26: ssd1306_init();
      000DBF CDr05r0D         [ 4] 2751 	call	_ssd1306_init
                                   2752 ;	main.c: 27: ssd1306_send_buffer();
      000DC2 CDr05rFD         [ 4] 2753 	call	_ssd1306_send_buffer
                                   2754 ;	main.c: 28: params_default_conf();
      000DC5 CDr0Dr8E         [ 4] 2755 	call	_params_default_conf
                                   2756 ;	main.c: 29: enableInterrupts();
      000DC8 9A               [ 1] 2757 	rim
                                   2758 ;	main.c: 30: adc_init();
      000DC9 CDr0Dr49         [ 4] 2759 	call	_adc_init
                                   2760 ;	main.c: 31: delay_s(1);//блять в душе не ебу почему так сработало, но почему-то если в начале прогнать таймер он не заработает, но последующие разы всё ок
      000DCC A6 01            [ 1] 2761 	ld	a, #0x01
      000DCE CDr02r3A         [ 4] 2762 	call	_delay_s
                                   2763 ;	main.c: 32: delay_s(1);
      000DD1 A6 01            [ 1] 2764 	ld	a, #0x01
                                   2765 ;	main.c: 33: }
      000DD3 CCr02r3A         [ 2] 2766 	jp	_delay_s
                                   2767 ;	main.c: 36: void gg(void)
                                   2768 ;	-----------------------------------------
                                   2769 ;	 function gg
                                   2770 ;	-----------------------------------------
      000DD6                       2771 _gg:
                                   2772 ;	main.c: 38: menu_set_paragraph(menu);
      000DD6 4F               [ 1] 2773 	clr	a
      000DD7 CDr0ArC6         [ 4] 2774 	call	_menu_set_paragraph
                                   2775 ;	main.c: 39: delay_s(1);
      000DDA A6 01            [ 1] 2776 	ld	a, #0x01
      000DDC CDr02r3A         [ 4] 2777 	call	_delay_s
                                   2778 ;	main.c: 41: menu_set_paragraph(color);
      000DDF A6 04            [ 1] 2779 	ld	a, #0x04
      000DE1 CDr0ArC6         [ 4] 2780 	call	_menu_set_paragraph
                                   2781 ;	main.c: 42: delay_s(1);
      000DE4 A6 01            [ 1] 2782 	ld	a, #0x01
      000DE6 CDr02r3A         [ 4] 2783 	call	_delay_s
                                   2784 ;	main.c: 44: menu_set_paragraph(segment);
      000DE9 A6 07            [ 1] 2785 	ld	a, #0x07
      000DEB CDr0ArC6         [ 4] 2786 	call	_menu_set_paragraph
                                   2787 ;	main.c: 45: delay_s(1);
      000DEE A6 01            [ 1] 2788 	ld	a, #0x01
      000DF0 CDr02r3A         [ 4] 2789 	call	_delay_s
                                   2790 ;	main.c: 47: menu_set_paragraph(settings);
      000DF3 A6 05            [ 1] 2791 	ld	a, #0x05
      000DF5 CDr0ArC6         [ 4] 2792 	call	_menu_set_paragraph
                                   2793 ;	main.c: 48: delay_s(1);
      000DF8 A6 01            [ 1] 2794 	ld	a, #0x01
      000DFA CDr02r3A         [ 4] 2795 	call	_delay_s
                                   2796 ;	main.c: 54: menu_set_paragraph(color);
      000DFD A6 04            [ 1] 2797 	ld	a, #0x04
      000DFF CDr0ArC6         [ 4] 2798 	call	_menu_set_paragraph
                                   2799 ;	main.c: 55: delay_s(1);
      000E02 A6 01            [ 1] 2800 	ld	a, #0x01
                                   2801 ;	main.c: 58: }
      000E04 CCr02r3A         [ 2] 2802 	jp	_delay_s
                                   2803 ;	main.c: 60: int main(void)
                                   2804 ;	-----------------------------------------
                                   2805 ;	 function main
                                   2806 ;	-----------------------------------------
      000E07                       2807 _main:
                                   2808 ;	main.c: 62: setup();
      000E07 CDr0DrAD         [ 4] 2809 	call	_setup
                                   2810 ;	main.c: 63: gg();
      000E0A CDr0DrD6         [ 4] 2811 	call	_gg
                                   2812 ;	main.c: 64: while(1)
      000E0D                       2813 00102$:
                                   2814 ;	main.c: 66: uart_write_byte(adc_read());
      000E0D CDr0Dr63         [ 4] 2815 	call	_adc_read
      000E10 9F               [ 1] 2816 	ld	a, xl
      000E11 CDr01rC1         [ 4] 2817 	call	_uart_write_byte
                                   2818 ;	main.c: 67: delay_s(1);
      000E14 A6 01            [ 1] 2819 	ld	a, #0x01
      000E16 CDr02r3A         [ 4] 2820 	call	_delay_s
      000E19 20 F2            [ 2] 2821 	jra	00102$
                                   2822 ;	main.c: 71: }
      000E1B 81               [ 4] 2823 	ret
                                   2824 	.area CODE
                                   2825 	.area CONST
                                   2826 	.area INITIALIZER
      000000                       2827 __xinit__ttf_rus_1:
      000000 00                    2828 	.db #0x00	; 0
      000001 44                    2829 	.db #0x44	; 68	'D'
      000002 44                    2830 	.db #0x44	; 68	'D'
      000003 44                    2831 	.db #0x44	; 68	'D'
      000004 44                    2832 	.db #0x44	; 68	'D'
      000005 7E                    2833 	.db #0x7e	; 126
      000006 02                    2834 	.db #0x02	; 2
      000007 00                    2835 	.db #0x00	; 0
      000008                       2836 __xinit__ttf_rus_2:
      000008 00                    2837 	.db #0x00	; 0
      000009 7C                    2838 	.db #0x7c	; 124
      00000A 42                    2839 	.db #0x42	; 66	'B'
      00000B 7C                    2840 	.db #0x7c	; 124
      00000C 42                    2841 	.db #0x42	; 66	'B'
      00000D 42                    2842 	.db #0x42	; 66	'B'
      00000E 7C                    2843 	.db #0x7c	; 124
      00000F 00                    2844 	.db #0x00	; 0
      000010                       2845 __xinit__ttf_rus_3:
      000010 00                    2846 	.db #0x00	; 0
      000011 7E                    2847 	.db #0x7e	; 126
      000012 40                    2848 	.db #0x40	; 64
      000013 40                    2849 	.db #0x40	; 64
      000014 7C                    2850 	.db #0x7c	; 124
      000015 40                    2851 	.db #0x40	; 64
      000016 7E                    2852 	.db #0x7e	; 126
      000017 00                    2853 	.db #0x00	; 0
      000018                       2854 __xinit__ttf_rus_4:
      000018 00                    2855 	.db #0x00	; 0
      000019 7E                    2856 	.db #0x7e	; 126
      00001A 18                    2857 	.db #0x18	; 24
      00001B 18                    2858 	.db #0x18	; 24
      00001C 18                    2859 	.db #0x18	; 24
      00001D 18                    2860 	.db #0x18	; 24
      00001E 18                    2861 	.db #0x18	; 24
      00001F 00                    2862 	.db #0x00	; 0
      000020                       2863 __xinit__ttf_rus_5:
      000020 00                    2864 	.db #0x00	; 0
      000021 7E                    2865 	.db #0x7e	; 126
      000022 42                    2866 	.db #0x42	; 66	'B'
      000023 42                    2867 	.db #0x42	; 66	'B'
      000024 7E                    2868 	.db #0x7e	; 126
      000025 42                    2869 	.db #0x42	; 66	'B'
      000026 42                    2870 	.db #0x42	; 66	'B'
      000027 00                    2871 	.db #0x00	; 0
      000028                       2872 __xinit__ttf_rus_6:
      000028 00                    2873 	.db #0x00	; 0
      000029 7E                    2874 	.db #0x7e	; 126
      00002A 40                    2875 	.db #0x40	; 64
      00002B 40                    2876 	.db #0x40	; 64
      00002C 40                    2877 	.db #0x40	; 64
      00002D 40                    2878 	.db #0x40	; 64
      00002E 7E                    2879 	.db #0x7e	; 126
      00002F 00                    2880 	.db #0x00	; 0
      000030                       2881 __xinit__ttf_rus_7:
      000030 00                    2882 	.db #0x00	; 0
      000031 7E                    2883 	.db #0x7e	; 126
      000032 40                    2884 	.db #0x40	; 64
      000033 40                    2885 	.db #0x40	; 64
      000034 40                    2886 	.db #0x40	; 64
      000035 40                    2887 	.db #0x40	; 64
      000036 40                    2888 	.db #0x40	; 64
      000037 00                    2889 	.db #0x00	; 0
      000038                       2890 __xinit__ttf_rus_8:
      000038 00                    2891 	.db #0x00	; 0
      000039 42                    2892 	.db #0x42	; 66	'B'
      00003A 66                    2893 	.db #0x66	; 102	'f'
      00003B 5A                    2894 	.db #0x5a	; 90	'Z'
      00003C 42                    2895 	.db #0x42	; 66	'B'
      00003D 42                    2896 	.db #0x42	; 66	'B'
      00003E 42                    2897 	.db #0x42	; 66	'B'
      00003F 00                    2898 	.db #0x00	; 0
      000040                       2899 __xinit__ttf_rus_9:
      000040 00                    2900 	.db #0x00	; 0
      000041 42                    2901 	.db #0x42	; 66	'B'
      000042 42                    2902 	.db #0x42	; 66	'B'
      000043 42                    2903 	.db #0x42	; 66	'B'
      000044 7E                    2904 	.db #0x7e	; 126
      000045 42                    2905 	.db #0x42	; 66	'B'
      000046 42                    2906 	.db #0x42	; 66	'B'
      000047 00                    2907 	.db #0x00	; 0
      000048                       2908 __xinit__ttf_rus_10:
      000048 00                    2909 	.db #0x00	; 0
      000049 7E                    2910 	.db #0x7e	; 126
      00004A 42                    2911 	.db #0x42	; 66	'B'
      00004B 42                    2912 	.db #0x42	; 66	'B'
      00004C 42                    2913 	.db #0x42	; 66	'B'
      00004D 42                    2914 	.db #0x42	; 66	'B'
      00004E 7E                    2915 	.db #0x7e	; 126
      00004F 00                    2916 	.db #0x00	; 0
      000050                       2917 __xinit__ttf_rus_11:
      000050 00                    2918 	.db #0x00	; 0
      000051 7E                    2919 	.db #0x7e	; 126
      000052 42                    2920 	.db #0x42	; 66	'B'
      000053 42                    2921 	.db #0x42	; 66	'B'
      000054 42                    2922 	.db #0x42	; 66	'B'
      000055 42                    2923 	.db #0x42	; 66	'B'
      000056 42                    2924 	.db #0x42	; 66	'B'
      000057 00                    2925 	.db #0x00	; 0
      000058                       2926 __xinit__ttf_rus_12:
      000058 00                    2927 	.db #0x00	; 0
      000059 42                    2928 	.db #0x42	; 66	'B'
      00005A 46                    2929 	.db #0x46	; 70	'F'
      00005B 4A                    2930 	.db #0x4a	; 74	'J'
      00005C 52                    2931 	.db #0x52	; 82	'R'
      00005D 62                    2932 	.db #0x62	; 98	'b'
      00005E 42                    2933 	.db #0x42	; 66	'B'
      00005F 00                    2934 	.db #0x00	; 0
      000060                       2935 __xinit__ttf_rus_13:
      000060 00                    2936 	.db #0x00	; 0
      000061 66                    2937 	.db #0x66	; 102	'f'
      000062 68                    2938 	.db #0x68	; 104	'h'
      000063 70                    2939 	.db #0x70	; 112	'p'
      000064 70                    2940 	.db #0x70	; 112	'p'
      000065 68                    2941 	.db #0x68	; 104	'h'
      000066 66                    2942 	.db #0x66	; 102	'f'
      000067 00                    2943 	.db #0x00	; 0
      000068                       2944 __xinit__ttf_rus_14:
      000068 00                    2945 	.db #0x00	; 0
      000069 7E                    2946 	.db #0x7e	; 126
      00006A 42                    2947 	.db #0x42	; 66	'B'
      00006B 42                    2948 	.db #0x42	; 66	'B'
      00006C 7E                    2949 	.db #0x7e	; 126
      00006D 40                    2950 	.db #0x40	; 64
      00006E 40                    2951 	.db #0x40	; 64
      00006F 00                    2952 	.db #0x00	; 0
      000070                       2953 __xinit__ttf_rus_15:
      000070 00                    2954 	.db #0x00	; 0
      000071 42                    2955 	.db #0x42	; 66	'B'
      000072 42                    2956 	.db #0x42	; 66	'B'
      000073 42                    2957 	.db #0x42	; 66	'B'
      000074 7A                    2958 	.db #0x7a	; 122	'z'
      000075 4A                    2959 	.db #0x4a	; 74	'J'
      000076 7A                    2960 	.db #0x7a	; 122	'z'
      000077 00                    2961 	.db #0x00	; 0
      000078                       2962 __xinit__ttf_rus_16:
      000078 00                    2963 	.db #0x00	; 0
      000079 18                    2964 	.db #0x18	; 24
      00007A 42                    2965 	.db #0x42	; 66	'B'
      00007B 46                    2966 	.db #0x46	; 70	'F'
      00007C 4A                    2967 	.db #0x4a	; 74	'J'
      00007D 52                    2968 	.db #0x52	; 82	'R'
      00007E 62                    2969 	.db #0x62	; 98	'b'
      00007F 00                    2970 	.db #0x00	; 0
      000080                       2971 __xinit__ttf_rus_17:
      000080 00                    2972 	.db #0x00	; 0
      000081 7E                    2973 	.db #0x7e	; 126
      000082 02                    2974 	.db #0x02	; 2
      000083 3C                    2975 	.db #0x3c	; 60
      000084 02                    2976 	.db #0x02	; 2
      000085 02                    2977 	.db #0x02	; 2
      000086 7E                    2978 	.db #0x7e	; 126
      000087 00                    2979 	.db #0x00	; 0
      000088                       2980 __xinit__ttf_rus_18:
      000088 00                    2981 	.db #0x00	; 0
      000089 1E                    2982 	.db #0x1e	; 30
      00008A 22                    2983 	.db #0x22	; 34
      00008B 22                    2984 	.db #0x22	; 34
      00008C 22                    2985 	.db #0x22	; 34
      00008D 22                    2986 	.db #0x22	; 34
      00008E 42                    2987 	.db #0x42	; 66	'B'
      00008F 00                    2988 	.db #0x00	; 0
      000090                       2989 __xinit__ttf_rus_19:
      000090 00                    2990 	.db #0x00	; 0
      000091 40                    2991 	.db #0x40	; 64
      000092 40                    2992 	.db #0x40	; 64
      000093 7E                    2993 	.db #0x7e	; 126
      000094 42                    2994 	.db #0x42	; 66	'B'
      000095 42                    2995 	.db #0x42	; 66	'B'
      000096 7E                    2996 	.db #0x7e	; 126
      000097 00                    2997 	.db #0x00	; 0
      000098                       2998 __xinit__ttf_rus_20:
      000098 00                    2999 	.db #0x00	; 0
      000099 5E                    3000 	.db #0x5e	; 94
      00009A 52                    3001 	.db #0x52	; 82	'R'
      00009B 72                    3002 	.db #0x72	; 114	'r'
      00009C 52                    3003 	.db #0x52	; 82	'R'
      00009D 52                    3004 	.db #0x52	; 82	'R'
      00009E 5E                    3005 	.db #0x5e	; 94
      00009F 00                    3006 	.db #0x00	; 0
      0000A0                       3007 __xinit__TIM2_IRQ:
      0000A0 00                    3008 	.db #0x00	; 0
      0000A1                       3009 __xinit__I2C_IRQ:
      0000A1 00                    3010 	.db #0x00	; 0
      0000A2                       3011 __xinit__ttf_void:
      0000A2 00                    3012 	.db #0x00	; 0
      0000A3 00                    3013 	.db #0x00	; 0
      0000A4 00                    3014 	.db #0x00	; 0
      0000A5 00                    3015 	.db #0x00	; 0
      0000A6 00                    3016 	.db #0x00	; 0
      0000A7 00                    3017 	.db #0x00	; 0
      0000A8 00                    3018 	.db #0x00	; 0
      0000A9 00                    3019 	.db #0x00	; 0
      0000AA                       3020 __xinit__ttf_num_1:
      0000AA 00                    3021 	.db #0x00	; 0
      0000AB 18                    3022 	.db #0x18	; 24
      0000AC 38                    3023 	.db #0x38	; 56	'8'
      0000AD 38                    3024 	.db #0x38	; 56	'8'
      0000AE 18                    3025 	.db #0x18	; 24
      0000AF 18                    3026 	.db #0x18	; 24
      0000B0 18                    3027 	.db #0x18	; 24
      0000B1 00                    3028 	.db #0x00	; 0
      0000B2                       3029 __xinit__ttf_num_2:
      0000B2 00                    3030 	.db #0x00	; 0
      0000B3 38                    3031 	.db #0x38	; 56	'8'
      0000B4 44                    3032 	.db #0x44	; 68	'D'
      0000B5 08                    3033 	.db #0x08	; 8
      0000B6 10                    3034 	.db #0x10	; 16
      0000B7 20                    3035 	.db #0x20	; 32
      0000B8 7C                    3036 	.db #0x7c	; 124
      0000B9 00                    3037 	.db #0x00	; 0
      0000BA                       3038 __xinit__ttf_num_3:
      0000BA 00                    3039 	.db #0x00	; 0
      0000BB 7C                    3040 	.db #0x7c	; 124
      0000BC 02                    3041 	.db #0x02	; 2
      0000BD 3C                    3042 	.db #0x3c	; 60
      0000BE 02                    3043 	.db #0x02	; 2
      0000BF 02                    3044 	.db #0x02	; 2
      0000C0 7C                    3045 	.db #0x7c	; 124
      0000C1 00                    3046 	.db #0x00	; 0
      0000C2                       3047 __xinit__ttf_num_4:
      0000C2 00                    3048 	.db #0x00	; 0
      0000C3 42                    3049 	.db #0x42	; 66	'B'
      0000C4 42                    3050 	.db #0x42	; 66	'B'
      0000C5 7E                    3051 	.db #0x7e	; 126
      0000C6 02                    3052 	.db #0x02	; 2
      0000C7 02                    3053 	.db #0x02	; 2
      0000C8 02                    3054 	.db #0x02	; 2
      0000C9 00                    3055 	.db #0x00	; 0
      0000CA                       3056 __xinit__ttf_num_5:
      0000CA 00                    3057 	.db #0x00	; 0
      0000CB 7E                    3058 	.db #0x7e	; 126
      0000CC 40                    3059 	.db #0x40	; 64
      0000CD 7C                    3060 	.db #0x7c	; 124
      0000CE 02                    3061 	.db #0x02	; 2
      0000CF 02                    3062 	.db #0x02	; 2
      0000D0 7C                    3063 	.db #0x7c	; 124
      0000D1 00                    3064 	.db #0x00	; 0
      0000D2                       3065 __xinit__ttf_num_6:
      0000D2 00                    3066 	.db #0x00	; 0
      0000D3 3C                    3067 	.db #0x3c	; 60
      0000D4 40                    3068 	.db #0x40	; 64
      0000D5 7C                    3069 	.db #0x7c	; 124
      0000D6 42                    3070 	.db #0x42	; 66	'B'
      0000D7 42                    3071 	.db #0x42	; 66	'B'
      0000D8 3C                    3072 	.db #0x3c	; 60
      0000D9 00                    3073 	.db #0x00	; 0
      0000DA                       3074 __xinit__ttf_num_7:
      0000DA 00                    3075 	.db #0x00	; 0
      0000DB 7E                    3076 	.db #0x7e	; 126
      0000DC 02                    3077 	.db #0x02	; 2
      0000DD 04                    3078 	.db #0x04	; 4
      0000DE 08                    3079 	.db #0x08	; 8
      0000DF 10                    3080 	.db #0x10	; 16
      0000E0 20                    3081 	.db #0x20	; 32
      0000E1 00                    3082 	.db #0x00	; 0
      0000E2                       3083 __xinit__ttf_num_8:
      0000E2 00                    3084 	.db #0x00	; 0
      0000E3 3C                    3085 	.db #0x3c	; 60
      0000E4 42                    3086 	.db #0x42	; 66	'B'
      0000E5 3C                    3087 	.db #0x3c	; 60
      0000E6 42                    3088 	.db #0x42	; 66	'B'
      0000E7 42                    3089 	.db #0x42	; 66	'B'
      0000E8 3C                    3090 	.db #0x3c	; 60
      0000E9 00                    3091 	.db #0x00	; 0
      0000EA                       3092 __xinit__ttf_num_9:
      0000EA 00                    3093 	.db #0x00	; 0
      0000EB 3C                    3094 	.db #0x3c	; 60
      0000EC 42                    3095 	.db #0x42	; 66	'B'
      0000ED 42                    3096 	.db #0x42	; 66	'B'
      0000EE 3E                    3097 	.db #0x3e	; 62
      0000EF 02                    3098 	.db #0x02	; 2
      0000F0 3C                    3099 	.db #0x3c	; 60
      0000F1 00                    3100 	.db #0x00	; 0
      0000F2                       3101 __xinit__ttf_num_0:
      0000F2 00                    3102 	.db #0x00	; 0
      0000F3 3C                    3103 	.db #0x3c	; 60
      0000F4 46                    3104 	.db #0x46	; 70	'F'
      0000F5 4A                    3105 	.db #0x4a	; 74	'J'
      0000F6 52                    3106 	.db #0x52	; 82	'R'
      0000F7 62                    3107 	.db #0x62	; 98	'b'
      0000F8 3C                    3108 	.db #0x3c	; 60
      0000F9 00                    3109 	.db #0x00	; 0
      0000FA                       3110 __xinit__ttf_corner_left_up:
      0000FA FF                    3111 	.db #0xff	; 255
      0000FB FF                    3112 	.db #0xff	; 255
      0000FC C0                    3113 	.db #0xc0	; 192
      0000FD C0                    3114 	.db #0xc0	; 192
      0000FE C0                    3115 	.db #0xc0	; 192
      0000FF C0                    3116 	.db #0xc0	; 192
      000100 C0                    3117 	.db #0xc0	; 192
      000101 C0                    3118 	.db #0xc0	; 192
      000102                       3119 __xinit__ttf_corner_right_up:
      000102 FF                    3120 	.db #0xff	; 255
      000103 FF                    3121 	.db #0xff	; 255
      000104 03                    3122 	.db #0x03	; 3
      000105 03                    3123 	.db #0x03	; 3
      000106 03                    3124 	.db #0x03	; 3
      000107 03                    3125 	.db #0x03	; 3
      000108 03                    3126 	.db #0x03	; 3
      000109 03                    3127 	.db #0x03	; 3
      00010A                       3128 __xinit__ttf_corner_left_down:
      00010A C0                    3129 	.db #0xc0	; 192
      00010B C0                    3130 	.db #0xc0	; 192
      00010C C0                    3131 	.db #0xc0	; 192
      00010D C0                    3132 	.db #0xc0	; 192
      00010E C0                    3133 	.db #0xc0	; 192
      00010F C0                    3134 	.db #0xc0	; 192
      000110 FF                    3135 	.db #0xff	; 255
      000111 FF                    3136 	.db #0xff	; 255
      000112                       3137 __xinit__ttf_corner_right_down:
      000112 03                    3138 	.db #0x03	; 3
      000113 03                    3139 	.db #0x03	; 3
      000114 03                    3140 	.db #0x03	; 3
      000115 03                    3141 	.db #0x03	; 3
      000116 03                    3142 	.db #0x03	; 3
      000117 03                    3143 	.db #0x03	; 3
      000118 FF                    3144 	.db #0xff	; 255
      000119 FF                    3145 	.db #0xff	; 255
      00011A                       3146 __xinit__ttf_line_right:
      00011A 03                    3147 	.db #0x03	; 3
      00011B 03                    3148 	.db #0x03	; 3
      00011C 03                    3149 	.db #0x03	; 3
      00011D 03                    3150 	.db #0x03	; 3
      00011E 03                    3151 	.db #0x03	; 3
      00011F 03                    3152 	.db #0x03	; 3
      000120 03                    3153 	.db #0x03	; 3
      000121 03                    3154 	.db #0x03	; 3
      000122                       3155 __xinit__ttf_line_left:
      000122 C0                    3156 	.db #0xc0	; 192
      000123 C0                    3157 	.db #0xc0	; 192
      000124 C0                    3158 	.db #0xc0	; 192
      000125 C0                    3159 	.db #0xc0	; 192
      000126 C0                    3160 	.db #0xc0	; 192
      000127 C0                    3161 	.db #0xc0	; 192
      000128 C0                    3162 	.db #0xc0	; 192
      000129 C0                    3163 	.db #0xc0	; 192
      00012A                       3164 __xinit__ttf_line_up:
      00012A FF                    3165 	.db #0xff	; 255
      00012B FF                    3166 	.db #0xff	; 255
      00012C 00                    3167 	.db #0x00	; 0
      00012D 00                    3168 	.db #0x00	; 0
      00012E 00                    3169 	.db #0x00	; 0
      00012F 00                    3170 	.db #0x00	; 0
      000130 00                    3171 	.db #0x00	; 0
      000131 00                    3172 	.db #0x00	; 0
      000132                       3173 __xinit__ttf_line_down:
      000132 00                    3174 	.db #0x00	; 0
      000133 00                    3175 	.db #0x00	; 0
      000134 00                    3176 	.db #0x00	; 0
      000135 00                    3177 	.db #0x00	; 0
      000136 00                    3178 	.db #0x00	; 0
      000137 00                    3179 	.db #0x00	; 0
      000138 FF                    3180 	.db #0xff	; 255
      000139 FF                    3181 	.db #0xff	; 255
      00013A                       3182 __xinit__main_buffer:
      00013A FF                    3183 	.db #0xff	; 255
      00013B 01                    3184 	.db #0x01	; 1
      00013C 01                    3185 	.db #0x01	; 1
      00013D 01                    3186 	.db #0x01	; 1
      00013E 01                    3187 	.db #0x01	; 1
      00013F 01                    3188 	.db #0x01	; 1
      000140 01                    3189 	.db #0x01	; 1
      000141 01                    3190 	.db #0x01	; 1
      000142 FD                    3191 	.db #0xfd	; 253
      000143 FD                    3192 	.db #0xfd	; 253
      000144 FD                    3193 	.db #0xfd	; 253
      000145 FD                    3194 	.db #0xfd	; 253
      000146 FD                    3195 	.db #0xfd	; 253
      000147 FD                    3196 	.db #0xfd	; 253
      000148 FD                    3197 	.db #0xfd	; 253
      000149 01                    3198 	.db #0x01	; 1
      00014A 01                    3199 	.db #0x01	; 1
      00014B 01                    3200 	.db #0x01	; 1
      00014C 01                    3201 	.db #0x01	; 1
      00014D 01                    3202 	.db #0x01	; 1
      00014E 01                    3203 	.db #0x01	; 1
      00014F 01                    3204 	.db #0x01	; 1
      000150 FD                    3205 	.db #0xfd	; 253
      000151 FD                    3206 	.db #0xfd	; 253
      000152 FD                    3207 	.db #0xfd	; 253
      000153 FD                    3208 	.db #0xfd	; 253
      000154 FD                    3209 	.db #0xfd	; 253
      000155 FD                    3210 	.db #0xfd	; 253
      000156 FD                    3211 	.db #0xfd	; 253
      000157 FD                    3212 	.db #0xfd	; 253
      000158 FD                    3213 	.db #0xfd	; 253
      000159 FD                    3214 	.db #0xfd	; 253
      00015A FD                    3215 	.db #0xfd	; 253
      00015B FD                    3216 	.db #0xfd	; 253
      00015C FD                    3217 	.db #0xfd	; 253
      00015D FD                    3218 	.db #0xfd	; 253
      00015E FD                    3219 	.db #0xfd	; 253
      00015F FD                    3220 	.db #0xfd	; 253
      000160 FD                    3221 	.db #0xfd	; 253
      000161 FD                    3222 	.db #0xfd	; 253
      000162 FD                    3223 	.db #0xfd	; 253
      000163 FD                    3224 	.db #0xfd	; 253
      000164 FD                    3225 	.db #0xfd	; 253
      000165 FD                    3226 	.db #0xfd	; 253
      000166 FD                    3227 	.db #0xfd	; 253
      000167 FD                    3228 	.db #0xfd	; 253
      000168 FD                    3229 	.db #0xfd	; 253
      000169 FD                    3230 	.db #0xfd	; 253
      00016A FD                    3231 	.db #0xfd	; 253
      00016B FD                    3232 	.db #0xfd	; 253
      00016C FD                    3233 	.db #0xfd	; 253
      00016D FD                    3234 	.db #0xfd	; 253
      00016E FD                    3235 	.db #0xfd	; 253
      00016F FD                    3236 	.db #0xfd	; 253
      000170 FD                    3237 	.db #0xfd	; 253
      000171 FD                    3238 	.db #0xfd	; 253
      000172 FD                    3239 	.db #0xfd	; 253
      000173 01                    3240 	.db #0x01	; 1
      000174 01                    3241 	.db #0x01	; 1
      000175 01                    3242 	.db #0x01	; 1
      000176 01                    3243 	.db #0x01	; 1
      000177 01                    3244 	.db #0x01	; 1
      000178 01                    3245 	.db #0x01	; 1
      000179 01                    3246 	.db #0x01	; 1
      00017A FD                    3247 	.db #0xfd	; 253
      00017B FD                    3248 	.db #0xfd	; 253
      00017C FD                    3249 	.db #0xfd	; 253
      00017D FD                    3250 	.db #0xfd	; 253
      00017E FD                    3251 	.db #0xfd	; 253
      00017F FD                    3252 	.db #0xfd	; 253
      000180 FD                    3253 	.db #0xfd	; 253
      000181 FD                    3254 	.db #0xfd	; 253
      000182 FD                    3255 	.db #0xfd	; 253
      000183 FD                    3256 	.db #0xfd	; 253
      000184 FD                    3257 	.db #0xfd	; 253
      000185 FD                    3258 	.db #0xfd	; 253
      000186 FD                    3259 	.db #0xfd	; 253
      000187 FD                    3260 	.db #0xfd	; 253
      000188 FD                    3261 	.db #0xfd	; 253
      000189 FD                    3262 	.db #0xfd	; 253
      00018A FD                    3263 	.db #0xfd	; 253
      00018B FD                    3264 	.db #0xfd	; 253
      00018C FD                    3265 	.db #0xfd	; 253
      00018D FD                    3266 	.db #0xfd	; 253
      00018E FD                    3267 	.db #0xfd	; 253
      00018F 01                    3268 	.db #0x01	; 1
      000190 01                    3269 	.db #0x01	; 1
      000191 01                    3270 	.db #0x01	; 1
      000192 01                    3271 	.db #0x01	; 1
      000193 01                    3272 	.db #0x01	; 1
      000194 01                    3273 	.db #0x01	; 1
      000195 01                    3274 	.db #0x01	; 1
      000196 01                    3275 	.db #0x01	; 1
      000197 01                    3276 	.db #0x01	; 1
      000198 01                    3277 	.db #0x01	; 1
      000199 01                    3278 	.db #0x01	; 1
      00019A 01                    3279 	.db #0x01	; 1
      00019B 01                    3280 	.db #0x01	; 1
      00019C 01                    3281 	.db #0x01	; 1
      00019D 3D                    3282 	.db #0x3d	; 61
      00019E 15                    3283 	.db #0x15	; 21
      00019F 3D                    3284 	.db #0x3d	; 61
      0001A0 01                    3285 	.db #0x01	; 1
      0001A1 3D                    3286 	.db #0x3d	; 61
      0001A2 21                    3287 	.db #0x21	; 33
      0001A3 21                    3288 	.db #0x21	; 33
      0001A4 01                    3289 	.db #0x01	; 1
      0001A5 3D                    3290 	.db #0x3d	; 61
      0001A6 15                    3291 	.db #0x15	; 21
      0001A7 1D                    3292 	.db #0x1d	; 29
      0001A8 01                    3293 	.db #0x01	; 1
      0001A9 3D                    3294 	.db #0x3d	; 61
      0001AA 11                    3295 	.db #0x11	; 17
      0001AB 3D                    3296 	.db #0x3d	; 61
      0001AC 01                    3297 	.db #0x01	; 1
      0001AD 3D                    3298 	.db #0x3d	; 61
      0001AE 15                    3299 	.db #0x15	; 21
      0001AF 3D                    3300 	.db #0x3d	; 61
      0001B0 01                    3301 	.db #0x01	; 1
      0001B1 01                    3302 	.db #0x01	; 1
      0001B2 3D                    3303 	.db #0x3d	; 61
      0001B3 25                    3304 	.db #0x25	; 37
      0001B4 3D                    3305 	.db #0x3d	; 61
      0001B5 01                    3306 	.db #0x01	; 1
      0001B6 05                    3307 	.db #0x05	; 5
      0001B7 3D                    3308 	.db #0x3d	; 61
      0001B8 01                    3309 	.db #0x01	; 1
      0001B9 FF                    3310 	.db #0xff	; 255
      0001BA FF                    3311 	.db #0xff	; 255
      0001BB 00                    3312 	.db #0x00	; 0
      0001BC 00                    3313 	.db #0x00	; 0
      0001BD 00                    3314 	.db #0x00	; 0
      0001BE 00                    3315 	.db #0x00	; 0
      0001BF 00                    3316 	.db #0x00	; 0
      0001C0 00                    3317 	.db #0x00	; 0
      0001C1 00                    3318 	.db #0x00	; 0
      0001C2 FF                    3319 	.db #0xff	; 255
      0001C3 FF                    3320 	.db #0xff	; 255
      0001C4 FF                    3321 	.db #0xff	; 255
      0001C5 FF                    3322 	.db #0xff	; 255
      0001C6 FF                    3323 	.db #0xff	; 255
      0001C7 FF                    3324 	.db #0xff	; 255
      0001C8 FF                    3325 	.db #0xff	; 255
      0001C9 FE                    3326 	.db #0xfe	; 254
      0001CA FE                    3327 	.db #0xfe	; 254
      0001CB FE                    3328 	.db #0xfe	; 254
      0001CC FE                    3329 	.db #0xfe	; 254
      0001CD FE                    3330 	.db #0xfe	; 254
      0001CE FE                    3331 	.db #0xfe	; 254
      0001CF FE                    3332 	.db #0xfe	; 254
      0001D0 FF                    3333 	.db #0xff	; 255
      0001D1 FF                    3334 	.db #0xff	; 255
      0001D2 FF                    3335 	.db #0xff	; 255
      0001D3 FF                    3336 	.db #0xff	; 255
      0001D4 FF                    3337 	.db #0xff	; 255
      0001D5 FF                    3338 	.db #0xff	; 255
      0001D6 FF                    3339 	.db #0xff	; 255
      0001D7 01                    3340 	.db #0x01	; 1
      0001D8 01                    3341 	.db #0x01	; 1
      0001D9 01                    3342 	.db #0x01	; 1
      0001DA 01                    3343 	.db #0x01	; 1
      0001DB 01                    3344 	.db #0x01	; 1
      0001DC 01                    3345 	.db #0x01	; 1
      0001DD 01                    3346 	.db #0x01	; 1
      0001DE FF                    3347 	.db #0xff	; 255
      0001DF FF                    3348 	.db #0xff	; 255
      0001E0 FF                    3349 	.db #0xff	; 255
      0001E1 FF                    3350 	.db #0xff	; 255
      0001E2 FF                    3351 	.db #0xff	; 255
      0001E3 FF                    3352 	.db #0xff	; 255
      0001E4 FF                    3353 	.db #0xff	; 255
      0001E5 01                    3354 	.db #0x01	; 1
      0001E6 01                    3355 	.db #0x01	; 1
      0001E7 01                    3356 	.db #0x01	; 1
      0001E8 01                    3357 	.db #0x01	; 1
      0001E9 01                    3358 	.db #0x01	; 1
      0001EA 01                    3359 	.db #0x01	; 1
      0001EB 01                    3360 	.db #0x01	; 1
      0001EC FF                    3361 	.db #0xff	; 255
      0001ED FF                    3362 	.db #0xff	; 255
      0001EE FF                    3363 	.db #0xff	; 255
      0001EF FF                    3364 	.db #0xff	; 255
      0001F0 FF                    3365 	.db #0xff	; 255
      0001F1 FF                    3366 	.db #0xff	; 255
      0001F2 FF                    3367 	.db #0xff	; 255
      0001F3 00                    3368 	.db #0x00	; 0
      0001F4 00                    3369 	.db #0x00	; 0
      0001F5 00                    3370 	.db #0x00	; 0
      0001F6 00                    3371 	.db #0x00	; 0
      0001F7 00                    3372 	.db #0x00	; 0
      0001F8 00                    3373 	.db #0x00	; 0
      0001F9 00                    3374 	.db #0x00	; 0
      0001FA FF                    3375 	.db #0xff	; 255
      0001FB FF                    3376 	.db #0xff	; 255
      0001FC FF                    3377 	.db #0xff	; 255
      0001FD FF                    3378 	.db #0xff	; 255
      0001FE FF                    3379 	.db #0xff	; 255
      0001FF FF                    3380 	.db #0xff	; 255
      000200 FF                    3381 	.db #0xff	; 255
      000201 01                    3382 	.db #0x01	; 1
      000202 01                    3383 	.db #0x01	; 1
      000203 01                    3384 	.db #0x01	; 1
      000204 01                    3385 	.db #0x01	; 1
      000205 01                    3386 	.db #0x01	; 1
      000206 01                    3387 	.db #0x01	; 1
      000207 01                    3388 	.db #0x01	; 1
      000208 FF                    3389 	.db #0xff	; 255
      000209 FF                    3390 	.db #0xff	; 255
      00020A FF                    3391 	.db #0xff	; 255
      00020B FF                    3392 	.db #0xff	; 255
      00020C FF                    3393 	.db #0xff	; 255
      00020D FF                    3394 	.db #0xff	; 255
      00020E FF                    3395 	.db #0xff	; 255
      00020F 00                    3396 	.db #0x00	; 0
      000210 00                    3397 	.db #0x00	; 0
      000211 00                    3398 	.db #0x00	; 0
      000212 00                    3399 	.db #0x00	; 0
      000213 00                    3400 	.db #0x00	; 0
      000214 00                    3401 	.db #0x00	; 0
      000215 00                    3402 	.db #0x00	; 0
      000216 00                    3403 	.db #0x00	; 0
      000217 00                    3404 	.db #0x00	; 0
      000218 00                    3405 	.db #0x00	; 0
      000219 00                    3406 	.db #0x00	; 0
      00021A 00                    3407 	.db #0x00	; 0
      00021B 00                    3408 	.db #0x00	; 0
      00021C 00                    3409 	.db #0x00	; 0
      00021D 00                    3410 	.db #0x00	; 0
      00021E 00                    3411 	.db #0x00	; 0
      00021F 00                    3412 	.db #0x00	; 0
      000220 00                    3413 	.db #0x00	; 0
      000221 00                    3414 	.db #0x00	; 0
      000222 00                    3415 	.db #0x00	; 0
      000223 00                    3416 	.db #0x00	; 0
      000224 00                    3417 	.db #0x00	; 0
      000225 00                    3418 	.db #0x00	; 0
      000226 00                    3419 	.db #0x00	; 0
      000227 00                    3420 	.db #0x00	; 0
      000228 00                    3421 	.db #0x00	; 0
      000229 00                    3422 	.db #0x00	; 0
      00022A 00                    3423 	.db #0x00	; 0
      00022B 00                    3424 	.db #0x00	; 0
      00022C 00                    3425 	.db #0x00	; 0
      00022D 00                    3426 	.db #0x00	; 0
      00022E 00                    3427 	.db #0x00	; 0
      00022F 00                    3428 	.db #0x00	; 0
      000230 00                    3429 	.db #0x00	; 0
      000231 00                    3430 	.db #0x00	; 0
      000232 00                    3431 	.db #0x00	; 0
      000233 00                    3432 	.db #0x00	; 0
      000234 00                    3433 	.db #0x00	; 0
      000235 00                    3434 	.db #0x00	; 0
      000236 00                    3435 	.db #0x00	; 0
      000237 00                    3436 	.db #0x00	; 0
      000238 00                    3437 	.db #0x00	; 0
      000239 FF                    3438 	.db #0xff	; 255
      00023A FF                    3439 	.db #0xff	; 255
      00023B 00                    3440 	.db #0x00	; 0
      00023C 00                    3441 	.db #0x00	; 0
      00023D 00                    3442 	.db #0x00	; 0
      00023E 00                    3443 	.db #0x00	; 0
      00023F 00                    3444 	.db #0x00	; 0
      000240 00                    3445 	.db #0x00	; 0
      000241 00                    3446 	.db #0x00	; 0
      000242 FF                    3447 	.db #0xff	; 255
      000243 FF                    3448 	.db #0xff	; 255
      000244 FF                    3449 	.db #0xff	; 255
      000245 FF                    3450 	.db #0xff	; 255
      000246 FF                    3451 	.db #0xff	; 255
      000247 FF                    3452 	.db #0xff	; 255
      000248 FF                    3453 	.db #0xff	; 255
      000249 00                    3454 	.db #0x00	; 0
      00024A 00                    3455 	.db #0x00	; 0
      00024B 00                    3456 	.db #0x00	; 0
      00024C 00                    3457 	.db #0x00	; 0
      00024D 00                    3458 	.db #0x00	; 0
      00024E 00                    3459 	.db #0x00	; 0
      00024F 00                    3460 	.db #0x00	; 0
      000250 FF                    3461 	.db #0xff	; 255
      000251 FF                    3462 	.db #0xff	; 255
      000252 FF                    3463 	.db #0xff	; 255
      000253 FF                    3464 	.db #0xff	; 255
      000254 FF                    3465 	.db #0xff	; 255
      000255 FF                    3466 	.db #0xff	; 255
      000256 FF                    3467 	.db #0xff	; 255
      000257 00                    3468 	.db #0x00	; 0
      000258 00                    3469 	.db #0x00	; 0
      000259 00                    3470 	.db #0x00	; 0
      00025A 00                    3471 	.db #0x00	; 0
      00025B 00                    3472 	.db #0x00	; 0
      00025C 00                    3473 	.db #0x00	; 0
      00025D 00                    3474 	.db #0x00	; 0
      00025E FF                    3475 	.db #0xff	; 255
      00025F FF                    3476 	.db #0xff	; 255
      000260 FF                    3477 	.db #0xff	; 255
      000261 FF                    3478 	.db #0xff	; 255
      000262 FF                    3479 	.db #0xff	; 255
      000263 FF                    3480 	.db #0xff	; 255
      000264 FF                    3481 	.db #0xff	; 255
      000265 00                    3482 	.db #0x00	; 0
      000266 00                    3483 	.db #0x00	; 0
      000267 00                    3484 	.db #0x00	; 0
      000268 00                    3485 	.db #0x00	; 0
      000269 00                    3486 	.db #0x00	; 0
      00026A 00                    3487 	.db #0x00	; 0
      00026B 00                    3488 	.db #0x00	; 0
      00026C FF                    3489 	.db #0xff	; 255
      00026D FF                    3490 	.db #0xff	; 255
      00026E FF                    3491 	.db #0xff	; 255
      00026F FF                    3492 	.db #0xff	; 255
      000270 FF                    3493 	.db #0xff	; 255
      000271 FF                    3494 	.db #0xff	; 255
      000272 FF                    3495 	.db #0xff	; 255
      000273 7F                    3496 	.db #0x7f	; 127
      000274 7F                    3497 	.db #0x7f	; 127
      000275 7F                    3498 	.db #0x7f	; 127
      000276 7F                    3499 	.db #0x7f	; 127
      000277 7F                    3500 	.db #0x7f	; 127
      000278 7F                    3501 	.db #0x7f	; 127
      000279 7F                    3502 	.db #0x7f	; 127
      00027A FF                    3503 	.db #0xff	; 255
      00027B FF                    3504 	.db #0xff	; 255
      00027C FF                    3505 	.db #0xff	; 255
      00027D FF                    3506 	.db #0xff	; 255
      00027E FF                    3507 	.db #0xff	; 255
      00027F FF                    3508 	.db #0xff	; 255
      000280 FF                    3509 	.db #0xff	; 255
      000281 7F                    3510 	.db #0x7f	; 127
      000282 7F                    3511 	.db #0x7f	; 127
      000283 7F                    3512 	.db #0x7f	; 127
      000284 7F                    3513 	.db #0x7f	; 127
      000285 7F                    3514 	.db #0x7f	; 127
      000286 7F                    3515 	.db #0x7f	; 127
      000287 7F                    3516 	.db #0x7f	; 127
      000288 80                    3517 	.db #0x80	; 128
      000289 80                    3518 	.db #0x80	; 128
      00028A 80                    3519 	.db #0x80	; 128
      00028B 80                    3520 	.db #0x80	; 128
      00028C 80                    3521 	.db #0x80	; 128
      00028D 80                    3522 	.db #0x80	; 128
      00028E 80                    3523 	.db #0x80	; 128
      00028F 00                    3524 	.db #0x00	; 0
      000290 00                    3525 	.db #0x00	; 0
      000291 00                    3526 	.db #0x00	; 0
      000292 80                    3527 	.db #0x80	; 128
      000293 80                    3528 	.db #0x80	; 128
      000294 80                    3529 	.db #0x80	; 128
      000295 80                    3530 	.db #0x80	; 128
      000296 80                    3531 	.db #0x80	; 128
      000297 80                    3532 	.db #0x80	; 128
      000298 80                    3533 	.db #0x80	; 128
      000299 00                    3534 	.db #0x00	; 0
      00029A 00                    3535 	.db #0x00	; 0
      00029B 00                    3536 	.db #0x00	; 0
      00029C 00                    3537 	.db #0x00	; 0
      00029D 00                    3538 	.db #0x00	; 0
      00029E 00                    3539 	.db #0x00	; 0
      00029F 00                    3540 	.db #0x00	; 0
      0002A0 00                    3541 	.db #0x00	; 0
      0002A1 00                    3542 	.db #0x00	; 0
      0002A2 00                    3543 	.db #0x00	; 0
      0002A3 00                    3544 	.db #0x00	; 0
      0002A4 00                    3545 	.db #0x00	; 0
      0002A5 00                    3546 	.db #0x00	; 0
      0002A6 00                    3547 	.db #0x00	; 0
      0002A7 00                    3548 	.db #0x00	; 0
      0002A8 00                    3549 	.db #0x00	; 0
      0002A9 00                    3550 	.db #0x00	; 0
      0002AA 00                    3551 	.db #0x00	; 0
      0002AB 00                    3552 	.db #0x00	; 0
      0002AC 00                    3553 	.db #0x00	; 0
      0002AD 00                    3554 	.db #0x00	; 0
      0002AE 00                    3555 	.db #0x00	; 0
      0002AF 00                    3556 	.db #0x00	; 0
      0002B0 00                    3557 	.db #0x00	; 0
      0002B1 00                    3558 	.db #0x00	; 0
      0002B2 00                    3559 	.db #0x00	; 0
      0002B3 00                    3560 	.db #0x00	; 0
      0002B4 00                    3561 	.db #0x00	; 0
      0002B5 00                    3562 	.db #0x00	; 0
      0002B6 00                    3563 	.db #0x00	; 0
      0002B7 00                    3564 	.db #0x00	; 0
      0002B8 00                    3565 	.db #0x00	; 0
      0002B9 FF                    3566 	.db #0xff	; 255
      0002BA FF                    3567 	.db #0xff	; 255
      0002BB 80                    3568 	.db #0x80	; 128
      0002BC 80                    3569 	.db #0x80	; 128
      0002BD 80                    3570 	.db #0x80	; 128
      0002BE 80                    3571 	.db #0x80	; 128
      0002BF 80                    3572 	.db #0x80	; 128
      0002C0 80                    3573 	.db #0x80	; 128
      0002C1 80                    3574 	.db #0x80	; 128
      0002C2 BF                    3575 	.db #0xbf	; 191
      0002C3 BF                    3576 	.db #0xbf	; 191
      0002C4 BF                    3577 	.db #0xbf	; 191
      0002C5 BF                    3578 	.db #0xbf	; 191
      0002C6 BF                    3579 	.db #0xbf	; 191
      0002C7 BF                    3580 	.db #0xbf	; 191
      0002C8 BF                    3581 	.db #0xbf	; 191
      0002C9 80                    3582 	.db #0x80	; 128
      0002CA 80                    3583 	.db #0x80	; 128
      0002CB 80                    3584 	.db #0x80	; 128
      0002CC 80                    3585 	.db #0x80	; 128
      0002CD 80                    3586 	.db #0x80	; 128
      0002CE 80                    3587 	.db #0x80	; 128
      0002CF 80                    3588 	.db #0x80	; 128
      0002D0 BF                    3589 	.db #0xbf	; 191
      0002D1 BF                    3590 	.db #0xbf	; 191
      0002D2 BF                    3591 	.db #0xbf	; 191
      0002D3 BF                    3592 	.db #0xbf	; 191
      0002D4 BF                    3593 	.db #0xbf	; 191
      0002D5 BF                    3594 	.db #0xbf	; 191
      0002D6 BF                    3595 	.db #0xbf	; 191
      0002D7 80                    3596 	.db #0x80	; 128
      0002D8 80                    3597 	.db #0x80	; 128
      0002D9 80                    3598 	.db #0x80	; 128
      0002DA 80                    3599 	.db #0x80	; 128
      0002DB 80                    3600 	.db #0x80	; 128
      0002DC 80                    3601 	.db #0x80	; 128
      0002DD 80                    3602 	.db #0x80	; 128
      0002DE BF                    3603 	.db #0xbf	; 191
      0002DF BF                    3604 	.db #0xbf	; 191
      0002E0 BF                    3605 	.db #0xbf	; 191
      0002E1 BF                    3606 	.db #0xbf	; 191
      0002E2 BF                    3607 	.db #0xbf	; 191
      0002E3 BF                    3608 	.db #0xbf	; 191
      0002E4 BF                    3609 	.db #0xbf	; 191
      0002E5 80                    3610 	.db #0x80	; 128
      0002E6 80                    3611 	.db #0x80	; 128
      0002E7 80                    3612 	.db #0x80	; 128
      0002E8 80                    3613 	.db #0x80	; 128
      0002E9 80                    3614 	.db #0x80	; 128
      0002EA 80                    3615 	.db #0x80	; 128
      0002EB 80                    3616 	.db #0x80	; 128
      0002EC BF                    3617 	.db #0xbf	; 191
      0002ED BF                    3618 	.db #0xbf	; 191
      0002EE BF                    3619 	.db #0xbf	; 191
      0002EF BF                    3620 	.db #0xbf	; 191
      0002F0 BF                    3621 	.db #0xbf	; 191
      0002F1 BF                    3622 	.db #0xbf	; 191
      0002F2 BF                    3623 	.db #0xbf	; 191
      0002F3 80                    3624 	.db #0x80	; 128
      0002F4 80                    3625 	.db #0x80	; 128
      0002F5 80                    3626 	.db #0x80	; 128
      0002F6 80                    3627 	.db #0x80	; 128
      0002F7 80                    3628 	.db #0x80	; 128
      0002F8 80                    3629 	.db #0x80	; 128
      0002F9 80                    3630 	.db #0x80	; 128
      0002FA BF                    3631 	.db #0xbf	; 191
      0002FB BF                    3632 	.db #0xbf	; 191
      0002FC BF                    3633 	.db #0xbf	; 191
      0002FD BF                    3634 	.db #0xbf	; 191
      0002FE BF                    3635 	.db #0xbf	; 191
      0002FF BF                    3636 	.db #0xbf	; 191
      000300 BF                    3637 	.db #0xbf	; 191
      000301 80                    3638 	.db #0x80	; 128
      000302 80                    3639 	.db #0x80	; 128
      000303 80                    3640 	.db #0x80	; 128
      000304 80                    3641 	.db #0x80	; 128
      000305 80                    3642 	.db #0x80	; 128
      000306 80                    3643 	.db #0x80	; 128
      000307 80                    3644 	.db #0x80	; 128
      000308 BF                    3645 	.db #0xbf	; 191
      000309 BF                    3646 	.db #0xbf	; 191
      00030A BF                    3647 	.db #0xbf	; 191
      00030B BF                    3648 	.db #0xbf	; 191
      00030C BF                    3649 	.db #0xbf	; 191
      00030D BF                    3650 	.db #0xbf	; 191
      00030E BF                    3651 	.db #0xbf	; 191
      00030F 80                    3652 	.db #0x80	; 128
      000310 80                    3653 	.db #0x80	; 128
      000311 80                    3654 	.db #0x80	; 128
      000312 B1                    3655 	.db #0xb1	; 177
      000313 B1                    3656 	.db #0xb1	; 177
      000314 BF                    3657 	.db #0xbf	; 191
      000315 BF                    3658 	.db #0xbf	; 191
      000316 BF                    3659 	.db #0xbf	; 191
      000317 B1                    3660 	.db #0xb1	; 177
      000318 B1                    3661 	.db #0xb1	; 177
      000319 80                    3662 	.db #0x80	; 128
      00031A 80                    3663 	.db #0x80	; 128
      00031B BF                    3664 	.db #0xbf	; 191
      00031C BF                    3665 	.db #0xbf	; 191
      00031D 83                    3666 	.db #0x83	; 131
      00031E 83                    3667 	.db #0x83	; 131
      00031F BF                    3668 	.db #0xbf	; 191
      000320 BE                    3669 	.db #0xbe	; 190
      000321 80                    3670 	.db #0x80	; 128
      000322 80                    3671 	.db #0x80	; 128
      000323 BF                    3672 	.db #0xbf	; 191
      000324 BF                    3673 	.db #0xbf	; 191
      000325 B3                    3674 	.db #0xb3	; 179
      000326 B3                    3675 	.db #0xb3	; 179
      000327 B3                    3676 	.db #0xb3	; 179
      000328 B3                    3677 	.db #0xb3	; 179
      000329 80                    3678 	.db #0x80	; 128
      00032A 80                    3679 	.db #0x80	; 128
      00032B 80                    3680 	.db #0x80	; 128
      00032C 80                    3681 	.db #0x80	; 128
      00032D B0                    3682 	.db #0xb0	; 176
      00032E B0                    3683 	.db #0xb0	; 176
      00032F 80                    3684 	.db #0x80	; 128
      000330 80                    3685 	.db #0x80	; 128
      000331 80                    3686 	.db #0x80	; 128
      000332 80                    3687 	.db #0x80	; 128
      000333 80                    3688 	.db #0x80	; 128
      000334 80                    3689 	.db #0x80	; 128
      000335 80                    3690 	.db #0x80	; 128
      000336 80                    3691 	.db #0x80	; 128
      000337 80                    3692 	.db #0x80	; 128
      000338 80                    3693 	.db #0x80	; 128
      000339 FF                    3694 	.db #0xff	; 255
                                   3695 	.area CABS (ABS)
