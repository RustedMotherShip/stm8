                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gg
                                     13 	.globl _display_clean
                                     14 	.globl _display_set
                                     15 	.globl _display_buffer_fill_entire
                                     16 	.globl _display_draw_pixel
                                     17 	.globl _display_set_params_to_write
                                     18 	.globl _display_init
                                     19 	.globl _delay
                                     20 	.globl _set_bit
                                     21 	.globl _get_bit
                                     22 	.globl _setup
                                     23 	.globl _i2c_scan
                                     24 	.globl _i2c_write
                                     25 	.globl _i2c_send_byte
                                     26 	.globl _i2c_read
                                     27 	.globl _i2c_read_byte
                                     28 	.globl _i2c_send_address
                                     29 	.globl _i2c_stop
                                     30 	.globl _i2c_start
                                     31 	.globl _i2c_init
                                     32 	.globl _uart_read
                                     33 	.globl _uart_write_byte
                                     34 	.globl _uart_read_byte
                                     35 	.globl _uart_init
                                     36 	.globl _uart_reciever_irq
                                     37 	.globl _uart_transmission_irq
                                     38 	.globl _splash
                                     39 	.globl _I2C_IRQ
                                     40 	.globl _buf_size
                                     41 	.globl _buf_pos
                                     42 	.globl _rx_buf_pointer
                                     43 	.globl _tx_buf_pointer
                                     44 	.globl _uart_write
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DATA
      000000                         49 _tx_buf_pointer::
      000000                         50 	.ds 2
      000002                         51 _rx_buf_pointer::
      000002                         52 	.ds 2
      000004                         53 _buf_pos::
      000004                         54 	.ds 1
      000005                         55 _buf_size::
      000005                         56 	.ds 1
                                     57 ;--------------------------------------------------------
                                     58 ; ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area INITIALIZED
      000000                         61 _I2C_IRQ::
      000000                         62 	.ds 1
      000001                         63 _splash::
      000001                         64 	.ds 512
                                     65 ;--------------------------------------------------------
                                     66 ; Stack segment in internal ram
                                     67 ;--------------------------------------------------------
                                     68 	.area SSEG
      000000                         69 __start__stack:
      000000                         70 	.ds	1
                                     71 
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area DABS (ABS)
                                     76 
                                     77 ; default segment ordering for linker
                                     78 	.area HOME
                                     79 	.area GSINIT
                                     80 	.area GSFINAL
                                     81 	.area CONST
                                     82 	.area INITIALIZER
                                     83 	.area CODE
                                     84 
                                     85 ;--------------------------------------------------------
                                     86 ; interrupt vector
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME
      000000                         89 __interrupt_vect:
      000000 82v00u00u00             90 	int s_GSINIT ; reset
      000004 82 00 00 00             91 	int 0x000000 ; trap
      000008 82 00 00 00             92 	int 0x000000 ; int0
      00000C 82 00 00 00             93 	int 0x000000 ; int1
      000010 82 00 00 00             94 	int 0x000000 ; int2
      000014 82 00 00 00             95 	int 0x000000 ; int3
      000018 82 00 00 00             96 	int 0x000000 ; int4
      00001C 82 00 00 00             97 	int 0x000000 ; int5
      000020 82 00 00 00             98 	int 0x000000 ; int6
      000024 82 00 00 00             99 	int 0x000000 ; int7
      000028 82 00 00 00            100 	int 0x000000 ; int8
      00002C 82 00 00 00            101 	int 0x000000 ; int9
      000030 82 00 00 00            102 	int 0x000000 ; int10
      000034 82 00 00 00            103 	int 0x000000 ; int11
      000038 82 00 00 00            104 	int 0x000000 ; int12
      00003C 82 00 00 00            105 	int 0x000000 ; int13
      000040 82 00 00 00            106 	int 0x000000 ; int14
      000044 82 00 00 00            107 	int 0x000000 ; int15
      000048 82 00 00 00            108 	int 0x000000 ; int16
      00004C 82v00u00u00            109 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            110 	int _uart_reciever_irq ; int18
                                    111 ;--------------------------------------------------------
                                    112 ; global & static initialisations
                                    113 ;--------------------------------------------------------
                                    114 	.area HOME
                                    115 	.area GSINIT
                                    116 	.area GSFINAL
                                    117 	.area GSINIT
      000000 CDr00r00         [ 4]  118 	call	___sdcc_external_startup
      000003 4D               [ 1]  119 	tnz	a
      000004 27 03            [ 1]  120 	jreq	__sdcc_init_data
      000006 CCr00r54         [ 2]  121 	jp	__sdcc_program_startup
      000009                        122 __sdcc_init_data:
                                    123 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  124 	ldw x, #l_DATA
      00000C 27 07            [ 1]  125 	jreq	00002$
      00000E                        126 00001$:
      00000E 72 4FuFFuFF      [ 1]  127 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  128 	decw x
      000013 26 F9            [ 1]  129 	jrne	00001$
      000015                        130 00002$:
      000015 AEr00r00         [ 2]  131 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  132 	jreq	00004$
      00001A                        133 00003$:
      00001A D6uFFuFF         [ 1]  134 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  135 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  136 	decw	x
      000021 26 F7            [ 1]  137 	jrne	00003$
      000023                        138 00004$:
                                    139 ; stm8_genXINIT() end
                                    140 	.area GSFINAL
      000000 CCr00r54         [ 2]  141 	jp	__sdcc_program_startup
                                    142 ;--------------------------------------------------------
                                    143 ; Home
                                    144 ;--------------------------------------------------------
                                    145 	.area HOME
                                    146 	.area HOME
      000054                        147 __sdcc_program_startup:
      000054 CCr0Br7E         [ 2]  148 	jp	_main
                                    149 ;	return from main will return to caller
                                    150 ;--------------------------------------------------------
                                    151 ; code
                                    152 ;--------------------------------------------------------
                                    153 	.area CODE
                                    154 ;	libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    155 ;	-----------------------------------------
                                    156 ;	 function uart_transmission_irq
                                    157 ;	-----------------------------------------
      000000                        158 _uart_transmission_irq:
                                    159 ;	libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  160 	ldw	x, #0x5230
      000003 F6               [ 1]  161 	ld	a, (x)
      000004 4E               [ 1]  162 	swap	a
      000005 44               [ 1]  163 	srl	a
      000006 44               [ 1]  164 	srl	a
      000007 44               [ 1]  165 	srl	a
      000008 A5 01            [ 1]  166 	bcp	a, #0x01
      00000A 27 2F            [ 1]  167 	jreq	00107$
                                    168 ;	libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  169 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  170 	add	a, _buf_pos+0
      000012 97               [ 1]  171 	ld	xl, a
      000013 C6u00u00         [ 1]  172 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  173 	adc	a, #0x00
      000018 95               [ 1]  174 	ld	xh, a
      000019 F6               [ 1]  175 	ld	a, (x)
      00001A 27 1B            [ 1]  176 	jreq	00102$
      00001C C6u00u04         [ 1]  177 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  178 	cp	a, _buf_size+0
      000022 24 13            [ 1]  179 	jrnc	00102$
                                    180 ;	libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  181 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  182 	inc	_buf_pos+0
      00002B 5F               [ 1]  183 	clrw	x
      00002C 97               [ 1]  184 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  185 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  186 	ld	a, (x)
      000032 C7 52 31         [ 1]  187 	ld	0x5231, a
      000035 20 04            [ 2]  188 	jra	00107$
      000037                        189 00102$:
                                    190 ;	libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  191 	bres	0x5235, #7
      00003B                        192 00107$:
                                    193 ;	libs/uart_lib.c: 14: }
      00003B 80               [11]  194 	iret
                                    195 ;	libs/uart_lib.c: 15: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    196 ;	-----------------------------------------
                                    197 ;	 function uart_reciever_irq
                                    198 ;	-----------------------------------------
      00003C                        199 _uart_reciever_irq:
      00003C 88               [ 1]  200 	push	a
                                    201 ;	libs/uart_lib.c: 19: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  202 	ld	a, 0x5230
      000040 4E               [ 1]  203 	swap	a
      000041 44               [ 1]  204 	srl	a
      000042 A5 01            [ 1]  205 	bcp	a, #0x01
      000044 27 27            [ 1]  206 	jreq	00107$
                                    207 ;	libs/uart_lib.c: 21: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  208 	ld	a, 0x5231
                                    209 ;	libs/uart_lib.c: 22: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  210 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  211 	cp	a, #0x0a
      00004D 27 1A            [ 1]  212 	jreq	00102$
      00004F C6u00u04         [ 1]  213 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  214 	cp	a, _buf_size+0
      000055 24 12            [ 1]  215 	jrnc	00102$
                                    216 ;	libs/uart_lib.c: 23: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  217 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  218 	inc	_buf_pos+0
      00005E 5F               [ 1]  219 	clrw	x
      00005F 97               [ 1]  220 	ld	xl, a
      000060 72 BBu00u02      [ 2]  221 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  222 	ld	a, (0x01, sp)
      000066 F7               [ 1]  223 	ld	(x), a
      000067 20 04            [ 2]  224 	jra	00107$
      000069                        225 00102$:
                                    226 ;	libs/uart_lib.c: 25: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  227 	bres	0x5235, #5
      00006D                        228 00107$:
                                    229 ;	libs/uart_lib.c: 29: }
      00006D 84               [ 1]  230 	pop	a
      00006E 80               [11]  231 	iret
                                    232 ;	libs/uart_lib.c: 30: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    233 ;	-----------------------------------------
                                    234 ;	 function uart_init
                                    235 ;	-----------------------------------------
      00006F                        236 _uart_init:
      00006F 52 02            [ 2]  237 	sub	sp, #2
      000071 1F 01            [ 2]  238 	ldw	(0x01, sp), x
                                    239 ;	libs/uart_lib.c: 34: UART1_CR2 -> TEN = 1; // Transmitter enable
      000073 AE 52 35         [ 2]  240 	ldw	x, #0x5235
      000076 88               [ 1]  241 	push	a
      000077 F6               [ 1]  242 	ld	a, (x)
      000078 AA 08            [ 1]  243 	or	a, #0x08
      00007A F7               [ 1]  244 	ld	(x), a
      00007B 84               [ 1]  245 	pop	a
                                    246 ;	libs/uart_lib.c: 35: UART1_CR2 -> REN = 1; // Receiver enable
      00007C AE 52 35         [ 2]  247 	ldw	x, #0x5235
      00007F 88               [ 1]  248 	push	a
      000080 F6               [ 1]  249 	ld	a, (x)
      000081 AA 04            [ 1]  250 	or	a, #0x04
      000083 F7               [ 1]  251 	ld	(x), a
      000084 84               [ 1]  252 	pop	a
                                    253 ;	libs/uart_lib.c: 36: switch(stopbit)
      000085 A1 02            [ 1]  254 	cp	a, #0x02
      000087 27 06            [ 1]  255 	jreq	00101$
      000089 A1 03            [ 1]  256 	cp	a, #0x03
      00008B 27 0E            [ 1]  257 	jreq	00102$
      00008D 20 16            [ 2]  258 	jra	00103$
                                    259 ;	libs/uart_lib.c: 38: case 2:
      00008F                        260 00101$:
                                    261 ;	libs/uart_lib.c: 39: UART1_CR3 -> STOP = 2;
      00008F C6 52 36         [ 1]  262 	ld	a, 0x5236
      000092 A4 CF            [ 1]  263 	and	a, #0xcf
      000094 AA 20            [ 1]  264 	or	a, #0x20
      000096 C7 52 36         [ 1]  265 	ld	0x5236, a
                                    266 ;	libs/uart_lib.c: 40: break;
      000099 20 12            [ 2]  267 	jra	00104$
                                    268 ;	libs/uart_lib.c: 41: case 3:
      00009B                        269 00102$:
                                    270 ;	libs/uart_lib.c: 42: UART1_CR3 -> STOP = 3;
      00009B C6 52 36         [ 1]  271 	ld	a, 0x5236
      00009E AA 30            [ 1]  272 	or	a, #0x30
      0000A0 C7 52 36         [ 1]  273 	ld	0x5236, a
                                    274 ;	libs/uart_lib.c: 43: break;
      0000A3 20 08            [ 2]  275 	jra	00104$
                                    276 ;	libs/uart_lib.c: 44: default:
      0000A5                        277 00103$:
                                    278 ;	libs/uart_lib.c: 45: UART1_CR3 -> STOP = 0;
      0000A5 C6 52 36         [ 1]  279 	ld	a, 0x5236
      0000A8 A4 CF            [ 1]  280 	and	a, #0xcf
      0000AA C7 52 36         [ 1]  281 	ld	0x5236, a
                                    282 ;	libs/uart_lib.c: 47: }
      0000AD                        283 00104$:
                                    284 ;	libs/uart_lib.c: 48: switch(baudrate)
      0000AD 1E 01            [ 2]  285 	ldw	x, (0x01, sp)
      0000AF A3 08 00         [ 2]  286 	cpw	x, #0x0800
      0000B2 26 03            [ 1]  287 	jrne	00186$
      0000B4 CCr01r40         [ 2]  288 	jp	00110$
      0000B7                        289 00186$:
      0000B7 1E 01            [ 2]  290 	ldw	x, (0x01, sp)
      0000B9 A3 09 60         [ 2]  291 	cpw	x, #0x0960
      0000BC 27 28            [ 1]  292 	jreq	00105$
      0000BE 1E 01            [ 2]  293 	ldw	x, (0x01, sp)
      0000C0 A3 10 00         [ 2]  294 	cpw	x, #0x1000
      0000C3 26 03            [ 1]  295 	jrne	00192$
      0000C5 CCr01r50         [ 2]  296 	jp	00111$
      0000C8                        297 00192$:
      0000C8 1E 01            [ 2]  298 	ldw	x, (0x01, sp)
      0000CA A3 4B 00         [ 2]  299 	cpw	x, #0x4b00
      0000CD 27 31            [ 1]  300 	jreq	00106$
      0000CF 1E 01            [ 2]  301 	ldw	x, (0x01, sp)
      0000D1 A3 84 00         [ 2]  302 	cpw	x, #0x8400
      0000D4 27 5A            [ 1]  303 	jreq	00109$
      0000D6 1E 01            [ 2]  304 	ldw	x, (0x01, sp)
      0000D8 A3 C2 00         [ 2]  305 	cpw	x, #0xc200
      0000DB 27 43            [ 1]  306 	jreq	00108$
      0000DD 1E 01            [ 2]  307 	ldw	x, (0x01, sp)
      0000DF A3 E1 00         [ 2]  308 	cpw	x, #0xe100
      0000E2 27 2C            [ 1]  309 	jreq	00107$
      0000E4 20 7A            [ 2]  310 	jra	00112$
                                    311 ;	libs/uart_lib.c: 50: case (unsigned int)2400:
      0000E6                        312 00105$:
                                    313 ;	libs/uart_lib.c: 51: UART1_BRR2 -> MSB = 0x01;
      0000E6 C6 52 33         [ 1]  314 	ld	a, 0x5233
      0000E9 A4 0F            [ 1]  315 	and	a, #0x0f
      0000EB AA 10            [ 1]  316 	or	a, #0x10
      0000ED C7 52 33         [ 1]  317 	ld	0x5233, a
                                    318 ;	libs/uart_lib.c: 52: UART1_BRR1 -> DIV = 0xA0;
      0000F0 35 A0 52 32      [ 1]  319 	mov	0x5232+0, #0xa0
                                    320 ;	libs/uart_lib.c: 53: UART1_BRR2 -> LSB = 0x0B; 
      0000F4 C6 52 33         [ 1]  321 	ld	a, 0x5233
      0000F7 A4 F0            [ 1]  322 	and	a, #0xf0
      0000F9 AA 0B            [ 1]  323 	or	a, #0x0b
      0000FB C7 52 33         [ 1]  324 	ld	0x5233, a
                                    325 ;	libs/uart_lib.c: 54: break;
      0000FE 20 6E            [ 2]  326 	jra	00114$
                                    327 ;	libs/uart_lib.c: 55: case (unsigned int)19200:
      000100                        328 00106$:
                                    329 ;	libs/uart_lib.c: 56: UART1_BRR1 -> DIV = 0x34;
      000100 35 34 52 32      [ 1]  330 	mov	0x5232+0, #0x34
                                    331 ;	libs/uart_lib.c: 57: UART1_BRR2 -> LSB = 0x01;
      000104 C6 52 33         [ 1]  332 	ld	a, 0x5233
      000107 A4 F0            [ 1]  333 	and	a, #0xf0
      000109 AA 01            [ 1]  334 	or	a, #0x01
      00010B C7 52 33         [ 1]  335 	ld	0x5233, a
                                    336 ;	libs/uart_lib.c: 58: break;
      00010E 20 5E            [ 2]  337 	jra	00114$
                                    338 ;	libs/uart_lib.c: 59: case (unsigned int)57600:
      000110                        339 00107$:
                                    340 ;	libs/uart_lib.c: 60: UART1_BRR1 -> DIV = 0x11;
      000110 35 11 52 32      [ 1]  341 	mov	0x5232+0, #0x11
                                    342 ;	libs/uart_lib.c: 61: UART1_BRR2 -> LSB = 0x06;
      000114 C6 52 33         [ 1]  343 	ld	a, 0x5233
      000117 A4 F0            [ 1]  344 	and	a, #0xf0
      000119 AA 06            [ 1]  345 	or	a, #0x06
      00011B C7 52 33         [ 1]  346 	ld	0x5233, a
                                    347 ;	libs/uart_lib.c: 62: break;
      00011E 20 4E            [ 2]  348 	jra	00114$
                                    349 ;	libs/uart_lib.c: 63: case (unsigned int)115200:
      000120                        350 00108$:
                                    351 ;	libs/uart_lib.c: 64: UART1_BRR1 -> DIV = 0x08;
      000120 35 08 52 32      [ 1]  352 	mov	0x5232+0, #0x08
                                    353 ;	libs/uart_lib.c: 65: UART1_BRR2 -> LSB = 0x0B;
      000124 C6 52 33         [ 1]  354 	ld	a, 0x5233
      000127 A4 F0            [ 1]  355 	and	a, #0xf0
      000129 AA 0B            [ 1]  356 	or	a, #0x0b
      00012B C7 52 33         [ 1]  357 	ld	0x5233, a
                                    358 ;	libs/uart_lib.c: 66: break;
      00012E 20 3E            [ 2]  359 	jra	00114$
                                    360 ;	libs/uart_lib.c: 67: case (unsigned int)230400:
      000130                        361 00109$:
                                    362 ;	libs/uart_lib.c: 68: UART1_BRR1 -> DIV = 0x04;
      000130 35 04 52 32      [ 1]  363 	mov	0x5232+0, #0x04
                                    364 ;	libs/uart_lib.c: 69: UART1_BRR2 -> LSB = 0x05;
      000134 C6 52 33         [ 1]  365 	ld	a, 0x5233
      000137 A4 F0            [ 1]  366 	and	a, #0xf0
      000139 AA 05            [ 1]  367 	or	a, #0x05
      00013B C7 52 33         [ 1]  368 	ld	0x5233, a
                                    369 ;	libs/uart_lib.c: 70: break;
      00013E 20 2E            [ 2]  370 	jra	00114$
                                    371 ;	libs/uart_lib.c: 71: case (unsigned int)460800:
      000140                        372 00110$:
                                    373 ;	libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0x02;
      000140 35 02 52 32      [ 1]  374 	mov	0x5232+0, #0x02
                                    375 ;	libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x03;
      000144 C6 52 33         [ 1]  376 	ld	a, 0x5233
      000147 A4 F0            [ 1]  377 	and	a, #0xf0
      000149 AA 03            [ 1]  378 	or	a, #0x03
      00014B C7 52 33         [ 1]  379 	ld	0x5233, a
                                    380 ;	libs/uart_lib.c: 74: break;
      00014E 20 1E            [ 2]  381 	jra	00114$
                                    382 ;	libs/uart_lib.c: 75: case (unsigned int)921600:
      000150                        383 00111$:
                                    384 ;	libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x01;
      000150 35 01 52 32      [ 1]  385 	mov	0x5232+0, #0x01
                                    386 ;	libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      000154 C6 52 33         [ 1]  387 	ld	a, 0x5233
      000157 A4 F0            [ 1]  388 	and	a, #0xf0
      000159 AA 01            [ 1]  389 	or	a, #0x01
      00015B C7 52 33         [ 1]  390 	ld	0x5233, a
                                    391 ;	libs/uart_lib.c: 78: break;
      00015E 20 0E            [ 2]  392 	jra	00114$
                                    393 ;	libs/uart_lib.c: 79: default:
      000160                        394 00112$:
                                    395 ;	libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x68;
      000160 35 68 52 32      [ 1]  396 	mov	0x5232+0, #0x68
                                    397 ;	libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x03;
      000164 C6 52 33         [ 1]  398 	ld	a, 0x5233
      000167 A4 F0            [ 1]  399 	and	a, #0xf0
      000169 AA 03            [ 1]  400 	or	a, #0x03
      00016B C7 52 33         [ 1]  401 	ld	0x5233, a
                                    402 ;	libs/uart_lib.c: 83: }
      00016E                        403 00114$:
                                    404 ;	libs/uart_lib.c: 84: }
      00016E 5B 02            [ 2]  405 	addw	sp, #2
      000170 81               [ 4]  406 	ret
                                    407 ;	libs/uart_lib.c: 86: int uart_read_byte(uint8_t *data)
                                    408 ;	-----------------------------------------
                                    409 ;	 function uart_read_byte
                                    410 ;	-----------------------------------------
      000171                        411 _uart_read_byte:
                                    412 ;	libs/uart_lib.c: 88: while(!(UART1_SR -> RXNE));
      000171                        413 00101$:
      000171 72 0B 52 30 FB   [ 2]  414 	btjf	0x5230, #5, 00101$
                                    415 ;	libs/uart_lib.c: 90: return 1;
      000176 5F               [ 1]  416 	clrw	x
      000177 5C               [ 1]  417 	incw	x
                                    418 ;	libs/uart_lib.c: 91: }
      000178 81               [ 4]  419 	ret
                                    420 ;	libs/uart_lib.c: 93: int uart_write_byte(uint8_t data)
                                    421 ;	-----------------------------------------
                                    422 ;	 function uart_write_byte
                                    423 ;	-----------------------------------------
      000179                        424 _uart_write_byte:
                                    425 ;	libs/uart_lib.c: 95: UART1_DR -> DR = data;
      000179 C7 52 31         [ 1]  426 	ld	0x5231, a
                                    427 ;	libs/uart_lib.c: 96: while(!(UART1_SR -> TXE));
      00017C                        428 00101$:
      00017C 72 0F 52 30 FB   [ 2]  429 	btjf	0x5230, #7, 00101$
                                    430 ;	libs/uart_lib.c: 97: return 1;
      000181 5F               [ 1]  431 	clrw	x
      000182 5C               [ 1]  432 	incw	x
                                    433 ;	libs/uart_lib.c: 98: }
      000183 81               [ 4]  434 	ret
                                    435 ;	libs/uart_lib.c: 100: void uart_write(uint8_t *data_buf)
                                    436 ;	-----------------------------------------
                                    437 ;	 function uart_write
                                    438 ;	-----------------------------------------
      000184                        439 _uart_write:
      000184 52 02            [ 2]  440 	sub	sp, #2
                                    441 ;	libs/uart_lib.c: 102: tx_buf_pointer = data_buf;
      000186 1F 01            [ 2]  442 	ldw	(0x01, sp), x
      000188 CFu00u00         [ 2]  443 	ldw	_tx_buf_pointer+0, x
                                    444 ;	libs/uart_lib.c: 103: buf_pos = 0;
      00018B 72 5Fu00u04      [ 1]  445 	clr	_buf_pos+0
                                    446 ;	libs/uart_lib.c: 104: buf_size = 0;
      00018F 72 5Fu00u05      [ 1]  447 	clr	_buf_size+0
                                    448 ;	libs/uart_lib.c: 105: while (data_buf[buf_size++] != '\0');
      000193                        449 00101$:
      000193 C6u00u05         [ 1]  450 	ld	a, _buf_size+0
      000196 72 5Cu00u05      [ 1]  451 	inc	_buf_size+0
      00019A 5F               [ 1]  452 	clrw	x
      00019B 97               [ 1]  453 	ld	xl, a
      00019C 72 FB 01         [ 2]  454 	addw	x, (0x01, sp)
      00019F F6               [ 1]  455 	ld	a, (x)
      0001A0 26 F1            [ 1]  456 	jrne	00101$
                                    457 ;	libs/uart_lib.c: 106: UART1_CR2 -> TIEN = 1;
      0001A2 72 1E 52 35      [ 1]  458 	bset	0x5235, #7
                                    459 ;	libs/uart_lib.c: 107: while(UART1_CR2 -> TIEN);
      0001A6                        460 00104$:
      0001A6 72 0E 52 35 FB   [ 2]  461 	btjt	0x5235, #7, 00104$
                                    462 ;	libs/uart_lib.c: 108: }
      0001AB 5B 02            [ 2]  463 	addw	sp, #2
      0001AD 81               [ 4]  464 	ret
                                    465 ;	libs/uart_lib.c: 109: void uart_read(uint8_t *data_buf,int size)
                                    466 ;	-----------------------------------------
                                    467 ;	 function uart_read
                                    468 ;	-----------------------------------------
      0001AE                        469 _uart_read:
                                    470 ;	libs/uart_lib.c: 111: rx_buf_pointer = data_buf;
      0001AE CFu00u02         [ 2]  471 	ldw	_rx_buf_pointer+0, x
                                    472 ;	libs/uart_lib.c: 112: uart_write("rx_buf_pointer\n");
      0001B1 AEr00r00         [ 2]  473 	ldw	x, #(___str_0+0)
      0001B4 CDr01r84         [ 4]  474 	call	_uart_write
                                    475 ;	libs/uart_lib.c: 113: buf_pos = 0;
      0001B7 72 5Fu00u04      [ 1]  476 	clr	_buf_pos+0
                                    477 ;	libs/uart_lib.c: 114: uart_write("buf_pos\n");
      0001BB AEr00r10         [ 2]  478 	ldw	x, #(___str_1+0)
      0001BE CDr01r84         [ 4]  479 	call	_uart_write
                                    480 ;	libs/uart_lib.c: 115: buf_size = size;
      0001C1 7B 04            [ 1]  481 	ld	a, (0x04, sp)
      0001C3 C7u00u05         [ 1]  482 	ld	_buf_size+0, a
                                    483 ;	libs/uart_lib.c: 116: uart_write("buf_size\n");
      0001C6 AEr00r19         [ 2]  484 	ldw	x, #(___str_2+0)
      0001C9 CDr01r84         [ 4]  485 	call	_uart_write
                                    486 ;	libs/uart_lib.c: 117: UART1_CR2 -> RIEN = 1;
      0001CC 72 1A 52 35      [ 1]  487 	bset	0x5235, #5
                                    488 ;	libs/uart_lib.c: 118: uart_write("RIEN\n");
      0001D0 AEr00r23         [ 2]  489 	ldw	x, #(___str_3+0)
      0001D3 CDr01r84         [ 4]  490 	call	_uart_write
                                    491 ;	libs/uart_lib.c: 119: while(UART1_CR2 -> RIEN);
      0001D6                        492 00101$:
      0001D6 C6 52 35         [ 1]  493 	ld	a, 0x5235
      0001D9 4E               [ 1]  494 	swap	a
      0001DA 44               [ 1]  495 	srl	a
      0001DB A4 01            [ 1]  496 	and	a, #0x01
      0001DD 26 F7            [ 1]  497 	jrne	00101$
                                    498 ;	libs/uart_lib.c: 120: }
      0001DF 1E 01            [ 2]  499 	ldw	x, (1, sp)
      0001E1 5B 04            [ 2]  500 	addw	sp, #4
      0001E3 FC               [ 2]  501 	jp	(x)
                                    502 ;	libs/i2c_lib.c: 3: void i2c_init(void)
                                    503 ;	-----------------------------------------
                                    504 ;	 function i2c_init
                                    505 ;	-----------------------------------------
      0001E4                        506 _i2c_init:
                                    507 ;	libs/i2c_lib.c: 7: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      0001E4 72 11 52 10      [ 1]  508 	bres	0x5210, #0
                                    509 ;	libs/i2c_lib.c: 8: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      0001E8 C6 52 12         [ 1]  510 	ld	a, 0x5212
      0001EB A4 C0            [ 1]  511 	and	a, #0xc0
      0001ED AA 10            [ 1]  512 	or	a, #0x10
      0001EF C7 52 12         [ 1]  513 	ld	0x5212, a
                                    514 ;	libs/i2c_lib.c: 9: I2C_CCRH -> CCR = 0;// =0
      0001F2 C6 52 1C         [ 1]  515 	ld	a, 0x521c
      0001F5 A4 F0            [ 1]  516 	and	a, #0xf0
      0001F7 C7 52 1C         [ 1]  517 	ld	0x521c, a
                                    518 ;	libs/i2c_lib.c: 10: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      0001FA 35 50 52 1B      [ 1]  519 	mov	0x521b+0, #0x50
                                    520 ;	libs/i2c_lib.c: 11: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      0001FE 72 1F 52 1C      [ 1]  521 	bres	0x521c, #7
                                    522 ;	libs/i2c_lib.c: 12: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      000202 72 1F 52 14      [ 1]  523 	bres	0x5214, #7
                                    524 ;	libs/i2c_lib.c: 13: I2C_OARH -> ADDCONF = 1;// see reference manual
      000206 72 10 52 14      [ 1]  525 	bset	0x5214, #0
                                    526 ;	libs/i2c_lib.c: 14: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      00020A 72 10 52 10      [ 1]  527 	bset	0x5210, #0
                                    528 ;	libs/i2c_lib.c: 15: }
      00020E 81               [ 4]  529 	ret
                                    530 ;	libs/i2c_lib.c: 17: void i2c_start(void)
                                    531 ;	-----------------------------------------
                                    532 ;	 function i2c_start
                                    533 ;	-----------------------------------------
      00020F                        534 _i2c_start:
                                    535 ;	libs/i2c_lib.c: 19: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      00020F 72 10 52 11      [ 1]  536 	bset	0x5211, #0
                                    537 ;	libs/i2c_lib.c: 20: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      000213                        538 00101$:
      000213 72 01 52 17 FB   [ 2]  539 	btjf	0x5217, #0, 00101$
                                    540 ;	libs/i2c_lib.c: 21: }
      000218 81               [ 4]  541 	ret
                                    542 ;	libs/i2c_lib.c: 23: void i2c_stop(void)
                                    543 ;	-----------------------------------------
                                    544 ;	 function i2c_stop
                                    545 ;	-----------------------------------------
      000219                        546 _i2c_stop:
                                    547 ;	libs/i2c_lib.c: 25: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      000219 72 12 52 11      [ 1]  548 	bset	0x5211, #1
                                    549 ;	libs/i2c_lib.c: 26: }
      00021D 81               [ 4]  550 	ret
                                    551 ;	libs/i2c_lib.c: 28: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                    552 ;	-----------------------------------------
                                    553 ;	 function i2c_send_address
                                    554 ;	-----------------------------------------
      00021E                        555 _i2c_send_address:
                                    556 ;	libs/i2c_lib.c: 33: address = address << 1;
      00021E 48               [ 1]  557 	sll	a
                                    558 ;	libs/i2c_lib.c: 30: switch(rw_type)
      00021F 88               [ 1]  559 	push	a
      000220 7B 04            [ 1]  560 	ld	a, (0x04, sp)
      000222 4A               [ 1]  561 	dec	a
      000223 84               [ 1]  562 	pop	a
      000224 26 02            [ 1]  563 	jrne	00102$
                                    564 ;	libs/i2c_lib.c: 33: address = address << 1;
                                    565 ;	libs/i2c_lib.c: 34: address |= 0x01; // Отправка адреса устройства с битом на чтение
      000226 AA 01            [ 1]  566 	or	a, #0x01
                                    567 ;	libs/i2c_lib.c: 35: break;
                                    568 ;	libs/i2c_lib.c: 36: default:
                                    569 ;	libs/i2c_lib.c: 37: address = address << 1; // Отправка адреса устройства с битом на запись
                                    570 ;	libs/i2c_lib.c: 39: }
      000228                        571 00102$:
                                    572 ;	libs/i2c_lib.c: 40: i2c_start();
      000228 88               [ 1]  573 	push	a
      000229 CDr02r0F         [ 4]  574 	call	_i2c_start
      00022C 84               [ 1]  575 	pop	a
                                    576 ;	libs/i2c_lib.c: 41: I2C_DR -> DR = address;
      00022D C7 52 16         [ 1]  577 	ld	0x5216, a
                                    578 ;	libs/i2c_lib.c: 42: while(!I2C_SR1 -> ADDR)
      000230                        579 00106$:
      000230 AE 52 17         [ 2]  580 	ldw	x, #0x5217
      000233 F6               [ 1]  581 	ld	a, (x)
      000234 44               [ 1]  582 	srl	a
      000235 A4 01            [ 1]  583 	and	a, #0x01
      000237 26 08            [ 1]  584 	jrne	00108$
                                    585 ;	libs/i2c_lib.c: 43: if(I2C_SR2 -> AF)
      000239 72 05 52 18 F2   [ 2]  586 	btjf	0x5218, #2, 00106$
                                    587 ;	libs/i2c_lib.c: 44: return 0;
      00023E 4F               [ 1]  588 	clr	a
      00023F 20 08            [ 2]  589 	jra	00109$
      000241                        590 00108$:
                                    591 ;	libs/i2c_lib.c: 45: clr_sr1();
      000241 C6 52 17         [ 1]  592 	ld	a,0x5217
                                    593 ;	libs/i2c_lib.c: 46: clr_sr3();
      000244 C6 52 19         [ 1]  594 	ld	a,0x5219
                                    595 ;	libs/i2c_lib.c: 47: return 1;
      000247 A6 01            [ 1]  596 	ld	a, #0x01
      000249                        597 00109$:
                                    598 ;	libs/i2c_lib.c: 48: }
      000249 85               [ 2]  599 	popw	x
      00024A 5B 01            [ 2]  600 	addw	sp, #1
      00024C FC               [ 2]  601 	jp	(x)
                                    602 ;	libs/i2c_lib.c: 50: uint8_t i2c_read_byte(void){
                                    603 ;	-----------------------------------------
                                    604 ;	 function i2c_read_byte
                                    605 ;	-----------------------------------------
      00024D                        606 _i2c_read_byte:
                                    607 ;	libs/i2c_lib.c: 51: while(!I2C_SR1 -> RXNE);
      00024D                        608 00101$:
      00024D 72 0D 52 17 FB   [ 2]  609 	btjf	0x5217, #6, 00101$
                                    610 ;	libs/i2c_lib.c: 52: return I2C_DR -> DR;
      000252 C6 52 16         [ 1]  611 	ld	a, 0x5216
                                    612 ;	libs/i2c_lib.c: 53: }
      000255 81               [ 4]  613 	ret
                                    614 ;	libs/i2c_lib.c: 55: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                    615 ;	-----------------------------------------
                                    616 ;	 function i2c_read
                                    617 ;	-----------------------------------------
      000256                        618 _i2c_read:
      000256 52 04            [ 2]  619 	sub	sp, #4
                                    620 ;	libs/i2c_lib.c: 57: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      000258 4B 01            [ 1]  621 	push	#0x01
      00025A CDr02r1E         [ 4]  622 	call	_i2c_send_address
      00025D 4D               [ 1]  623 	tnz	a
      00025E 27 41            [ 1]  624 	jreq	00103$
                                    625 ;	libs/i2c_lib.c: 59: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      000260 72 14 52 11      [ 1]  626 	bset	0x5211, #2
                                    627 ;	libs/i2c_lib.c: 60: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000264 5F               [ 1]  628 	clrw	x
      000265 1F 03            [ 2]  629 	ldw	(0x03, sp), x
      000267                        630 00105$:
      000267 5F               [ 1]  631 	clrw	x
      000268 7B 07            [ 1]  632 	ld	a, (0x07, sp)
      00026A 97               [ 1]  633 	ld	xl, a
      00026B 5A               [ 2]  634 	decw	x
      00026C 1F 01            [ 2]  635 	ldw	(0x01, sp), x
      00026E 1E 03            [ 2]  636 	ldw	x, (0x03, sp)
      000270 13 01            [ 2]  637 	cpw	x, (0x01, sp)
      000272 2E 12            [ 1]  638 	jrsge	00101$
                                    639 ;	libs/i2c_lib.c: 62: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      000274 1E 08            [ 2]  640 	ldw	x, (0x08, sp)
      000276 72 FB 03         [ 2]  641 	addw	x, (0x03, sp)
      000279 89               [ 2]  642 	pushw	x
      00027A CDr02r4D         [ 4]  643 	call	_i2c_read_byte
      00027D 85               [ 2]  644 	popw	x
      00027E F7               [ 1]  645 	ld	(x), a
                                    646 ;	libs/i2c_lib.c: 60: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      00027F 1E 03            [ 2]  647 	ldw	x, (0x03, sp)
      000281 5C               [ 1]  648 	incw	x
      000282 1F 03            [ 2]  649 	ldw	(0x03, sp), x
      000284 20 E1            [ 2]  650 	jra	00105$
      000286                        651 00101$:
                                    652 ;	libs/i2c_lib.c: 64: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      000286 72 15 52 11      [ 1]  653 	bres	0x5211, #2
                                    654 ;	libs/i2c_lib.c: 65: uart_write_byte(0x00);
      00028A 4F               [ 1]  655 	clr	a
      00028B CDr01r79         [ 4]  656 	call	_uart_write_byte
                                    657 ;	libs/i2c_lib.c: 66: data[size-1] = i2c_read_byte();
      00028E 1E 08            [ 2]  658 	ldw	x, (0x08, sp)
      000290 72 FB 01         [ 2]  659 	addw	x, (0x01, sp)
      000293 89               [ 2]  660 	pushw	x
      000294 CDr02r4D         [ 4]  661 	call	_i2c_read_byte
      000297 85               [ 2]  662 	popw	x
      000298 F7               [ 1]  663 	ld	(x), a
                                    664 ;	libs/i2c_lib.c: 67: uart_write_byte(0x01);
      000299 A6 01            [ 1]  665 	ld	a, #0x01
      00029B CDr01r79         [ 4]  666 	call	_uart_write_byte
                                    667 ;	libs/i2c_lib.c: 68: i2c_stop();
      00029E CDr02r19         [ 4]  668 	call	_i2c_stop
      0002A1                        669 00103$:
                                    670 ;	libs/i2c_lib.c: 70: uart_write_byte(0x02);
      0002A1 A6 02            [ 1]  671 	ld	a, #0x02
      0002A3 CDr01r79         [ 4]  672 	call	_uart_write_byte
                                    673 ;	libs/i2c_lib.c: 71: i2c_stop();
      0002A6 CDr02r19         [ 4]  674 	call	_i2c_stop
                                    675 ;	libs/i2c_lib.c: 72: i2c_stop();
      0002A9 CDr02r19         [ 4]  676 	call	_i2c_stop
                                    677 ;	libs/i2c_lib.c: 73: uart_write_byte(0x03); 
      0002AC A6 03            [ 1]  678 	ld	a, #0x03
      0002AE 1E 05            [ 2]  679 	ldw	x, (5, sp)
      0002B0 1F 08            [ 2]  680 	ldw	(8, sp), x
      0002B2 5B 07            [ 2]  681 	addw	sp, #7
                                    682 ;	libs/i2c_lib.c: 74: }
      0002B4 CCr01r79         [ 2]  683 	jp	_uart_write_byte
                                    684 ;	libs/i2c_lib.c: 76: uint8_t i2c_send_byte(uint8_t data)
                                    685 ;	-----------------------------------------
                                    686 ;	 function i2c_send_byte
                                    687 ;	-----------------------------------------
      0002B7                        688 _i2c_send_byte:
                                    689 ;	libs/i2c_lib.c: 78: I2C_DR -> DR = data; //Отправка данных
      0002B7 C7 52 16         [ 1]  690 	ld	0x5216, a
                                    691 ;	libs/i2c_lib.c: 79: while(!I2C_SR1 -> TXE)
      0002BA                        692 00103$:
      0002BA 72 0E 52 17 08   [ 2]  693 	btjt	0x5217, #7, 00105$
                                    694 ;	libs/i2c_lib.c: 80: if(I2C_SR2 -> AF)
      0002BF 72 05 52 18 F6   [ 2]  695 	btjf	0x5218, #2, 00103$
                                    696 ;	libs/i2c_lib.c: 81: return 1;
      0002C4 A6 01            [ 1]  697 	ld	a, #0x01
      0002C6 81               [ 4]  698 	ret
      0002C7                        699 00105$:
                                    700 ;	libs/i2c_lib.c: 82: return 0;//флаг ответа
      0002C7 4F               [ 1]  701 	clr	a
                                    702 ;	libs/i2c_lib.c: 83: }
      0002C8 81               [ 4]  703 	ret
                                    704 ;	libs/i2c_lib.c: 85: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                    705 ;	-----------------------------------------
                                    706 ;	 function i2c_write
                                    707 ;	-----------------------------------------
      0002C9                        708 _i2c_write:
      0002C9 52 02            [ 2]  709 	sub	sp, #2
                                    710 ;	libs/i2c_lib.c: 87: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      0002CB 4B 00            [ 1]  711 	push	#0x00
      0002CD CDr02r1E         [ 4]  712 	call	_i2c_send_address
      0002D0 4D               [ 1]  713 	tnz	a
      0002D1 27 1D            [ 1]  714 	jreq	00105$
                                    715 ;	libs/i2c_lib.c: 88: for(int i = 0;i < size;i++)
      0002D3 5F               [ 1]  716 	clrw	x
      0002D4                        717 00107$:
      0002D4 7B 05            [ 1]  718 	ld	a, (0x05, sp)
      0002D6 6B 02            [ 1]  719 	ld	(0x02, sp), a
      0002D8 0F 01            [ 1]  720 	clr	(0x01, sp)
      0002DA 13 01            [ 2]  721 	cpw	x, (0x01, sp)
      0002DC 2E 12            [ 1]  722 	jrsge	00105$
                                    723 ;	libs/i2c_lib.c: 90: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      0002DE 90 93            [ 1]  724 	ldw	y, x
      0002E0 72 F9 06         [ 2]  725 	addw	y, (0x06, sp)
      0002E3 90 F6            [ 1]  726 	ld	a, (y)
      0002E5 89               [ 2]  727 	pushw	x
      0002E6 CDr02rB7         [ 4]  728 	call	_i2c_send_byte
      0002E9 85               [ 2]  729 	popw	x
      0002EA 4D               [ 1]  730 	tnz	a
      0002EB 26 03            [ 1]  731 	jrne	00105$
                                    732 ;	libs/i2c_lib.c: 88: for(int i = 0;i < size;i++)
      0002ED 5C               [ 1]  733 	incw	x
      0002EE 20 E4            [ 2]  734 	jra	00107$
      0002F0                        735 00105$:
                                    736 ;	libs/i2c_lib.c: 95: i2c_stop();
      0002F0 1E 03            [ 2]  737 	ldw	x, (3, sp)
      0002F2 1F 06            [ 2]  738 	ldw	(6, sp), x
      0002F4 5B 05            [ 2]  739 	addw	sp, #5
                                    740 ;	libs/i2c_lib.c: 96: }
      0002F6 CCr02r19         [ 2]  741 	jp	_i2c_stop
                                    742 ;	libs/i2c_lib.c: 98: uint8_t i2c_scan(void) 
                                    743 ;	-----------------------------------------
                                    744 ;	 function i2c_scan
                                    745 ;	-----------------------------------------
      0002F9                        746 _i2c_scan:
      0002F9 52 02            [ 2]  747 	sub	sp, #2
                                    748 ;	libs/i2c_lib.c: 100: for (uint8_t addr = 1; addr < 127; addr++)
      0002FB A6 01            [ 1]  749 	ld	a, #0x01
      0002FD 6B 01            [ 1]  750 	ld	(0x01, sp), a
      0002FF                        751 00105$:
      0002FF A1 7F            [ 1]  752 	cp	a, #0x7f
      000301 24 22            [ 1]  753 	jrnc	00103$
                                    754 ;	libs/i2c_lib.c: 102: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      000303 88               [ 1]  755 	push	a
      000304 4B 00            [ 1]  756 	push	#0x00
      000306 CDr02r1E         [ 4]  757 	call	_i2c_send_address
      000309 6B 03            [ 1]  758 	ld	(0x03, sp), a
      00030B 84               [ 1]  759 	pop	a
      00030C 0D 02            [ 1]  760 	tnz	(0x02, sp)
      00030E 27 07            [ 1]  761 	jreq	00102$
                                    762 ;	libs/i2c_lib.c: 104: i2c_stop();//адрес совпал 
      000310 CDr02r19         [ 4]  763 	call	_i2c_stop
                                    764 ;	libs/i2c_lib.c: 105: return addr;// выход из цикла
      000313 7B 01            [ 1]  765 	ld	a, (0x01, sp)
      000315 20 12            [ 2]  766 	jra	00107$
      000317                        767 00102$:
                                    768 ;	libs/i2c_lib.c: 107: I2C_SR2 -> AF = 0;//очистка флага ошибки
      000317 AE 52 18         [ 2]  769 	ldw	x, #0x5218
      00031A 88               [ 1]  770 	push	a
      00031B F6               [ 1]  771 	ld	a, (x)
      00031C A4 FB            [ 1]  772 	and	a, #0xfb
      00031E F7               [ 1]  773 	ld	(x), a
      00031F 84               [ 1]  774 	pop	a
                                    775 ;	libs/i2c_lib.c: 100: for (uint8_t addr = 1; addr < 127; addr++)
      000320 4C               [ 1]  776 	inc	a
      000321 6B 01            [ 1]  777 	ld	(0x01, sp), a
      000323 20 DA            [ 2]  778 	jra	00105$
      000325                        779 00103$:
                                    780 ;	libs/i2c_lib.c: 109: i2c_stop();//совпадений нет выход из функции
      000325 CDr02r19         [ 4]  781 	call	_i2c_stop
                                    782 ;	libs/i2c_lib.c: 110: return 0;
      000328 4F               [ 1]  783 	clr	a
      000329                        784 00107$:
                                    785 ;	libs/i2c_lib.c: 111: }
      000329 5B 02            [ 2]  786 	addw	sp, #2
      00032B 81               [ 4]  787 	ret
                                    788 ;	main.c: 4: void setup(void)
                                    789 ;	-----------------------------------------
                                    790 ;	 function setup
                                    791 ;	-----------------------------------------
      00032C                        792 _setup:
                                    793 ;	main.c: 7: CLK_CKDIVR = 0;
      00032C 35 00 50 C6      [ 1]  794 	mov	0x50c6+0, #0x00
                                    795 ;	main.c: 9: uart_init(9600,0);
      000330 4F               [ 1]  796 	clr	a
      000331 AE 25 80         [ 2]  797 	ldw	x, #0x2580
      000334 CDr00r6F         [ 4]  798 	call	_uart_init
                                    799 ;	main.c: 10: i2c_init();
      000337 CDr01rE4         [ 4]  800 	call	_i2c_init
                                    801 ;	main.c: 12: enableInterrupts();
      00033A 9A               [ 1]  802 	rim
                                    803 ;	main.c: 13: }
      00033B 81               [ 4]  804 	ret
                                    805 ;	main.c: 15: int get_bit(int data,int bit)
                                    806 ;	-----------------------------------------
                                    807 ;	 function get_bit
                                    808 ;	-----------------------------------------
      00033C                        809 _get_bit:
                                    810 ;	main.c: 17: return ((data >> bit) & 1) ? 1 : 0;
      00033C 7B 04            [ 1]  811 	ld	a, (0x04, sp)
      00033E 27 04            [ 1]  812 	jreq	00113$
      000340                        813 00112$:
      000340 57               [ 2]  814 	sraw	x
      000341 4A               [ 1]  815 	dec	a
      000342 26 FC            [ 1]  816 	jrne	00112$
      000344                        817 00113$:
      000344 54               [ 2]  818 	srlw	x
      000345 24 03            [ 1]  819 	jrnc	00103$
      000347 5F               [ 1]  820 	clrw	x
      000348 5C               [ 1]  821 	incw	x
      000349 21                     822 	.byte 0x21
      00034A                        823 00103$:
      00034A 5F               [ 1]  824 	clrw	x
      00034B                        825 00104$:
                                    826 ;	main.c: 18: }
      00034B 90 85            [ 2]  827 	popw	y
      00034D 5B 02            [ 2]  828 	addw	sp, #2
      00034F 90 FC            [ 2]  829 	jp	(y)
                                    830 ;	main.c: 19: int set_bit(int data,int bit, int value)
                                    831 ;	-----------------------------------------
                                    832 ;	 function set_bit
                                    833 ;	-----------------------------------------
      000351                        834 _set_bit:
      000351 52 04            [ 2]  835 	sub	sp, #4
      000353 1F 01            [ 2]  836 	ldw	(0x01, sp), x
                                    837 ;	main.c: 21: int mask = 1 << bit ;
      000355 5F               [ 1]  838 	clrw	x
      000356 5C               [ 1]  839 	incw	x
      000357 1F 03            [ 2]  840 	ldw	(0x03, sp), x
      000359 7B 08            [ 1]  841 	ld	a, (0x08, sp)
      00035B 27 07            [ 1]  842 	jreq	00114$
      00035D                        843 00113$:
      00035D 08 04            [ 1]  844 	sll	(0x04, sp)
      00035F 09 03            [ 1]  845 	rlc	(0x03, sp)
      000361 4A               [ 1]  846 	dec	a
      000362 26 F9            [ 1]  847 	jrne	00113$
      000364                        848 00114$:
                                    849 ;	main.c: 22: switch(value)
      000364 1E 09            [ 2]  850 	ldw	x, (0x09, sp)
      000366 5A               [ 2]  851 	decw	x
      000367 26 0B            [ 1]  852 	jrne	00102$
                                    853 ;	main.c: 25: data |= mask;
      000369 7B 02            [ 1]  854 	ld	a, (0x02, sp)
      00036B 1A 04            [ 1]  855 	or	a, (0x04, sp)
      00036D 97               [ 1]  856 	ld	xl, a
      00036E 7B 01            [ 1]  857 	ld	a, (0x01, sp)
      000370 1A 03            [ 1]  858 	or	a, (0x03, sp)
                                    859 ;	main.c: 26: break;
      000372 20 09            [ 2]  860 	jra	00103$
                                    861 ;	main.c: 28: default:
      000374                        862 00102$:
                                    863 ;	main.c: 29: data &= ~mask;
      000374 1E 03            [ 2]  864 	ldw	x, (0x03, sp)
      000376 53               [ 2]  865 	cplw	x
      000377 9F               [ 1]  866 	ld	a, xl
      000378 14 02            [ 1]  867 	and	a, (0x02, sp)
      00037A 02               [ 1]  868 	rlwa	x
      00037B 14 01            [ 1]  869 	and	a, (0x01, sp)
                                    870 ;	main.c: 31: }
      00037D                        871 00103$:
                                    872 ;	main.c: 32: return data;
      00037D 95               [ 1]  873 	ld	xh, a
                                    874 ;	main.c: 33: }
      00037E 16 05            [ 2]  875 	ldw	y, (5, sp)
      000380 5B 0A            [ 2]  876 	addw	sp, #10
      000382 90 FC            [ 2]  877 	jp	(y)
                                    878 ;	main.c: 34: void delay(uint16_t ticks)
                                    879 ;	-----------------------------------------
                                    880 ;	 function delay
                                    881 ;	-----------------------------------------
      000384                        882 _delay:
                                    883 ;	main.c: 36: while(ticks > 0)
      000384                        884 00101$:
      000384 5D               [ 2]  885 	tnzw	x
      000385 26 01            [ 1]  886 	jrne	00120$
      000387 81               [ 4]  887 	ret
      000388                        888 00120$:
                                    889 ;	main.c: 38: ticks-=2;
      000388 5A               [ 2]  890 	decw	x
      000389 5A               [ 2]  891 	decw	x
                                    892 ;	main.c: 39: ticks+=1;
      00038A 5C               [ 1]  893 	incw	x
      00038B 20 F7            [ 2]  894 	jra	00101$
                                    895 ;	main.c: 41: }
      00038D 81               [ 4]  896 	ret
                                    897 ;	main.c: 43: void display_init(void)
                                    898 ;	-----------------------------------------
                                    899 ;	 function display_init
                                    900 ;	-----------------------------------------
      00038E                        901 _display_init:
      00038E 52 07            [ 2]  902 	sub	sp, #7
                                    903 ;	main.c: 45: uint8_t setup_buf[7] = {0x00,0xAE,0xD5,0x80,0xA8,0x1F,0xAF};
      000390 0F 01            [ 1]  904 	clr	(0x01, sp)
      000392 A6 AE            [ 1]  905 	ld	a, #0xae
      000394 6B 02            [ 1]  906 	ld	(0x02, sp), a
      000396 A6 D5            [ 1]  907 	ld	a, #0xd5
      000398 6B 03            [ 1]  908 	ld	(0x03, sp), a
      00039A A6 80            [ 1]  909 	ld	a, #0x80
      00039C 6B 04            [ 1]  910 	ld	(0x04, sp), a
      00039E A6 A8            [ 1]  911 	ld	a, #0xa8
      0003A0 6B 05            [ 1]  912 	ld	(0x05, sp), a
      0003A2 A6 1F            [ 1]  913 	ld	a, #0x1f
      0003A4 6B 06            [ 1]  914 	ld	(0x06, sp), a
      0003A6 A6 AF            [ 1]  915 	ld	a, #0xaf
      0003A8 6B 07            [ 1]  916 	ld	(0x07, sp), a
                                    917 ;	main.c: 46: i2c_write(I2C_DISPLAY_ADDR,5,setup_buf);
      0003AA 96               [ 1]  918 	ldw	x, sp
      0003AB 5C               [ 1]  919 	incw	x
      0003AC 89               [ 2]  920 	pushw	x
      0003AD 4B 05            [ 1]  921 	push	#0x05
      0003AF A6 3C            [ 1]  922 	ld	a, #0x3c
      0003B1 CDr02rC9         [ 4]  923 	call	_i2c_write
                                    924 ;	main.c: 47: setup_buf[1] = 0x1F;
      0003B4 A6 1F            [ 1]  925 	ld	a, #0x1f
      0003B6 6B 02            [ 1]  926 	ld	(0x02, sp), a
                                    927 ;	main.c: 48: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003B8 96               [ 1]  928 	ldw	x, sp
      0003B9 5C               [ 1]  929 	incw	x
      0003BA 89               [ 2]  930 	pushw	x
      0003BB 4B 02            [ 1]  931 	push	#0x02
      0003BD A6 3C            [ 1]  932 	ld	a, #0x3c
      0003BF CDr02rC9         [ 4]  933 	call	_i2c_write
                                    934 ;	main.c: 49: setup_buf[1] = 0xD3;
      0003C2 A6 D3            [ 1]  935 	ld	a, #0xd3
      0003C4 6B 02            [ 1]  936 	ld	(0x02, sp), a
                                    937 ;	main.c: 50: setup_buf[2] = 0x00;
      0003C6 0F 03            [ 1]  938 	clr	(0x03, sp)
                                    939 ;	main.c: 51: setup_buf[3] = 0x40;
      0003C8 A6 40            [ 1]  940 	ld	a, #0x40
      0003CA 6B 04            [ 1]  941 	ld	(0x04, sp), a
                                    942 ;	main.c: 52: setup_buf[4] = 0x8D;
      0003CC A6 8D            [ 1]  943 	ld	a, #0x8d
      0003CE 6B 05            [ 1]  944 	ld	(0x05, sp), a
                                    945 ;	main.c: 53: i2c_write(I2C_DISPLAY_ADDR,5,setup_buf);
      0003D0 96               [ 1]  946 	ldw	x, sp
      0003D1 5C               [ 1]  947 	incw	x
      0003D2 89               [ 2]  948 	pushw	x
      0003D3 4B 05            [ 1]  949 	push	#0x05
      0003D5 A6 3C            [ 1]  950 	ld	a, #0x3c
      0003D7 CDr02rC9         [ 4]  951 	call	_i2c_write
                                    952 ;	main.c: 54: setup_buf[1] = 0x14;
      0003DA A6 14            [ 1]  953 	ld	a, #0x14
      0003DC 6B 02            [ 1]  954 	ld	(0x02, sp), a
                                    955 ;	main.c: 55: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003DE 96               [ 1]  956 	ldw	x, sp
      0003DF 5C               [ 1]  957 	incw	x
      0003E0 89               [ 2]  958 	pushw	x
      0003E1 4B 02            [ 1]  959 	push	#0x02
      0003E3 A6 3C            [ 1]  960 	ld	a, #0x3c
      0003E5 CDr02rC9         [ 4]  961 	call	_i2c_write
                                    962 ;	main.c: 56: setup_buf[1] = 0xDB;
      0003E8 A6 DB            [ 1]  963 	ld	a, #0xdb
      0003EA 6B 02            [ 1]  964 	ld	(0x02, sp), a
                                    965 ;	main.c: 57: setup_buf[2] = 0x40;
      0003EC A6 40            [ 1]  966 	ld	a, #0x40
      0003EE 6B 03            [ 1]  967 	ld	(0x03, sp), a
                                    968 ;	main.c: 58: setup_buf[3] = 0xA4;
      0003F0 A6 A4            [ 1]  969 	ld	a, #0xa4
      0003F2 6B 04            [ 1]  970 	ld	(0x04, sp), a
                                    971 ;	main.c: 59: setup_buf[4] = 0xA6;
      0003F4 A6 A6            [ 1]  972 	ld	a, #0xa6
      0003F6 6B 05            [ 1]  973 	ld	(0x05, sp), a
                                    974 ;	main.c: 60: i2c_write(I2C_DISPLAY_ADDR,5,setup_buf);
      0003F8 96               [ 1]  975 	ldw	x, sp
      0003F9 5C               [ 1]  976 	incw	x
      0003FA 89               [ 2]  977 	pushw	x
      0003FB 4B 05            [ 1]  978 	push	#0x05
      0003FD A6 3C            [ 1]  979 	ld	a, #0x3c
      0003FF CDr02rC9         [ 4]  980 	call	_i2c_write
                                    981 ;	main.c: 61: setup_buf[1] = 0xDA;
      000402 A6 DA            [ 1]  982 	ld	a, #0xda
      000404 6B 02            [ 1]  983 	ld	(0x02, sp), a
                                    984 ;	main.c: 62: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000406 96               [ 1]  985 	ldw	x, sp
      000407 5C               [ 1]  986 	incw	x
      000408 89               [ 2]  987 	pushw	x
      000409 4B 02            [ 1]  988 	push	#0x02
      00040B A6 3C            [ 1]  989 	ld	a, #0x3c
      00040D CDr02rC9         [ 4]  990 	call	_i2c_write
                                    991 ;	main.c: 63: setup_buf[1] = 0x02;
      000410 A6 02            [ 1]  992 	ld	a, #0x02
      000412 6B 02            [ 1]  993 	ld	(0x02, sp), a
                                    994 ;	main.c: 64: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000414 96               [ 1]  995 	ldw	x, sp
      000415 5C               [ 1]  996 	incw	x
      000416 89               [ 2]  997 	pushw	x
      000417 4B 02            [ 1]  998 	push	#0x02
      000419 A6 3C            [ 1]  999 	ld	a, #0x3c
      00041B CDr02rC9         [ 4] 1000 	call	_i2c_write
                                   1001 ;	main.c: 65: setup_buf[1] = 0x81;
      00041E A6 81            [ 1] 1002 	ld	a, #0x81
      000420 6B 02            [ 1] 1003 	ld	(0x02, sp), a
                                   1004 ;	main.c: 66: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000422 96               [ 1] 1005 	ldw	x, sp
      000423 5C               [ 1] 1006 	incw	x
      000424 89               [ 2] 1007 	pushw	x
      000425 4B 02            [ 1] 1008 	push	#0x02
      000427 A6 3C            [ 1] 1009 	ld	a, #0x3c
      000429 CDr02rC9         [ 4] 1010 	call	_i2c_write
                                   1011 ;	main.c: 67: setup_buf[1] = 0x8F;
      00042C A6 8F            [ 1] 1012 	ld	a, #0x8f
      00042E 6B 02            [ 1] 1013 	ld	(0x02, sp), a
                                   1014 ;	main.c: 68: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000430 96               [ 1] 1015 	ldw	x, sp
      000431 5C               [ 1] 1016 	incw	x
      000432 89               [ 2] 1017 	pushw	x
      000433 4B 02            [ 1] 1018 	push	#0x02
      000435 A6 3C            [ 1] 1019 	ld	a, #0x3c
      000437 CDr02rC9         [ 4] 1020 	call	_i2c_write
                                   1021 ;	main.c: 69: setup_buf[1] = 0xD9;
      00043A A6 D9            [ 1] 1022 	ld	a, #0xd9
      00043C 6B 02            [ 1] 1023 	ld	(0x02, sp), a
                                   1024 ;	main.c: 70: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      00043E 96               [ 1] 1025 	ldw	x, sp
      00043F 5C               [ 1] 1026 	incw	x
      000440 89               [ 2] 1027 	pushw	x
      000441 4B 02            [ 1] 1028 	push	#0x02
      000443 A6 3C            [ 1] 1029 	ld	a, #0x3c
      000445 CDr02rC9         [ 4] 1030 	call	_i2c_write
                                   1031 ;	main.c: 71: setup_buf[1] = 0xF1;
      000448 A6 F1            [ 1] 1032 	ld	a, #0xf1
      00044A 6B 02            [ 1] 1033 	ld	(0x02, sp), a
                                   1034 ;	main.c: 72: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      00044C 96               [ 1] 1035 	ldw	x, sp
      00044D 5C               [ 1] 1036 	incw	x
      00044E 89               [ 2] 1037 	pushw	x
      00044F 4B 02            [ 1] 1038 	push	#0x02
      000451 A6 3C            [ 1] 1039 	ld	a, #0x3c
      000453 CDr02rC9         [ 4] 1040 	call	_i2c_write
                                   1041 ;	main.c: 73: setup_buf[1] = 0x20;
      000456 A6 20            [ 1] 1042 	ld	a, #0x20
      000458 6B 02            [ 1] 1043 	ld	(0x02, sp), a
                                   1044 ;	main.c: 74: setup_buf[2] = 0x00;
      00045A 0F 03            [ 1] 1045 	clr	(0x03, sp)
                                   1046 ;	main.c: 75: setup_buf[3] = 0xA1;
      00045C A6 A1            [ 1] 1047 	ld	a, #0xa1
      00045E 6B 04            [ 1] 1048 	ld	(0x04, sp), a
                                   1049 ;	main.c: 76: setup_buf[4] = 0xC8;
      000460 A6 C8            [ 1] 1050 	ld	a, #0xc8
      000462 6B 05            [ 1] 1051 	ld	(0x05, sp), a
                                   1052 ;	main.c: 77: i2c_write(I2C_DISPLAY_ADDR,7,setup_buf);
      000464 96               [ 1] 1053 	ldw	x, sp
      000465 5C               [ 1] 1054 	incw	x
      000466 89               [ 2] 1055 	pushw	x
      000467 4B 07            [ 1] 1056 	push	#0x07
      000469 A6 3C            [ 1] 1057 	ld	a, #0x3c
      00046B CDr02rC9         [ 4] 1058 	call	_i2c_write
                                   1059 ;	main.c: 78: }
      00046E 5B 07            [ 2] 1060 	addw	sp, #7
      000470 81               [ 4] 1061 	ret
                                   1062 ;	main.c: 80: void display_set_params_to_write(void)
                                   1063 ;	-----------------------------------------
                                   1064 ;	 function display_set_params_to_write
                                   1065 ;	-----------------------------------------
      000471                       1066 _display_set_params_to_write:
      000471 52 08            [ 2] 1067 	sub	sp, #8
                                   1068 ;	main.c: 82: uint8_t set_params_buf[8] = {0x00,0x22,0x00,0x03,0x00,0x21,0x00,0x7F};
      000473 96               [ 1] 1069 	ldw	x, sp
      000474 5C               [ 1] 1070 	incw	x
      000475 7F               [ 1] 1071 	clr	(x)
      000476 A6 22            [ 1] 1072 	ld	a, #0x22
      000478 6B 02            [ 1] 1073 	ld	(0x02, sp), a
      00047A 0F 03            [ 1] 1074 	clr	(0x03, sp)
      00047C A6 03            [ 1] 1075 	ld	a, #0x03
      00047E 6B 04            [ 1] 1076 	ld	(0x04, sp), a
      000480 0F 05            [ 1] 1077 	clr	(0x05, sp)
      000482 A6 21            [ 1] 1078 	ld	a, #0x21
      000484 6B 06            [ 1] 1079 	ld	(0x06, sp), a
      000486 0F 07            [ 1] 1080 	clr	(0x07, sp)
      000488 A6 7F            [ 1] 1081 	ld	a, #0x7f
      00048A 6B 08            [ 1] 1082 	ld	(0x08, sp), a
                                   1083 ;	main.c: 83: i2c_write(I2C_DISPLAY_ADDR,8,set_params_buf);
      00048C 89               [ 2] 1084 	pushw	x
      00048D 4B 08            [ 1] 1085 	push	#0x08
      00048F A6 3C            [ 1] 1086 	ld	a, #0x3c
      000491 CDr02rC9         [ 4] 1087 	call	_i2c_write
                                   1088 ;	main.c: 84: }
      000494 5B 08            [ 2] 1089 	addw	sp, #8
      000496 81               [ 4] 1090 	ret
                                   1091 ;	main.c: 91: void display_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1092 ;	-----------------------------------------
                                   1093 ;	 function display_draw_pixel
                                   1094 ;	-----------------------------------------
      000497                       1095 _display_draw_pixel:
      000497 52 08            [ 2] 1096 	sub	sp, #8
      000499 1F 07            [ 2] 1097 	ldw	(0x07, sp), x
                                   1098 ;	main.c: 93: buffer[x + ((y / 8) * SSD1306_LCDWIDTH)] = set_bit(buffer[x + ((y / 8) * SSD1306_LCDWIDTH)],(y % 8),color);
      00049B 6B 06            [ 1] 1099 	ld	(0x06, sp), a
      00049D 0F 05            [ 1] 1100 	clr	(0x05, sp)
      00049F 7B 0B            [ 1] 1101 	ld	a, (0x0b, sp)
      0004A1 0F 01            [ 1] 1102 	clr	(0x01, sp)
      0004A3 97               [ 1] 1103 	ld	xl, a
      0004A4 02               [ 1] 1104 	rlwa	x
      0004A5 4F               [ 1] 1105 	clr	a
      0004A6 01               [ 1] 1106 	rrwa	x
      0004A7 5D               [ 2] 1107 	tnzw	x
      0004A8 2A 03            [ 1] 1108 	jrpl	00103$
      0004AA 1C 00 07         [ 2] 1109 	addw	x, #0x0007
      0004AD                       1110 00103$:
      0004AD 57               [ 2] 1111 	sraw	x
      0004AE 57               [ 2] 1112 	sraw	x
      0004AF 57               [ 2] 1113 	sraw	x
      0004B0 58               [ 2] 1114 	sllw	x
      0004B1 58               [ 2] 1115 	sllw	x
      0004B2 58               [ 2] 1116 	sllw	x
      0004B3 58               [ 2] 1117 	sllw	x
      0004B4 58               [ 2] 1118 	sllw	x
      0004B5 58               [ 2] 1119 	sllw	x
      0004B6 58               [ 2] 1120 	sllw	x
      0004B7 72 FB 05         [ 2] 1121 	addw	x, (0x05, sp)
      0004BA 72 FB 07         [ 2] 1122 	addw	x, (0x07, sp)
      0004BD 1F 03            [ 2] 1123 	ldw	(0x03, sp), x
      0004BF 90 5F            [ 1] 1124 	clrw	y
      0004C1 61               [ 1] 1125 	exg	a, yl
      0004C2 7B 0C            [ 1] 1126 	ld	a, (0x0c, sp)
      0004C4 61               [ 1] 1127 	exg	a, yl
      0004C5 A4 07            [ 1] 1128 	and	a, #0x07
      0004C7 6B 06            [ 1] 1129 	ld	(0x06, sp), a
      0004C9 0F 05            [ 1] 1130 	clr	(0x05, sp)
      0004CB 1E 03            [ 2] 1131 	ldw	x, (0x03, sp)
      0004CD F6               [ 1] 1132 	ld	a, (x)
      0004CE 5F               [ 1] 1133 	clrw	x
      0004CF 90 89            [ 2] 1134 	pushw	y
      0004D1 16 07            [ 2] 1135 	ldw	y, (0x07, sp)
      0004D3 90 89            [ 2] 1136 	pushw	y
      0004D5 97               [ 1] 1137 	ld	xl, a
      0004D6 CDr03r51         [ 4] 1138 	call	_set_bit
      0004D9 9F               [ 1] 1139 	ld	a, xl
      0004DA 1E 03            [ 2] 1140 	ldw	x, (0x03, sp)
      0004DC F7               [ 1] 1141 	ld	(x), a
                                   1142 ;	main.c: 94: }
      0004DD 1E 09            [ 2] 1143 	ldw	x, (9, sp)
      0004DF 5B 0C            [ 2] 1144 	addw	sp, #12
      0004E1 FC               [ 2] 1145 	jp	(x)
                                   1146 ;	main.c: 96: void display_buffer_fill_entire(uint8_t *in_data, uint8_t *out_data) {
                                   1147 ;	-----------------------------------------
                                   1148 ;	 function display_buffer_fill_entire
                                   1149 ;	-----------------------------------------
      0004E2                       1150 _display_buffer_fill_entire:
      0004E2 52 0A            [ 2] 1151 	sub	sp, #10
      0004E4 1F 05            [ 2] 1152 	ldw	(0x05, sp), x
                                   1153 ;	main.c: 98: for (int height = 0; height < SSD1306_LCDHEIGHT; height++) {
      0004E6 5F               [ 1] 1154 	clrw	x
      0004E7 1F 07            [ 2] 1155 	ldw	(0x07, sp), x
      0004E9                       1156 00107$:
      0004E9 1E 07            [ 2] 1157 	ldw	x, (0x07, sp)
      0004EB A3 00 20         [ 2] 1158 	cpw	x, #0x0020
      0004EE 2E 5A            [ 1] 1159 	jrsge	00109$
                                   1160 ;	main.c: 99: for (int width = 0; width < SSD1306_LCDWIDTH; width++) {
      0004F0 1E 07            [ 2] 1161 	ldw	x, (0x07, sp)
      0004F2 58               [ 2] 1162 	sllw	x
      0004F3 58               [ 2] 1163 	sllw	x
      0004F4 58               [ 2] 1164 	sllw	x
      0004F5 58               [ 2] 1165 	sllw	x
      0004F6 1F 01            [ 2] 1166 	ldw	(0x01, sp), x
      0004F8 5F               [ 1] 1167 	clrw	x
      0004F9 1F 09            [ 2] 1168 	ldw	(0x09, sp), x
      0004FB                       1169 00104$:
      0004FB 1E 09            [ 2] 1170 	ldw	x, (0x09, sp)
      0004FD A3 00 80         [ 2] 1171 	cpw	x, #0x0080
      000500 2E 41            [ 1] 1172 	jrsge	00108$
                                   1173 ;	main.c: 101: display_draw_pixel(out_data, width, height, get_bit(in_data[(height * 16) + (width / 8)], 7 - (width % 8)));
      000502 4B 08            [ 1] 1174 	push	#0x08
      000504 4B 00            [ 1] 1175 	push	#0x00
      000506 1E 0B            [ 2] 1176 	ldw	x, (0x0b, sp)
      000508 CDr00r00         [ 4] 1177 	call	__modsint
      00050B 1F 03            [ 2] 1178 	ldw	(0x03, sp), x
      00050D 90 AE 00 07      [ 2] 1179 	ldw	y, #0x0007
      000511 72 F2 03         [ 2] 1180 	subw	y, (0x03, sp)
      000514 1E 09            [ 2] 1181 	ldw	x, (0x09, sp)
      000516 2A 03            [ 1] 1182 	jrpl	00143$
      000518 1C 00 07         [ 2] 1183 	addw	x, #0x0007
      00051B                       1184 00143$:
      00051B 57               [ 2] 1185 	sraw	x
      00051C 57               [ 2] 1186 	sraw	x
      00051D 57               [ 2] 1187 	sraw	x
      00051E 72 FB 01         [ 2] 1188 	addw	x, (0x01, sp)
      000521 72 FB 05         [ 2] 1189 	addw	x, (0x05, sp)
      000524 F6               [ 1] 1190 	ld	a, (x)
      000525 5F               [ 1] 1191 	clrw	x
      000526 90 89            [ 2] 1192 	pushw	y
      000528 97               [ 1] 1193 	ld	xl, a
      000529 CDr03r3C         [ 4] 1194 	call	_get_bit
      00052C 7B 08            [ 1] 1195 	ld	a, (0x08, sp)
      00052E 02               [ 1] 1196 	rlwa	x
      00052F 7B 0A            [ 1] 1197 	ld	a, (0x0a, sp)
      000531 01               [ 1] 1198 	rrwa	x
      000532 89               [ 2] 1199 	pushw	x
      000533 5B 01            [ 2] 1200 	addw	sp, #1
      000535 88               [ 1] 1201 	push	a
      000536 9E               [ 1] 1202 	ld	a, xh
      000537 1E 0F            [ 2] 1203 	ldw	x, (0x0f, sp)
      000539 CDr04r97         [ 4] 1204 	call	_display_draw_pixel
                                   1205 ;	main.c: 99: for (int width = 0; width < SSD1306_LCDWIDTH; width++) {
      00053C 1E 09            [ 2] 1206 	ldw	x, (0x09, sp)
      00053E 5C               [ 1] 1207 	incw	x
      00053F 1F 09            [ 2] 1208 	ldw	(0x09, sp), x
      000541 20 B8            [ 2] 1209 	jra	00104$
      000543                       1210 00108$:
                                   1211 ;	main.c: 98: for (int height = 0; height < SSD1306_LCDHEIGHT; height++) {
      000543 1E 07            [ 2] 1212 	ldw	x, (0x07, sp)
      000545 5C               [ 1] 1213 	incw	x
      000546 1F 07            [ 2] 1214 	ldw	(0x07, sp), x
      000548 20 9F            [ 2] 1215 	jra	00107$
      00054A                       1216 00109$:
                                   1217 ;	main.c: 106: }
      00054A 1E 0B            [ 2] 1218 	ldw	x, (11, sp)
      00054C 5B 0E            [ 2] 1219 	addw	sp, #14
      00054E FC               [ 2] 1220 	jp	(x)
                                   1221 ;	main.c: 113: void display_set(uint8_t *data) {
                                   1222 ;	-----------------------------------------
                                   1223 ;	 function display_set
                                   1224 ;	-----------------------------------------
      00054F                       1225 _display_set:
      00054F 52 29            [ 2] 1226 	sub	sp, #41
      000551 1F 26            [ 2] 1227 	ldw	(0x26, sp), x
                                   1228 ;	main.c: 115: display_set_params_to_write();
      000553 CDr04r71         [ 4] 1229 	call	_display_set_params_to_write
                                   1230 ;	main.c: 117: do {
      000556 5F               [ 1] 1231 	clrw	x
      000557 1F 28            [ 2] 1232 	ldw	(0x28, sp), x
      000559                       1233 00102$:
                                   1234 ;	main.c: 118: uint8_t set_buf[33] = {0x40};
      000559 A6 40            [ 1] 1235 	ld	a, #0x40
      00055B 6B 01            [ 1] 1236 	ld	(0x01, sp), a
      00055D 0F 02            [ 1] 1237 	clr	(0x02, sp)
      00055F 0F 03            [ 1] 1238 	clr	(0x03, sp)
      000561 0F 04            [ 1] 1239 	clr	(0x04, sp)
      000563 0F 05            [ 1] 1240 	clr	(0x05, sp)
      000565 0F 06            [ 1] 1241 	clr	(0x06, sp)
      000567 0F 07            [ 1] 1242 	clr	(0x07, sp)
      000569 0F 08            [ 1] 1243 	clr	(0x08, sp)
      00056B 0F 09            [ 1] 1244 	clr	(0x09, sp)
      00056D 0F 0A            [ 1] 1245 	clr	(0x0a, sp)
      00056F 0F 0B            [ 1] 1246 	clr	(0x0b, sp)
      000571 0F 0C            [ 1] 1247 	clr	(0x0c, sp)
      000573 0F 0D            [ 1] 1248 	clr	(0x0d, sp)
      000575 0F 0E            [ 1] 1249 	clr	(0x0e, sp)
      000577 0F 0F            [ 1] 1250 	clr	(0x0f, sp)
      000579 0F 10            [ 1] 1251 	clr	(0x10, sp)
      00057B 0F 11            [ 1] 1252 	clr	(0x11, sp)
      00057D 0F 12            [ 1] 1253 	clr	(0x12, sp)
      00057F 0F 13            [ 1] 1254 	clr	(0x13, sp)
      000581 0F 14            [ 1] 1255 	clr	(0x14, sp)
      000583 0F 15            [ 1] 1256 	clr	(0x15, sp)
      000585 0F 16            [ 1] 1257 	clr	(0x16, sp)
      000587 0F 17            [ 1] 1258 	clr	(0x17, sp)
      000589 0F 18            [ 1] 1259 	clr	(0x18, sp)
      00058B 0F 19            [ 1] 1260 	clr	(0x19, sp)
      00058D 0F 1A            [ 1] 1261 	clr	(0x1a, sp)
      00058F 0F 1B            [ 1] 1262 	clr	(0x1b, sp)
      000591 0F 1C            [ 1] 1263 	clr	(0x1c, sp)
      000593 0F 1D            [ 1] 1264 	clr	(0x1d, sp)
      000595 0F 1E            [ 1] 1265 	clr	(0x1e, sp)
      000597 0F 1F            [ 1] 1266 	clr	(0x1f, sp)
      000599 0F 20            [ 1] 1267 	clr	(0x20, sp)
      00059B 0F 21            [ 1] 1268 	clr	(0x21, sp)
                                   1269 ;	main.c: 119: for (int o = 0; o < 32; o++) {
      00059D 5F               [ 1] 1270 	clrw	x
      00059E                       1271 00106$:
      00059E A3 00 20         [ 2] 1272 	cpw	x, #0x0020
      0005A1 2E 24            [ 1] 1273 	jrsge	00101$
                                   1274 ;	main.c: 120: set_buf[o + 1] = data[i + o];
      0005A3 9F               [ 1] 1275 	ld	a, xl
      0005A4 4C               [ 1] 1276 	inc	a
      0005A5 6B 23            [ 1] 1277 	ld	(0x23, sp), a
      0005A7 49               [ 1] 1278 	rlc	a
      0005A8 4F               [ 1] 1279 	clr	a
      0005A9 A2 00            [ 1] 1280 	sbc	a, #0x00
      0005AB 6B 22            [ 1] 1281 	ld	(0x22, sp), a
      0005AD 90 96            [ 1] 1282 	ldw	y, sp
      0005AF 90 5C            [ 1] 1283 	incw	y
      0005B1 72 F9 22         [ 2] 1284 	addw	y, (0x22, sp)
      0005B4 17 24            [ 2] 1285 	ldw	(0x24, sp), y
      0005B6 90 93            [ 1] 1286 	ldw	y, x
      0005B8 72 F9 28         [ 2] 1287 	addw	y, (0x28, sp)
      0005BB 72 F9 26         [ 2] 1288 	addw	y, (0x26, sp)
      0005BE 90 F6            [ 1] 1289 	ld	a, (y)
      0005C0 16 24            [ 2] 1290 	ldw	y, (0x24, sp)
      0005C2 90 F7            [ 1] 1291 	ld	(y), a
                                   1292 ;	main.c: 119: for (int o = 0; o < 32; o++) {
      0005C4 5C               [ 1] 1293 	incw	x
      0005C5 20 D7            [ 2] 1294 	jra	00106$
      0005C7                       1295 00101$:
                                   1296 ;	main.c: 122: i2c_write(I2C_DISPLAY_ADDR, 33, set_buf);
      0005C7 96               [ 1] 1297 	ldw	x, sp
      0005C8 5C               [ 1] 1298 	incw	x
      0005C9 89               [ 2] 1299 	pushw	x
      0005CA 4B 21            [ 1] 1300 	push	#0x21
      0005CC A6 3C            [ 1] 1301 	ld	a, #0x3c
      0005CE CDr02rC9         [ 4] 1302 	call	_i2c_write
                                   1303 ;	main.c: 123: i += 32;
      0005D1 1E 28            [ 2] 1304 	ldw	x, (0x28, sp)
      0005D3 1C 00 20         [ 2] 1305 	addw	x, #0x0020
                                   1306 ;	main.c: 124: } while (i < 512);
      0005D6 1F 28            [ 2] 1307 	ldw	(0x28, sp), x
      0005D8 A3 02 00         [ 2] 1308 	cpw	x, #0x0200
      0005DB 2E 03            [ 1] 1309 	jrsge	00134$
      0005DD CCr05r59         [ 2] 1310 	jp	00102$
      0005E0                       1311 00134$:
                                   1312 ;	main.c: 125: }
      0005E0 5B 29            [ 2] 1313 	addw	sp, #41
      0005E2 81               [ 4] 1314 	ret
                                   1315 ;	main.c: 128: void display_clean(void)
                                   1316 ;	-----------------------------------------
                                   1317 ;	 function display_clean
                                   1318 ;	-----------------------------------------
      0005E3                       1319 _display_clean:
      0005E3 52 21            [ 2] 1320 	sub	sp, #33
                                   1321 ;	main.c: 130: uint8_t clean_buf[33] = {0x40};
      0005E5 A6 40            [ 1] 1322 	ld	a, #0x40
      0005E7 6B 01            [ 1] 1323 	ld	(0x01, sp), a
      0005E9 0F 02            [ 1] 1324 	clr	(0x02, sp)
      0005EB 0F 03            [ 1] 1325 	clr	(0x03, sp)
      0005ED 0F 04            [ 1] 1326 	clr	(0x04, sp)
      0005EF 0F 05            [ 1] 1327 	clr	(0x05, sp)
      0005F1 0F 06            [ 1] 1328 	clr	(0x06, sp)
      0005F3 0F 07            [ 1] 1329 	clr	(0x07, sp)
      0005F5 0F 08            [ 1] 1330 	clr	(0x08, sp)
      0005F7 0F 09            [ 1] 1331 	clr	(0x09, sp)
      0005F9 0F 0A            [ 1] 1332 	clr	(0x0a, sp)
      0005FB 0F 0B            [ 1] 1333 	clr	(0x0b, sp)
      0005FD 0F 0C            [ 1] 1334 	clr	(0x0c, sp)
      0005FF 0F 0D            [ 1] 1335 	clr	(0x0d, sp)
      000601 0F 0E            [ 1] 1336 	clr	(0x0e, sp)
      000603 0F 0F            [ 1] 1337 	clr	(0x0f, sp)
      000605 0F 10            [ 1] 1338 	clr	(0x10, sp)
      000607 0F 11            [ 1] 1339 	clr	(0x11, sp)
      000609 0F 12            [ 1] 1340 	clr	(0x12, sp)
      00060B 0F 13            [ 1] 1341 	clr	(0x13, sp)
      00060D 0F 14            [ 1] 1342 	clr	(0x14, sp)
      00060F 0F 15            [ 1] 1343 	clr	(0x15, sp)
      000611 0F 16            [ 1] 1344 	clr	(0x16, sp)
      000613 0F 17            [ 1] 1345 	clr	(0x17, sp)
      000615 0F 18            [ 1] 1346 	clr	(0x18, sp)
      000617 0F 19            [ 1] 1347 	clr	(0x19, sp)
      000619 0F 1A            [ 1] 1348 	clr	(0x1a, sp)
      00061B 0F 1B            [ 1] 1349 	clr	(0x1b, sp)
      00061D 0F 1C            [ 1] 1350 	clr	(0x1c, sp)
      00061F 0F 1D            [ 1] 1351 	clr	(0x1d, sp)
      000621 0F 1E            [ 1] 1352 	clr	(0x1e, sp)
      000623 0F 1F            [ 1] 1353 	clr	(0x1f, sp)
      000625 0F 20            [ 1] 1354 	clr	(0x20, sp)
      000627 0F 21            [ 1] 1355 	clr	(0x21, sp)
                                   1356 ;	main.c: 132: display_set_params_to_write();
      000629 CDr04r71         [ 4] 1357 	call	_display_set_params_to_write
                                   1358 ;	main.c: 134: for(int i = 0;i<16;i++)
      00062C 4F               [ 1] 1359 	clr	a
      00062D                       1360 00103$:
      00062D A1 10            [ 1] 1361 	cp	a, #0x10
      00062F 24 10            [ 1] 1362 	jrnc	00105$
                                   1363 ;	main.c: 135: i2c_write(I2C_DISPLAY_ADDR,33,clean_buf);
      000631 88               [ 1] 1364 	push	a
      000632 96               [ 1] 1365 	ldw	x, sp
      000633 5C               [ 1] 1366 	incw	x
      000634 5C               [ 1] 1367 	incw	x
      000635 89               [ 2] 1368 	pushw	x
      000636 4B 21            [ 1] 1369 	push	#0x21
      000638 A6 3C            [ 1] 1370 	ld	a, #0x3c
      00063A CDr02rC9         [ 4] 1371 	call	_i2c_write
      00063D 84               [ 1] 1372 	pop	a
                                   1373 ;	main.c: 134: for(int i = 0;i<16;i++)
      00063E 4C               [ 1] 1374 	inc	a
      00063F 20 EC            [ 2] 1375 	jra	00103$
      000641                       1376 00105$:
                                   1377 ;	main.c: 137: }
      000641 5B 21            [ 2] 1378 	addw	sp, #33
      000643 81               [ 4] 1379 	ret
                                   1380 ;	main.c: 139: void gg(void)
                                   1381 ;	-----------------------------------------
                                   1382 ;	 function gg
                                   1383 ;	-----------------------------------------
      000644                       1384 _gg:
      000644 90 96            [ 1] 1385 	ldw	y, sp
      000646 72 A2 01 07      [ 2] 1386 	subw	y, #263
      00064A 90 94            [ 1] 1387 	ldw	sp, y
      00064C 52 F9            [ 2] 1388 	sub	sp, #249
                                   1389 ;	main.c: 141: display_init();
      00064E 90 89            [ 2] 1390 	pushw	y
      000650 CDr03r8E         [ 4] 1391 	call	_display_init
      000653 CDr05rE3         [ 4] 1392 	call	_display_clean
      000656 90 85            [ 2] 1393 	popw	y
                                   1394 ;	main.c: 144: uint8_t buffer[512] = {0};
      000658 0F 01            [ 1] 1395 	clr	(0x01, sp)
      00065A 0F 02            [ 1] 1396 	clr	(0x02, sp)
      00065C 0F 03            [ 1] 1397 	clr	(0x03, sp)
      00065E 0F 04            [ 1] 1398 	clr	(0x04, sp)
      000660 0F 05            [ 1] 1399 	clr	(0x05, sp)
      000662 0F 06            [ 1] 1400 	clr	(0x06, sp)
      000664 0F 07            [ 1] 1401 	clr	(0x07, sp)
      000666 0F 08            [ 1] 1402 	clr	(0x08, sp)
      000668 0F 09            [ 1] 1403 	clr	(0x09, sp)
      00066A 0F 0A            [ 1] 1404 	clr	(0x0a, sp)
      00066C 0F 0B            [ 1] 1405 	clr	(0x0b, sp)
      00066E 0F 0C            [ 1] 1406 	clr	(0x0c, sp)
      000670 0F 0D            [ 1] 1407 	clr	(0x0d, sp)
      000672 0F 0E            [ 1] 1408 	clr	(0x0e, sp)
      000674 0F 0F            [ 1] 1409 	clr	(0x0f, sp)
      000676 0F 10            [ 1] 1410 	clr	(0x10, sp)
      000678 0F 11            [ 1] 1411 	clr	(0x11, sp)
      00067A 0F 12            [ 1] 1412 	clr	(0x12, sp)
      00067C 0F 13            [ 1] 1413 	clr	(0x13, sp)
      00067E 0F 14            [ 1] 1414 	clr	(0x14, sp)
      000680 0F 15            [ 1] 1415 	clr	(0x15, sp)
      000682 0F 16            [ 1] 1416 	clr	(0x16, sp)
      000684 0F 17            [ 1] 1417 	clr	(0x17, sp)
      000686 0F 18            [ 1] 1418 	clr	(0x18, sp)
      000688 0F 19            [ 1] 1419 	clr	(0x19, sp)
      00068A 0F 1A            [ 1] 1420 	clr	(0x1a, sp)
      00068C 0F 1B            [ 1] 1421 	clr	(0x1b, sp)
      00068E 0F 1C            [ 1] 1422 	clr	(0x1c, sp)
      000690 0F 1D            [ 1] 1423 	clr	(0x1d, sp)
      000692 0F 1E            [ 1] 1424 	clr	(0x1e, sp)
      000694 0F 1F            [ 1] 1425 	clr	(0x1f, sp)
      000696 0F 20            [ 1] 1426 	clr	(0x20, sp)
      000698 0F 21            [ 1] 1427 	clr	(0x21, sp)
      00069A 0F 22            [ 1] 1428 	clr	(0x22, sp)
      00069C 0F 23            [ 1] 1429 	clr	(0x23, sp)
      00069E 0F 24            [ 1] 1430 	clr	(0x24, sp)
      0006A0 0F 25            [ 1] 1431 	clr	(0x25, sp)
      0006A2 0F 26            [ 1] 1432 	clr	(0x26, sp)
      0006A4 0F 27            [ 1] 1433 	clr	(0x27, sp)
      0006A6 0F 28            [ 1] 1434 	clr	(0x28, sp)
      0006A8 0F 29            [ 1] 1435 	clr	(0x29, sp)
      0006AA 0F 2A            [ 1] 1436 	clr	(0x2a, sp)
      0006AC 0F 2B            [ 1] 1437 	clr	(0x2b, sp)
      0006AE 0F 2C            [ 1] 1438 	clr	(0x2c, sp)
      0006B0 0F 2D            [ 1] 1439 	clr	(0x2d, sp)
      0006B2 0F 2E            [ 1] 1440 	clr	(0x2e, sp)
      0006B4 0F 2F            [ 1] 1441 	clr	(0x2f, sp)
      0006B6 0F 30            [ 1] 1442 	clr	(0x30, sp)
      0006B8 0F 31            [ 1] 1443 	clr	(0x31, sp)
      0006BA 0F 32            [ 1] 1444 	clr	(0x32, sp)
      0006BC 0F 33            [ 1] 1445 	clr	(0x33, sp)
      0006BE 0F 34            [ 1] 1446 	clr	(0x34, sp)
      0006C0 0F 35            [ 1] 1447 	clr	(0x35, sp)
      0006C2 0F 36            [ 1] 1448 	clr	(0x36, sp)
      0006C4 0F 37            [ 1] 1449 	clr	(0x37, sp)
      0006C6 0F 38            [ 1] 1450 	clr	(0x38, sp)
      0006C8 0F 39            [ 1] 1451 	clr	(0x39, sp)
      0006CA 0F 3A            [ 1] 1452 	clr	(0x3a, sp)
      0006CC 0F 3B            [ 1] 1453 	clr	(0x3b, sp)
      0006CE 0F 3C            [ 1] 1454 	clr	(0x3c, sp)
      0006D0 0F 3D            [ 1] 1455 	clr	(0x3d, sp)
      0006D2 0F 3E            [ 1] 1456 	clr	(0x3e, sp)
      0006D4 0F 3F            [ 1] 1457 	clr	(0x3f, sp)
      0006D6 0F 40            [ 1] 1458 	clr	(0x40, sp)
      0006D8 0F 41            [ 1] 1459 	clr	(0x41, sp)
      0006DA 0F 42            [ 1] 1460 	clr	(0x42, sp)
      0006DC 0F 43            [ 1] 1461 	clr	(0x43, sp)
      0006DE 0F 44            [ 1] 1462 	clr	(0x44, sp)
      0006E0 0F 45            [ 1] 1463 	clr	(0x45, sp)
      0006E2 0F 46            [ 1] 1464 	clr	(0x46, sp)
      0006E4 0F 47            [ 1] 1465 	clr	(0x47, sp)
      0006E6 0F 48            [ 1] 1466 	clr	(0x48, sp)
      0006E8 0F 49            [ 1] 1467 	clr	(0x49, sp)
      0006EA 0F 4A            [ 1] 1468 	clr	(0x4a, sp)
      0006EC 0F 4B            [ 1] 1469 	clr	(0x4b, sp)
      0006EE 0F 4C            [ 1] 1470 	clr	(0x4c, sp)
      0006F0 0F 4D            [ 1] 1471 	clr	(0x4d, sp)
      0006F2 0F 4E            [ 1] 1472 	clr	(0x4e, sp)
      0006F4 0F 4F            [ 1] 1473 	clr	(0x4f, sp)
      0006F6 0F 50            [ 1] 1474 	clr	(0x50, sp)
      0006F8 0F 51            [ 1] 1475 	clr	(0x51, sp)
      0006FA 0F 52            [ 1] 1476 	clr	(0x52, sp)
      0006FC 0F 53            [ 1] 1477 	clr	(0x53, sp)
      0006FE 0F 54            [ 1] 1478 	clr	(0x54, sp)
      000700 0F 55            [ 1] 1479 	clr	(0x55, sp)
      000702 0F 56            [ 1] 1480 	clr	(0x56, sp)
      000704 0F 57            [ 1] 1481 	clr	(0x57, sp)
      000706 0F 58            [ 1] 1482 	clr	(0x58, sp)
      000708 0F 59            [ 1] 1483 	clr	(0x59, sp)
      00070A 0F 5A            [ 1] 1484 	clr	(0x5a, sp)
      00070C 0F 5B            [ 1] 1485 	clr	(0x5b, sp)
      00070E 0F 5C            [ 1] 1486 	clr	(0x5c, sp)
      000710 0F 5D            [ 1] 1487 	clr	(0x5d, sp)
      000712 0F 5E            [ 1] 1488 	clr	(0x5e, sp)
      000714 0F 5F            [ 1] 1489 	clr	(0x5f, sp)
      000716 0F 60            [ 1] 1490 	clr	(0x60, sp)
      000718 0F 61            [ 1] 1491 	clr	(0x61, sp)
      00071A 0F 62            [ 1] 1492 	clr	(0x62, sp)
      00071C 0F 63            [ 1] 1493 	clr	(0x63, sp)
      00071E 0F 64            [ 1] 1494 	clr	(0x64, sp)
      000720 0F 65            [ 1] 1495 	clr	(0x65, sp)
      000722 0F 66            [ 1] 1496 	clr	(0x66, sp)
      000724 0F 67            [ 1] 1497 	clr	(0x67, sp)
      000726 0F 68            [ 1] 1498 	clr	(0x68, sp)
      000728 0F 69            [ 1] 1499 	clr	(0x69, sp)
      00072A 0F 6A            [ 1] 1500 	clr	(0x6a, sp)
      00072C 0F 6B            [ 1] 1501 	clr	(0x6b, sp)
      00072E 0F 6C            [ 1] 1502 	clr	(0x6c, sp)
      000730 0F 6D            [ 1] 1503 	clr	(0x6d, sp)
      000732 0F 6E            [ 1] 1504 	clr	(0x6e, sp)
      000734 0F 6F            [ 1] 1505 	clr	(0x6f, sp)
      000736 0F 70            [ 1] 1506 	clr	(0x70, sp)
      000738 0F 71            [ 1] 1507 	clr	(0x71, sp)
      00073A 0F 72            [ 1] 1508 	clr	(0x72, sp)
      00073C 0F 73            [ 1] 1509 	clr	(0x73, sp)
      00073E 0F 74            [ 1] 1510 	clr	(0x74, sp)
      000740 0F 75            [ 1] 1511 	clr	(0x75, sp)
      000742 0F 76            [ 1] 1512 	clr	(0x76, sp)
      000744 0F 77            [ 1] 1513 	clr	(0x77, sp)
      000746 0F 78            [ 1] 1514 	clr	(0x78, sp)
      000748 0F 79            [ 1] 1515 	clr	(0x79, sp)
      00074A 0F 7A            [ 1] 1516 	clr	(0x7a, sp)
      00074C 0F 7B            [ 1] 1517 	clr	(0x7b, sp)
      00074E 0F 7C            [ 1] 1518 	clr	(0x7c, sp)
      000750 0F 7D            [ 1] 1519 	clr	(0x7d, sp)
      000752 0F 7E            [ 1] 1520 	clr	(0x7e, sp)
      000754 0F 7F            [ 1] 1521 	clr	(0x7f, sp)
      000756 0F 80            [ 1] 1522 	clr	(0x80, sp)
      000758 0F 81            [ 1] 1523 	clr	(0x81, sp)
      00075A 0F 82            [ 1] 1524 	clr	(0x82, sp)
      00075C 0F 83            [ 1] 1525 	clr	(0x83, sp)
      00075E 0F 84            [ 1] 1526 	clr	(0x84, sp)
      000760 0F 85            [ 1] 1527 	clr	(0x85, sp)
      000762 0F 86            [ 1] 1528 	clr	(0x86, sp)
      000764 0F 87            [ 1] 1529 	clr	(0x87, sp)
      000766 0F 88            [ 1] 1530 	clr	(0x88, sp)
      000768 0F 89            [ 1] 1531 	clr	(0x89, sp)
      00076A 0F 8A            [ 1] 1532 	clr	(0x8a, sp)
      00076C 0F 8B            [ 1] 1533 	clr	(0x8b, sp)
      00076E 0F 8C            [ 1] 1534 	clr	(0x8c, sp)
      000770 0F 8D            [ 1] 1535 	clr	(0x8d, sp)
      000772 0F 8E            [ 1] 1536 	clr	(0x8e, sp)
      000774 0F 8F            [ 1] 1537 	clr	(0x8f, sp)
      000776 0F 90            [ 1] 1538 	clr	(0x90, sp)
      000778 0F 91            [ 1] 1539 	clr	(0x91, sp)
      00077A 0F 92            [ 1] 1540 	clr	(0x92, sp)
      00077C 0F 93            [ 1] 1541 	clr	(0x93, sp)
      00077E 0F 94            [ 1] 1542 	clr	(0x94, sp)
      000780 0F 95            [ 1] 1543 	clr	(0x95, sp)
      000782 0F 96            [ 1] 1544 	clr	(0x96, sp)
      000784 0F 97            [ 1] 1545 	clr	(0x97, sp)
      000786 0F 98            [ 1] 1546 	clr	(0x98, sp)
      000788 0F 99            [ 1] 1547 	clr	(0x99, sp)
      00078A 0F 9A            [ 1] 1548 	clr	(0x9a, sp)
      00078C 0F 9B            [ 1] 1549 	clr	(0x9b, sp)
      00078E 0F 9C            [ 1] 1550 	clr	(0x9c, sp)
      000790 0F 9D            [ 1] 1551 	clr	(0x9d, sp)
      000792 0F 9E            [ 1] 1552 	clr	(0x9e, sp)
      000794 0F 9F            [ 1] 1553 	clr	(0x9f, sp)
      000796 0F A0            [ 1] 1554 	clr	(0xa0, sp)
      000798 0F A1            [ 1] 1555 	clr	(0xa1, sp)
      00079A 0F A2            [ 1] 1556 	clr	(0xa2, sp)
      00079C 0F A3            [ 1] 1557 	clr	(0xa3, sp)
      00079E 0F A4            [ 1] 1558 	clr	(0xa4, sp)
      0007A0 0F A5            [ 1] 1559 	clr	(0xa5, sp)
      0007A2 0F A6            [ 1] 1560 	clr	(0xa6, sp)
      0007A4 0F A7            [ 1] 1561 	clr	(0xa7, sp)
      0007A6 0F A8            [ 1] 1562 	clr	(0xa8, sp)
      0007A8 0F A9            [ 1] 1563 	clr	(0xa9, sp)
      0007AA 0F AA            [ 1] 1564 	clr	(0xaa, sp)
      0007AC 0F AB            [ 1] 1565 	clr	(0xab, sp)
      0007AE 0F AC            [ 1] 1566 	clr	(0xac, sp)
      0007B0 0F AD            [ 1] 1567 	clr	(0xad, sp)
      0007B2 0F AE            [ 1] 1568 	clr	(0xae, sp)
      0007B4 0F AF            [ 1] 1569 	clr	(0xaf, sp)
      0007B6 0F B0            [ 1] 1570 	clr	(0xb0, sp)
      0007B8 0F B1            [ 1] 1571 	clr	(0xb1, sp)
      0007BA 0F B2            [ 1] 1572 	clr	(0xb2, sp)
      0007BC 0F B3            [ 1] 1573 	clr	(0xb3, sp)
      0007BE 0F B4            [ 1] 1574 	clr	(0xb4, sp)
      0007C0 0F B5            [ 1] 1575 	clr	(0xb5, sp)
      0007C2 0F B6            [ 1] 1576 	clr	(0xb6, sp)
      0007C4 0F B7            [ 1] 1577 	clr	(0xb7, sp)
      0007C6 0F B8            [ 1] 1578 	clr	(0xb8, sp)
      0007C8 0F B9            [ 1] 1579 	clr	(0xb9, sp)
      0007CA 0F BA            [ 1] 1580 	clr	(0xba, sp)
      0007CC 0F BB            [ 1] 1581 	clr	(0xbb, sp)
      0007CE 0F BC            [ 1] 1582 	clr	(0xbc, sp)
      0007D0 0F BD            [ 1] 1583 	clr	(0xbd, sp)
      0007D2 0F BE            [ 1] 1584 	clr	(0xbe, sp)
      0007D4 0F BF            [ 1] 1585 	clr	(0xbf, sp)
      0007D6 0F C0            [ 1] 1586 	clr	(0xc0, sp)
      0007D8 0F C1            [ 1] 1587 	clr	(0xc1, sp)
      0007DA 0F C2            [ 1] 1588 	clr	(0xc2, sp)
      0007DC 0F C3            [ 1] 1589 	clr	(0xc3, sp)
      0007DE 0F C4            [ 1] 1590 	clr	(0xc4, sp)
      0007E0 0F C5            [ 1] 1591 	clr	(0xc5, sp)
      0007E2 0F C6            [ 1] 1592 	clr	(0xc6, sp)
      0007E4 0F C7            [ 1] 1593 	clr	(0xc7, sp)
      0007E6 0F C8            [ 1] 1594 	clr	(0xc8, sp)
      0007E8 0F C9            [ 1] 1595 	clr	(0xc9, sp)
      0007EA 0F CA            [ 1] 1596 	clr	(0xca, sp)
      0007EC 0F CB            [ 1] 1597 	clr	(0xcb, sp)
      0007EE 0F CC            [ 1] 1598 	clr	(0xcc, sp)
      0007F0 0F CD            [ 1] 1599 	clr	(0xcd, sp)
      0007F2 0F CE            [ 1] 1600 	clr	(0xce, sp)
      0007F4 0F CF            [ 1] 1601 	clr	(0xcf, sp)
      0007F6 0F D0            [ 1] 1602 	clr	(0xd0, sp)
      0007F8 0F D1            [ 1] 1603 	clr	(0xd1, sp)
      0007FA 0F D2            [ 1] 1604 	clr	(0xd2, sp)
      0007FC 0F D3            [ 1] 1605 	clr	(0xd3, sp)
      0007FE 0F D4            [ 1] 1606 	clr	(0xd4, sp)
      000800 0F D5            [ 1] 1607 	clr	(0xd5, sp)
      000802 0F D6            [ 1] 1608 	clr	(0xd6, sp)
      000804 0F D7            [ 1] 1609 	clr	(0xd7, sp)
      000806 0F D8            [ 1] 1610 	clr	(0xd8, sp)
      000808 0F D9            [ 1] 1611 	clr	(0xd9, sp)
      00080A 0F DA            [ 1] 1612 	clr	(0xda, sp)
      00080C 0F DB            [ 1] 1613 	clr	(0xdb, sp)
      00080E 0F DC            [ 1] 1614 	clr	(0xdc, sp)
      000810 0F DD            [ 1] 1615 	clr	(0xdd, sp)
      000812 0F DE            [ 1] 1616 	clr	(0xde, sp)
      000814 0F DF            [ 1] 1617 	clr	(0xdf, sp)
      000816 0F E0            [ 1] 1618 	clr	(0xe0, sp)
      000818 0F E1            [ 1] 1619 	clr	(0xe1, sp)
      00081A 0F E2            [ 1] 1620 	clr	(0xe2, sp)
      00081C 0F E3            [ 1] 1621 	clr	(0xe3, sp)
      00081E 0F E4            [ 1] 1622 	clr	(0xe4, sp)
      000820 0F E5            [ 1] 1623 	clr	(0xe5, sp)
      000822 0F E6            [ 1] 1624 	clr	(0xe6, sp)
      000824 0F E7            [ 1] 1625 	clr	(0xe7, sp)
      000826 0F E8            [ 1] 1626 	clr	(0xe8, sp)
      000828 0F E9            [ 1] 1627 	clr	(0xe9, sp)
      00082A 0F EA            [ 1] 1628 	clr	(0xea, sp)
      00082C 0F EB            [ 1] 1629 	clr	(0xeb, sp)
      00082E 0F EC            [ 1] 1630 	clr	(0xec, sp)
      000830 0F ED            [ 1] 1631 	clr	(0xed, sp)
      000832 0F EE            [ 1] 1632 	clr	(0xee, sp)
      000834 0F EF            [ 1] 1633 	clr	(0xef, sp)
      000836 0F F0            [ 1] 1634 	clr	(0xf0, sp)
      000838 0F F1            [ 1] 1635 	clr	(0xf1, sp)
      00083A 0F F2            [ 1] 1636 	clr	(0xf2, sp)
      00083C 0F F3            [ 1] 1637 	clr	(0xf3, sp)
      00083E 0F F4            [ 1] 1638 	clr	(0xf4, sp)
      000840 0F F5            [ 1] 1639 	clr	(0xf5, sp)
      000842 0F F6            [ 1] 1640 	clr	(0xf6, sp)
      000844 0F F7            [ 1] 1641 	clr	(0xf7, sp)
      000846 0F F8            [ 1] 1642 	clr	(0xf8, sp)
      000848 0F F9            [ 1] 1643 	clr	(0xf9, sp)
      00084A 0F FA            [ 1] 1644 	clr	(0xfa, sp)
      00084C 0F FB            [ 1] 1645 	clr	(0xfb, sp)
      00084E 0F FC            [ 1] 1646 	clr	(0xfc, sp)
      000850 0F FD            [ 1] 1647 	clr	(0xfd, sp)
      000852 0F FE            [ 1] 1648 	clr	(0xfe, sp)
      000854 0F FF            [ 1] 1649 	clr	(0xff, sp)
      000856 90 6F 07         [ 1] 1650 	clr	(0x7, y)
      000859 90 6F 08         [ 1] 1651 	clr	(0x8, y)
      00085C 90 6F 09         [ 1] 1652 	clr	(0x9, y)
      00085F 90 6F 0A         [ 1] 1653 	clr	(0xa, y)
      000862 90 6F 0B         [ 1] 1654 	clr	(0xb, y)
      000865 90 6F 0C         [ 1] 1655 	clr	(0xc, y)
      000868 90 6F 0D         [ 1] 1656 	clr	(0xd, y)
      00086B 90 6F 0E         [ 1] 1657 	clr	(0xe, y)
      00086E 90 6F 0F         [ 1] 1658 	clr	(0xf, y)
      000871 90 6F 10         [ 1] 1659 	clr	(0x10, y)
      000874 90 6F 11         [ 1] 1660 	clr	(0x11, y)
      000877 90 6F 12         [ 1] 1661 	clr	(0x12, y)
      00087A 90 6F 13         [ 1] 1662 	clr	(0x13, y)
      00087D 90 6F 14         [ 1] 1663 	clr	(0x14, y)
      000880 90 6F 15         [ 1] 1664 	clr	(0x15, y)
      000883 90 6F 16         [ 1] 1665 	clr	(0x16, y)
      000886 90 6F 17         [ 1] 1666 	clr	(0x17, y)
      000889 90 6F 18         [ 1] 1667 	clr	(0x18, y)
      00088C 90 6F 19         [ 1] 1668 	clr	(0x19, y)
      00088F 90 6F 1A         [ 1] 1669 	clr	(0x1a, y)
      000892 90 6F 1B         [ 1] 1670 	clr	(0x1b, y)
      000895 90 6F 1C         [ 1] 1671 	clr	(0x1c, y)
      000898 90 6F 1D         [ 1] 1672 	clr	(0x1d, y)
      00089B 90 6F 1E         [ 1] 1673 	clr	(0x1e, y)
      00089E 90 6F 1F         [ 1] 1674 	clr	(0x1f, y)
      0008A1 90 6F 20         [ 1] 1675 	clr	(0x20, y)
      0008A4 90 6F 21         [ 1] 1676 	clr	(0x21, y)
      0008A7 90 6F 22         [ 1] 1677 	clr	(0x22, y)
      0008AA 90 6F 23         [ 1] 1678 	clr	(0x23, y)
      0008AD 90 6F 24         [ 1] 1679 	clr	(0x24, y)
      0008B0 90 6F 25         [ 1] 1680 	clr	(0x25, y)
      0008B3 90 6F 26         [ 1] 1681 	clr	(0x26, y)
      0008B6 90 6F 27         [ 1] 1682 	clr	(0x27, y)
      0008B9 90 6F 28         [ 1] 1683 	clr	(0x28, y)
      0008BC 90 6F 29         [ 1] 1684 	clr	(0x29, y)
      0008BF 90 6F 2A         [ 1] 1685 	clr	(0x2a, y)
      0008C2 90 6F 2B         [ 1] 1686 	clr	(0x2b, y)
      0008C5 90 6F 2C         [ 1] 1687 	clr	(0x2c, y)
      0008C8 90 6F 2D         [ 1] 1688 	clr	(0x2d, y)
      0008CB 90 6F 2E         [ 1] 1689 	clr	(0x2e, y)
      0008CE 90 6F 2F         [ 1] 1690 	clr	(0x2f, y)
      0008D1 90 6F 30         [ 1] 1691 	clr	(0x30, y)
      0008D4 90 6F 31         [ 1] 1692 	clr	(0x31, y)
      0008D7 90 6F 32         [ 1] 1693 	clr	(0x32, y)
      0008DA 90 6F 33         [ 1] 1694 	clr	(0x33, y)
      0008DD 90 6F 34         [ 1] 1695 	clr	(0x34, y)
      0008E0 90 6F 35         [ 1] 1696 	clr	(0x35, y)
      0008E3 90 6F 36         [ 1] 1697 	clr	(0x36, y)
      0008E6 90 6F 37         [ 1] 1698 	clr	(0x37, y)
      0008E9 90 6F 38         [ 1] 1699 	clr	(0x38, y)
      0008EC 90 6F 39         [ 1] 1700 	clr	(0x39, y)
      0008EF 90 6F 3A         [ 1] 1701 	clr	(0x3a, y)
      0008F2 90 6F 3B         [ 1] 1702 	clr	(0x3b, y)
      0008F5 90 6F 3C         [ 1] 1703 	clr	(0x3c, y)
      0008F8 90 6F 3D         [ 1] 1704 	clr	(0x3d, y)
      0008FB 90 6F 3E         [ 1] 1705 	clr	(0x3e, y)
      0008FE 90 6F 3F         [ 1] 1706 	clr	(0x3f, y)
      000901 90 6F 40         [ 1] 1707 	clr	(0x40, y)
      000904 90 6F 41         [ 1] 1708 	clr	(0x41, y)
      000907 90 6F 42         [ 1] 1709 	clr	(0x42, y)
      00090A 90 6F 43         [ 1] 1710 	clr	(0x43, y)
      00090D 90 6F 44         [ 1] 1711 	clr	(0x44, y)
      000910 90 6F 45         [ 1] 1712 	clr	(0x45, y)
      000913 90 6F 46         [ 1] 1713 	clr	(0x46, y)
      000916 90 6F 47         [ 1] 1714 	clr	(0x47, y)
      000919 90 6F 48         [ 1] 1715 	clr	(0x48, y)
      00091C 90 6F 49         [ 1] 1716 	clr	(0x49, y)
      00091F 90 6F 4A         [ 1] 1717 	clr	(0x4a, y)
      000922 90 6F 4B         [ 1] 1718 	clr	(0x4b, y)
      000925 90 6F 4C         [ 1] 1719 	clr	(0x4c, y)
      000928 90 6F 4D         [ 1] 1720 	clr	(0x4d, y)
      00092B 90 6F 4E         [ 1] 1721 	clr	(0x4e, y)
      00092E 90 6F 4F         [ 1] 1722 	clr	(0x4f, y)
      000931 90 6F 50         [ 1] 1723 	clr	(0x50, y)
      000934 90 6F 51         [ 1] 1724 	clr	(0x51, y)
      000937 90 6F 52         [ 1] 1725 	clr	(0x52, y)
      00093A 90 6F 53         [ 1] 1726 	clr	(0x53, y)
      00093D 90 6F 54         [ 1] 1727 	clr	(0x54, y)
      000940 90 6F 55         [ 1] 1728 	clr	(0x55, y)
      000943 90 6F 56         [ 1] 1729 	clr	(0x56, y)
      000946 90 6F 57         [ 1] 1730 	clr	(0x57, y)
      000949 90 6F 58         [ 1] 1731 	clr	(0x58, y)
      00094C 90 6F 59         [ 1] 1732 	clr	(0x59, y)
      00094F 90 6F 5A         [ 1] 1733 	clr	(0x5a, y)
      000952 90 6F 5B         [ 1] 1734 	clr	(0x5b, y)
      000955 90 6F 5C         [ 1] 1735 	clr	(0x5c, y)
      000958 90 6F 5D         [ 1] 1736 	clr	(0x5d, y)
      00095B 90 6F 5E         [ 1] 1737 	clr	(0x5e, y)
      00095E 90 6F 5F         [ 1] 1738 	clr	(0x5f, y)
      000961 90 6F 60         [ 1] 1739 	clr	(0x60, y)
      000964 90 6F 61         [ 1] 1740 	clr	(0x61, y)
      000967 90 6F 62         [ 1] 1741 	clr	(0x62, y)
      00096A 90 6F 63         [ 1] 1742 	clr	(0x63, y)
      00096D 90 6F 64         [ 1] 1743 	clr	(0x64, y)
      000970 90 6F 65         [ 1] 1744 	clr	(0x65, y)
      000973 90 6F 66         [ 1] 1745 	clr	(0x66, y)
      000976 90 6F 67         [ 1] 1746 	clr	(0x67, y)
      000979 90 6F 68         [ 1] 1747 	clr	(0x68, y)
      00097C 90 6F 69         [ 1] 1748 	clr	(0x69, y)
      00097F 90 6F 6A         [ 1] 1749 	clr	(0x6a, y)
      000982 90 6F 6B         [ 1] 1750 	clr	(0x6b, y)
      000985 90 6F 6C         [ 1] 1751 	clr	(0x6c, y)
      000988 90 6F 6D         [ 1] 1752 	clr	(0x6d, y)
      00098B 90 6F 6E         [ 1] 1753 	clr	(0x6e, y)
      00098E 90 6F 6F         [ 1] 1754 	clr	(0x6f, y)
      000991 90 6F 70         [ 1] 1755 	clr	(0x70, y)
      000994 90 6F 71         [ 1] 1756 	clr	(0x71, y)
      000997 90 6F 72         [ 1] 1757 	clr	(0x72, y)
      00099A 90 6F 73         [ 1] 1758 	clr	(0x73, y)
      00099D 90 6F 74         [ 1] 1759 	clr	(0x74, y)
      0009A0 90 6F 75         [ 1] 1760 	clr	(0x75, y)
      0009A3 90 6F 76         [ 1] 1761 	clr	(0x76, y)
      0009A6 90 6F 77         [ 1] 1762 	clr	(0x77, y)
      0009A9 90 6F 78         [ 1] 1763 	clr	(0x78, y)
      0009AC 90 6F 79         [ 1] 1764 	clr	(0x79, y)
      0009AF 90 6F 7A         [ 1] 1765 	clr	(0x7a, y)
      0009B2 90 6F 7B         [ 1] 1766 	clr	(0x7b, y)
      0009B5 90 6F 7C         [ 1] 1767 	clr	(0x7c, y)
      0009B8 90 6F 7D         [ 1] 1768 	clr	(0x7d, y)
      0009BB 90 6F 7E         [ 1] 1769 	clr	(0x7e, y)
      0009BE 90 6F 7F         [ 1] 1770 	clr	(0x7f, y)
      0009C1 90 6F 80         [ 1] 1771 	clr	(0x80, y)
      0009C4 90 6F 81         [ 1] 1772 	clr	(0x81, y)
      0009C7 90 6F 82         [ 1] 1773 	clr	(0x82, y)
      0009CA 90 6F 83         [ 1] 1774 	clr	(0x83, y)
      0009CD 90 6F 84         [ 1] 1775 	clr	(0x84, y)
      0009D0 90 6F 85         [ 1] 1776 	clr	(0x85, y)
      0009D3 90 6F 86         [ 1] 1777 	clr	(0x86, y)
      0009D6 90 6F 87         [ 1] 1778 	clr	(0x87, y)
      0009D9 90 6F 88         [ 1] 1779 	clr	(0x88, y)
      0009DC 90 6F 89         [ 1] 1780 	clr	(0x89, y)
      0009DF 90 6F 8A         [ 1] 1781 	clr	(0x8a, y)
      0009E2 90 6F 8B         [ 1] 1782 	clr	(0x8b, y)
      0009E5 90 6F 8C         [ 1] 1783 	clr	(0x8c, y)
      0009E8 90 6F 8D         [ 1] 1784 	clr	(0x8d, y)
      0009EB 90 6F 8E         [ 1] 1785 	clr	(0x8e, y)
      0009EE 90 6F 8F         [ 1] 1786 	clr	(0x8f, y)
      0009F1 90 6F 90         [ 1] 1787 	clr	(0x90, y)
      0009F4 90 6F 91         [ 1] 1788 	clr	(0x91, y)
      0009F7 90 6F 92         [ 1] 1789 	clr	(0x92, y)
      0009FA 90 6F 93         [ 1] 1790 	clr	(0x93, y)
      0009FD 90 6F 94         [ 1] 1791 	clr	(0x94, y)
      000A00 90 6F 95         [ 1] 1792 	clr	(0x95, y)
      000A03 90 6F 96         [ 1] 1793 	clr	(0x96, y)
      000A06 90 6F 97         [ 1] 1794 	clr	(0x97, y)
      000A09 90 6F 98         [ 1] 1795 	clr	(0x98, y)
      000A0C 90 6F 99         [ 1] 1796 	clr	(0x99, y)
      000A0F 90 6F 9A         [ 1] 1797 	clr	(0x9a, y)
      000A12 90 6F 9B         [ 1] 1798 	clr	(0x9b, y)
      000A15 90 6F 9C         [ 1] 1799 	clr	(0x9c, y)
      000A18 90 6F 9D         [ 1] 1800 	clr	(0x9d, y)
      000A1B 90 6F 9E         [ 1] 1801 	clr	(0x9e, y)
      000A1E 90 6F 9F         [ 1] 1802 	clr	(0x9f, y)
      000A21 90 6F A0         [ 1] 1803 	clr	(0xa0, y)
      000A24 90 6F A1         [ 1] 1804 	clr	(0xa1, y)
      000A27 90 6F A2         [ 1] 1805 	clr	(0xa2, y)
      000A2A 90 6F A3         [ 1] 1806 	clr	(0xa3, y)
      000A2D 90 6F A4         [ 1] 1807 	clr	(0xa4, y)
      000A30 90 6F A5         [ 1] 1808 	clr	(0xa5, y)
      000A33 90 6F A6         [ 1] 1809 	clr	(0xa6, y)
      000A36 90 6F A7         [ 1] 1810 	clr	(0xa7, y)
      000A39 90 6F A8         [ 1] 1811 	clr	(0xa8, y)
      000A3C 90 6F A9         [ 1] 1812 	clr	(0xa9, y)
      000A3F 90 6F AA         [ 1] 1813 	clr	(0xaa, y)
      000A42 90 6F AB         [ 1] 1814 	clr	(0xab, y)
      000A45 90 6F AC         [ 1] 1815 	clr	(0xac, y)
      000A48 90 6F AD         [ 1] 1816 	clr	(0xad, y)
      000A4B 90 6F AE         [ 1] 1817 	clr	(0xae, y)
      000A4E 90 6F AF         [ 1] 1818 	clr	(0xaf, y)
      000A51 90 6F B0         [ 1] 1819 	clr	(0xb0, y)
      000A54 90 6F B1         [ 1] 1820 	clr	(0xb1, y)
      000A57 90 6F B2         [ 1] 1821 	clr	(0xb2, y)
      000A5A 90 6F B3         [ 1] 1822 	clr	(0xb3, y)
      000A5D 90 6F B4         [ 1] 1823 	clr	(0xb4, y)
      000A60 90 6F B5         [ 1] 1824 	clr	(0xb5, y)
      000A63 90 6F B6         [ 1] 1825 	clr	(0xb6, y)
      000A66 90 6F B7         [ 1] 1826 	clr	(0xb7, y)
      000A69 90 6F B8         [ 1] 1827 	clr	(0xb8, y)
      000A6C 90 6F B9         [ 1] 1828 	clr	(0xb9, y)
      000A6F 90 6F BA         [ 1] 1829 	clr	(0xba, y)
      000A72 90 6F BB         [ 1] 1830 	clr	(0xbb, y)
      000A75 90 6F BC         [ 1] 1831 	clr	(0xbc, y)
      000A78 90 6F BD         [ 1] 1832 	clr	(0xbd, y)
      000A7B 90 6F BE         [ 1] 1833 	clr	(0xbe, y)
      000A7E 90 6F BF         [ 1] 1834 	clr	(0xbf, y)
      000A81 90 6F C0         [ 1] 1835 	clr	(0xc0, y)
      000A84 90 6F C1         [ 1] 1836 	clr	(0xc1, y)
      000A87 90 6F C2         [ 1] 1837 	clr	(0xc2, y)
      000A8A 90 6F C3         [ 1] 1838 	clr	(0xc3, y)
      000A8D 90 6F C4         [ 1] 1839 	clr	(0xc4, y)
      000A90 90 6F C5         [ 1] 1840 	clr	(0xc5, y)
      000A93 90 6F C6         [ 1] 1841 	clr	(0xc6, y)
      000A96 90 6F C7         [ 1] 1842 	clr	(0xc7, y)
      000A99 90 6F C8         [ 1] 1843 	clr	(0xc8, y)
      000A9C 90 6F C9         [ 1] 1844 	clr	(0xc9, y)
      000A9F 90 6F CA         [ 1] 1845 	clr	(0xca, y)
      000AA2 90 6F CB         [ 1] 1846 	clr	(0xcb, y)
      000AA5 90 6F CC         [ 1] 1847 	clr	(0xcc, y)
      000AA8 90 6F CD         [ 1] 1848 	clr	(0xcd, y)
      000AAB 90 6F CE         [ 1] 1849 	clr	(0xce, y)
      000AAE 90 6F CF         [ 1] 1850 	clr	(0xcf, y)
      000AB1 90 6F D0         [ 1] 1851 	clr	(0xd0, y)
      000AB4 90 6F D1         [ 1] 1852 	clr	(0xd1, y)
      000AB7 90 6F D2         [ 1] 1853 	clr	(0xd2, y)
      000ABA 90 6F D3         [ 1] 1854 	clr	(0xd3, y)
      000ABD 90 6F D4         [ 1] 1855 	clr	(0xd4, y)
      000AC0 90 6F D5         [ 1] 1856 	clr	(0xd5, y)
      000AC3 90 6F D6         [ 1] 1857 	clr	(0xd6, y)
      000AC6 90 6F D7         [ 1] 1858 	clr	(0xd7, y)
      000AC9 90 6F D8         [ 1] 1859 	clr	(0xd8, y)
      000ACC 90 6F D9         [ 1] 1860 	clr	(0xd9, y)
      000ACF 90 6F DA         [ 1] 1861 	clr	(0xda, y)
      000AD2 90 6F DB         [ 1] 1862 	clr	(0xdb, y)
      000AD5 90 6F DC         [ 1] 1863 	clr	(0xdc, y)
      000AD8 90 6F DD         [ 1] 1864 	clr	(0xdd, y)
      000ADB 90 6F DE         [ 1] 1865 	clr	(0xde, y)
      000ADE 90 6F DF         [ 1] 1866 	clr	(0xdf, y)
      000AE1 90 6F E0         [ 1] 1867 	clr	(0xe0, y)
      000AE4 90 6F E1         [ 1] 1868 	clr	(0xe1, y)
      000AE7 90 6F E2         [ 1] 1869 	clr	(0xe2, y)
      000AEA 90 6F E3         [ 1] 1870 	clr	(0xe3, y)
      000AED 90 6F E4         [ 1] 1871 	clr	(0xe4, y)
      000AF0 90 6F E5         [ 1] 1872 	clr	(0xe5, y)
      000AF3 90 6F E6         [ 1] 1873 	clr	(0xe6, y)
      000AF6 90 6F E7         [ 1] 1874 	clr	(0xe7, y)
      000AF9 90 6F E8         [ 1] 1875 	clr	(0xe8, y)
      000AFC 90 6F E9         [ 1] 1876 	clr	(0xe9, y)
      000AFF 90 6F EA         [ 1] 1877 	clr	(0xea, y)
      000B02 90 6F EB         [ 1] 1878 	clr	(0xeb, y)
      000B05 90 6F EC         [ 1] 1879 	clr	(0xec, y)
      000B08 90 6F ED         [ 1] 1880 	clr	(0xed, y)
      000B0B 90 6F EE         [ 1] 1881 	clr	(0xee, y)
      000B0E 90 6F EF         [ 1] 1882 	clr	(0xef, y)
      000B11 90 6F F0         [ 1] 1883 	clr	(0xf0, y)
      000B14 90 6F F1         [ 1] 1884 	clr	(0xf1, y)
      000B17 90 6F F2         [ 1] 1885 	clr	(0xf2, y)
      000B1A 90 6F F3         [ 1] 1886 	clr	(0xf3, y)
      000B1D 90 6F F4         [ 1] 1887 	clr	(0xf4, y)
      000B20 90 6F F5         [ 1] 1888 	clr	(0xf5, y)
      000B23 90 6F F6         [ 1] 1889 	clr	(0xf6, y)
      000B26 90 6F F7         [ 1] 1890 	clr	(0xf7, y)
      000B29 90 6F F8         [ 1] 1891 	clr	(0xf8, y)
      000B2C 90 6F F9         [ 1] 1892 	clr	(0xf9, y)
      000B2F 90 6F FA         [ 1] 1893 	clr	(0xfa, y)
      000B32 90 6F FB         [ 1] 1894 	clr	(0xfb, y)
      000B35 90 6F FC         [ 1] 1895 	clr	(0xfc, y)
      000B38 90 6F FD         [ 1] 1896 	clr	(0xfd, y)
      000B3B 90 6F FE         [ 1] 1897 	clr	(0xfe, y)
      000B3E 90 6F FF         [ 1] 1898 	clr	(0xff, y)
      000B41 90 4F 01 00      [ 1] 1899 	clr	(0x100, y)
      000B45 90 4F 01 01      [ 1] 1900 	clr	(0x101, y)
      000B49 90 4F 01 02      [ 1] 1901 	clr	(0x102, y)
      000B4D 90 4F 01 03      [ 1] 1902 	clr	(0x103, y)
      000B51 90 4F 01 04      [ 1] 1903 	clr	(0x104, y)
      000B55 90 4F 01 05      [ 1] 1904 	clr	(0x105, y)
      000B59 90 4F 01 06      [ 1] 1905 	clr	(0x106, y)
      000B5D 90 4F 01 07      [ 1] 1906 	clr	(0x107, y)
                                   1907 ;	main.c: 145: display_buffer_fill_entire(splash,buffer);
      000B61 90 89            [ 2] 1908 	pushw	y
      000B63 96               [ 1] 1909 	ldw	x, sp
      000B64 1C 00 03         [ 2] 1910 	addw	x, #3
      000B67 89               [ 2] 1911 	pushw	x
      000B68 AEr00r01         [ 2] 1912 	ldw	x, #(_splash+0)
      000B6B CDr04rE2         [ 4] 1913 	call	_display_buffer_fill_entire
      000B6E 96               [ 1] 1914 	ldw	x, sp
      000B6F 1C 00 03         [ 2] 1915 	addw	x, #3
      000B72 CDr05r4F         [ 4] 1916 	call	_display_set
      000B75 90 85            [ 2] 1917 	popw	y
                                   1918 ;	main.c: 147: }
      000B77 5B FF            [ 2] 1919 	addw	sp, #255
      000B79 5B FF            [ 2] 1920 	addw	sp, #255
      000B7B 5B 02            [ 2] 1921 	addw	sp, #2
      000B7D 81               [ 4] 1922 	ret
                                   1923 ;	main.c: 149: int main(void)
                                   1924 ;	-----------------------------------------
                                   1925 ;	 function main
                                   1926 ;	-----------------------------------------
      000B7E                       1927 _main:
                                   1928 ;	main.c: 151: setup();
      000B7E CDr03r2C         [ 4] 1929 	call	_setup
                                   1930 ;	main.c: 152: gg();
      000B81 CDr06r44         [ 4] 1931 	call	_gg
                                   1932 ;	main.c: 153: while(1);
      000B84                       1933 00102$:
      000B84 20 FE            [ 2] 1934 	jra	00102$
                                   1935 ;	main.c: 154: }
      000B86 81               [ 4] 1936 	ret
                                   1937 	.area CODE
                                   1938 	.area CONST
                                   1939 	.area CONST
      000000                       1940 ___str_0:
      000000 72 78 5F 62 75 66 5F  1941 	.ascii "rx_buf_pointer"
             70 6F 69 6E 74 65 72
      00000E 0A                    1942 	.db 0x0a
      00000F 00                    1943 	.db 0x00
                                   1944 	.area CODE
                                   1945 	.area CONST
      000010                       1946 ___str_1:
      000010 62 75 66 5F 70 6F 73  1947 	.ascii "buf_pos"
      000017 0A                    1948 	.db 0x0a
      000018 00                    1949 	.db 0x00
                                   1950 	.area CODE
                                   1951 	.area CONST
      000019                       1952 ___str_2:
      000019 62 75 66 5F 73 69 7A  1953 	.ascii "buf_size"
             65
      000021 0A                    1954 	.db 0x0a
      000022 00                    1955 	.db 0x00
                                   1956 	.area CODE
                                   1957 	.area CONST
      000023                       1958 ___str_3:
      000023 52 49 45 4E           1959 	.ascii "RIEN"
      000027 0A                    1960 	.db 0x0a
      000028 00                    1961 	.db 0x00
                                   1962 	.area CODE
                                   1963 	.area INITIALIZER
      000000                       1964 __xinit__I2C_IRQ:
      000000 00                    1965 	.db #0x00	; 0
      000001                       1966 __xinit__splash:
      000001 FF                    1967 	.db #0xff	; 255
      000002 FF                    1968 	.db #0xff	; 255
      000003 FF                    1969 	.db #0xff	; 255
      000004 FF                    1970 	.db #0xff	; 255
      000005 FF                    1971 	.db #0xff	; 255
      000006 FF                    1972 	.db #0xff	; 255
      000007 FF                    1973 	.db #0xff	; 255
      000008 FF                    1974 	.db #0xff	; 255
      000009 FF                    1975 	.db #0xff	; 255
      00000A FF                    1976 	.db #0xff	; 255
      00000B FF                    1977 	.db #0xff	; 255
      00000C FF                    1978 	.db #0xff	; 255
      00000D FF                    1979 	.db #0xff	; 255
      00000E FF                    1980 	.db #0xff	; 255
      00000F FF                    1981 	.db #0xff	; 255
      000010 FF                    1982 	.db #0xff	; 255
      000011 80                    1983 	.db #0x80	; 128
      000012 00                    1984 	.db #0x00	; 0
      000013 00                    1985 	.db #0x00	; 0
      000014 00                    1986 	.db #0x00	; 0
      000015 00                    1987 	.db #0x00	; 0
      000016 00                    1988 	.db #0x00	; 0
      000017 00                    1989 	.db #0x00	; 0
      000018 00                    1990 	.db #0x00	; 0
      000019 00                    1991 	.db #0x00	; 0
      00001A 00                    1992 	.db #0x00	; 0
      00001B 00                    1993 	.db #0x00	; 0
      00001C 00                    1994 	.db #0x00	; 0
      00001D 00                    1995 	.db #0x00	; 0
      00001E 00                    1996 	.db #0x00	; 0
      00001F 00                    1997 	.db #0x00	; 0
      000020 01                    1998 	.db #0x01	; 1
      000021 80                    1999 	.db #0x80	; 128
      000022 FE                    2000 	.db #0xfe	; 254
      000023 03                    2001 	.db #0x03	; 3
      000024 FF                    2002 	.db #0xff	; 255
      000025 FF                    2003 	.db #0xff	; 255
      000026 FF                    2004 	.db #0xff	; 255
      000027 FF                    2005 	.db #0xff	; 255
      000028 80                    2006 	.db #0x80	; 128
      000029 FF                    2007 	.db #0xff	; 255
      00002A FF                    2008 	.db #0xff	; 255
      00002B F8                    2009 	.db #0xf8	; 248
      00002C 00                    2010 	.db #0x00	; 0
      00002D 00                    2011 	.db #0x00	; 0
      00002E 00                    2012 	.db #0x00	; 0
      00002F 00                    2013 	.db #0x00	; 0
      000030 01                    2014 	.db #0x01	; 1
      000031 80                    2015 	.db #0x80	; 128
      000032 FE                    2016 	.db #0xfe	; 254
      000033 03                    2017 	.db #0x03	; 3
      000034 FF                    2018 	.db #0xff	; 255
      000035 FF                    2019 	.db #0xff	; 255
      000036 FF                    2020 	.db #0xff	; 255
      000037 FF                    2021 	.db #0xff	; 255
      000038 80                    2022 	.db #0x80	; 128
      000039 FF                    2023 	.db #0xff	; 255
      00003A FF                    2024 	.db #0xff	; 255
      00003B F8                    2025 	.db #0xf8	; 248
      00003C 00                    2026 	.db #0x00	; 0
      00003D 00                    2027 	.db #0x00	; 0
      00003E 00                    2028 	.db #0x00	; 0
      00003F 00                    2029 	.db #0x00	; 0
      000040 01                    2030 	.db #0x01	; 1
      000041 80                    2031 	.db #0x80	; 128
      000042 FE                    2032 	.db #0xfe	; 254
      000043 03                    2033 	.db #0x03	; 3
      000044 FF                    2034 	.db #0xff	; 255
      000045 FF                    2035 	.db #0xff	; 255
      000046 FF                    2036 	.db #0xff	; 255
      000047 FF                    2037 	.db #0xff	; 255
      000048 80                    2038 	.db #0x80	; 128
      000049 FF                    2039 	.db #0xff	; 255
      00004A FF                    2040 	.db #0xff	; 255
      00004B F8                    2041 	.db #0xf8	; 248
      00004C 00                    2042 	.db #0x00	; 0
      00004D 00                    2043 	.db #0x00	; 0
      00004E 00                    2044 	.db #0x00	; 0
      00004F 00                    2045 	.db #0x00	; 0
      000050 01                    2046 	.db #0x01	; 1
      000051 80                    2047 	.db #0x80	; 128
      000052 FE                    2048 	.db #0xfe	; 254
      000053 03                    2049 	.db #0x03	; 3
      000054 FF                    2050 	.db #0xff	; 255
      000055 FF                    2051 	.db #0xff	; 255
      000056 FF                    2052 	.db #0xff	; 255
      000057 FF                    2053 	.db #0xff	; 255
      000058 80                    2054 	.db #0x80	; 128
      000059 FF                    2055 	.db #0xff	; 255
      00005A FF                    2056 	.db #0xff	; 255
      00005B F8                    2057 	.db #0xf8	; 248
      00005C 00                    2058 	.db #0x00	; 0
      00005D 00                    2059 	.db #0x00	; 0
      00005E 00                    2060 	.db #0x00	; 0
      00005F 00                    2061 	.db #0x00	; 0
      000060 01                    2062 	.db #0x01	; 1
      000061 80                    2063 	.db #0x80	; 128
      000062 FE                    2064 	.db #0xfe	; 254
      000063 03                    2065 	.db #0x03	; 3
      000064 FF                    2066 	.db #0xff	; 255
      000065 FF                    2067 	.db #0xff	; 255
      000066 FF                    2068 	.db #0xff	; 255
      000067 FF                    2069 	.db #0xff	; 255
      000068 80                    2070 	.db #0x80	; 128
      000069 FF                    2071 	.db #0xff	; 255
      00006A FF                    2072 	.db #0xff	; 255
      00006B F8                    2073 	.db #0xf8	; 248
      00006C 00                    2074 	.db #0x00	; 0
      00006D 00                    2075 	.db #0x00	; 0
      00006E 00                    2076 	.db #0x00	; 0
      00006F 00                    2077 	.db #0x00	; 0
      000070 01                    2078 	.db #0x01	; 1
      000071 80                    2079 	.db #0x80	; 128
      000072 FE                    2080 	.db #0xfe	; 254
      000073 03                    2081 	.db #0x03	; 3
      000074 FF                    2082 	.db #0xff	; 255
      000075 FF                    2083 	.db #0xff	; 255
      000076 FF                    2084 	.db #0xff	; 255
      000077 FF                    2085 	.db #0xff	; 255
      000078 80                    2086 	.db #0x80	; 128
      000079 FF                    2087 	.db #0xff	; 255
      00007A FF                    2088 	.db #0xff	; 255
      00007B F8                    2089 	.db #0xf8	; 248
      00007C 00                    2090 	.db #0x00	; 0
      00007D 00                    2091 	.db #0x00	; 0
      00007E 00                    2092 	.db #0x00	; 0
      00007F 00                    2093 	.db #0x00	; 0
      000080 01                    2094 	.db #0x01	; 1
      000081 80                    2095 	.db #0x80	; 128
      000082 FE                    2096 	.db #0xfe	; 254
      000083 03                    2097 	.db #0x03	; 3
      000084 FF                    2098 	.db #0xff	; 255
      000085 FF                    2099 	.db #0xff	; 255
      000086 FF                    2100 	.db #0xff	; 255
      000087 FF                    2101 	.db #0xff	; 255
      000088 80                    2102 	.db #0x80	; 128
      000089 FF                    2103 	.db #0xff	; 255
      00008A FF                    2104 	.db #0xff	; 255
      00008B F8                    2105 	.db #0xf8	; 248
      00008C 00                    2106 	.db #0x00	; 0
      00008D 00                    2107 	.db #0x00	; 0
      00008E 00                    2108 	.db #0x00	; 0
      00008F 00                    2109 	.db #0x00	; 0
      000090 01                    2110 	.db #0x01	; 1
      000091 80                    2111 	.db #0x80	; 128
      000092 FF                    2112 	.db #0xff	; 255
      000093 FF                    2113 	.db #0xff	; 255
      000094 F8                    2114 	.db #0xf8	; 248
      000095 0F                    2115 	.db #0x0f	; 15
      000096 E0                    2116 	.db #0xe0	; 224
      000097 3F                    2117 	.db #0x3f	; 63
      000098 80                    2118 	.db #0x80	; 128
      000099 FE                    2119 	.db #0xfe	; 254
      00009A 03                    2120 	.db #0x03	; 3
      00009B F8                    2121 	.db #0xf8	; 248
      00009C 00                    2122 	.db #0x00	; 0
      00009D 00                    2123 	.db #0x00	; 0
      00009E 00                    2124 	.db #0x00	; 0
      00009F 00                    2125 	.db #0x00	; 0
      0000A0 01                    2126 	.db #0x01	; 1
      0000A1 80                    2127 	.db #0x80	; 128
      0000A2 FF                    2128 	.db #0xff	; 255
      0000A3 FF                    2129 	.db #0xff	; 255
      0000A4 F8                    2130 	.db #0xf8	; 248
      0000A5 0F                    2131 	.db #0x0f	; 15
      0000A6 E0                    2132 	.db #0xe0	; 224
      0000A7 3F                    2133 	.db #0x3f	; 63
      0000A8 80                    2134 	.db #0x80	; 128
      0000A9 FE                    2135 	.db #0xfe	; 254
      0000AA 03                    2136 	.db #0x03	; 3
      0000AB F8                    2137 	.db #0xf8	; 248
      0000AC 00                    2138 	.db #0x00	; 0
      0000AD 00                    2139 	.db #0x00	; 0
      0000AE 00                    2140 	.db #0x00	; 0
      0000AF 00                    2141 	.db #0x00	; 0
      0000B0 01                    2142 	.db #0x01	; 1
      0000B1 80                    2143 	.db #0x80	; 128
      0000B2 FF                    2144 	.db #0xff	; 255
      0000B3 FF                    2145 	.db #0xff	; 255
      0000B4 F8                    2146 	.db #0xf8	; 248
      0000B5 0F                    2147 	.db #0x0f	; 15
      0000B6 E0                    2148 	.db #0xe0	; 224
      0000B7 3F                    2149 	.db #0x3f	; 63
      0000B8 80                    2150 	.db #0x80	; 128
      0000B9 FE                    2151 	.db #0xfe	; 254
      0000BA 03                    2152 	.db #0x03	; 3
      0000BB F8                    2153 	.db #0xf8	; 248
      0000BC 00                    2154 	.db #0x00	; 0
      0000BD 00                    2155 	.db #0x00	; 0
      0000BE 00                    2156 	.db #0x00	; 0
      0000BF 00                    2157 	.db #0x00	; 0
      0000C0 01                    2158 	.db #0x01	; 1
      0000C1 80                    2159 	.db #0x80	; 128
      0000C2 FF                    2160 	.db #0xff	; 255
      0000C3 FF                    2161 	.db #0xff	; 255
      0000C4 F8                    2162 	.db #0xf8	; 248
      0000C5 0F                    2163 	.db #0x0f	; 15
      0000C6 E0                    2164 	.db #0xe0	; 224
      0000C7 3F                    2165 	.db #0x3f	; 63
      0000C8 80                    2166 	.db #0x80	; 128
      0000C9 FE                    2167 	.db #0xfe	; 254
      0000CA 03                    2168 	.db #0x03	; 3
      0000CB F8                    2169 	.db #0xf8	; 248
      0000CC 00                    2170 	.db #0x00	; 0
      0000CD 00                    2171 	.db #0x00	; 0
      0000CE 00                    2172 	.db #0x00	; 0
      0000CF 00                    2173 	.db #0x00	; 0
      0000D0 01                    2174 	.db #0x01	; 1
      0000D1 80                    2175 	.db #0x80	; 128
      0000D2 FF                    2176 	.db #0xff	; 255
      0000D3 FF                    2177 	.db #0xff	; 255
      0000D4 F8                    2178 	.db #0xf8	; 248
      0000D5 0F                    2179 	.db #0x0f	; 15
      0000D6 E0                    2180 	.db #0xe0	; 224
      0000D7 3F                    2181 	.db #0x3f	; 63
      0000D8 80                    2182 	.db #0x80	; 128
      0000D9 FE                    2183 	.db #0xfe	; 254
      0000DA 03                    2184 	.db #0x03	; 3
      0000DB F8                    2185 	.db #0xf8	; 248
      0000DC 00                    2186 	.db #0x00	; 0
      0000DD 00                    2187 	.db #0x00	; 0
      0000DE 00                    2188 	.db #0x00	; 0
      0000DF 00                    2189 	.db #0x00	; 0
      0000E0 01                    2190 	.db #0x01	; 1
      0000E1 80                    2191 	.db #0x80	; 128
      0000E2 FF                    2192 	.db #0xff	; 255
      0000E3 FF                    2193 	.db #0xff	; 255
      0000E4 F8                    2194 	.db #0xf8	; 248
      0000E5 0F                    2195 	.db #0x0f	; 15
      0000E6 E0                    2196 	.db #0xe0	; 224
      0000E7 3F                    2197 	.db #0x3f	; 63
      0000E8 80                    2198 	.db #0x80	; 128
      0000E9 FE                    2199 	.db #0xfe	; 254
      0000EA 03                    2200 	.db #0x03	; 3
      0000EB F8                    2201 	.db #0xf8	; 248
      0000EC 00                    2202 	.db #0x00	; 0
      0000ED 00                    2203 	.db #0x00	; 0
      0000EE 00                    2204 	.db #0x00	; 0
      0000EF 00                    2205 	.db #0x00	; 0
      0000F0 01                    2206 	.db #0x01	; 1
      0000F1 80                    2207 	.db #0x80	; 128
      0000F2 FF                    2208 	.db #0xff	; 255
      0000F3 FF                    2209 	.db #0xff	; 255
      0000F4 F8                    2210 	.db #0xf8	; 248
      0000F5 0F                    2211 	.db #0x0f	; 15
      0000F6 E0                    2212 	.db #0xe0	; 224
      0000F7 3F                    2213 	.db #0x3f	; 63
      0000F8 80                    2214 	.db #0x80	; 128
      0000F9 FE                    2215 	.db #0xfe	; 254
      0000FA 03                    2216 	.db #0x03	; 3
      0000FB F8                    2217 	.db #0xf8	; 248
      0000FC 00                    2218 	.db #0x00	; 0
      0000FD 00                    2219 	.db #0x00	; 0
      0000FE 00                    2220 	.db #0x00	; 0
      0000FF 00                    2221 	.db #0x00	; 0
      000100 01                    2222 	.db #0x01	; 1
      000101 80                    2223 	.db #0x80	; 128
      000102 FE                    2224 	.db #0xfe	; 254
      000103 03                    2225 	.db #0x03	; 3
      000104 F8                    2226 	.db #0xf8	; 248
      000105 0F                    2227 	.db #0x0f	; 15
      000106 E0                    2228 	.db #0xe0	; 224
      000107 3F                    2229 	.db #0x3f	; 63
      000108 FF                    2230 	.db #0xff	; 255
      000109 FF                    2231 	.db #0xff	; 255
      00010A FC                    2232 	.db #0xfc	; 252
      00010B 00                    2233 	.db #0x00	; 0
      00010C 00                    2234 	.db #0x00	; 0
      00010D 00                    2235 	.db #0x00	; 0
      00010E 00                    2236 	.db #0x00	; 0
      00010F 00                    2237 	.db #0x00	; 0
      000110 01                    2238 	.db #0x01	; 1
      000111 80                    2239 	.db #0x80	; 128
      000112 FE                    2240 	.db #0xfe	; 254
      000113 03                    2241 	.db #0x03	; 3
      000114 F8                    2242 	.db #0xf8	; 248
      000115 0F                    2243 	.db #0x0f	; 15
      000116 E0                    2244 	.db #0xe0	; 224
      000117 3F                    2245 	.db #0x3f	; 63
      000118 FF                    2246 	.db #0xff	; 255
      000119 FF                    2247 	.db #0xff	; 255
      00011A FC                    2248 	.db #0xfc	; 252
      00011B 00                    2249 	.db #0x00	; 0
      00011C 00                    2250 	.db #0x00	; 0
      00011D 00                    2251 	.db #0x00	; 0
      00011E 00                    2252 	.db #0x00	; 0
      00011F 00                    2253 	.db #0x00	; 0
      000120 01                    2254 	.db #0x01	; 1
      000121 80                    2255 	.db #0x80	; 128
      000122 FE                    2256 	.db #0xfe	; 254
      000123 03                    2257 	.db #0x03	; 3
      000124 F8                    2258 	.db #0xf8	; 248
      000125 0F                    2259 	.db #0x0f	; 15
      000126 E0                    2260 	.db #0xe0	; 224
      000127 3F                    2261 	.db #0x3f	; 63
      000128 FF                    2262 	.db #0xff	; 255
      000129 FF                    2263 	.db #0xff	; 255
      00012A FC                    2264 	.db #0xfc	; 252
      00012B 00                    2265 	.db #0x00	; 0
      00012C 00                    2266 	.db #0x00	; 0
      00012D 00                    2267 	.db #0x00	; 0
      00012E 00                    2268 	.db #0x00	; 0
      00012F 00                    2269 	.db #0x00	; 0
      000130 01                    2270 	.db #0x01	; 1
      000131 80                    2271 	.db #0x80	; 128
      000132 FE                    2272 	.db #0xfe	; 254
      000133 03                    2273 	.db #0x03	; 3
      000134 F8                    2274 	.db #0xf8	; 248
      000135 0F                    2275 	.db #0x0f	; 15
      000136 E0                    2276 	.db #0xe0	; 224
      000137 3F                    2277 	.db #0x3f	; 63
      000138 FF                    2278 	.db #0xff	; 255
      000139 FF                    2279 	.db #0xff	; 255
      00013A FC                    2280 	.db #0xfc	; 252
      00013B 00                    2281 	.db #0x00	; 0
      00013C 00                    2282 	.db #0x00	; 0
      00013D 00                    2283 	.db #0x00	; 0
      00013E 00                    2284 	.db #0x00	; 0
      00013F 00                    2285 	.db #0x00	; 0
      000140 01                    2286 	.db #0x01	; 1
      000141 80                    2287 	.db #0x80	; 128
      000142 FE                    2288 	.db #0xfe	; 254
      000143 03                    2289 	.db #0x03	; 3
      000144 F8                    2290 	.db #0xf8	; 248
      000145 0F                    2291 	.db #0x0f	; 15
      000146 E0                    2292 	.db #0xe0	; 224
      000147 3F                    2293 	.db #0x3f	; 63
      000148 FF                    2294 	.db #0xff	; 255
      000149 FF                    2295 	.db #0xff	; 255
      00014A FC                    2296 	.db #0xfc	; 252
      00014B 00                    2297 	.db #0x00	; 0
      00014C 00                    2298 	.db #0x00	; 0
      00014D 00                    2299 	.db #0x00	; 0
      00014E 00                    2300 	.db #0x00	; 0
      00014F 00                    2301 	.db #0x00	; 0
      000150 01                    2302 	.db #0x01	; 1
      000151 80                    2303 	.db #0x80	; 128
      000152 FE                    2304 	.db #0xfe	; 254
      000153 03                    2305 	.db #0x03	; 3
      000154 F8                    2306 	.db #0xf8	; 248
      000155 0F                    2307 	.db #0x0f	; 15
      000156 E0                    2308 	.db #0xe0	; 224
      000157 3F                    2309 	.db #0x3f	; 63
      000158 FF                    2310 	.db #0xff	; 255
      000159 FF                    2311 	.db #0xff	; 255
      00015A FC                    2312 	.db #0xfc	; 252
      00015B 00                    2313 	.db #0x00	; 0
      00015C 00                    2314 	.db #0x00	; 0
      00015D 00                    2315 	.db #0x00	; 0
      00015E 00                    2316 	.db #0x00	; 0
      00015F 00                    2317 	.db #0x00	; 0
      000160 01                    2318 	.db #0x01	; 1
      000161 80                    2319 	.db #0x80	; 128
      000162 FE                    2320 	.db #0xfe	; 254
      000163 03                    2321 	.db #0x03	; 3
      000164 F8                    2322 	.db #0xf8	; 248
      000165 0F                    2323 	.db #0x0f	; 15
      000166 E0                    2324 	.db #0xe0	; 224
      000167 3F                    2325 	.db #0x3f	; 63
      000168 FF                    2326 	.db #0xff	; 255
      000169 FF                    2327 	.db #0xff	; 255
      00016A FC                    2328 	.db #0xfc	; 252
      00016B 00                    2329 	.db #0x00	; 0
      00016C 00                    2330 	.db #0x00	; 0
      00016D 00                    2331 	.db #0x00	; 0
      00016E 00                    2332 	.db #0x00	; 0
      00016F 00                    2333 	.db #0x00	; 0
      000170 01                    2334 	.db #0x01	; 1
      000171 80                    2335 	.db #0x80	; 128
      000172 FE                    2336 	.db #0xfe	; 254
      000173 03                    2337 	.db #0x03	; 3
      000174 F8                    2338 	.db #0xf8	; 248
      000175 0F                    2339 	.db #0x0f	; 15
      000176 E0                    2340 	.db #0xe0	; 224
      000177 3F                    2341 	.db #0x3f	; 63
      000178 80                    2342 	.db #0x80	; 128
      000179 FE                    2343 	.db #0xfe	; 254
      00017A 03                    2344 	.db #0x03	; 3
      00017B F8                    2345 	.db #0xf8	; 248
      00017C FE                    2346 	.db #0xfe	; 254
      00017D 00                    2347 	.db #0x00	; 0
      00017E 00                    2348 	.db #0x00	; 0
      00017F 00                    2349 	.db #0x00	; 0
      000180 01                    2350 	.db #0x01	; 1
      000181 80                    2351 	.db #0x80	; 128
      000182 FE                    2352 	.db #0xfe	; 254
      000183 03                    2353 	.db #0x03	; 3
      000184 F8                    2354 	.db #0xf8	; 248
      000185 0F                    2355 	.db #0x0f	; 15
      000186 E0                    2356 	.db #0xe0	; 224
      000187 3F                    2357 	.db #0x3f	; 63
      000188 80                    2358 	.db #0x80	; 128
      000189 FE                    2359 	.db #0xfe	; 254
      00018A 03                    2360 	.db #0x03	; 3
      00018B F8                    2361 	.db #0xf8	; 248
      00018C FE                    2362 	.db #0xfe	; 254
      00018D 7C                    2363 	.db #0x7c	; 124
      00018E 7E                    2364 	.db #0x7e	; 126
      00018F 00                    2365 	.db #0x00	; 0
      000190 01                    2366 	.db #0x01	; 1
      000191 80                    2367 	.db #0x80	; 128
      000192 FE                    2368 	.db #0xfe	; 254
      000193 03                    2369 	.db #0x03	; 3
      000194 F8                    2370 	.db #0xf8	; 248
      000195 0F                    2371 	.db #0x0f	; 15
      000196 E0                    2372 	.db #0xe0	; 224
      000197 3F                    2373 	.db #0x3f	; 63
      000198 80                    2374 	.db #0x80	; 128
      000199 FE                    2375 	.db #0xfe	; 254
      00019A 03                    2376 	.db #0x03	; 3
      00019B F8                    2377 	.db #0xf8	; 248
      00019C 38                    2378 	.db #0x38	; 56	'8'
      00019D 7E                    2379 	.db #0x7e	; 126
      00019E 7E                    2380 	.db #0x7e	; 126
      00019F 00                    2381 	.db #0x00	; 0
      0001A0 01                    2382 	.db #0x01	; 1
      0001A1 80                    2383 	.db #0x80	; 128
      0001A2 FE                    2384 	.db #0xfe	; 254
      0001A3 03                    2385 	.db #0x03	; 3
      0001A4 F8                    2386 	.db #0xf8	; 248
      0001A5 0F                    2387 	.db #0x0f	; 15
      0001A6 E0                    2388 	.db #0xe0	; 224
      0001A7 3F                    2389 	.db #0x3f	; 63
      0001A8 80                    2390 	.db #0x80	; 128
      0001A9 FE                    2391 	.db #0xfe	; 254
      0001AA 03                    2392 	.db #0x03	; 3
      0001AB F8                    2393 	.db #0xf8	; 248
      0001AC 38                    2394 	.db #0x38	; 56	'8'
      0001AD 66                    2395 	.db #0x66	; 102	'f'
      0001AE 60                    2396 	.db #0x60	; 96
      0001AF 00                    2397 	.db #0x00	; 0
      0001B0 01                    2398 	.db #0x01	; 1
      0001B1 80                    2399 	.db #0x80	; 128
      0001B2 FE                    2400 	.db #0xfe	; 254
      0001B3 03                    2401 	.db #0x03	; 3
      0001B4 F8                    2402 	.db #0xf8	; 248
      0001B5 0F                    2403 	.db #0x0f	; 15
      0001B6 E0                    2404 	.db #0xe0	; 224
      0001B7 3F                    2405 	.db #0x3f	; 63
      0001B8 80                    2406 	.db #0x80	; 128
      0001B9 FE                    2407 	.db #0xfe	; 254
      0001BA 03                    2408 	.db #0x03	; 3
      0001BB F8                    2409 	.db #0xf8	; 248
      0001BC 38                    2410 	.db #0x38	; 56	'8'
      0001BD 66                    2411 	.db #0x66	; 102	'f'
      0001BE 60                    2412 	.db #0x60	; 96
      0001BF 00                    2413 	.db #0x00	; 0
      0001C0 01                    2414 	.db #0x01	; 1
      0001C1 80                    2415 	.db #0x80	; 128
      0001C2 FE                    2416 	.db #0xfe	; 254
      0001C3 03                    2417 	.db #0x03	; 3
      0001C4 F8                    2418 	.db #0xf8	; 248
      0001C5 0F                    2419 	.db #0x0f	; 15
      0001C6 E0                    2420 	.db #0xe0	; 224
      0001C7 3F                    2421 	.db #0x3f	; 63
      0001C8 80                    2422 	.db #0x80	; 128
      0001C9 FE                    2423 	.db #0xfe	; 254
      0001CA 03                    2424 	.db #0x03	; 3
      0001CB F8                    2425 	.db #0xf8	; 248
      0001CC FE                    2426 	.db #0xfe	; 254
      0001CD 66                    2427 	.db #0x66	; 102	'f'
      0001CE 7E                    2428 	.db #0x7e	; 126
      0001CF 18                    2429 	.db #0x18	; 24
      0001D0 01                    2430 	.db #0x01	; 1
      0001D1 80                    2431 	.db #0x80	; 128
      0001D2 FE                    2432 	.db #0xfe	; 254
      0001D3 03                    2433 	.db #0x03	; 3
      0001D4 F8                    2434 	.db #0xf8	; 248
      0001D5 0F                    2435 	.db #0x0f	; 15
      0001D6 E0                    2436 	.db #0xe0	; 224
      0001D7 3F                    2437 	.db #0x3f	; 63
      0001D8 80                    2438 	.db #0x80	; 128
      0001D9 FE                    2439 	.db #0xfe	; 254
      0001DA 03                    2440 	.db #0x03	; 3
      0001DB F8                    2441 	.db #0xf8	; 248
      0001DC FE                    2442 	.db #0xfe	; 254
      0001DD 66                    2443 	.db #0x66	; 102	'f'
      0001DE 7E                    2444 	.db #0x7e	; 126
      0001DF 18                    2445 	.db #0x18	; 24
      0001E0 01                    2446 	.db #0x01	; 1
      0001E1 80                    2447 	.db #0x80	; 128
      0001E2 00                    2448 	.db #0x00	; 0
      0001E3 00                    2449 	.db #0x00	; 0
      0001E4 00                    2450 	.db #0x00	; 0
      0001E5 00                    2451 	.db #0x00	; 0
      0001E6 00                    2452 	.db #0x00	; 0
      0001E7 00                    2453 	.db #0x00	; 0
      0001E8 00                    2454 	.db #0x00	; 0
      0001E9 00                    2455 	.db #0x00	; 0
      0001EA 00                    2456 	.db #0x00	; 0
      0001EB 00                    2457 	.db #0x00	; 0
      0001EC 00                    2458 	.db #0x00	; 0
      0001ED 00                    2459 	.db #0x00	; 0
      0001EE 00                    2460 	.db #0x00	; 0
      0001EF 00                    2461 	.db #0x00	; 0
      0001F0 01                    2462 	.db #0x01	; 1
      0001F1 FF                    2463 	.db #0xff	; 255
      0001F2 FF                    2464 	.db #0xff	; 255
      0001F3 FF                    2465 	.db #0xff	; 255
      0001F4 FF                    2466 	.db #0xff	; 255
      0001F5 FF                    2467 	.db #0xff	; 255
      0001F6 FF                    2468 	.db #0xff	; 255
      0001F7 FF                    2469 	.db #0xff	; 255
      0001F8 FF                    2470 	.db #0xff	; 255
      0001F9 FF                    2471 	.db #0xff	; 255
      0001FA FF                    2472 	.db #0xff	; 255
      0001FB FF                    2473 	.db #0xff	; 255
      0001FC FF                    2474 	.db #0xff	; 255
      0001FD FF                    2475 	.db #0xff	; 255
      0001FE FF                    2476 	.db #0xff	; 255
      0001FF FF                    2477 	.db #0xff	; 255
      000200 FF                    2478 	.db #0xff	; 255
                                   2479 	.area CABS (ABS)
