                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _display_splash
                                     12 	.globl _main
                                     13 	.globl _gg
                                     14 	.globl _display_clean
                                     15 	.globl _display_set
                                     16 	.globl _display_buffer_fill
                                     17 	.globl _display_draw_pixel
                                     18 	.globl _display_set_params_to_write
                                     19 	.globl _display_init
                                     20 	.globl _delay
                                     21 	.globl _setup
                                     22 	.globl _i2c_scan
                                     23 	.globl _i2c_write
                                     24 	.globl _i2c_send_byte
                                     25 	.globl _i2c_read
                                     26 	.globl _i2c_read_byte
                                     27 	.globl _i2c_send_address
                                     28 	.globl _i2c_stop
                                     29 	.globl _i2c_start
                                     30 	.globl _i2c_init
                                     31 	.globl _uart_read
                                     32 	.globl _uart_write_byte
                                     33 	.globl _uart_read_byte
                                     34 	.globl _uart_init
                                     35 	.globl _uart_reciever_irq
                                     36 	.globl _uart_transmission_irq
                                     37 	.globl _splash
                                     38 	.globl _I2C_IRQ
                                     39 	.globl _buf_size
                                     40 	.globl _buf_pos
                                     41 	.globl _rx_buf_pointer
                                     42 	.globl _tx_buf_pointer
                                     43 	.globl _uart_write
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DATA
      000000                         48 _tx_buf_pointer::
      000000                         49 	.ds 2
      000002                         50 _rx_buf_pointer::
      000002                         51 	.ds 2
      000004                         52 _buf_pos::
      000004                         53 	.ds 1
      000005                         54 _buf_size::
      000005                         55 	.ds 1
                                     56 ;--------------------------------------------------------
                                     57 ; ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area INITIALIZED
      000000                         60 _I2C_IRQ::
      000000                         61 	.ds 1
      000001                         62 _splash::
      000001                         63 	.ds 512
                                     64 ;--------------------------------------------------------
                                     65 ; Stack segment in internal ram
                                     66 ;--------------------------------------------------------
                                     67 	.area SSEG
      000000                         68 __start__stack:
      000000                         69 	.ds	1
                                     70 
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area DABS (ABS)
                                     75 
                                     76 ; default segment ordering for linker
                                     77 	.area HOME
                                     78 	.area GSINIT
                                     79 	.area GSFINAL
                                     80 	.area CONST
                                     81 	.area INITIALIZER
                                     82 	.area CODE
                                     83 
                                     84 ;--------------------------------------------------------
                                     85 ; interrupt vector
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME
      000000                         88 __interrupt_vect:
      000000 82v00u00u00             89 	int s_GSINIT ; reset
      000004 82 00 00 00             90 	int 0x000000 ; trap
      000008 82 00 00 00             91 	int 0x000000 ; int0
      00000C 82 00 00 00             92 	int 0x000000 ; int1
      000010 82 00 00 00             93 	int 0x000000 ; int2
      000014 82 00 00 00             94 	int 0x000000 ; int3
      000018 82 00 00 00             95 	int 0x000000 ; int4
      00001C 82 00 00 00             96 	int 0x000000 ; int5
      000020 82 00 00 00             97 	int 0x000000 ; int6
      000024 82 00 00 00             98 	int 0x000000 ; int7
      000028 82 00 00 00             99 	int 0x000000 ; int8
      00002C 82 00 00 00            100 	int 0x000000 ; int9
      000030 82 00 00 00            101 	int 0x000000 ; int10
      000034 82 00 00 00            102 	int 0x000000 ; int11
      000038 82 00 00 00            103 	int 0x000000 ; int12
      00003C 82 00 00 00            104 	int 0x000000 ; int13
      000040 82 00 00 00            105 	int 0x000000 ; int14
      000044 82 00 00 00            106 	int 0x000000 ; int15
      000048 82 00 00 00            107 	int 0x000000 ; int16
      00004C 82v00u00u00            108 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            109 	int _uart_reciever_irq ; int18
                                    110 ;--------------------------------------------------------
                                    111 ; global & static initialisations
                                    112 ;--------------------------------------------------------
                                    113 	.area HOME
                                    114 	.area GSINIT
                                    115 	.area GSFINAL
                                    116 	.area GSINIT
      000000 CDr00r00         [ 4]  117 	call	___sdcc_external_startup
      000003 4D               [ 1]  118 	tnz	a
      000004 27 03            [ 1]  119 	jreq	__sdcc_init_data
      000006 CCr00r54         [ 2]  120 	jp	__sdcc_program_startup
      000009                        121 __sdcc_init_data:
                                    122 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  123 	ldw x, #l_DATA
      00000C 27 07            [ 1]  124 	jreq	00002$
      00000E                        125 00001$:
      00000E 72 4FuFFuFF      [ 1]  126 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  127 	decw x
      000013 26 F9            [ 1]  128 	jrne	00001$
      000015                        129 00002$:
      000015 AEr00r00         [ 2]  130 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  131 	jreq	00004$
      00001A                        132 00003$:
      00001A D6uFFuFF         [ 1]  133 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  134 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  135 	decw	x
      000021 26 F7            [ 1]  136 	jrne	00003$
      000023                        137 00004$:
                                    138 ; stm8_genXINIT() end
                                    139 	.area GSFINAL
      000000 CCr00r54         [ 2]  140 	jp	__sdcc_program_startup
                                    141 ;--------------------------------------------------------
                                    142 ; Home
                                    143 ;--------------------------------------------------------
                                    144 	.area HOME
                                    145 	.area HOME
      000054                        146 __sdcc_program_startup:
      000054 CCr0Br82         [ 2]  147 	jp	_main
                                    148 ;	return from main will return to caller
                                    149 ;--------------------------------------------------------
                                    150 ; code
                                    151 ;--------------------------------------------------------
                                    152 	.area CODE
                                    153 ;	libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    154 ;	-----------------------------------------
                                    155 ;	 function uart_transmission_irq
                                    156 ;	-----------------------------------------
      000000                        157 _uart_transmission_irq:
                                    158 ;	libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  159 	ldw	x, #0x5230
      000003 F6               [ 1]  160 	ld	a, (x)
      000004 4E               [ 1]  161 	swap	a
      000005 44               [ 1]  162 	srl	a
      000006 44               [ 1]  163 	srl	a
      000007 44               [ 1]  164 	srl	a
      000008 A5 01            [ 1]  165 	bcp	a, #0x01
      00000A 27 2F            [ 1]  166 	jreq	00107$
                                    167 ;	libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  168 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  169 	add	a, _buf_pos+0
      000012 97               [ 1]  170 	ld	xl, a
      000013 C6u00u00         [ 1]  171 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  172 	adc	a, #0x00
      000018 95               [ 1]  173 	ld	xh, a
      000019 F6               [ 1]  174 	ld	a, (x)
      00001A 27 1B            [ 1]  175 	jreq	00102$
      00001C C6u00u04         [ 1]  176 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  177 	cp	a, _buf_size+0
      000022 24 13            [ 1]  178 	jrnc	00102$
                                    179 ;	libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  180 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  181 	inc	_buf_pos+0
      00002B 5F               [ 1]  182 	clrw	x
      00002C 97               [ 1]  183 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  184 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  185 	ld	a, (x)
      000032 C7 52 31         [ 1]  186 	ld	0x5231, a
      000035 20 04            [ 2]  187 	jra	00107$
      000037                        188 00102$:
                                    189 ;	libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  190 	bres	0x5235, #7
      00003B                        191 00107$:
                                    192 ;	libs/uart_lib.c: 14: }
      00003B 80               [11]  193 	iret
                                    194 ;	libs/uart_lib.c: 15: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    195 ;	-----------------------------------------
                                    196 ;	 function uart_reciever_irq
                                    197 ;	-----------------------------------------
      00003C                        198 _uart_reciever_irq:
      00003C 88               [ 1]  199 	push	a
                                    200 ;	libs/uart_lib.c: 19: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  201 	ld	a, 0x5230
      000040 4E               [ 1]  202 	swap	a
      000041 44               [ 1]  203 	srl	a
      000042 A5 01            [ 1]  204 	bcp	a, #0x01
      000044 27 27            [ 1]  205 	jreq	00107$
                                    206 ;	libs/uart_lib.c: 21: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  207 	ld	a, 0x5231
                                    208 ;	libs/uart_lib.c: 22: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  209 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  210 	cp	a, #0x0a
      00004D 27 1A            [ 1]  211 	jreq	00102$
      00004F C6u00u04         [ 1]  212 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  213 	cp	a, _buf_size+0
      000055 24 12            [ 1]  214 	jrnc	00102$
                                    215 ;	libs/uart_lib.c: 23: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  216 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  217 	inc	_buf_pos+0
      00005E 5F               [ 1]  218 	clrw	x
      00005F 97               [ 1]  219 	ld	xl, a
      000060 72 BBu00u02      [ 2]  220 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  221 	ld	a, (0x01, sp)
      000066 F7               [ 1]  222 	ld	(x), a
      000067 20 04            [ 2]  223 	jra	00107$
      000069                        224 00102$:
                                    225 ;	libs/uart_lib.c: 25: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  226 	bres	0x5235, #5
      00006D                        227 00107$:
                                    228 ;	libs/uart_lib.c: 29: }
      00006D 84               [ 1]  229 	pop	a
      00006E 80               [11]  230 	iret
                                    231 ;	libs/uart_lib.c: 30: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    232 ;	-----------------------------------------
                                    233 ;	 function uart_init
                                    234 ;	-----------------------------------------
      00006F                        235 _uart_init:
      00006F 52 02            [ 2]  236 	sub	sp, #2
      000071 1F 01            [ 2]  237 	ldw	(0x01, sp), x
                                    238 ;	libs/uart_lib.c: 34: UART1_CR2 -> TEN = 1; // Transmitter enable
      000073 AE 52 35         [ 2]  239 	ldw	x, #0x5235
      000076 88               [ 1]  240 	push	a
      000077 F6               [ 1]  241 	ld	a, (x)
      000078 AA 08            [ 1]  242 	or	a, #0x08
      00007A F7               [ 1]  243 	ld	(x), a
      00007B 84               [ 1]  244 	pop	a
                                    245 ;	libs/uart_lib.c: 35: UART1_CR2 -> REN = 1; // Receiver enable
      00007C AE 52 35         [ 2]  246 	ldw	x, #0x5235
      00007F 88               [ 1]  247 	push	a
      000080 F6               [ 1]  248 	ld	a, (x)
      000081 AA 04            [ 1]  249 	or	a, #0x04
      000083 F7               [ 1]  250 	ld	(x), a
      000084 84               [ 1]  251 	pop	a
                                    252 ;	libs/uart_lib.c: 36: switch(stopbit)
      000085 A1 02            [ 1]  253 	cp	a, #0x02
      000087 27 06            [ 1]  254 	jreq	00101$
      000089 A1 03            [ 1]  255 	cp	a, #0x03
      00008B 27 0E            [ 1]  256 	jreq	00102$
      00008D 20 16            [ 2]  257 	jra	00103$
                                    258 ;	libs/uart_lib.c: 38: case 2:
      00008F                        259 00101$:
                                    260 ;	libs/uart_lib.c: 39: UART1_CR3 -> STOP = 2;
      00008F C6 52 36         [ 1]  261 	ld	a, 0x5236
      000092 A4 CF            [ 1]  262 	and	a, #0xcf
      000094 AA 20            [ 1]  263 	or	a, #0x20
      000096 C7 52 36         [ 1]  264 	ld	0x5236, a
                                    265 ;	libs/uart_lib.c: 40: break;
      000099 20 12            [ 2]  266 	jra	00104$
                                    267 ;	libs/uart_lib.c: 41: case 3:
      00009B                        268 00102$:
                                    269 ;	libs/uart_lib.c: 42: UART1_CR3 -> STOP = 3;
      00009B C6 52 36         [ 1]  270 	ld	a, 0x5236
      00009E AA 30            [ 1]  271 	or	a, #0x30
      0000A0 C7 52 36         [ 1]  272 	ld	0x5236, a
                                    273 ;	libs/uart_lib.c: 43: break;
      0000A3 20 08            [ 2]  274 	jra	00104$
                                    275 ;	libs/uart_lib.c: 44: default:
      0000A5                        276 00103$:
                                    277 ;	libs/uart_lib.c: 45: UART1_CR3 -> STOP = 0;
      0000A5 C6 52 36         [ 1]  278 	ld	a, 0x5236
      0000A8 A4 CF            [ 1]  279 	and	a, #0xcf
      0000AA C7 52 36         [ 1]  280 	ld	0x5236, a
                                    281 ;	libs/uart_lib.c: 47: }
      0000AD                        282 00104$:
                                    283 ;	libs/uart_lib.c: 48: switch(baudrate)
      0000AD 1E 01            [ 2]  284 	ldw	x, (0x01, sp)
      0000AF A3 08 00         [ 2]  285 	cpw	x, #0x0800
      0000B2 26 03            [ 1]  286 	jrne	00186$
      0000B4 CCr01r40         [ 2]  287 	jp	00110$
      0000B7                        288 00186$:
      0000B7 1E 01            [ 2]  289 	ldw	x, (0x01, sp)
      0000B9 A3 09 60         [ 2]  290 	cpw	x, #0x0960
      0000BC 27 28            [ 1]  291 	jreq	00105$
      0000BE 1E 01            [ 2]  292 	ldw	x, (0x01, sp)
      0000C0 A3 10 00         [ 2]  293 	cpw	x, #0x1000
      0000C3 26 03            [ 1]  294 	jrne	00192$
      0000C5 CCr01r50         [ 2]  295 	jp	00111$
      0000C8                        296 00192$:
      0000C8 1E 01            [ 2]  297 	ldw	x, (0x01, sp)
      0000CA A3 4B 00         [ 2]  298 	cpw	x, #0x4b00
      0000CD 27 31            [ 1]  299 	jreq	00106$
      0000CF 1E 01            [ 2]  300 	ldw	x, (0x01, sp)
      0000D1 A3 84 00         [ 2]  301 	cpw	x, #0x8400
      0000D4 27 5A            [ 1]  302 	jreq	00109$
      0000D6 1E 01            [ 2]  303 	ldw	x, (0x01, sp)
      0000D8 A3 C2 00         [ 2]  304 	cpw	x, #0xc200
      0000DB 27 43            [ 1]  305 	jreq	00108$
      0000DD 1E 01            [ 2]  306 	ldw	x, (0x01, sp)
      0000DF A3 E1 00         [ 2]  307 	cpw	x, #0xe100
      0000E2 27 2C            [ 1]  308 	jreq	00107$
      0000E4 20 7A            [ 2]  309 	jra	00112$
                                    310 ;	libs/uart_lib.c: 50: case (unsigned int)2400:
      0000E6                        311 00105$:
                                    312 ;	libs/uart_lib.c: 51: UART1_BRR2 -> MSB = 0x01;
      0000E6 C6 52 33         [ 1]  313 	ld	a, 0x5233
      0000E9 A4 0F            [ 1]  314 	and	a, #0x0f
      0000EB AA 10            [ 1]  315 	or	a, #0x10
      0000ED C7 52 33         [ 1]  316 	ld	0x5233, a
                                    317 ;	libs/uart_lib.c: 52: UART1_BRR1 -> DIV = 0xA0;
      0000F0 35 A0 52 32      [ 1]  318 	mov	0x5232+0, #0xa0
                                    319 ;	libs/uart_lib.c: 53: UART1_BRR2 -> LSB = 0x0B; 
      0000F4 C6 52 33         [ 1]  320 	ld	a, 0x5233
      0000F7 A4 F0            [ 1]  321 	and	a, #0xf0
      0000F9 AA 0B            [ 1]  322 	or	a, #0x0b
      0000FB C7 52 33         [ 1]  323 	ld	0x5233, a
                                    324 ;	libs/uart_lib.c: 54: break;
      0000FE 20 6E            [ 2]  325 	jra	00114$
                                    326 ;	libs/uart_lib.c: 55: case (unsigned int)19200:
      000100                        327 00106$:
                                    328 ;	libs/uart_lib.c: 56: UART1_BRR1 -> DIV = 0x34;
      000100 35 34 52 32      [ 1]  329 	mov	0x5232+0, #0x34
                                    330 ;	libs/uart_lib.c: 57: UART1_BRR2 -> LSB = 0x01;
      000104 C6 52 33         [ 1]  331 	ld	a, 0x5233
      000107 A4 F0            [ 1]  332 	and	a, #0xf0
      000109 AA 01            [ 1]  333 	or	a, #0x01
      00010B C7 52 33         [ 1]  334 	ld	0x5233, a
                                    335 ;	libs/uart_lib.c: 58: break;
      00010E 20 5E            [ 2]  336 	jra	00114$
                                    337 ;	libs/uart_lib.c: 59: case (unsigned int)57600:
      000110                        338 00107$:
                                    339 ;	libs/uart_lib.c: 60: UART1_BRR1 -> DIV = 0x11;
      000110 35 11 52 32      [ 1]  340 	mov	0x5232+0, #0x11
                                    341 ;	libs/uart_lib.c: 61: UART1_BRR2 -> LSB = 0x06;
      000114 C6 52 33         [ 1]  342 	ld	a, 0x5233
      000117 A4 F0            [ 1]  343 	and	a, #0xf0
      000119 AA 06            [ 1]  344 	or	a, #0x06
      00011B C7 52 33         [ 1]  345 	ld	0x5233, a
                                    346 ;	libs/uart_lib.c: 62: break;
      00011E 20 4E            [ 2]  347 	jra	00114$
                                    348 ;	libs/uart_lib.c: 63: case (unsigned int)115200:
      000120                        349 00108$:
                                    350 ;	libs/uart_lib.c: 64: UART1_BRR1 -> DIV = 0x08;
      000120 35 08 52 32      [ 1]  351 	mov	0x5232+0, #0x08
                                    352 ;	libs/uart_lib.c: 65: UART1_BRR2 -> LSB = 0x0B;
      000124 C6 52 33         [ 1]  353 	ld	a, 0x5233
      000127 A4 F0            [ 1]  354 	and	a, #0xf0
      000129 AA 0B            [ 1]  355 	or	a, #0x0b
      00012B C7 52 33         [ 1]  356 	ld	0x5233, a
                                    357 ;	libs/uart_lib.c: 66: break;
      00012E 20 3E            [ 2]  358 	jra	00114$
                                    359 ;	libs/uart_lib.c: 67: case (unsigned int)230400:
      000130                        360 00109$:
                                    361 ;	libs/uart_lib.c: 68: UART1_BRR1 -> DIV = 0x04;
      000130 35 04 52 32      [ 1]  362 	mov	0x5232+0, #0x04
                                    363 ;	libs/uart_lib.c: 69: UART1_BRR2 -> LSB = 0x05;
      000134 C6 52 33         [ 1]  364 	ld	a, 0x5233
      000137 A4 F0            [ 1]  365 	and	a, #0xf0
      000139 AA 05            [ 1]  366 	or	a, #0x05
      00013B C7 52 33         [ 1]  367 	ld	0x5233, a
                                    368 ;	libs/uart_lib.c: 70: break;
      00013E 20 2E            [ 2]  369 	jra	00114$
                                    370 ;	libs/uart_lib.c: 71: case (unsigned int)460800:
      000140                        371 00110$:
                                    372 ;	libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0x02;
      000140 35 02 52 32      [ 1]  373 	mov	0x5232+0, #0x02
                                    374 ;	libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x03;
      000144 C6 52 33         [ 1]  375 	ld	a, 0x5233
      000147 A4 F0            [ 1]  376 	and	a, #0xf0
      000149 AA 03            [ 1]  377 	or	a, #0x03
      00014B C7 52 33         [ 1]  378 	ld	0x5233, a
                                    379 ;	libs/uart_lib.c: 74: break;
      00014E 20 1E            [ 2]  380 	jra	00114$
                                    381 ;	libs/uart_lib.c: 75: case (unsigned int)921600:
      000150                        382 00111$:
                                    383 ;	libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x01;
      000150 35 01 52 32      [ 1]  384 	mov	0x5232+0, #0x01
                                    385 ;	libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      000154 C6 52 33         [ 1]  386 	ld	a, 0x5233
      000157 A4 F0            [ 1]  387 	and	a, #0xf0
      000159 AA 01            [ 1]  388 	or	a, #0x01
      00015B C7 52 33         [ 1]  389 	ld	0x5233, a
                                    390 ;	libs/uart_lib.c: 78: break;
      00015E 20 0E            [ 2]  391 	jra	00114$
                                    392 ;	libs/uart_lib.c: 79: default:
      000160                        393 00112$:
                                    394 ;	libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x68;
      000160 35 68 52 32      [ 1]  395 	mov	0x5232+0, #0x68
                                    396 ;	libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x03;
      000164 C6 52 33         [ 1]  397 	ld	a, 0x5233
      000167 A4 F0            [ 1]  398 	and	a, #0xf0
      000169 AA 03            [ 1]  399 	or	a, #0x03
      00016B C7 52 33         [ 1]  400 	ld	0x5233, a
                                    401 ;	libs/uart_lib.c: 83: }
      00016E                        402 00114$:
                                    403 ;	libs/uart_lib.c: 84: }
      00016E 5B 02            [ 2]  404 	addw	sp, #2
      000170 81               [ 4]  405 	ret
                                    406 ;	libs/uart_lib.c: 86: int uart_read_byte(uint8_t *data)
                                    407 ;	-----------------------------------------
                                    408 ;	 function uart_read_byte
                                    409 ;	-----------------------------------------
      000171                        410 _uart_read_byte:
                                    411 ;	libs/uart_lib.c: 88: while(!(UART1_SR -> RXNE));
      000171                        412 00101$:
      000171 72 0B 52 30 FB   [ 2]  413 	btjf	0x5230, #5, 00101$
                                    414 ;	libs/uart_lib.c: 90: return 1;
      000176 5F               [ 1]  415 	clrw	x
      000177 5C               [ 1]  416 	incw	x
                                    417 ;	libs/uart_lib.c: 91: }
      000178 81               [ 4]  418 	ret
                                    419 ;	libs/uart_lib.c: 93: int uart_write_byte(uint8_t data)
                                    420 ;	-----------------------------------------
                                    421 ;	 function uart_write_byte
                                    422 ;	-----------------------------------------
      000179                        423 _uart_write_byte:
                                    424 ;	libs/uart_lib.c: 95: UART1_DR -> DR = data;
      000179 C7 52 31         [ 1]  425 	ld	0x5231, a
                                    426 ;	libs/uart_lib.c: 96: while(!(UART1_SR -> TXE));
      00017C                        427 00101$:
      00017C 72 0F 52 30 FB   [ 2]  428 	btjf	0x5230, #7, 00101$
                                    429 ;	libs/uart_lib.c: 97: return 1;
      000181 5F               [ 1]  430 	clrw	x
      000182 5C               [ 1]  431 	incw	x
                                    432 ;	libs/uart_lib.c: 98: }
      000183 81               [ 4]  433 	ret
                                    434 ;	libs/uart_lib.c: 100: void uart_write(uint8_t *data_buf)
                                    435 ;	-----------------------------------------
                                    436 ;	 function uart_write
                                    437 ;	-----------------------------------------
      000184                        438 _uart_write:
      000184 52 02            [ 2]  439 	sub	sp, #2
                                    440 ;	libs/uart_lib.c: 102: tx_buf_pointer = data_buf;
      000186 1F 01            [ 2]  441 	ldw	(0x01, sp), x
      000188 CFu00u00         [ 2]  442 	ldw	_tx_buf_pointer+0, x
                                    443 ;	libs/uart_lib.c: 103: buf_pos = 0;
      00018B 72 5Fu00u04      [ 1]  444 	clr	_buf_pos+0
                                    445 ;	libs/uart_lib.c: 104: buf_size = 0;
      00018F 72 5Fu00u05      [ 1]  446 	clr	_buf_size+0
                                    447 ;	libs/uart_lib.c: 105: while (data_buf[buf_size++] != '\0');
      000193                        448 00101$:
      000193 C6u00u05         [ 1]  449 	ld	a, _buf_size+0
      000196 72 5Cu00u05      [ 1]  450 	inc	_buf_size+0
      00019A 5F               [ 1]  451 	clrw	x
      00019B 97               [ 1]  452 	ld	xl, a
      00019C 72 FB 01         [ 2]  453 	addw	x, (0x01, sp)
      00019F F6               [ 1]  454 	ld	a, (x)
      0001A0 26 F1            [ 1]  455 	jrne	00101$
                                    456 ;	libs/uart_lib.c: 106: UART1_CR2 -> TIEN = 1;
      0001A2 72 1E 52 35      [ 1]  457 	bset	0x5235, #7
                                    458 ;	libs/uart_lib.c: 107: while(UART1_CR2 -> TIEN);
      0001A6                        459 00104$:
      0001A6 72 0E 52 35 FB   [ 2]  460 	btjt	0x5235, #7, 00104$
                                    461 ;	libs/uart_lib.c: 108: }
      0001AB 5B 02            [ 2]  462 	addw	sp, #2
      0001AD 81               [ 4]  463 	ret
                                    464 ;	libs/uart_lib.c: 109: void uart_read(uint8_t *data_buf,int size)
                                    465 ;	-----------------------------------------
                                    466 ;	 function uart_read
                                    467 ;	-----------------------------------------
      0001AE                        468 _uart_read:
                                    469 ;	libs/uart_lib.c: 111: rx_buf_pointer = data_buf;
      0001AE CFu00u02         [ 2]  470 	ldw	_rx_buf_pointer+0, x
                                    471 ;	libs/uart_lib.c: 112: uart_write("rx_buf_pointer\n");
      0001B1 AEr00r00         [ 2]  472 	ldw	x, #(___str_0+0)
      0001B4 CDr01r84         [ 4]  473 	call	_uart_write
                                    474 ;	libs/uart_lib.c: 113: buf_pos = 0;
      0001B7 72 5Fu00u04      [ 1]  475 	clr	_buf_pos+0
                                    476 ;	libs/uart_lib.c: 114: uart_write("buf_pos\n");
      0001BB AEr00r10         [ 2]  477 	ldw	x, #(___str_1+0)
      0001BE CDr01r84         [ 4]  478 	call	_uart_write
                                    479 ;	libs/uart_lib.c: 115: buf_size = size;
      0001C1 7B 04            [ 1]  480 	ld	a, (0x04, sp)
      0001C3 C7u00u05         [ 1]  481 	ld	_buf_size+0, a
                                    482 ;	libs/uart_lib.c: 116: uart_write("buf_size\n");
      0001C6 AEr00r19         [ 2]  483 	ldw	x, #(___str_2+0)
      0001C9 CDr01r84         [ 4]  484 	call	_uart_write
                                    485 ;	libs/uart_lib.c: 117: UART1_CR2 -> RIEN = 1;
      0001CC 72 1A 52 35      [ 1]  486 	bset	0x5235, #5
                                    487 ;	libs/uart_lib.c: 118: uart_write("RIEN\n");
      0001D0 AEr00r23         [ 2]  488 	ldw	x, #(___str_3+0)
      0001D3 CDr01r84         [ 4]  489 	call	_uart_write
                                    490 ;	libs/uart_lib.c: 119: while(UART1_CR2 -> RIEN);
      0001D6                        491 00101$:
      0001D6 C6 52 35         [ 1]  492 	ld	a, 0x5235
      0001D9 4E               [ 1]  493 	swap	a
      0001DA 44               [ 1]  494 	srl	a
      0001DB A4 01            [ 1]  495 	and	a, #0x01
      0001DD 26 F7            [ 1]  496 	jrne	00101$
                                    497 ;	libs/uart_lib.c: 120: }
      0001DF 1E 01            [ 2]  498 	ldw	x, (1, sp)
      0001E1 5B 04            [ 2]  499 	addw	sp, #4
      0001E3 FC               [ 2]  500 	jp	(x)
                                    501 ;	libs/i2c_lib.c: 3: void i2c_init(void)
                                    502 ;	-----------------------------------------
                                    503 ;	 function i2c_init
                                    504 ;	-----------------------------------------
      0001E4                        505 _i2c_init:
                                    506 ;	libs/i2c_lib.c: 7: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      0001E4 72 11 52 10      [ 1]  507 	bres	0x5210, #0
                                    508 ;	libs/i2c_lib.c: 8: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      0001E8 C6 52 12         [ 1]  509 	ld	a, 0x5212
      0001EB A4 C0            [ 1]  510 	and	a, #0xc0
      0001ED AA 10            [ 1]  511 	or	a, #0x10
      0001EF C7 52 12         [ 1]  512 	ld	0x5212, a
                                    513 ;	libs/i2c_lib.c: 9: I2C_CCRH -> CCR = 0;// =0
      0001F2 C6 52 1C         [ 1]  514 	ld	a, 0x521c
      0001F5 A4 F0            [ 1]  515 	and	a, #0xf0
      0001F7 C7 52 1C         [ 1]  516 	ld	0x521c, a
                                    517 ;	libs/i2c_lib.c: 10: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      0001FA 35 50 52 1B      [ 1]  518 	mov	0x521b+0, #0x50
                                    519 ;	libs/i2c_lib.c: 11: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      0001FE 72 1F 52 1C      [ 1]  520 	bres	0x521c, #7
                                    521 ;	libs/i2c_lib.c: 12: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      000202 72 1F 52 14      [ 1]  522 	bres	0x5214, #7
                                    523 ;	libs/i2c_lib.c: 13: I2C_OARH -> ADDCONF = 1;// see reference manual
      000206 72 10 52 14      [ 1]  524 	bset	0x5214, #0
                                    525 ;	libs/i2c_lib.c: 14: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      00020A 72 10 52 10      [ 1]  526 	bset	0x5210, #0
                                    527 ;	libs/i2c_lib.c: 15: }
      00020E 81               [ 4]  528 	ret
                                    529 ;	libs/i2c_lib.c: 17: void i2c_start(void)
                                    530 ;	-----------------------------------------
                                    531 ;	 function i2c_start
                                    532 ;	-----------------------------------------
      00020F                        533 _i2c_start:
                                    534 ;	libs/i2c_lib.c: 19: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      00020F 72 10 52 11      [ 1]  535 	bset	0x5211, #0
                                    536 ;	libs/i2c_lib.c: 20: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      000213                        537 00101$:
      000213 72 01 52 17 FB   [ 2]  538 	btjf	0x5217, #0, 00101$
                                    539 ;	libs/i2c_lib.c: 21: }
      000218 81               [ 4]  540 	ret
                                    541 ;	libs/i2c_lib.c: 23: void i2c_stop(void)
                                    542 ;	-----------------------------------------
                                    543 ;	 function i2c_stop
                                    544 ;	-----------------------------------------
      000219                        545 _i2c_stop:
                                    546 ;	libs/i2c_lib.c: 25: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      000219 72 12 52 11      [ 1]  547 	bset	0x5211, #1
                                    548 ;	libs/i2c_lib.c: 26: }
      00021D 81               [ 4]  549 	ret
                                    550 ;	libs/i2c_lib.c: 28: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                    551 ;	-----------------------------------------
                                    552 ;	 function i2c_send_address
                                    553 ;	-----------------------------------------
      00021E                        554 _i2c_send_address:
                                    555 ;	libs/i2c_lib.c: 33: address = address << 1;
      00021E 48               [ 1]  556 	sll	a
                                    557 ;	libs/i2c_lib.c: 30: switch(rw_type)
      00021F 88               [ 1]  558 	push	a
      000220 7B 04            [ 1]  559 	ld	a, (0x04, sp)
      000222 4A               [ 1]  560 	dec	a
      000223 84               [ 1]  561 	pop	a
      000224 26 02            [ 1]  562 	jrne	00102$
                                    563 ;	libs/i2c_lib.c: 33: address = address << 1;
                                    564 ;	libs/i2c_lib.c: 34: address |= 0x01; // Отправка адреса устройства с битом на чтение
      000226 AA 01            [ 1]  565 	or	a, #0x01
                                    566 ;	libs/i2c_lib.c: 35: break;
                                    567 ;	libs/i2c_lib.c: 36: default:
                                    568 ;	libs/i2c_lib.c: 37: address = address << 1; // Отправка адреса устройства с битом на запись
                                    569 ;	libs/i2c_lib.c: 39: }
      000228                        570 00102$:
                                    571 ;	libs/i2c_lib.c: 40: i2c_start();
      000228 88               [ 1]  572 	push	a
      000229 CDr02r0F         [ 4]  573 	call	_i2c_start
      00022C 84               [ 1]  574 	pop	a
                                    575 ;	libs/i2c_lib.c: 41: I2C_DR -> DR = address;
      00022D C7 52 16         [ 1]  576 	ld	0x5216, a
                                    577 ;	libs/i2c_lib.c: 42: while(!I2C_SR1 -> ADDR)
      000230                        578 00106$:
      000230 AE 52 17         [ 2]  579 	ldw	x, #0x5217
      000233 F6               [ 1]  580 	ld	a, (x)
      000234 44               [ 1]  581 	srl	a
      000235 A4 01            [ 1]  582 	and	a, #0x01
      000237 26 08            [ 1]  583 	jrne	00108$
                                    584 ;	libs/i2c_lib.c: 43: if(I2C_SR2 -> AF)
      000239 72 05 52 18 F2   [ 2]  585 	btjf	0x5218, #2, 00106$
                                    586 ;	libs/i2c_lib.c: 44: return 0;
      00023E 4F               [ 1]  587 	clr	a
      00023F 20 08            [ 2]  588 	jra	00109$
      000241                        589 00108$:
                                    590 ;	libs/i2c_lib.c: 45: clr_sr1();
      000241 C6 52 17         [ 1]  591 	ld	a,0x5217
                                    592 ;	libs/i2c_lib.c: 46: clr_sr3();
      000244 C6 52 19         [ 1]  593 	ld	a,0x5219
                                    594 ;	libs/i2c_lib.c: 47: return 1;
      000247 A6 01            [ 1]  595 	ld	a, #0x01
      000249                        596 00109$:
                                    597 ;	libs/i2c_lib.c: 48: }
      000249 85               [ 2]  598 	popw	x
      00024A 5B 01            [ 2]  599 	addw	sp, #1
      00024C FC               [ 2]  600 	jp	(x)
                                    601 ;	libs/i2c_lib.c: 50: uint8_t i2c_read_byte(void){
                                    602 ;	-----------------------------------------
                                    603 ;	 function i2c_read_byte
                                    604 ;	-----------------------------------------
      00024D                        605 _i2c_read_byte:
                                    606 ;	libs/i2c_lib.c: 51: while(!I2C_SR1 -> RXNE);
      00024D                        607 00101$:
      00024D 72 0D 52 17 FB   [ 2]  608 	btjf	0x5217, #6, 00101$
                                    609 ;	libs/i2c_lib.c: 52: return I2C_DR -> DR;
      000252 C6 52 16         [ 1]  610 	ld	a, 0x5216
                                    611 ;	libs/i2c_lib.c: 53: }
      000255 81               [ 4]  612 	ret
                                    613 ;	libs/i2c_lib.c: 55: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                    614 ;	-----------------------------------------
                                    615 ;	 function i2c_read
                                    616 ;	-----------------------------------------
      000256                        617 _i2c_read:
      000256 52 04            [ 2]  618 	sub	sp, #4
                                    619 ;	libs/i2c_lib.c: 57: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      000258 4B 01            [ 1]  620 	push	#0x01
      00025A CDr02r1E         [ 4]  621 	call	_i2c_send_address
      00025D 4D               [ 1]  622 	tnz	a
      00025E 27 41            [ 1]  623 	jreq	00103$
                                    624 ;	libs/i2c_lib.c: 59: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      000260 72 14 52 11      [ 1]  625 	bset	0x5211, #2
                                    626 ;	libs/i2c_lib.c: 60: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000264 5F               [ 1]  627 	clrw	x
      000265 1F 03            [ 2]  628 	ldw	(0x03, sp), x
      000267                        629 00105$:
      000267 5F               [ 1]  630 	clrw	x
      000268 7B 07            [ 1]  631 	ld	a, (0x07, sp)
      00026A 97               [ 1]  632 	ld	xl, a
      00026B 5A               [ 2]  633 	decw	x
      00026C 1F 01            [ 2]  634 	ldw	(0x01, sp), x
      00026E 1E 03            [ 2]  635 	ldw	x, (0x03, sp)
      000270 13 01            [ 2]  636 	cpw	x, (0x01, sp)
      000272 2E 12            [ 1]  637 	jrsge	00101$
                                    638 ;	libs/i2c_lib.c: 62: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      000274 1E 08            [ 2]  639 	ldw	x, (0x08, sp)
      000276 72 FB 03         [ 2]  640 	addw	x, (0x03, sp)
      000279 89               [ 2]  641 	pushw	x
      00027A CDr02r4D         [ 4]  642 	call	_i2c_read_byte
      00027D 85               [ 2]  643 	popw	x
      00027E F7               [ 1]  644 	ld	(x), a
                                    645 ;	libs/i2c_lib.c: 60: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      00027F 1E 03            [ 2]  646 	ldw	x, (0x03, sp)
      000281 5C               [ 1]  647 	incw	x
      000282 1F 03            [ 2]  648 	ldw	(0x03, sp), x
      000284 20 E1            [ 2]  649 	jra	00105$
      000286                        650 00101$:
                                    651 ;	libs/i2c_lib.c: 64: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      000286 72 15 52 11      [ 1]  652 	bres	0x5211, #2
                                    653 ;	libs/i2c_lib.c: 65: uart_write_byte(0x00);
      00028A 4F               [ 1]  654 	clr	a
      00028B CDr01r79         [ 4]  655 	call	_uart_write_byte
                                    656 ;	libs/i2c_lib.c: 66: data[size-1] = i2c_read_byte();
      00028E 1E 08            [ 2]  657 	ldw	x, (0x08, sp)
      000290 72 FB 01         [ 2]  658 	addw	x, (0x01, sp)
      000293 89               [ 2]  659 	pushw	x
      000294 CDr02r4D         [ 4]  660 	call	_i2c_read_byte
      000297 85               [ 2]  661 	popw	x
      000298 F7               [ 1]  662 	ld	(x), a
                                    663 ;	libs/i2c_lib.c: 67: uart_write_byte(0x01);
      000299 A6 01            [ 1]  664 	ld	a, #0x01
      00029B CDr01r79         [ 4]  665 	call	_uart_write_byte
                                    666 ;	libs/i2c_lib.c: 68: i2c_stop();
      00029E CDr02r19         [ 4]  667 	call	_i2c_stop
      0002A1                        668 00103$:
                                    669 ;	libs/i2c_lib.c: 70: uart_write_byte(0x02);
      0002A1 A6 02            [ 1]  670 	ld	a, #0x02
      0002A3 CDr01r79         [ 4]  671 	call	_uart_write_byte
                                    672 ;	libs/i2c_lib.c: 71: i2c_stop();
      0002A6 CDr02r19         [ 4]  673 	call	_i2c_stop
                                    674 ;	libs/i2c_lib.c: 72: i2c_stop();
      0002A9 CDr02r19         [ 4]  675 	call	_i2c_stop
                                    676 ;	libs/i2c_lib.c: 73: uart_write_byte(0x03); 
      0002AC A6 03            [ 1]  677 	ld	a, #0x03
      0002AE 1E 05            [ 2]  678 	ldw	x, (5, sp)
      0002B0 1F 08            [ 2]  679 	ldw	(8, sp), x
      0002B2 5B 07            [ 2]  680 	addw	sp, #7
                                    681 ;	libs/i2c_lib.c: 74: }
      0002B4 CCr01r79         [ 2]  682 	jp	_uart_write_byte
                                    683 ;	libs/i2c_lib.c: 76: uint8_t i2c_send_byte(uint8_t data)
                                    684 ;	-----------------------------------------
                                    685 ;	 function i2c_send_byte
                                    686 ;	-----------------------------------------
      0002B7                        687 _i2c_send_byte:
                                    688 ;	libs/i2c_lib.c: 78: I2C_DR -> DR = data; //Отправка данных
      0002B7 C7 52 16         [ 1]  689 	ld	0x5216, a
                                    690 ;	libs/i2c_lib.c: 79: while(!I2C_SR1 -> TXE)
      0002BA                        691 00103$:
      0002BA 72 0E 52 17 08   [ 2]  692 	btjt	0x5217, #7, 00105$
                                    693 ;	libs/i2c_lib.c: 80: if(I2C_SR2 -> AF)
      0002BF 72 05 52 18 F6   [ 2]  694 	btjf	0x5218, #2, 00103$
                                    695 ;	libs/i2c_lib.c: 81: return 1;
      0002C4 A6 01            [ 1]  696 	ld	a, #0x01
      0002C6 81               [ 4]  697 	ret
      0002C7                        698 00105$:
                                    699 ;	libs/i2c_lib.c: 82: return 0;//флаг ответа
      0002C7 4F               [ 1]  700 	clr	a
                                    701 ;	libs/i2c_lib.c: 83: }
      0002C8 81               [ 4]  702 	ret
                                    703 ;	libs/i2c_lib.c: 85: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                    704 ;	-----------------------------------------
                                    705 ;	 function i2c_write
                                    706 ;	-----------------------------------------
      0002C9                        707 _i2c_write:
      0002C9 52 02            [ 2]  708 	sub	sp, #2
                                    709 ;	libs/i2c_lib.c: 87: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      0002CB 4B 00            [ 1]  710 	push	#0x00
      0002CD CDr02r1E         [ 4]  711 	call	_i2c_send_address
      0002D0 4D               [ 1]  712 	tnz	a
      0002D1 27 1D            [ 1]  713 	jreq	00105$
                                    714 ;	libs/i2c_lib.c: 88: for(int i = 0;i < size;i++)
      0002D3 5F               [ 1]  715 	clrw	x
      0002D4                        716 00107$:
      0002D4 7B 05            [ 1]  717 	ld	a, (0x05, sp)
      0002D6 6B 02            [ 1]  718 	ld	(0x02, sp), a
      0002D8 0F 01            [ 1]  719 	clr	(0x01, sp)
      0002DA 13 01            [ 2]  720 	cpw	x, (0x01, sp)
      0002DC 2E 12            [ 1]  721 	jrsge	00105$
                                    722 ;	libs/i2c_lib.c: 90: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      0002DE 90 93            [ 1]  723 	ldw	y, x
      0002E0 72 F9 06         [ 2]  724 	addw	y, (0x06, sp)
      0002E3 90 F6            [ 1]  725 	ld	a, (y)
      0002E5 89               [ 2]  726 	pushw	x
      0002E6 CDr02rB7         [ 4]  727 	call	_i2c_send_byte
      0002E9 85               [ 2]  728 	popw	x
      0002EA 4D               [ 1]  729 	tnz	a
      0002EB 26 03            [ 1]  730 	jrne	00105$
                                    731 ;	libs/i2c_lib.c: 88: for(int i = 0;i < size;i++)
      0002ED 5C               [ 1]  732 	incw	x
      0002EE 20 E4            [ 2]  733 	jra	00107$
      0002F0                        734 00105$:
                                    735 ;	libs/i2c_lib.c: 95: i2c_stop();
      0002F0 1E 03            [ 2]  736 	ldw	x, (3, sp)
      0002F2 1F 06            [ 2]  737 	ldw	(6, sp), x
      0002F4 5B 05            [ 2]  738 	addw	sp, #5
                                    739 ;	libs/i2c_lib.c: 96: }
      0002F6 CCr02r19         [ 2]  740 	jp	_i2c_stop
                                    741 ;	libs/i2c_lib.c: 98: uint8_t i2c_scan(void) 
                                    742 ;	-----------------------------------------
                                    743 ;	 function i2c_scan
                                    744 ;	-----------------------------------------
      0002F9                        745 _i2c_scan:
      0002F9 52 02            [ 2]  746 	sub	sp, #2
                                    747 ;	libs/i2c_lib.c: 100: for (uint8_t addr = 1; addr < 127; addr++)
      0002FB A6 01            [ 1]  748 	ld	a, #0x01
      0002FD 6B 01            [ 1]  749 	ld	(0x01, sp), a
      0002FF                        750 00105$:
      0002FF A1 7F            [ 1]  751 	cp	a, #0x7f
      000301 24 22            [ 1]  752 	jrnc	00103$
                                    753 ;	libs/i2c_lib.c: 102: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      000303 88               [ 1]  754 	push	a
      000304 4B 00            [ 1]  755 	push	#0x00
      000306 CDr02r1E         [ 4]  756 	call	_i2c_send_address
      000309 6B 03            [ 1]  757 	ld	(0x03, sp), a
      00030B 84               [ 1]  758 	pop	a
      00030C 0D 02            [ 1]  759 	tnz	(0x02, sp)
      00030E 27 07            [ 1]  760 	jreq	00102$
                                    761 ;	libs/i2c_lib.c: 104: i2c_stop();//адрес совпал 
      000310 CDr02r19         [ 4]  762 	call	_i2c_stop
                                    763 ;	libs/i2c_lib.c: 105: return addr;// выход из цикла
      000313 7B 01            [ 1]  764 	ld	a, (0x01, sp)
      000315 20 12            [ 2]  765 	jra	00107$
      000317                        766 00102$:
                                    767 ;	libs/i2c_lib.c: 107: I2C_SR2 -> AF = 0;//очистка флага ошибки
      000317 AE 52 18         [ 2]  768 	ldw	x, #0x5218
      00031A 88               [ 1]  769 	push	a
      00031B F6               [ 1]  770 	ld	a, (x)
      00031C A4 FB            [ 1]  771 	and	a, #0xfb
      00031E F7               [ 1]  772 	ld	(x), a
      00031F 84               [ 1]  773 	pop	a
                                    774 ;	libs/i2c_lib.c: 100: for (uint8_t addr = 1; addr < 127; addr++)
      000320 4C               [ 1]  775 	inc	a
      000321 6B 01            [ 1]  776 	ld	(0x01, sp), a
      000323 20 DA            [ 2]  777 	jra	00105$
      000325                        778 00103$:
                                    779 ;	libs/i2c_lib.c: 109: i2c_stop();//совпадений нет выход из функции
      000325 CDr02r19         [ 4]  780 	call	_i2c_stop
                                    781 ;	libs/i2c_lib.c: 110: return 0;
      000328 4F               [ 1]  782 	clr	a
      000329                        783 00107$:
                                    784 ;	libs/i2c_lib.c: 111: }
      000329 5B 02            [ 2]  785 	addw	sp, #2
      00032B 81               [ 4]  786 	ret
                                    787 ;	main.c: 4: void setup(void)
                                    788 ;	-----------------------------------------
                                    789 ;	 function setup
                                    790 ;	-----------------------------------------
      00032C                        791 _setup:
                                    792 ;	main.c: 7: CLK_CKDIVR = 0;
      00032C 35 00 50 C6      [ 1]  793 	mov	0x50c6+0, #0x00
                                    794 ;	main.c: 9: uart_init(9600,0);
      000330 4F               [ 1]  795 	clr	a
      000331 AE 25 80         [ 2]  796 	ldw	x, #0x2580
      000334 CDr00r6F         [ 4]  797 	call	_uart_init
                                    798 ;	main.c: 10: i2c_init();
      000337 CDr01rE4         [ 4]  799 	call	_i2c_init
                                    800 ;	main.c: 12: enableInterrupts();
      00033A 9A               [ 1]  801 	rim
                                    802 ;	main.c: 13: }
      00033B 81               [ 4]  803 	ret
                                    804 ;	main.c: 15: void delay(uint16_t ticks)
                                    805 ;	-----------------------------------------
                                    806 ;	 function delay
                                    807 ;	-----------------------------------------
      00033C                        808 _delay:
                                    809 ;	main.c: 17: while(ticks > 0)
      00033C                        810 00101$:
      00033C 5D               [ 2]  811 	tnzw	x
      00033D 26 01            [ 1]  812 	jrne	00120$
      00033F 81               [ 4]  813 	ret
      000340                        814 00120$:
                                    815 ;	main.c: 19: ticks-=2;
      000340 5A               [ 2]  816 	decw	x
      000341 5A               [ 2]  817 	decw	x
                                    818 ;	main.c: 20: ticks+=1;
      000342 5C               [ 1]  819 	incw	x
      000343 20 F7            [ 2]  820 	jra	00101$
                                    821 ;	main.c: 22: }
      000345 81               [ 4]  822 	ret
                                    823 ;	main.c: 24: void display_init(void)
                                    824 ;	-----------------------------------------
                                    825 ;	 function display_init
                                    826 ;	-----------------------------------------
      000346                        827 _display_init:
      000346 52 07            [ 2]  828 	sub	sp, #7
                                    829 ;	main.c: 26: uint8_t setup_buf[7] = {0x00,0xAE,0xD5,0x80,0xA8,0x1F,0xAF};
      000348 0F 01            [ 1]  830 	clr	(0x01, sp)
      00034A A6 AE            [ 1]  831 	ld	a, #0xae
      00034C 6B 02            [ 1]  832 	ld	(0x02, sp), a
      00034E A6 D5            [ 1]  833 	ld	a, #0xd5
      000350 6B 03            [ 1]  834 	ld	(0x03, sp), a
      000352 A6 80            [ 1]  835 	ld	a, #0x80
      000354 6B 04            [ 1]  836 	ld	(0x04, sp), a
      000356 A6 A8            [ 1]  837 	ld	a, #0xa8
      000358 6B 05            [ 1]  838 	ld	(0x05, sp), a
      00035A A6 1F            [ 1]  839 	ld	a, #0x1f
      00035C 6B 06            [ 1]  840 	ld	(0x06, sp), a
      00035E A6 AF            [ 1]  841 	ld	a, #0xaf
      000360 6B 07            [ 1]  842 	ld	(0x07, sp), a
                                    843 ;	main.c: 27: i2c_write(I2C_DISPLAY_ADDR,5,setup_buf);
      000362 96               [ 1]  844 	ldw	x, sp
      000363 5C               [ 1]  845 	incw	x
      000364 89               [ 2]  846 	pushw	x
      000365 4B 05            [ 1]  847 	push	#0x05
      000367 A6 3C            [ 1]  848 	ld	a, #0x3c
      000369 CDr02rC9         [ 4]  849 	call	_i2c_write
                                    850 ;	main.c: 28: setup_buf[1] = 0x1F;
      00036C A6 1F            [ 1]  851 	ld	a, #0x1f
      00036E 6B 02            [ 1]  852 	ld	(0x02, sp), a
                                    853 ;	main.c: 29: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000370 96               [ 1]  854 	ldw	x, sp
      000371 5C               [ 1]  855 	incw	x
      000372 89               [ 2]  856 	pushw	x
      000373 4B 02            [ 1]  857 	push	#0x02
      000375 A6 3C            [ 1]  858 	ld	a, #0x3c
      000377 CDr02rC9         [ 4]  859 	call	_i2c_write
                                    860 ;	main.c: 30: setup_buf[1] = 0xD3;
      00037A A6 D3            [ 1]  861 	ld	a, #0xd3
      00037C 6B 02            [ 1]  862 	ld	(0x02, sp), a
                                    863 ;	main.c: 31: setup_buf[2] = 0x00;
      00037E 0F 03            [ 1]  864 	clr	(0x03, sp)
                                    865 ;	main.c: 32: setup_buf[3] = 0x40;
      000380 A6 40            [ 1]  866 	ld	a, #0x40
      000382 6B 04            [ 1]  867 	ld	(0x04, sp), a
                                    868 ;	main.c: 33: setup_buf[4] = 0x8D;
      000384 A6 8D            [ 1]  869 	ld	a, #0x8d
      000386 6B 05            [ 1]  870 	ld	(0x05, sp), a
                                    871 ;	main.c: 34: i2c_write(I2C_DISPLAY_ADDR,5,setup_buf);
      000388 96               [ 1]  872 	ldw	x, sp
      000389 5C               [ 1]  873 	incw	x
      00038A 89               [ 2]  874 	pushw	x
      00038B 4B 05            [ 1]  875 	push	#0x05
      00038D A6 3C            [ 1]  876 	ld	a, #0x3c
      00038F CDr02rC9         [ 4]  877 	call	_i2c_write
                                    878 ;	main.c: 35: setup_buf[1] = 0x14;
      000392 A6 14            [ 1]  879 	ld	a, #0x14
      000394 6B 02            [ 1]  880 	ld	(0x02, sp), a
                                    881 ;	main.c: 36: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000396 96               [ 1]  882 	ldw	x, sp
      000397 5C               [ 1]  883 	incw	x
      000398 89               [ 2]  884 	pushw	x
      000399 4B 02            [ 1]  885 	push	#0x02
      00039B A6 3C            [ 1]  886 	ld	a, #0x3c
      00039D CDr02rC9         [ 4]  887 	call	_i2c_write
                                    888 ;	main.c: 37: setup_buf[1] = 0xDB;
      0003A0 A6 DB            [ 1]  889 	ld	a, #0xdb
      0003A2 6B 02            [ 1]  890 	ld	(0x02, sp), a
                                    891 ;	main.c: 38: setup_buf[2] = 0x40;
      0003A4 A6 40            [ 1]  892 	ld	a, #0x40
      0003A6 6B 03            [ 1]  893 	ld	(0x03, sp), a
                                    894 ;	main.c: 39: setup_buf[3] = 0xA4;
      0003A8 A6 A4            [ 1]  895 	ld	a, #0xa4
      0003AA 6B 04            [ 1]  896 	ld	(0x04, sp), a
                                    897 ;	main.c: 40: setup_buf[4] = 0xA6;
      0003AC A6 A6            [ 1]  898 	ld	a, #0xa6
      0003AE 6B 05            [ 1]  899 	ld	(0x05, sp), a
                                    900 ;	main.c: 41: i2c_write(I2C_DISPLAY_ADDR,5,setup_buf);
      0003B0 96               [ 1]  901 	ldw	x, sp
      0003B1 5C               [ 1]  902 	incw	x
      0003B2 89               [ 2]  903 	pushw	x
      0003B3 4B 05            [ 1]  904 	push	#0x05
      0003B5 A6 3C            [ 1]  905 	ld	a, #0x3c
      0003B7 CDr02rC9         [ 4]  906 	call	_i2c_write
                                    907 ;	main.c: 42: setup_buf[1] = 0xDA;
      0003BA A6 DA            [ 1]  908 	ld	a, #0xda
      0003BC 6B 02            [ 1]  909 	ld	(0x02, sp), a
                                    910 ;	main.c: 43: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003BE 96               [ 1]  911 	ldw	x, sp
      0003BF 5C               [ 1]  912 	incw	x
      0003C0 89               [ 2]  913 	pushw	x
      0003C1 4B 02            [ 1]  914 	push	#0x02
      0003C3 A6 3C            [ 1]  915 	ld	a, #0x3c
      0003C5 CDr02rC9         [ 4]  916 	call	_i2c_write
                                    917 ;	main.c: 44: setup_buf[1] = 0x02;
      0003C8 A6 02            [ 1]  918 	ld	a, #0x02
      0003CA 6B 02            [ 1]  919 	ld	(0x02, sp), a
                                    920 ;	main.c: 45: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003CC 96               [ 1]  921 	ldw	x, sp
      0003CD 5C               [ 1]  922 	incw	x
      0003CE 89               [ 2]  923 	pushw	x
      0003CF 4B 02            [ 1]  924 	push	#0x02
      0003D1 A6 3C            [ 1]  925 	ld	a, #0x3c
      0003D3 CDr02rC9         [ 4]  926 	call	_i2c_write
                                    927 ;	main.c: 46: setup_buf[1] = 0x81;
      0003D6 A6 81            [ 1]  928 	ld	a, #0x81
      0003D8 6B 02            [ 1]  929 	ld	(0x02, sp), a
                                    930 ;	main.c: 47: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003DA 96               [ 1]  931 	ldw	x, sp
      0003DB 5C               [ 1]  932 	incw	x
      0003DC 89               [ 2]  933 	pushw	x
      0003DD 4B 02            [ 1]  934 	push	#0x02
      0003DF A6 3C            [ 1]  935 	ld	a, #0x3c
      0003E1 CDr02rC9         [ 4]  936 	call	_i2c_write
                                    937 ;	main.c: 48: setup_buf[1] = 0x8F;
      0003E4 A6 8F            [ 1]  938 	ld	a, #0x8f
      0003E6 6B 02            [ 1]  939 	ld	(0x02, sp), a
                                    940 ;	main.c: 49: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003E8 96               [ 1]  941 	ldw	x, sp
      0003E9 5C               [ 1]  942 	incw	x
      0003EA 89               [ 2]  943 	pushw	x
      0003EB 4B 02            [ 1]  944 	push	#0x02
      0003ED A6 3C            [ 1]  945 	ld	a, #0x3c
      0003EF CDr02rC9         [ 4]  946 	call	_i2c_write
                                    947 ;	main.c: 50: setup_buf[1] = 0xD9;
      0003F2 A6 D9            [ 1]  948 	ld	a, #0xd9
      0003F4 6B 02            [ 1]  949 	ld	(0x02, sp), a
                                    950 ;	main.c: 51: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      0003F6 96               [ 1]  951 	ldw	x, sp
      0003F7 5C               [ 1]  952 	incw	x
      0003F8 89               [ 2]  953 	pushw	x
      0003F9 4B 02            [ 1]  954 	push	#0x02
      0003FB A6 3C            [ 1]  955 	ld	a, #0x3c
      0003FD CDr02rC9         [ 4]  956 	call	_i2c_write
                                    957 ;	main.c: 52: setup_buf[1] = 0xF1;
      000400 A6 F1            [ 1]  958 	ld	a, #0xf1
      000402 6B 02            [ 1]  959 	ld	(0x02, sp), a
                                    960 ;	main.c: 53: i2c_write(I2C_DISPLAY_ADDR,2,setup_buf);
      000404 96               [ 1]  961 	ldw	x, sp
      000405 5C               [ 1]  962 	incw	x
      000406 89               [ 2]  963 	pushw	x
      000407 4B 02            [ 1]  964 	push	#0x02
      000409 A6 3C            [ 1]  965 	ld	a, #0x3c
      00040B CDr02rC9         [ 4]  966 	call	_i2c_write
                                    967 ;	main.c: 54: setup_buf[1] = 0x20;
      00040E A6 20            [ 1]  968 	ld	a, #0x20
      000410 6B 02            [ 1]  969 	ld	(0x02, sp), a
                                    970 ;	main.c: 55: setup_buf[2] = 0x01;
      000412 A6 01            [ 1]  971 	ld	a, #0x01
      000414 6B 03            [ 1]  972 	ld	(0x03, sp), a
                                    973 ;	main.c: 56: setup_buf[3] = 0xA1;
      000416 A6 A1            [ 1]  974 	ld	a, #0xa1
      000418 6B 04            [ 1]  975 	ld	(0x04, sp), a
                                    976 ;	main.c: 57: setup_buf[4] = 0xC8;
      00041A A6 C8            [ 1]  977 	ld	a, #0xc8
      00041C 6B 05            [ 1]  978 	ld	(0x05, sp), a
                                    979 ;	main.c: 58: i2c_write(I2C_DISPLAY_ADDR,7,setup_buf);
      00041E 96               [ 1]  980 	ldw	x, sp
      00041F 5C               [ 1]  981 	incw	x
      000420 89               [ 2]  982 	pushw	x
      000421 4B 07            [ 1]  983 	push	#0x07
      000423 A6 3C            [ 1]  984 	ld	a, #0x3c
      000425 CDr02rC9         [ 4]  985 	call	_i2c_write
                                    986 ;	main.c: 59: }
      000428 5B 07            [ 2]  987 	addw	sp, #7
      00042A 81               [ 4]  988 	ret
                                    989 ;	main.c: 61: void display_set_params_to_write(void)
                                    990 ;	-----------------------------------------
                                    991 ;	 function display_set_params_to_write
                                    992 ;	-----------------------------------------
      00042B                        993 _display_set_params_to_write:
      00042B 52 08            [ 2]  994 	sub	sp, #8
                                    995 ;	main.c: 63: uint8_t set_params_buf[8] = {0x00,0x22,0x00,0x03,0x00,0x21,0x00,0x7F};
      00042D 96               [ 1]  996 	ldw	x, sp
      00042E 5C               [ 1]  997 	incw	x
      00042F 7F               [ 1]  998 	clr	(x)
      000430 A6 22            [ 1]  999 	ld	a, #0x22
      000432 6B 02            [ 1] 1000 	ld	(0x02, sp), a
      000434 0F 03            [ 1] 1001 	clr	(0x03, sp)
      000436 A6 03            [ 1] 1002 	ld	a, #0x03
      000438 6B 04            [ 1] 1003 	ld	(0x04, sp), a
      00043A 0F 05            [ 1] 1004 	clr	(0x05, sp)
      00043C A6 21            [ 1] 1005 	ld	a, #0x21
      00043E 6B 06            [ 1] 1006 	ld	(0x06, sp), a
      000440 0F 07            [ 1] 1007 	clr	(0x07, sp)
      000442 A6 7F            [ 1] 1008 	ld	a, #0x7f
      000444 6B 08            [ 1] 1009 	ld	(0x08, sp), a
                                   1010 ;	main.c: 64: i2c_write(I2C_DISPLAY_ADDR,8,set_params_buf);
      000446 89               [ 2] 1011 	pushw	x
      000447 4B 08            [ 1] 1012 	push	#0x08
      000449 A6 3C            [ 1] 1013 	ld	a, #0x3c
      00044B CDr02rC9         [ 4] 1014 	call	_i2c_write
                                   1015 ;	main.c: 65: }
      00044E 5B 08            [ 2] 1016 	addw	sp, #8
      000450 81               [ 4] 1017 	ret
                                   1018 ;	main.c: 71: void display_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1019 ;	-----------------------------------------
                                   1020 ;	 function display_draw_pixel
                                   1021 ;	-----------------------------------------
      000451                       1022 _display_draw_pixel:
      000451 52 06            [ 2] 1023 	sub	sp, #6
      000453 1F 05            [ 2] 1024 	ldw	(0x05, sp), x
                                   1025 ;	main.c: 77: buffer[x + (y / 8) * SSD1306_LCDWIDTH] |=  (1 << (y & 7));
      000455 6B 02            [ 1] 1026 	ld	(0x02, sp), a
      000457 0F 01            [ 1] 1027 	clr	(0x01, sp)
      000459 5F               [ 1] 1028 	clrw	x
      00045A 7B 09            [ 1] 1029 	ld	a, (0x09, sp)
      00045C 97               [ 1] 1030 	ld	xl, a
      00045D 5D               [ 2] 1031 	tnzw	x
      00045E 2A 03            [ 1] 1032 	jrpl	00121$
      000460 1C 00 07         [ 2] 1033 	addw	x, #0x0007
      000463                       1034 00121$:
      000463 57               [ 2] 1035 	sraw	x
      000464 57               [ 2] 1036 	sraw	x
      000465 57               [ 2] 1037 	sraw	x
      000466 A4 07            [ 1] 1038 	and	a, #0x07
      000468 58               [ 2] 1039 	sllw	x
      000469 58               [ 2] 1040 	sllw	x
      00046A 58               [ 2] 1041 	sllw	x
      00046B 58               [ 2] 1042 	sllw	x
      00046C 58               [ 2] 1043 	sllw	x
      00046D 58               [ 2] 1044 	sllw	x
      00046E 58               [ 2] 1045 	sllw	x
      00046F 88               [ 1] 1046 	push	a
      000470 A6 01            [ 1] 1047 	ld	a, #0x01
      000472 6B 04            [ 1] 1048 	ld	(0x04, sp), a
      000474 84               [ 1] 1049 	pop	a
      000475 4D               [ 1] 1050 	tnz	a
      000476 27 05            [ 1] 1051 	jreq	00123$
      000478                       1052 00122$:
      000478 08 03            [ 1] 1053 	sll	(0x03, sp)
      00047A 4A               [ 1] 1054 	dec	a
      00047B 26 FB            [ 1] 1055 	jrne	00122$
      00047D                       1056 00123$:
      00047D 72 FB 01         [ 2] 1057 	addw	x, (0x01, sp)
      000480 72 FB 05         [ 2] 1058 	addw	x, (0x05, sp)
                                   1059 ;	main.c: 74: switch(color)
      000483 7B 0A            [ 1] 1060 	ld	a, (0x0a, sp)
      000485 A1 00            [ 1] 1061 	cp	a, #0x00
      000487 27 0B            [ 1] 1062 	jreq	00102$
      000489 7B 0A            [ 1] 1063 	ld	a, (0x0a, sp)
      00048B 4A               [ 1] 1064 	dec	a
      00048C 26 0F            [ 1] 1065 	jrne	00105$
                                   1066 ;	main.c: 77: buffer[x + (y / 8) * SSD1306_LCDWIDTH] |=  (1 << (y & 7));
      00048E F6               [ 1] 1067 	ld	a, (x)
      00048F 1A 03            [ 1] 1068 	or	a, (0x03, sp)
      000491 F7               [ 1] 1069 	ld	(x), a
                                   1070 ;	main.c: 78: break;
      000492 20 09            [ 2] 1071 	jra	00105$
                                   1072 ;	main.c: 79: case BLACK:
      000494                       1073 00102$:
                                   1074 ;	main.c: 80: buffer[x + (y / 8) * SSD1306_LCDWIDTH] &= ~(1 << (y & 7));
      000494 F6               [ 1] 1075 	ld	a, (x)
      000495 6B 04            [ 1] 1076 	ld	(0x04, sp), a
      000497 7B 03            [ 1] 1077 	ld	a, (0x03, sp)
      000499 43               [ 1] 1078 	cpl	a
      00049A 14 04            [ 1] 1079 	and	a, (0x04, sp)
      00049C F7               [ 1] 1080 	ld	(x), a
                                   1081 ;	main.c: 84: }
      00049D                       1082 00105$:
                                   1083 ;	main.c: 85: }
      00049D 1E 07            [ 2] 1084 	ldw	x, (7, sp)
      00049F 5B 0A            [ 2] 1085 	addw	sp, #10
      0004A1 FC               [ 2] 1086 	jp	(x)
                                   1087 ;	main.c: 87: void display_buffer_fill(uint8_t x, uint8_t y,uint8_t *in_data, uint8_t *out_data,uint8_t width, uint8_t height, uint8_t color)
                                   1088 ;	-----------------------------------------
                                   1089 ;	 function display_buffer_fill
                                   1090 ;	-----------------------------------------
      0004A2                       1091 _display_buffer_fill:
      0004A2 52 0C            [ 2] 1092 	sub	sp, #12
      0004A4 6B 08            [ 1] 1093 	ld	(0x08, sp), a
                                   1094 ;	main.c: 89: uint8_t byteWidth = (width + 7) / 8;
      0004A6 7B 14            [ 1] 1095 	ld	a, (0x14, sp)
      0004A8 6B 02            [ 1] 1096 	ld	(0x02, sp), a
      0004AA 0F 01            [ 1] 1097 	clr	(0x01, sp)
      0004AC 1E 01            [ 2] 1098 	ldw	x, (0x01, sp)
      0004AE 1C 00 07         [ 2] 1099 	addw	x, #0x0007
      0004B1 5D               [ 2] 1100 	tnzw	x
      0004B2 2A 03            [ 1] 1101 	jrpl	00150$
      0004B4 1C 00 07         [ 2] 1102 	addw	x, #0x0007
      0004B7                       1103 00150$:
      0004B7 57               [ 2] 1104 	sraw	x
      0004B8 57               [ 2] 1105 	sraw	x
      0004B9 57               [ 2] 1106 	sraw	x
      0004BA 9F               [ 1] 1107 	ld	a, xl
      0004BB 6B 03            [ 1] 1108 	ld	(0x03, sp), a
                                   1109 ;	main.c: 91: for(int j = 0; j < height; j++) {
      0004BD 5F               [ 1] 1110 	clrw	x
      0004BE 1F 09            [ 2] 1111 	ldw	(0x09, sp), x
      0004C0                       1112 00109$:
      0004C0 7B 15            [ 1] 1113 	ld	a, (0x15, sp)
      0004C2 6B 0C            [ 1] 1114 	ld	(0x0c, sp), a
      0004C4 0F 0B            [ 1] 1115 	clr	(0x0b, sp)
      0004C6 1E 09            [ 2] 1116 	ldw	x, (0x09, sp)
      0004C8 13 0B            [ 2] 1117 	cpw	x, (0x0b, sp)
      0004CA 2E 72            [ 1] 1118 	jrsge	00111$
                                   1119 ;	main.c: 92: for(int i = 0; i < width; i++) {
      0004CC 5F               [ 1] 1120 	clrw	x
      0004CD 1F 0B            [ 2] 1121 	ldw	(0x0b, sp), x
      0004CF                       1122 00106$:
      0004CF 1E 0B            [ 2] 1123 	ldw	x, (0x0b, sp)
      0004D1 13 01            [ 2] 1124 	cpw	x, (0x01, sp)
      0004D3 2E 62            [ 1] 1125 	jrsge	00110$
                                   1126 ;	main.c: 93: if(in_data[j * byteWidth + i / 8] & (128 >> (i & 7)))
      0004D5 5F               [ 1] 1127 	clrw	x
      0004D6 7B 03            [ 1] 1128 	ld	a, (0x03, sp)
      0004D8 97               [ 1] 1129 	ld	xl, a
      0004D9 89               [ 2] 1130 	pushw	x
      0004DA 1E 0B            [ 2] 1131 	ldw	x, (0x0b, sp)
      0004DC CDr00r00         [ 4] 1132 	call	__mulint
      0004DF 1F 06            [ 2] 1133 	ldw	(0x06, sp), x
      0004E1 1E 0B            [ 2] 1134 	ldw	x, (0x0b, sp)
      0004E3 2A 03            [ 1] 1135 	jrpl	00153$
      0004E5 1C 00 07         [ 2] 1136 	addw	x, #0x0007
      0004E8                       1137 00153$:
      0004E8 57               [ 2] 1138 	sraw	x
      0004E9 57               [ 2] 1139 	sraw	x
      0004EA 57               [ 2] 1140 	sraw	x
      0004EB 72 FB 06         [ 2] 1141 	addw	x, (0x06, sp)
      0004EE 72 FB 10         [ 2] 1142 	addw	x, (0x10, sp)
      0004F1 F6               [ 1] 1143 	ld	a, (x)
      0004F2 6B 07            [ 1] 1144 	ld	(0x07, sp), a
      0004F4 7B 0C            [ 1] 1145 	ld	a, (0x0c, sp)
      0004F6 A4 07            [ 1] 1146 	and	a, #0x07
      0004F8 AE 00 80         [ 2] 1147 	ldw	x, #0x0080
      0004FB 4D               [ 1] 1148 	tnz	a
      0004FC 27 04            [ 1] 1149 	jreq	00155$
      0004FE                       1150 00154$:
      0004FE 57               [ 2] 1151 	sraw	x
      0004FF 4A               [ 1] 1152 	dec	a
      000500 26 FC            [ 1] 1153 	jrne	00154$
      000502                       1154 00155$:
      000502 7B 07            [ 1] 1155 	ld	a, (0x07, sp)
      000504 6B 05            [ 1] 1156 	ld	(0x05, sp), a
      000506 0F 04            [ 1] 1157 	clr	(0x04, sp)
      000508 9F               [ 1] 1158 	ld	a, xl
      000509 14 05            [ 1] 1159 	and	a, (0x05, sp)
      00050B 6B 07            [ 1] 1160 	ld	(0x07, sp), a
      00050D 0F 06            [ 1] 1161 	clr	(0x06, sp)
      00050F 1E 06            [ 2] 1162 	ldw	x, (0x06, sp)
      000511 27 1D            [ 1] 1163 	jreq	00107$
                                   1164 ;	main.c: 94: display_draw_pixel(out_data,x + i, y + j, color);
      000513 7B 0A            [ 1] 1165 	ld	a, (0x0a, sp)
      000515 6B 07            [ 1] 1166 	ld	(0x07, sp), a
      000517 7B 0F            [ 1] 1167 	ld	a, (0x0f, sp)
      000519 1B 07            [ 1] 1168 	add	a, (0x07, sp)
      00051B 97               [ 1] 1169 	ld	xl, a
      00051C 7B 0C            [ 1] 1170 	ld	a, (0x0c, sp)
      00051E 6B 07            [ 1] 1171 	ld	(0x07, sp), a
      000520 7B 08            [ 1] 1172 	ld	a, (0x08, sp)
      000522 1B 07            [ 1] 1173 	add	a, (0x07, sp)
      000524 95               [ 1] 1174 	ld	xh, a
      000525 7B 16            [ 1] 1175 	ld	a, (0x16, sp)
      000527 88               [ 1] 1176 	push	a
      000528 9F               [ 1] 1177 	ld	a, xl
      000529 88               [ 1] 1178 	push	a
      00052A 9E               [ 1] 1179 	ld	a, xh
      00052B 1E 14            [ 2] 1180 	ldw	x, (0x14, sp)
      00052D CDr04r51         [ 4] 1181 	call	_display_draw_pixel
      000530                       1182 00107$:
                                   1183 ;	main.c: 92: for(int i = 0; i < width; i++) {
      000530 1E 0B            [ 2] 1184 	ldw	x, (0x0b, sp)
      000532 5C               [ 1] 1185 	incw	x
      000533 1F 0B            [ 2] 1186 	ldw	(0x0b, sp), x
      000535 20 98            [ 2] 1187 	jra	00106$
      000537                       1188 00110$:
                                   1189 ;	main.c: 91: for(int j = 0; j < height; j++) {
      000537 1E 09            [ 2] 1190 	ldw	x, (0x09, sp)
      000539 5C               [ 1] 1191 	incw	x
      00053A 1F 09            [ 2] 1192 	ldw	(0x09, sp), x
      00053C 20 82            [ 2] 1193 	jra	00109$
      00053E                       1194 00111$:
                                   1195 ;	main.c: 97: }
      00053E 1E 0D            [ 2] 1196 	ldw	x, (13, sp)
      000540 5B 16            [ 2] 1197 	addw	sp, #22
      000542 FC               [ 2] 1198 	jp	(x)
                                   1199 ;	main.c: 100: void display_set(uint8_t **data)
                                   1200 ;	-----------------------------------------
                                   1201 ;	 function display_set
                                   1202 ;	-----------------------------------------
      000543                       1203 _display_set:
      000543 52 29            [ 2] 1204 	sub	sp, #41
      000545 1F 26            [ 2] 1205 	ldw	(0x26, sp), x
                                   1206 ;	main.c: 103: display_set_params_to_write();
      000547 CDr04r2B         [ 4] 1207 	call	_display_set_params_to_write
                                   1208 ;	main.c: 104: for (int i = 0; i < 512; i += 32) 
      00054A 5F               [ 1] 1209 	clrw	x
      00054B 1F 28            [ 2] 1210 	ldw	(0x28, sp), x
      00054D                       1211 00107$:
      00054D 1E 28            [ 2] 1212 	ldw	x, (0x28, sp)
      00054F A3 02 00         [ 2] 1213 	cpw	x, #0x0200
      000552 2F 03            [ 1] 1214 	jrslt	00141$
      000554 CCr05rDB         [ 2] 1215 	jp	00109$
      000557                       1216 00141$:
                                   1217 ;	main.c: 106: uint8_t set_buf[33] = {0x40};
      000557 A6 40            [ 1] 1218 	ld	a, #0x40
      000559 6B 01            [ 1] 1219 	ld	(0x01, sp), a
      00055B 0F 02            [ 1] 1220 	clr	(0x02, sp)
      00055D 0F 03            [ 1] 1221 	clr	(0x03, sp)
      00055F 0F 04            [ 1] 1222 	clr	(0x04, sp)
      000561 0F 05            [ 1] 1223 	clr	(0x05, sp)
      000563 0F 06            [ 1] 1224 	clr	(0x06, sp)
      000565 0F 07            [ 1] 1225 	clr	(0x07, sp)
      000567 0F 08            [ 1] 1226 	clr	(0x08, sp)
      000569 0F 09            [ 1] 1227 	clr	(0x09, sp)
      00056B 0F 0A            [ 1] 1228 	clr	(0x0a, sp)
      00056D 0F 0B            [ 1] 1229 	clr	(0x0b, sp)
      00056F 0F 0C            [ 1] 1230 	clr	(0x0c, sp)
      000571 0F 0D            [ 1] 1231 	clr	(0x0d, sp)
      000573 0F 0E            [ 1] 1232 	clr	(0x0e, sp)
      000575 0F 0F            [ 1] 1233 	clr	(0x0f, sp)
      000577 0F 10            [ 1] 1234 	clr	(0x10, sp)
      000579 0F 11            [ 1] 1235 	clr	(0x11, sp)
      00057B 0F 12            [ 1] 1236 	clr	(0x12, sp)
      00057D 0F 13            [ 1] 1237 	clr	(0x13, sp)
      00057F 0F 14            [ 1] 1238 	clr	(0x14, sp)
      000581 0F 15            [ 1] 1239 	clr	(0x15, sp)
      000583 0F 16            [ 1] 1240 	clr	(0x16, sp)
      000585 0F 17            [ 1] 1241 	clr	(0x17, sp)
      000587 0F 18            [ 1] 1242 	clr	(0x18, sp)
      000589 0F 19            [ 1] 1243 	clr	(0x19, sp)
      00058B 0F 1A            [ 1] 1244 	clr	(0x1a, sp)
      00058D 0F 1B            [ 1] 1245 	clr	(0x1b, sp)
      00058F 0F 1C            [ 1] 1246 	clr	(0x1c, sp)
      000591 0F 1D            [ 1] 1247 	clr	(0x1d, sp)
      000593 0F 1E            [ 1] 1248 	clr	(0x1e, sp)
      000595 0F 1F            [ 1] 1249 	clr	(0x1f, sp)
      000597 0F 20            [ 1] 1250 	clr	(0x20, sp)
      000599 0F 21            [ 1] 1251 	clr	(0x21, sp)
                                   1252 ;	main.c: 107: for(int o = 0; o < 32; o++)
      00059B 90 5F            [ 1] 1253 	clrw	y
      00059D                       1254 00104$:
      00059D 90 A3 00 20      [ 2] 1255 	cpw	y, #0x0020
      0005A1 2E 24            [ 1] 1256 	jrsge	00101$
                                   1257 ;	main.c: 108: set_buf[o+1] = data[i+o][1];
      0005A3 90 9F            [ 1] 1258 	ld	a, yl
      0005A5 4C               [ 1] 1259 	inc	a
      0005A6 6B 23            [ 1] 1260 	ld	(0x23, sp), a
      0005A8 49               [ 1] 1261 	rlc	a
      0005A9 4F               [ 1] 1262 	clr	a
      0005AA A2 00            [ 1] 1263 	sbc	a, #0x00
      0005AC 6B 22            [ 1] 1264 	ld	(0x22, sp), a
      0005AE 96               [ 1] 1265 	ldw	x, sp
      0005AF 5C               [ 1] 1266 	incw	x
      0005B0 72 FB 22         [ 2] 1267 	addw	x, (0x22, sp)
      0005B3 1F 24            [ 2] 1268 	ldw	(0x24, sp), x
      0005B5 93               [ 1] 1269 	ldw	x, y
      0005B6 72 FB 28         [ 2] 1270 	addw	x, (0x28, sp)
      0005B9 58               [ 2] 1271 	sllw	x
      0005BA 72 FB 26         [ 2] 1272 	addw	x, (0x26, sp)
      0005BD FE               [ 2] 1273 	ldw	x, (x)
      0005BE E6 01            [ 1] 1274 	ld	a, (0x1, x)
      0005C0 1E 24            [ 2] 1275 	ldw	x, (0x24, sp)
      0005C2 F7               [ 1] 1276 	ld	(x), a
                                   1277 ;	main.c: 107: for(int o = 0; o < 32; o++)
      0005C3 90 5C            [ 1] 1278 	incw	y
      0005C5 20 D6            [ 2] 1279 	jra	00104$
      0005C7                       1280 00101$:
                                   1281 ;	main.c: 109: i2c_write(I2C_DISPLAY_ADDR,33,set_buf);
      0005C7 96               [ 1] 1282 	ldw	x, sp
      0005C8 5C               [ 1] 1283 	incw	x
      0005C9 89               [ 2] 1284 	pushw	x
      0005CA 4B 21            [ 1] 1285 	push	#0x21
      0005CC A6 3C            [ 1] 1286 	ld	a, #0x3c
      0005CE CDr02rC9         [ 4] 1287 	call	_i2c_write
                                   1288 ;	main.c: 104: for (int i = 0; i < 512; i += 32) 
      0005D1 1E 28            [ 2] 1289 	ldw	x, (0x28, sp)
      0005D3 1C 00 20         [ 2] 1290 	addw	x, #0x0020
      0005D6 1F 28            [ 2] 1291 	ldw	(0x28, sp), x
      0005D8 CCr05r4D         [ 2] 1292 	jp	00107$
      0005DB                       1293 00109$:
                                   1294 ;	main.c: 111: }
      0005DB 5B 29            [ 2] 1295 	addw	sp, #41
      0005DD 81               [ 4] 1296 	ret
                                   1297 ;	main.c: 113: void display_clean(void)
                                   1298 ;	-----------------------------------------
                                   1299 ;	 function display_clean
                                   1300 ;	-----------------------------------------
      0005DE                       1301 _display_clean:
      0005DE 52 21            [ 2] 1302 	sub	sp, #33
                                   1303 ;	main.c: 115: uint8_t clean_buf[33] = {0x40};
      0005E0 A6 40            [ 1] 1304 	ld	a, #0x40
      0005E2 6B 01            [ 1] 1305 	ld	(0x01, sp), a
      0005E4 0F 02            [ 1] 1306 	clr	(0x02, sp)
      0005E6 0F 03            [ 1] 1307 	clr	(0x03, sp)
      0005E8 0F 04            [ 1] 1308 	clr	(0x04, sp)
      0005EA 0F 05            [ 1] 1309 	clr	(0x05, sp)
      0005EC 0F 06            [ 1] 1310 	clr	(0x06, sp)
      0005EE 0F 07            [ 1] 1311 	clr	(0x07, sp)
      0005F0 0F 08            [ 1] 1312 	clr	(0x08, sp)
      0005F2 0F 09            [ 1] 1313 	clr	(0x09, sp)
      0005F4 0F 0A            [ 1] 1314 	clr	(0x0a, sp)
      0005F6 0F 0B            [ 1] 1315 	clr	(0x0b, sp)
      0005F8 0F 0C            [ 1] 1316 	clr	(0x0c, sp)
      0005FA 0F 0D            [ 1] 1317 	clr	(0x0d, sp)
      0005FC 0F 0E            [ 1] 1318 	clr	(0x0e, sp)
      0005FE 0F 0F            [ 1] 1319 	clr	(0x0f, sp)
      000600 0F 10            [ 1] 1320 	clr	(0x10, sp)
      000602 0F 11            [ 1] 1321 	clr	(0x11, sp)
      000604 0F 12            [ 1] 1322 	clr	(0x12, sp)
      000606 0F 13            [ 1] 1323 	clr	(0x13, sp)
      000608 0F 14            [ 1] 1324 	clr	(0x14, sp)
      00060A 0F 15            [ 1] 1325 	clr	(0x15, sp)
      00060C 0F 16            [ 1] 1326 	clr	(0x16, sp)
      00060E 0F 17            [ 1] 1327 	clr	(0x17, sp)
      000610 0F 18            [ 1] 1328 	clr	(0x18, sp)
      000612 0F 19            [ 1] 1329 	clr	(0x19, sp)
      000614 0F 1A            [ 1] 1330 	clr	(0x1a, sp)
      000616 0F 1B            [ 1] 1331 	clr	(0x1b, sp)
      000618 0F 1C            [ 1] 1332 	clr	(0x1c, sp)
      00061A 0F 1D            [ 1] 1333 	clr	(0x1d, sp)
      00061C 0F 1E            [ 1] 1334 	clr	(0x1e, sp)
      00061E 0F 1F            [ 1] 1335 	clr	(0x1f, sp)
      000620 0F 20            [ 1] 1336 	clr	(0x20, sp)
      000622 0F 21            [ 1] 1337 	clr	(0x21, sp)
                                   1338 ;	main.c: 117: display_set_params_to_write();
      000624 CDr04r2B         [ 4] 1339 	call	_display_set_params_to_write
                                   1340 ;	main.c: 119: for(int i = 0;i<16;i++)
      000627 4F               [ 1] 1341 	clr	a
      000628                       1342 00103$:
      000628 A1 10            [ 1] 1343 	cp	a, #0x10
      00062A 24 10            [ 1] 1344 	jrnc	00105$
                                   1345 ;	main.c: 120: i2c_write(I2C_DISPLAY_ADDR,33,clean_buf);
      00062C 88               [ 1] 1346 	push	a
      00062D 96               [ 1] 1347 	ldw	x, sp
      00062E 5C               [ 1] 1348 	incw	x
      00062F 5C               [ 1] 1349 	incw	x
      000630 89               [ 2] 1350 	pushw	x
      000631 4B 21            [ 1] 1351 	push	#0x21
      000633 A6 3C            [ 1] 1352 	ld	a, #0x3c
      000635 CDr02rC9         [ 4] 1353 	call	_i2c_write
      000638 84               [ 1] 1354 	pop	a
                                   1355 ;	main.c: 119: for(int i = 0;i<16;i++)
      000639 4C               [ 1] 1356 	inc	a
      00063A 20 EC            [ 2] 1357 	jra	00103$
      00063C                       1358 00105$:
                                   1359 ;	main.c: 122: }
      00063C 5B 21            [ 2] 1360 	addw	sp, #33
      00063E 81               [ 4] 1361 	ret
                                   1362 ;	main.c: 124: void gg(void)
                                   1363 ;	-----------------------------------------
                                   1364 ;	 function gg
                                   1365 ;	-----------------------------------------
      00063F                       1366 _gg:
      00063F 90 96            [ 1] 1367 	ldw	y, sp
      000641 72 A2 01 0D      [ 2] 1368 	subw	y, #269
      000645 90 94            [ 1] 1369 	ldw	sp, y
      000647 52 F3            [ 2] 1370 	sub	sp, #243
                                   1371 ;	main.c: 126: display_init();
      000649 90 89            [ 2] 1372 	pushw	y
      00064B CDr03r46         [ 4] 1373 	call	_display_init
      00064E CDr05rDE         [ 4] 1374 	call	_display_clean
      000651 90 85            [ 2] 1375 	popw	y
                                   1376 ;	main.c: 129: uint8_t buffer[512] = {0};
      000653 0F 01            [ 1] 1377 	clr	(0x01, sp)
      000655 0F 02            [ 1] 1378 	clr	(0x02, sp)
      000657 0F 03            [ 1] 1379 	clr	(0x03, sp)
      000659 0F 04            [ 1] 1380 	clr	(0x04, sp)
      00065B 0F 05            [ 1] 1381 	clr	(0x05, sp)
      00065D 0F 06            [ 1] 1382 	clr	(0x06, sp)
      00065F 0F 07            [ 1] 1383 	clr	(0x07, sp)
      000661 0F 08            [ 1] 1384 	clr	(0x08, sp)
      000663 0F 09            [ 1] 1385 	clr	(0x09, sp)
      000665 0F 0A            [ 1] 1386 	clr	(0x0a, sp)
      000667 0F 0B            [ 1] 1387 	clr	(0x0b, sp)
      000669 0F 0C            [ 1] 1388 	clr	(0x0c, sp)
      00066B 0F 0D            [ 1] 1389 	clr	(0x0d, sp)
      00066D 0F 0E            [ 1] 1390 	clr	(0x0e, sp)
      00066F 0F 0F            [ 1] 1391 	clr	(0x0f, sp)
      000671 0F 10            [ 1] 1392 	clr	(0x10, sp)
      000673 0F 11            [ 1] 1393 	clr	(0x11, sp)
      000675 0F 12            [ 1] 1394 	clr	(0x12, sp)
      000677 0F 13            [ 1] 1395 	clr	(0x13, sp)
      000679 0F 14            [ 1] 1396 	clr	(0x14, sp)
      00067B 0F 15            [ 1] 1397 	clr	(0x15, sp)
      00067D 0F 16            [ 1] 1398 	clr	(0x16, sp)
      00067F 0F 17            [ 1] 1399 	clr	(0x17, sp)
      000681 0F 18            [ 1] 1400 	clr	(0x18, sp)
      000683 0F 19            [ 1] 1401 	clr	(0x19, sp)
      000685 0F 1A            [ 1] 1402 	clr	(0x1a, sp)
      000687 0F 1B            [ 1] 1403 	clr	(0x1b, sp)
      000689 0F 1C            [ 1] 1404 	clr	(0x1c, sp)
      00068B 0F 1D            [ 1] 1405 	clr	(0x1d, sp)
      00068D 0F 1E            [ 1] 1406 	clr	(0x1e, sp)
      00068F 0F 1F            [ 1] 1407 	clr	(0x1f, sp)
      000691 0F 20            [ 1] 1408 	clr	(0x20, sp)
      000693 0F 21            [ 1] 1409 	clr	(0x21, sp)
      000695 0F 22            [ 1] 1410 	clr	(0x22, sp)
      000697 0F 23            [ 1] 1411 	clr	(0x23, sp)
      000699 0F 24            [ 1] 1412 	clr	(0x24, sp)
      00069B 0F 25            [ 1] 1413 	clr	(0x25, sp)
      00069D 0F 26            [ 1] 1414 	clr	(0x26, sp)
      00069F 0F 27            [ 1] 1415 	clr	(0x27, sp)
      0006A1 0F 28            [ 1] 1416 	clr	(0x28, sp)
      0006A3 0F 29            [ 1] 1417 	clr	(0x29, sp)
      0006A5 0F 2A            [ 1] 1418 	clr	(0x2a, sp)
      0006A7 0F 2B            [ 1] 1419 	clr	(0x2b, sp)
      0006A9 0F 2C            [ 1] 1420 	clr	(0x2c, sp)
      0006AB 0F 2D            [ 1] 1421 	clr	(0x2d, sp)
      0006AD 0F 2E            [ 1] 1422 	clr	(0x2e, sp)
      0006AF 0F 2F            [ 1] 1423 	clr	(0x2f, sp)
      0006B1 0F 30            [ 1] 1424 	clr	(0x30, sp)
      0006B3 0F 31            [ 1] 1425 	clr	(0x31, sp)
      0006B5 0F 32            [ 1] 1426 	clr	(0x32, sp)
      0006B7 0F 33            [ 1] 1427 	clr	(0x33, sp)
      0006B9 0F 34            [ 1] 1428 	clr	(0x34, sp)
      0006BB 0F 35            [ 1] 1429 	clr	(0x35, sp)
      0006BD 0F 36            [ 1] 1430 	clr	(0x36, sp)
      0006BF 0F 37            [ 1] 1431 	clr	(0x37, sp)
      0006C1 0F 38            [ 1] 1432 	clr	(0x38, sp)
      0006C3 0F 39            [ 1] 1433 	clr	(0x39, sp)
      0006C5 0F 3A            [ 1] 1434 	clr	(0x3a, sp)
      0006C7 0F 3B            [ 1] 1435 	clr	(0x3b, sp)
      0006C9 0F 3C            [ 1] 1436 	clr	(0x3c, sp)
      0006CB 0F 3D            [ 1] 1437 	clr	(0x3d, sp)
      0006CD 0F 3E            [ 1] 1438 	clr	(0x3e, sp)
      0006CF 0F 3F            [ 1] 1439 	clr	(0x3f, sp)
      0006D1 0F 40            [ 1] 1440 	clr	(0x40, sp)
      0006D3 0F 41            [ 1] 1441 	clr	(0x41, sp)
      0006D5 0F 42            [ 1] 1442 	clr	(0x42, sp)
      0006D7 0F 43            [ 1] 1443 	clr	(0x43, sp)
      0006D9 0F 44            [ 1] 1444 	clr	(0x44, sp)
      0006DB 0F 45            [ 1] 1445 	clr	(0x45, sp)
      0006DD 0F 46            [ 1] 1446 	clr	(0x46, sp)
      0006DF 0F 47            [ 1] 1447 	clr	(0x47, sp)
      0006E1 0F 48            [ 1] 1448 	clr	(0x48, sp)
      0006E3 0F 49            [ 1] 1449 	clr	(0x49, sp)
      0006E5 0F 4A            [ 1] 1450 	clr	(0x4a, sp)
      0006E7 0F 4B            [ 1] 1451 	clr	(0x4b, sp)
      0006E9 0F 4C            [ 1] 1452 	clr	(0x4c, sp)
      0006EB 0F 4D            [ 1] 1453 	clr	(0x4d, sp)
      0006ED 0F 4E            [ 1] 1454 	clr	(0x4e, sp)
      0006EF 0F 4F            [ 1] 1455 	clr	(0x4f, sp)
      0006F1 0F 50            [ 1] 1456 	clr	(0x50, sp)
      0006F3 0F 51            [ 1] 1457 	clr	(0x51, sp)
      0006F5 0F 52            [ 1] 1458 	clr	(0x52, sp)
      0006F7 0F 53            [ 1] 1459 	clr	(0x53, sp)
      0006F9 0F 54            [ 1] 1460 	clr	(0x54, sp)
      0006FB 0F 55            [ 1] 1461 	clr	(0x55, sp)
      0006FD 0F 56            [ 1] 1462 	clr	(0x56, sp)
      0006FF 0F 57            [ 1] 1463 	clr	(0x57, sp)
      000701 0F 58            [ 1] 1464 	clr	(0x58, sp)
      000703 0F 59            [ 1] 1465 	clr	(0x59, sp)
      000705 0F 5A            [ 1] 1466 	clr	(0x5a, sp)
      000707 0F 5B            [ 1] 1467 	clr	(0x5b, sp)
      000709 0F 5C            [ 1] 1468 	clr	(0x5c, sp)
      00070B 0F 5D            [ 1] 1469 	clr	(0x5d, sp)
      00070D 0F 5E            [ 1] 1470 	clr	(0x5e, sp)
      00070F 0F 5F            [ 1] 1471 	clr	(0x5f, sp)
      000711 0F 60            [ 1] 1472 	clr	(0x60, sp)
      000713 0F 61            [ 1] 1473 	clr	(0x61, sp)
      000715 0F 62            [ 1] 1474 	clr	(0x62, sp)
      000717 0F 63            [ 1] 1475 	clr	(0x63, sp)
      000719 0F 64            [ 1] 1476 	clr	(0x64, sp)
      00071B 0F 65            [ 1] 1477 	clr	(0x65, sp)
      00071D 0F 66            [ 1] 1478 	clr	(0x66, sp)
      00071F 0F 67            [ 1] 1479 	clr	(0x67, sp)
      000721 0F 68            [ 1] 1480 	clr	(0x68, sp)
      000723 0F 69            [ 1] 1481 	clr	(0x69, sp)
      000725 0F 6A            [ 1] 1482 	clr	(0x6a, sp)
      000727 0F 6B            [ 1] 1483 	clr	(0x6b, sp)
      000729 0F 6C            [ 1] 1484 	clr	(0x6c, sp)
      00072B 0F 6D            [ 1] 1485 	clr	(0x6d, sp)
      00072D 0F 6E            [ 1] 1486 	clr	(0x6e, sp)
      00072F 0F 6F            [ 1] 1487 	clr	(0x6f, sp)
      000731 0F 70            [ 1] 1488 	clr	(0x70, sp)
      000733 0F 71            [ 1] 1489 	clr	(0x71, sp)
      000735 0F 72            [ 1] 1490 	clr	(0x72, sp)
      000737 0F 73            [ 1] 1491 	clr	(0x73, sp)
      000739 0F 74            [ 1] 1492 	clr	(0x74, sp)
      00073B 0F 75            [ 1] 1493 	clr	(0x75, sp)
      00073D 0F 76            [ 1] 1494 	clr	(0x76, sp)
      00073F 0F 77            [ 1] 1495 	clr	(0x77, sp)
      000741 0F 78            [ 1] 1496 	clr	(0x78, sp)
      000743 0F 79            [ 1] 1497 	clr	(0x79, sp)
      000745 0F 7A            [ 1] 1498 	clr	(0x7a, sp)
      000747 0F 7B            [ 1] 1499 	clr	(0x7b, sp)
      000749 0F 7C            [ 1] 1500 	clr	(0x7c, sp)
      00074B 0F 7D            [ 1] 1501 	clr	(0x7d, sp)
      00074D 0F 7E            [ 1] 1502 	clr	(0x7e, sp)
      00074F 0F 7F            [ 1] 1503 	clr	(0x7f, sp)
      000751 0F 80            [ 1] 1504 	clr	(0x80, sp)
      000753 0F 81            [ 1] 1505 	clr	(0x81, sp)
      000755 0F 82            [ 1] 1506 	clr	(0x82, sp)
      000757 0F 83            [ 1] 1507 	clr	(0x83, sp)
      000759 0F 84            [ 1] 1508 	clr	(0x84, sp)
      00075B 0F 85            [ 1] 1509 	clr	(0x85, sp)
      00075D 0F 86            [ 1] 1510 	clr	(0x86, sp)
      00075F 0F 87            [ 1] 1511 	clr	(0x87, sp)
      000761 0F 88            [ 1] 1512 	clr	(0x88, sp)
      000763 0F 89            [ 1] 1513 	clr	(0x89, sp)
      000765 0F 8A            [ 1] 1514 	clr	(0x8a, sp)
      000767 0F 8B            [ 1] 1515 	clr	(0x8b, sp)
      000769 0F 8C            [ 1] 1516 	clr	(0x8c, sp)
      00076B 0F 8D            [ 1] 1517 	clr	(0x8d, sp)
      00076D 0F 8E            [ 1] 1518 	clr	(0x8e, sp)
      00076F 0F 8F            [ 1] 1519 	clr	(0x8f, sp)
      000771 0F 90            [ 1] 1520 	clr	(0x90, sp)
      000773 0F 91            [ 1] 1521 	clr	(0x91, sp)
      000775 0F 92            [ 1] 1522 	clr	(0x92, sp)
      000777 0F 93            [ 1] 1523 	clr	(0x93, sp)
      000779 0F 94            [ 1] 1524 	clr	(0x94, sp)
      00077B 0F 95            [ 1] 1525 	clr	(0x95, sp)
      00077D 0F 96            [ 1] 1526 	clr	(0x96, sp)
      00077F 0F 97            [ 1] 1527 	clr	(0x97, sp)
      000781 0F 98            [ 1] 1528 	clr	(0x98, sp)
      000783 0F 99            [ 1] 1529 	clr	(0x99, sp)
      000785 0F 9A            [ 1] 1530 	clr	(0x9a, sp)
      000787 0F 9B            [ 1] 1531 	clr	(0x9b, sp)
      000789 0F 9C            [ 1] 1532 	clr	(0x9c, sp)
      00078B 0F 9D            [ 1] 1533 	clr	(0x9d, sp)
      00078D 0F 9E            [ 1] 1534 	clr	(0x9e, sp)
      00078F 0F 9F            [ 1] 1535 	clr	(0x9f, sp)
      000791 0F A0            [ 1] 1536 	clr	(0xa0, sp)
      000793 0F A1            [ 1] 1537 	clr	(0xa1, sp)
      000795 0F A2            [ 1] 1538 	clr	(0xa2, sp)
      000797 0F A3            [ 1] 1539 	clr	(0xa3, sp)
      000799 0F A4            [ 1] 1540 	clr	(0xa4, sp)
      00079B 0F A5            [ 1] 1541 	clr	(0xa5, sp)
      00079D 0F A6            [ 1] 1542 	clr	(0xa6, sp)
      00079F 0F A7            [ 1] 1543 	clr	(0xa7, sp)
      0007A1 0F A8            [ 1] 1544 	clr	(0xa8, sp)
      0007A3 0F A9            [ 1] 1545 	clr	(0xa9, sp)
      0007A5 0F AA            [ 1] 1546 	clr	(0xaa, sp)
      0007A7 0F AB            [ 1] 1547 	clr	(0xab, sp)
      0007A9 0F AC            [ 1] 1548 	clr	(0xac, sp)
      0007AB 0F AD            [ 1] 1549 	clr	(0xad, sp)
      0007AD 0F AE            [ 1] 1550 	clr	(0xae, sp)
      0007AF 0F AF            [ 1] 1551 	clr	(0xaf, sp)
      0007B1 0F B0            [ 1] 1552 	clr	(0xb0, sp)
      0007B3 0F B1            [ 1] 1553 	clr	(0xb1, sp)
      0007B5 0F B2            [ 1] 1554 	clr	(0xb2, sp)
      0007B7 0F B3            [ 1] 1555 	clr	(0xb3, sp)
      0007B9 0F B4            [ 1] 1556 	clr	(0xb4, sp)
      0007BB 0F B5            [ 1] 1557 	clr	(0xb5, sp)
      0007BD 0F B6            [ 1] 1558 	clr	(0xb6, sp)
      0007BF 0F B7            [ 1] 1559 	clr	(0xb7, sp)
      0007C1 0F B8            [ 1] 1560 	clr	(0xb8, sp)
      0007C3 0F B9            [ 1] 1561 	clr	(0xb9, sp)
      0007C5 0F BA            [ 1] 1562 	clr	(0xba, sp)
      0007C7 0F BB            [ 1] 1563 	clr	(0xbb, sp)
      0007C9 0F BC            [ 1] 1564 	clr	(0xbc, sp)
      0007CB 0F BD            [ 1] 1565 	clr	(0xbd, sp)
      0007CD 0F BE            [ 1] 1566 	clr	(0xbe, sp)
      0007CF 0F BF            [ 1] 1567 	clr	(0xbf, sp)
      0007D1 0F C0            [ 1] 1568 	clr	(0xc0, sp)
      0007D3 0F C1            [ 1] 1569 	clr	(0xc1, sp)
      0007D5 0F C2            [ 1] 1570 	clr	(0xc2, sp)
      0007D7 0F C3            [ 1] 1571 	clr	(0xc3, sp)
      0007D9 0F C4            [ 1] 1572 	clr	(0xc4, sp)
      0007DB 0F C5            [ 1] 1573 	clr	(0xc5, sp)
      0007DD 0F C6            [ 1] 1574 	clr	(0xc6, sp)
      0007DF 0F C7            [ 1] 1575 	clr	(0xc7, sp)
      0007E1 0F C8            [ 1] 1576 	clr	(0xc8, sp)
      0007E3 0F C9            [ 1] 1577 	clr	(0xc9, sp)
      0007E5 0F CA            [ 1] 1578 	clr	(0xca, sp)
      0007E7 0F CB            [ 1] 1579 	clr	(0xcb, sp)
      0007E9 0F CC            [ 1] 1580 	clr	(0xcc, sp)
      0007EB 0F CD            [ 1] 1581 	clr	(0xcd, sp)
      0007ED 0F CE            [ 1] 1582 	clr	(0xce, sp)
      0007EF 0F CF            [ 1] 1583 	clr	(0xcf, sp)
      0007F1 0F D0            [ 1] 1584 	clr	(0xd0, sp)
      0007F3 0F D1            [ 1] 1585 	clr	(0xd1, sp)
      0007F5 0F D2            [ 1] 1586 	clr	(0xd2, sp)
      0007F7 0F D3            [ 1] 1587 	clr	(0xd3, sp)
      0007F9 0F D4            [ 1] 1588 	clr	(0xd4, sp)
      0007FB 0F D5            [ 1] 1589 	clr	(0xd5, sp)
      0007FD 0F D6            [ 1] 1590 	clr	(0xd6, sp)
      0007FF 0F D7            [ 1] 1591 	clr	(0xd7, sp)
      000801 0F D8            [ 1] 1592 	clr	(0xd8, sp)
      000803 0F D9            [ 1] 1593 	clr	(0xd9, sp)
      000805 0F DA            [ 1] 1594 	clr	(0xda, sp)
      000807 0F DB            [ 1] 1595 	clr	(0xdb, sp)
      000809 0F DC            [ 1] 1596 	clr	(0xdc, sp)
      00080B 0F DD            [ 1] 1597 	clr	(0xdd, sp)
      00080D 0F DE            [ 1] 1598 	clr	(0xde, sp)
      00080F 0F DF            [ 1] 1599 	clr	(0xdf, sp)
      000811 0F E0            [ 1] 1600 	clr	(0xe0, sp)
      000813 0F E1            [ 1] 1601 	clr	(0xe1, sp)
      000815 0F E2            [ 1] 1602 	clr	(0xe2, sp)
      000817 0F E3            [ 1] 1603 	clr	(0xe3, sp)
      000819 0F E4            [ 1] 1604 	clr	(0xe4, sp)
      00081B 0F E5            [ 1] 1605 	clr	(0xe5, sp)
      00081D 0F E6            [ 1] 1606 	clr	(0xe6, sp)
      00081F 0F E7            [ 1] 1607 	clr	(0xe7, sp)
      000821 0F E8            [ 1] 1608 	clr	(0xe8, sp)
      000823 0F E9            [ 1] 1609 	clr	(0xe9, sp)
      000825 0F EA            [ 1] 1610 	clr	(0xea, sp)
      000827 0F EB            [ 1] 1611 	clr	(0xeb, sp)
      000829 0F EC            [ 1] 1612 	clr	(0xec, sp)
      00082B 0F ED            [ 1] 1613 	clr	(0xed, sp)
      00082D 0F EE            [ 1] 1614 	clr	(0xee, sp)
      00082F 0F EF            [ 1] 1615 	clr	(0xef, sp)
      000831 0F F0            [ 1] 1616 	clr	(0xf0, sp)
      000833 0F F1            [ 1] 1617 	clr	(0xf1, sp)
      000835 0F F2            [ 1] 1618 	clr	(0xf2, sp)
      000837 0F F3            [ 1] 1619 	clr	(0xf3, sp)
      000839 0F F4            [ 1] 1620 	clr	(0xf4, sp)
      00083B 0F F5            [ 1] 1621 	clr	(0xf5, sp)
      00083D 0F F6            [ 1] 1622 	clr	(0xf6, sp)
      00083F 0F F7            [ 1] 1623 	clr	(0xf7, sp)
      000841 0F F8            [ 1] 1624 	clr	(0xf8, sp)
      000843 0F F9            [ 1] 1625 	clr	(0xf9, sp)
      000845 0F FA            [ 1] 1626 	clr	(0xfa, sp)
      000847 0F FB            [ 1] 1627 	clr	(0xfb, sp)
      000849 0F FC            [ 1] 1628 	clr	(0xfc, sp)
      00084B 0F FD            [ 1] 1629 	clr	(0xfd, sp)
      00084D 0F FE            [ 1] 1630 	clr	(0xfe, sp)
      00084F 0F FF            [ 1] 1631 	clr	(0xff, sp)
      000851 90 6F 0D         [ 1] 1632 	clr	(0xd, y)
      000854 90 6F 0E         [ 1] 1633 	clr	(0xe, y)
      000857 90 6F 0F         [ 1] 1634 	clr	(0xf, y)
      00085A 90 6F 10         [ 1] 1635 	clr	(0x10, y)
      00085D 90 6F 11         [ 1] 1636 	clr	(0x11, y)
      000860 90 6F 12         [ 1] 1637 	clr	(0x12, y)
      000863 90 6F 13         [ 1] 1638 	clr	(0x13, y)
      000866 90 6F 14         [ 1] 1639 	clr	(0x14, y)
      000869 90 6F 15         [ 1] 1640 	clr	(0x15, y)
      00086C 90 6F 16         [ 1] 1641 	clr	(0x16, y)
      00086F 90 6F 17         [ 1] 1642 	clr	(0x17, y)
      000872 90 6F 18         [ 1] 1643 	clr	(0x18, y)
      000875 90 6F 19         [ 1] 1644 	clr	(0x19, y)
      000878 90 6F 1A         [ 1] 1645 	clr	(0x1a, y)
      00087B 90 6F 1B         [ 1] 1646 	clr	(0x1b, y)
      00087E 90 6F 1C         [ 1] 1647 	clr	(0x1c, y)
      000881 90 6F 1D         [ 1] 1648 	clr	(0x1d, y)
      000884 90 6F 1E         [ 1] 1649 	clr	(0x1e, y)
      000887 90 6F 1F         [ 1] 1650 	clr	(0x1f, y)
      00088A 90 6F 20         [ 1] 1651 	clr	(0x20, y)
      00088D 90 6F 21         [ 1] 1652 	clr	(0x21, y)
      000890 90 6F 22         [ 1] 1653 	clr	(0x22, y)
      000893 90 6F 23         [ 1] 1654 	clr	(0x23, y)
      000896 90 6F 24         [ 1] 1655 	clr	(0x24, y)
      000899 90 6F 25         [ 1] 1656 	clr	(0x25, y)
      00089C 90 6F 26         [ 1] 1657 	clr	(0x26, y)
      00089F 90 6F 27         [ 1] 1658 	clr	(0x27, y)
      0008A2 90 6F 28         [ 1] 1659 	clr	(0x28, y)
      0008A5 90 6F 29         [ 1] 1660 	clr	(0x29, y)
      0008A8 90 6F 2A         [ 1] 1661 	clr	(0x2a, y)
      0008AB 90 6F 2B         [ 1] 1662 	clr	(0x2b, y)
      0008AE 90 6F 2C         [ 1] 1663 	clr	(0x2c, y)
      0008B1 90 6F 2D         [ 1] 1664 	clr	(0x2d, y)
      0008B4 90 6F 2E         [ 1] 1665 	clr	(0x2e, y)
      0008B7 90 6F 2F         [ 1] 1666 	clr	(0x2f, y)
      0008BA 90 6F 30         [ 1] 1667 	clr	(0x30, y)
      0008BD 90 6F 31         [ 1] 1668 	clr	(0x31, y)
      0008C0 90 6F 32         [ 1] 1669 	clr	(0x32, y)
      0008C3 90 6F 33         [ 1] 1670 	clr	(0x33, y)
      0008C6 90 6F 34         [ 1] 1671 	clr	(0x34, y)
      0008C9 90 6F 35         [ 1] 1672 	clr	(0x35, y)
      0008CC 90 6F 36         [ 1] 1673 	clr	(0x36, y)
      0008CF 90 6F 37         [ 1] 1674 	clr	(0x37, y)
      0008D2 90 6F 38         [ 1] 1675 	clr	(0x38, y)
      0008D5 90 6F 39         [ 1] 1676 	clr	(0x39, y)
      0008D8 90 6F 3A         [ 1] 1677 	clr	(0x3a, y)
      0008DB 90 6F 3B         [ 1] 1678 	clr	(0x3b, y)
      0008DE 90 6F 3C         [ 1] 1679 	clr	(0x3c, y)
      0008E1 90 6F 3D         [ 1] 1680 	clr	(0x3d, y)
      0008E4 90 6F 3E         [ 1] 1681 	clr	(0x3e, y)
      0008E7 90 6F 3F         [ 1] 1682 	clr	(0x3f, y)
      0008EA 90 6F 40         [ 1] 1683 	clr	(0x40, y)
      0008ED 90 6F 41         [ 1] 1684 	clr	(0x41, y)
      0008F0 90 6F 42         [ 1] 1685 	clr	(0x42, y)
      0008F3 90 6F 43         [ 1] 1686 	clr	(0x43, y)
      0008F6 90 6F 44         [ 1] 1687 	clr	(0x44, y)
      0008F9 90 6F 45         [ 1] 1688 	clr	(0x45, y)
      0008FC 90 6F 46         [ 1] 1689 	clr	(0x46, y)
      0008FF 90 6F 47         [ 1] 1690 	clr	(0x47, y)
      000902 90 6F 48         [ 1] 1691 	clr	(0x48, y)
      000905 90 6F 49         [ 1] 1692 	clr	(0x49, y)
      000908 90 6F 4A         [ 1] 1693 	clr	(0x4a, y)
      00090B 90 6F 4B         [ 1] 1694 	clr	(0x4b, y)
      00090E 90 6F 4C         [ 1] 1695 	clr	(0x4c, y)
      000911 90 6F 4D         [ 1] 1696 	clr	(0x4d, y)
      000914 90 6F 4E         [ 1] 1697 	clr	(0x4e, y)
      000917 90 6F 4F         [ 1] 1698 	clr	(0x4f, y)
      00091A 90 6F 50         [ 1] 1699 	clr	(0x50, y)
      00091D 90 6F 51         [ 1] 1700 	clr	(0x51, y)
      000920 90 6F 52         [ 1] 1701 	clr	(0x52, y)
      000923 90 6F 53         [ 1] 1702 	clr	(0x53, y)
      000926 90 6F 54         [ 1] 1703 	clr	(0x54, y)
      000929 90 6F 55         [ 1] 1704 	clr	(0x55, y)
      00092C 90 6F 56         [ 1] 1705 	clr	(0x56, y)
      00092F 90 6F 57         [ 1] 1706 	clr	(0x57, y)
      000932 90 6F 58         [ 1] 1707 	clr	(0x58, y)
      000935 90 6F 59         [ 1] 1708 	clr	(0x59, y)
      000938 90 6F 5A         [ 1] 1709 	clr	(0x5a, y)
      00093B 90 6F 5B         [ 1] 1710 	clr	(0x5b, y)
      00093E 90 6F 5C         [ 1] 1711 	clr	(0x5c, y)
      000941 90 6F 5D         [ 1] 1712 	clr	(0x5d, y)
      000944 90 6F 5E         [ 1] 1713 	clr	(0x5e, y)
      000947 90 6F 5F         [ 1] 1714 	clr	(0x5f, y)
      00094A 90 6F 60         [ 1] 1715 	clr	(0x60, y)
      00094D 90 6F 61         [ 1] 1716 	clr	(0x61, y)
      000950 90 6F 62         [ 1] 1717 	clr	(0x62, y)
      000953 90 6F 63         [ 1] 1718 	clr	(0x63, y)
      000956 90 6F 64         [ 1] 1719 	clr	(0x64, y)
      000959 90 6F 65         [ 1] 1720 	clr	(0x65, y)
      00095C 90 6F 66         [ 1] 1721 	clr	(0x66, y)
      00095F 90 6F 67         [ 1] 1722 	clr	(0x67, y)
      000962 90 6F 68         [ 1] 1723 	clr	(0x68, y)
      000965 90 6F 69         [ 1] 1724 	clr	(0x69, y)
      000968 90 6F 6A         [ 1] 1725 	clr	(0x6a, y)
      00096B 90 6F 6B         [ 1] 1726 	clr	(0x6b, y)
      00096E 90 6F 6C         [ 1] 1727 	clr	(0x6c, y)
      000971 90 6F 6D         [ 1] 1728 	clr	(0x6d, y)
      000974 90 6F 6E         [ 1] 1729 	clr	(0x6e, y)
      000977 90 6F 6F         [ 1] 1730 	clr	(0x6f, y)
      00097A 90 6F 70         [ 1] 1731 	clr	(0x70, y)
      00097D 90 6F 71         [ 1] 1732 	clr	(0x71, y)
      000980 90 6F 72         [ 1] 1733 	clr	(0x72, y)
      000983 90 6F 73         [ 1] 1734 	clr	(0x73, y)
      000986 90 6F 74         [ 1] 1735 	clr	(0x74, y)
      000989 90 6F 75         [ 1] 1736 	clr	(0x75, y)
      00098C 90 6F 76         [ 1] 1737 	clr	(0x76, y)
      00098F 90 6F 77         [ 1] 1738 	clr	(0x77, y)
      000992 90 6F 78         [ 1] 1739 	clr	(0x78, y)
      000995 90 6F 79         [ 1] 1740 	clr	(0x79, y)
      000998 90 6F 7A         [ 1] 1741 	clr	(0x7a, y)
      00099B 90 6F 7B         [ 1] 1742 	clr	(0x7b, y)
      00099E 90 6F 7C         [ 1] 1743 	clr	(0x7c, y)
      0009A1 90 6F 7D         [ 1] 1744 	clr	(0x7d, y)
      0009A4 90 6F 7E         [ 1] 1745 	clr	(0x7e, y)
      0009A7 90 6F 7F         [ 1] 1746 	clr	(0x7f, y)
      0009AA 90 6F 80         [ 1] 1747 	clr	(0x80, y)
      0009AD 90 6F 81         [ 1] 1748 	clr	(0x81, y)
      0009B0 90 6F 82         [ 1] 1749 	clr	(0x82, y)
      0009B3 90 6F 83         [ 1] 1750 	clr	(0x83, y)
      0009B6 90 6F 84         [ 1] 1751 	clr	(0x84, y)
      0009B9 90 6F 85         [ 1] 1752 	clr	(0x85, y)
      0009BC 90 6F 86         [ 1] 1753 	clr	(0x86, y)
      0009BF 90 6F 87         [ 1] 1754 	clr	(0x87, y)
      0009C2 90 6F 88         [ 1] 1755 	clr	(0x88, y)
      0009C5 90 6F 89         [ 1] 1756 	clr	(0x89, y)
      0009C8 90 6F 8A         [ 1] 1757 	clr	(0x8a, y)
      0009CB 90 6F 8B         [ 1] 1758 	clr	(0x8b, y)
      0009CE 90 6F 8C         [ 1] 1759 	clr	(0x8c, y)
      0009D1 90 6F 8D         [ 1] 1760 	clr	(0x8d, y)
      0009D4 90 6F 8E         [ 1] 1761 	clr	(0x8e, y)
      0009D7 90 6F 8F         [ 1] 1762 	clr	(0x8f, y)
      0009DA 90 6F 90         [ 1] 1763 	clr	(0x90, y)
      0009DD 90 6F 91         [ 1] 1764 	clr	(0x91, y)
      0009E0 90 6F 92         [ 1] 1765 	clr	(0x92, y)
      0009E3 90 6F 93         [ 1] 1766 	clr	(0x93, y)
      0009E6 90 6F 94         [ 1] 1767 	clr	(0x94, y)
      0009E9 90 6F 95         [ 1] 1768 	clr	(0x95, y)
      0009EC 90 6F 96         [ 1] 1769 	clr	(0x96, y)
      0009EF 90 6F 97         [ 1] 1770 	clr	(0x97, y)
      0009F2 90 6F 98         [ 1] 1771 	clr	(0x98, y)
      0009F5 90 6F 99         [ 1] 1772 	clr	(0x99, y)
      0009F8 90 6F 9A         [ 1] 1773 	clr	(0x9a, y)
      0009FB 90 6F 9B         [ 1] 1774 	clr	(0x9b, y)
      0009FE 90 6F 9C         [ 1] 1775 	clr	(0x9c, y)
      000A01 90 6F 9D         [ 1] 1776 	clr	(0x9d, y)
      000A04 90 6F 9E         [ 1] 1777 	clr	(0x9e, y)
      000A07 90 6F 9F         [ 1] 1778 	clr	(0x9f, y)
      000A0A 90 6F A0         [ 1] 1779 	clr	(0xa0, y)
      000A0D 90 6F A1         [ 1] 1780 	clr	(0xa1, y)
      000A10 90 6F A2         [ 1] 1781 	clr	(0xa2, y)
      000A13 90 6F A3         [ 1] 1782 	clr	(0xa3, y)
      000A16 90 6F A4         [ 1] 1783 	clr	(0xa4, y)
      000A19 90 6F A5         [ 1] 1784 	clr	(0xa5, y)
      000A1C 90 6F A6         [ 1] 1785 	clr	(0xa6, y)
      000A1F 90 6F A7         [ 1] 1786 	clr	(0xa7, y)
      000A22 90 6F A8         [ 1] 1787 	clr	(0xa8, y)
      000A25 90 6F A9         [ 1] 1788 	clr	(0xa9, y)
      000A28 90 6F AA         [ 1] 1789 	clr	(0xaa, y)
      000A2B 90 6F AB         [ 1] 1790 	clr	(0xab, y)
      000A2E 90 6F AC         [ 1] 1791 	clr	(0xac, y)
      000A31 90 6F AD         [ 1] 1792 	clr	(0xad, y)
      000A34 90 6F AE         [ 1] 1793 	clr	(0xae, y)
      000A37 90 6F AF         [ 1] 1794 	clr	(0xaf, y)
      000A3A 90 6F B0         [ 1] 1795 	clr	(0xb0, y)
      000A3D 90 6F B1         [ 1] 1796 	clr	(0xb1, y)
      000A40 90 6F B2         [ 1] 1797 	clr	(0xb2, y)
      000A43 90 6F B3         [ 1] 1798 	clr	(0xb3, y)
      000A46 90 6F B4         [ 1] 1799 	clr	(0xb4, y)
      000A49 90 6F B5         [ 1] 1800 	clr	(0xb5, y)
      000A4C 90 6F B6         [ 1] 1801 	clr	(0xb6, y)
      000A4F 90 6F B7         [ 1] 1802 	clr	(0xb7, y)
      000A52 90 6F B8         [ 1] 1803 	clr	(0xb8, y)
      000A55 90 6F B9         [ 1] 1804 	clr	(0xb9, y)
      000A58 90 6F BA         [ 1] 1805 	clr	(0xba, y)
      000A5B 90 6F BB         [ 1] 1806 	clr	(0xbb, y)
      000A5E 90 6F BC         [ 1] 1807 	clr	(0xbc, y)
      000A61 90 6F BD         [ 1] 1808 	clr	(0xbd, y)
      000A64 90 6F BE         [ 1] 1809 	clr	(0xbe, y)
      000A67 90 6F BF         [ 1] 1810 	clr	(0xbf, y)
      000A6A 90 6F C0         [ 1] 1811 	clr	(0xc0, y)
      000A6D 90 6F C1         [ 1] 1812 	clr	(0xc1, y)
      000A70 90 6F C2         [ 1] 1813 	clr	(0xc2, y)
      000A73 90 6F C3         [ 1] 1814 	clr	(0xc3, y)
      000A76 90 6F C4         [ 1] 1815 	clr	(0xc4, y)
      000A79 90 6F C5         [ 1] 1816 	clr	(0xc5, y)
      000A7C 90 6F C6         [ 1] 1817 	clr	(0xc6, y)
      000A7F 90 6F C7         [ 1] 1818 	clr	(0xc7, y)
      000A82 90 6F C8         [ 1] 1819 	clr	(0xc8, y)
      000A85 90 6F C9         [ 1] 1820 	clr	(0xc9, y)
      000A88 90 6F CA         [ 1] 1821 	clr	(0xca, y)
      000A8B 90 6F CB         [ 1] 1822 	clr	(0xcb, y)
      000A8E 90 6F CC         [ 1] 1823 	clr	(0xcc, y)
      000A91 90 6F CD         [ 1] 1824 	clr	(0xcd, y)
      000A94 90 6F CE         [ 1] 1825 	clr	(0xce, y)
      000A97 90 6F CF         [ 1] 1826 	clr	(0xcf, y)
      000A9A 90 6F D0         [ 1] 1827 	clr	(0xd0, y)
      000A9D 90 6F D1         [ 1] 1828 	clr	(0xd1, y)
      000AA0 90 6F D2         [ 1] 1829 	clr	(0xd2, y)
      000AA3 90 6F D3         [ 1] 1830 	clr	(0xd3, y)
      000AA6 90 6F D4         [ 1] 1831 	clr	(0xd4, y)
      000AA9 90 6F D5         [ 1] 1832 	clr	(0xd5, y)
      000AAC 90 6F D6         [ 1] 1833 	clr	(0xd6, y)
      000AAF 90 6F D7         [ 1] 1834 	clr	(0xd7, y)
      000AB2 90 6F D8         [ 1] 1835 	clr	(0xd8, y)
      000AB5 90 6F D9         [ 1] 1836 	clr	(0xd9, y)
      000AB8 90 6F DA         [ 1] 1837 	clr	(0xda, y)
      000ABB 90 6F DB         [ 1] 1838 	clr	(0xdb, y)
      000ABE 90 6F DC         [ 1] 1839 	clr	(0xdc, y)
      000AC1 90 6F DD         [ 1] 1840 	clr	(0xdd, y)
      000AC4 90 6F DE         [ 1] 1841 	clr	(0xde, y)
      000AC7 90 6F DF         [ 1] 1842 	clr	(0xdf, y)
      000ACA 90 6F E0         [ 1] 1843 	clr	(0xe0, y)
      000ACD 90 6F E1         [ 1] 1844 	clr	(0xe1, y)
      000AD0 90 6F E2         [ 1] 1845 	clr	(0xe2, y)
      000AD3 90 6F E3         [ 1] 1846 	clr	(0xe3, y)
      000AD6 90 6F E4         [ 1] 1847 	clr	(0xe4, y)
      000AD9 90 6F E5         [ 1] 1848 	clr	(0xe5, y)
      000ADC 90 6F E6         [ 1] 1849 	clr	(0xe6, y)
      000ADF 90 6F E7         [ 1] 1850 	clr	(0xe7, y)
      000AE2 90 6F E8         [ 1] 1851 	clr	(0xe8, y)
      000AE5 90 6F E9         [ 1] 1852 	clr	(0xe9, y)
      000AE8 90 6F EA         [ 1] 1853 	clr	(0xea, y)
      000AEB 90 6F EB         [ 1] 1854 	clr	(0xeb, y)
      000AEE 90 6F EC         [ 1] 1855 	clr	(0xec, y)
      000AF1 90 6F ED         [ 1] 1856 	clr	(0xed, y)
      000AF4 90 6F EE         [ 1] 1857 	clr	(0xee, y)
      000AF7 90 6F EF         [ 1] 1858 	clr	(0xef, y)
      000AFA 90 6F F0         [ 1] 1859 	clr	(0xf0, y)
      000AFD 90 6F F1         [ 1] 1860 	clr	(0xf1, y)
      000B00 90 6F F2         [ 1] 1861 	clr	(0xf2, y)
      000B03 90 6F F3         [ 1] 1862 	clr	(0xf3, y)
      000B06 90 6F F4         [ 1] 1863 	clr	(0xf4, y)
      000B09 90 6F F5         [ 1] 1864 	clr	(0xf5, y)
      000B0C 90 6F F6         [ 1] 1865 	clr	(0xf6, y)
      000B0F 90 6F F7         [ 1] 1866 	clr	(0xf7, y)
      000B12 90 6F F8         [ 1] 1867 	clr	(0xf8, y)
      000B15 90 6F F9         [ 1] 1868 	clr	(0xf9, y)
      000B18 90 6F FA         [ 1] 1869 	clr	(0xfa, y)
      000B1B 90 6F FB         [ 1] 1870 	clr	(0xfb, y)
      000B1E 90 6F FC         [ 1] 1871 	clr	(0xfc, y)
      000B21 90 6F FD         [ 1] 1872 	clr	(0xfd, y)
      000B24 90 6F FE         [ 1] 1873 	clr	(0xfe, y)
      000B27 90 6F FF         [ 1] 1874 	clr	(0xff, y)
      000B2A 90 4F 01 00      [ 1] 1875 	clr	(0x100, y)
      000B2E 90 4F 01 01      [ 1] 1876 	clr	(0x101, y)
      000B32 90 4F 01 02      [ 1] 1877 	clr	(0x102, y)
      000B36 90 4F 01 03      [ 1] 1878 	clr	(0x103, y)
      000B3A 90 4F 01 04      [ 1] 1879 	clr	(0x104, y)
      000B3E 90 4F 01 05      [ 1] 1880 	clr	(0x105, y)
      000B42 90 4F 01 06      [ 1] 1881 	clr	(0x106, y)
      000B46 90 4F 01 07      [ 1] 1882 	clr	(0x107, y)
      000B4A 90 4F 01 08      [ 1] 1883 	clr	(0x108, y)
      000B4E 90 4F 01 09      [ 1] 1884 	clr	(0x109, y)
      000B52 90 4F 01 0A      [ 1] 1885 	clr	(0x10a, y)
      000B56 90 4F 01 0B      [ 1] 1886 	clr	(0x10b, y)
      000B5A 90 4F 01 0C      [ 1] 1887 	clr	(0x10c, y)
      000B5E 90 4F 01 0D      [ 1] 1888 	clr	(0x10d, y)
                                   1889 ;	main.c: 130: display_buffer_fill(0,0,splash,buffer,128,32,WHITE);
      000B62 90 89            [ 2] 1890 	pushw	y
      000B64 4B 01            [ 1] 1891 	push	#0x01
      000B66 4B 20            [ 1] 1892 	push	#0x20
      000B68 4B 80            [ 1] 1893 	push	#0x80
      000B6A 96               [ 1] 1894 	ldw	x, sp
      000B6B 1C 00 06         [ 2] 1895 	addw	x, #6
      000B6E 89               [ 2] 1896 	pushw	x
      000B6F 4Br01            [ 1] 1897 	push	#<(_splash+0)
      000B71 4Bs00            [ 1] 1898 	push	#((_splash+0) >> 8)
      000B73 4B 00            [ 1] 1899 	push	#0x00
      000B75 4F               [ 1] 1900 	clr	a
      000B76 CDr04rA2         [ 4] 1901 	call	_display_buffer_fill
      000B79 90 85            [ 2] 1902 	popw	y
                                   1903 ;	main.c: 132: }
      000B7B 5B FF            [ 2] 1904 	addw	sp, #255
      000B7D 5B FF            [ 2] 1905 	addw	sp, #255
      000B7F 5B 02            [ 2] 1906 	addw	sp, #2
      000B81 81               [ 4] 1907 	ret
                                   1908 ;	main.c: 134: int main(void)
                                   1909 ;	-----------------------------------------
                                   1910 ;	 function main
                                   1911 ;	-----------------------------------------
      000B82                       1912 _main:
                                   1913 ;	main.c: 136: setup();
      000B82 CDr03r2C         [ 4] 1914 	call	_setup
                                   1915 ;	main.c: 137: gg();
      000B85 CDr06r3F         [ 4] 1916 	call	_gg
                                   1917 ;	main.c: 138: while(1);
      000B88                       1918 00102$:
      000B88 20 FE            [ 2] 1919 	jra	00102$
                                   1920 ;	main.c: 139: }
      000B8A 81               [ 4] 1921 	ret
                                   1922 ;	main.c: 155: void display_splash(void)
                                   1923 ;	-----------------------------------------
                                   1924 ;	 function display_splash
                                   1925 ;	-----------------------------------------
      000B8B                       1926 _display_splash:
      000B8B 52 14            [ 2] 1927 	sub	sp, #20
                                   1928 ;	main.c: 157: uint8_t black_buf[9] = {0x40};
      000B8D A6 40            [ 1] 1929 	ld	a, #0x40
      000B8F 6B 01            [ 1] 1930 	ld	(0x01, sp), a
      000B91 0F 02            [ 1] 1931 	clr	(0x02, sp)
      000B93 0F 03            [ 1] 1932 	clr	(0x03, sp)
      000B95 0F 04            [ 1] 1933 	clr	(0x04, sp)
      000B97 0F 05            [ 1] 1934 	clr	(0x05, sp)
      000B99 0F 06            [ 1] 1935 	clr	(0x06, sp)
      000B9B 0F 07            [ 1] 1936 	clr	(0x07, sp)
      000B9D 0F 08            [ 1] 1937 	clr	(0x08, sp)
      000B9F 0F 09            [ 1] 1938 	clr	(0x09, sp)
                                   1939 ;	main.c: 158: uint8_t white_buf[9] = {0x40};
      000BA1 A6 40            [ 1] 1940 	ld	a, #0x40
      000BA3 6B 0A            [ 1] 1941 	ld	(0x0a, sp), a
      000BA5 0F 0B            [ 1] 1942 	clr	(0x0b, sp)
      000BA7 0F 0C            [ 1] 1943 	clr	(0x0c, sp)
      000BA9 0F 0D            [ 1] 1944 	clr	(0x0d, sp)
      000BAB 0F 0E            [ 1] 1945 	clr	(0x0e, sp)
      000BAD 0F 0F            [ 1] 1946 	clr	(0x0f, sp)
      000BAF 0F 10            [ 1] 1947 	clr	(0x10, sp)
      000BB1 0F 11            [ 1] 1948 	clr	(0x11, sp)
      000BB3 0F 12            [ 1] 1949 	clr	(0x12, sp)
                                   1950 ;	main.c: 159: for(int i = 1;i<9;i++)
      000BB5 5F               [ 1] 1951 	clrw	x
      000BB6 5C               [ 1] 1952 	incw	x
      000BB7 1F 13            [ 2] 1953 	ldw	(0x13, sp), x
      000BB9                       1954 00103$:
      000BB9 1E 13            [ 2] 1955 	ldw	x, (0x13, sp)
      000BBB A3 00 09         [ 2] 1956 	cpw	x, #0x0009
      000BBE 2E 11            [ 1] 1957 	jrsge	00101$
                                   1958 ;	main.c: 160: white_buf[i] = 0xFF;
      000BC0 96               [ 1] 1959 	ldw	x, sp
      000BC1 1C 00 0A         [ 2] 1960 	addw	x, #10
      000BC4 72 FB 13         [ 2] 1961 	addw	x, (0x13, sp)
      000BC7 A6 FF            [ 1] 1962 	ld	a, #0xff
      000BC9 F7               [ 1] 1963 	ld	(x), a
                                   1964 ;	main.c: 159: for(int i = 1;i<9;i++)
      000BCA 1E 13            [ 2] 1965 	ldw	x, (0x13, sp)
      000BCC 5C               [ 1] 1966 	incw	x
      000BCD 1F 13            [ 2] 1967 	ldw	(0x13, sp), x
      000BCF 20 E8            [ 2] 1968 	jra	00103$
      000BD1                       1969 00101$:
                                   1970 ;	main.c: 161: display_set_params_to_write();
      000BD1 CDr04r2B         [ 4] 1971 	call	_display_set_params_to_write
                                   1972 ;	main.c: 162: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000BD4 96               [ 1] 1973 	ldw	x, sp
      000BD5 5C               [ 1] 1974 	incw	x
      000BD6 89               [ 2] 1975 	pushw	x
      000BD7 4B 09            [ 1] 1976 	push	#0x09
      000BD9 A6 3C            [ 1] 1977 	ld	a, #0x3c
      000BDB CDr02rC9         [ 4] 1978 	call	_i2c_write
                                   1979 ;	main.c: 163: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000BDE 96               [ 1] 1980 	ldw	x, sp
      000BDF 5C               [ 1] 1981 	incw	x
      000BE0 89               [ 2] 1982 	pushw	x
      000BE1 4B 09            [ 1] 1983 	push	#0x09
      000BE3 A6 3C            [ 1] 1984 	ld	a, #0x3c
      000BE5 CDr02rC9         [ 4] 1985 	call	_i2c_write
                                   1986 ;	main.c: 164: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000BE8 96               [ 1] 1987 	ldw	x, sp
      000BE9 1C 00 0A         [ 2] 1988 	addw	x, #10
      000BEC 89               [ 2] 1989 	pushw	x
      000BED 4B 09            [ 1] 1990 	push	#0x09
      000BEF A6 3C            [ 1] 1991 	ld	a, #0x3c
      000BF1 CDr02rC9         [ 4] 1992 	call	_i2c_write
                                   1993 ;	main.c: 165: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000BF4 96               [ 1] 1994 	ldw	x, sp
      000BF5 5C               [ 1] 1995 	incw	x
      000BF6 89               [ 2] 1996 	pushw	x
      000BF7 4B 09            [ 1] 1997 	push	#0x09
      000BF9 A6 3C            [ 1] 1998 	ld	a, #0x3c
      000BFB CDr02rC9         [ 4] 1999 	call	_i2c_write
                                   2000 ;	main.c: 166: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000BFE 96               [ 1] 2001 	ldw	x, sp
      000BFF 1C 00 0A         [ 2] 2002 	addw	x, #10
      000C02 89               [ 2] 2003 	pushw	x
      000C03 4B 09            [ 1] 2004 	push	#0x09
      000C05 A6 3C            [ 1] 2005 	ld	a, #0x3c
      000C07 CDr02rC9         [ 4] 2006 	call	_i2c_write
                                   2007 ;	main.c: 167: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C0A 96               [ 1] 2008 	ldw	x, sp
      000C0B 1C 00 0A         [ 2] 2009 	addw	x, #10
      000C0E 89               [ 2] 2010 	pushw	x
      000C0F 4B 09            [ 1] 2011 	push	#0x09
      000C11 A6 3C            [ 1] 2012 	ld	a, #0x3c
      000C13 CDr02rC9         [ 4] 2013 	call	_i2c_write
                                   2014 ;	main.c: 168: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C16 96               [ 1] 2015 	ldw	x, sp
      000C17 1C 00 0A         [ 2] 2016 	addw	x, #10
      000C1A 89               [ 2] 2017 	pushw	x
      000C1B 4B 09            [ 1] 2018 	push	#0x09
      000C1D A6 3C            [ 1] 2019 	ld	a, #0x3c
      000C1F CDr02rC9         [ 4] 2020 	call	_i2c_write
                                   2021 ;	main.c: 169: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C22 96               [ 1] 2022 	ldw	x, sp
      000C23 1C 00 0A         [ 2] 2023 	addw	x, #10
      000C26 89               [ 2] 2024 	pushw	x
      000C27 4B 09            [ 1] 2025 	push	#0x09
      000C29 A6 3C            [ 1] 2026 	ld	a, #0x3c
      000C2B CDr02rC9         [ 4] 2027 	call	_i2c_write
                                   2028 ;	main.c: 170: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C2E 96               [ 1] 2029 	ldw	x, sp
      000C2F 1C 00 0A         [ 2] 2030 	addw	x, #10
      000C32 89               [ 2] 2031 	pushw	x
      000C33 4B 09            [ 1] 2032 	push	#0x09
      000C35 A6 3C            [ 1] 2033 	ld	a, #0x3c
      000C37 CDr02rC9         [ 4] 2034 	call	_i2c_write
                                   2035 ;	main.c: 171: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000C3A 96               [ 1] 2036 	ldw	x, sp
      000C3B 5C               [ 1] 2037 	incw	x
      000C3C 89               [ 2] 2038 	pushw	x
      000C3D 4B 09            [ 1] 2039 	push	#0x09
      000C3F A6 3C            [ 1] 2040 	ld	a, #0x3c
      000C41 CDr02rC9         [ 4] 2041 	call	_i2c_write
                                   2042 ;	main.c: 172: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C44 96               [ 1] 2043 	ldw	x, sp
      000C45 1C 00 0A         [ 2] 2044 	addw	x, #10
      000C48 89               [ 2] 2045 	pushw	x
      000C49 4B 09            [ 1] 2046 	push	#0x09
      000C4B A6 3C            [ 1] 2047 	ld	a, #0x3c
      000C4D CDr02rC9         [ 4] 2048 	call	_i2c_write
                                   2049 ;	main.c: 173: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C50 96               [ 1] 2050 	ldw	x, sp
      000C51 1C 00 0A         [ 2] 2051 	addw	x, #10
      000C54 89               [ 2] 2052 	pushw	x
      000C55 4B 09            [ 1] 2053 	push	#0x09
      000C57 A6 3C            [ 1] 2054 	ld	a, #0x3c
      000C59 CDr02rC9         [ 4] 2055 	call	_i2c_write
                                   2056 ;	main.c: 174: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C5C 96               [ 1] 2057 	ldw	x, sp
      000C5D 1C 00 0A         [ 2] 2058 	addw	x, #10
      000C60 89               [ 2] 2059 	pushw	x
      000C61 4B 09            [ 1] 2060 	push	#0x09
      000C63 A6 3C            [ 1] 2061 	ld	a, #0x3c
      000C65 CDr02rC9         [ 4] 2062 	call	_i2c_write
                                   2063 ;	main.c: 175: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000C68 96               [ 1] 2064 	ldw	x, sp
      000C69 5C               [ 1] 2065 	incw	x
      000C6A 89               [ 2] 2066 	pushw	x
      000C6B 4B 09            [ 1] 2067 	push	#0x09
      000C6D A6 3C            [ 1] 2068 	ld	a, #0x3c
      000C6F CDr02rC9         [ 4] 2069 	call	_i2c_write
                                   2070 ;	main.c: 176: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000C72 96               [ 1] 2071 	ldw	x, sp
      000C73 5C               [ 1] 2072 	incw	x
      000C74 89               [ 2] 2073 	pushw	x
      000C75 4B 09            [ 1] 2074 	push	#0x09
      000C77 A6 3C            [ 1] 2075 	ld	a, #0x3c
      000C79 CDr02rC9         [ 4] 2076 	call	_i2c_write
                                   2077 ;	main.c: 177: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000C7C 96               [ 1] 2078 	ldw	x, sp
      000C7D 5C               [ 1] 2079 	incw	x
      000C7E 89               [ 2] 2080 	pushw	x
      000C7F 4B 09            [ 1] 2081 	push	#0x09
      000C81 A6 3C            [ 1] 2082 	ld	a, #0x3c
      000C83 CDr02rC9         [ 4] 2083 	call	_i2c_write
                                   2084 ;	main.c: 179: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000C86 96               [ 1] 2085 	ldw	x, sp
      000C87 5C               [ 1] 2086 	incw	x
      000C88 89               [ 2] 2087 	pushw	x
      000C89 4B 09            [ 1] 2088 	push	#0x09
      000C8B A6 3C            [ 1] 2089 	ld	a, #0x3c
      000C8D CDr02rC9         [ 4] 2090 	call	_i2c_write
                                   2091 ;	main.c: 180: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000C90 96               [ 1] 2092 	ldw	x, sp
      000C91 5C               [ 1] 2093 	incw	x
      000C92 89               [ 2] 2094 	pushw	x
      000C93 4B 09            [ 1] 2095 	push	#0x09
      000C95 A6 3C            [ 1] 2096 	ld	a, #0x3c
      000C97 CDr02rC9         [ 4] 2097 	call	_i2c_write
                                   2098 ;	main.c: 181: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000C9A 96               [ 1] 2099 	ldw	x, sp
      000C9B 1C 00 0A         [ 2] 2100 	addw	x, #10
      000C9E 89               [ 2] 2101 	pushw	x
      000C9F 4B 09            [ 1] 2102 	push	#0x09
      000CA1 A6 3C            [ 1] 2103 	ld	a, #0x3c
      000CA3 CDr02rC9         [ 4] 2104 	call	_i2c_write
                                   2105 ;	main.c: 182: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000CA6 96               [ 1] 2106 	ldw	x, sp
      000CA7 1C 00 0A         [ 2] 2107 	addw	x, #10
      000CAA 89               [ 2] 2108 	pushw	x
      000CAB 4B 09            [ 1] 2109 	push	#0x09
      000CAD A6 3C            [ 1] 2110 	ld	a, #0x3c
      000CAF CDr02rC9         [ 4] 2111 	call	_i2c_write
                                   2112 ;	main.c: 183: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000CB2 96               [ 1] 2113 	ldw	x, sp
      000CB3 1C 00 0A         [ 2] 2114 	addw	x, #10
      000CB6 89               [ 2] 2115 	pushw	x
      000CB7 4B 09            [ 1] 2116 	push	#0x09
      000CB9 A6 3C            [ 1] 2117 	ld	a, #0x3c
      000CBB CDr02rC9         [ 4] 2118 	call	_i2c_write
                                   2119 ;	main.c: 184: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000CBE 96               [ 1] 2120 	ldw	x, sp
      000CBF 5C               [ 1] 2121 	incw	x
      000CC0 89               [ 2] 2122 	pushw	x
      000CC1 4B 09            [ 1] 2123 	push	#0x09
      000CC3 A6 3C            [ 1] 2124 	ld	a, #0x3c
      000CC5 CDr02rC9         [ 4] 2125 	call	_i2c_write
                                   2126 ;	main.c: 185: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000CC8 96               [ 1] 2127 	ldw	x, sp
      000CC9 1C 00 0A         [ 2] 2128 	addw	x, #10
      000CCC 89               [ 2] 2129 	pushw	x
      000CCD 4B 09            [ 1] 2130 	push	#0x09
      000CCF A6 3C            [ 1] 2131 	ld	a, #0x3c
      000CD1 CDr02rC9         [ 4] 2132 	call	_i2c_write
                                   2133 ;	main.c: 186: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000CD4 96               [ 1] 2134 	ldw	x, sp
      000CD5 5C               [ 1] 2135 	incw	x
      000CD6 89               [ 2] 2136 	pushw	x
      000CD7 4B 09            [ 1] 2137 	push	#0x09
      000CD9 A6 3C            [ 1] 2138 	ld	a, #0x3c
      000CDB CDr02rC9         [ 4] 2139 	call	_i2c_write
                                   2140 ;	main.c: 187: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000CDE 96               [ 1] 2141 	ldw	x, sp
      000CDF 1C 00 0A         [ 2] 2142 	addw	x, #10
      000CE2 89               [ 2] 2143 	pushw	x
      000CE3 4B 09            [ 1] 2144 	push	#0x09
      000CE5 A6 3C            [ 1] 2145 	ld	a, #0x3c
      000CE7 CDr02rC9         [ 4] 2146 	call	_i2c_write
                                   2147 ;	main.c: 188: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000CEA 96               [ 1] 2148 	ldw	x, sp
      000CEB 5C               [ 1] 2149 	incw	x
      000CEC 89               [ 2] 2150 	pushw	x
      000CED 4B 09            [ 1] 2151 	push	#0x09
      000CEF A6 3C            [ 1] 2152 	ld	a, #0x3c
      000CF1 CDr02rC9         [ 4] 2153 	call	_i2c_write
                                   2154 ;	main.c: 189: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000CF4 96               [ 1] 2155 	ldw	x, sp
      000CF5 1C 00 0A         [ 2] 2156 	addw	x, #10
      000CF8 89               [ 2] 2157 	pushw	x
      000CF9 4B 09            [ 1] 2158 	push	#0x09
      000CFB A6 3C            [ 1] 2159 	ld	a, #0x3c
      000CFD CDr02rC9         [ 4] 2160 	call	_i2c_write
                                   2161 ;	main.c: 190: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D00 96               [ 1] 2162 	ldw	x, sp
      000D01 5C               [ 1] 2163 	incw	x
      000D02 89               [ 2] 2164 	pushw	x
      000D03 4B 09            [ 1] 2165 	push	#0x09
      000D05 A6 3C            [ 1] 2166 	ld	a, #0x3c
      000D07 CDr02rC9         [ 4] 2167 	call	_i2c_write
                                   2168 ;	main.c: 191: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000D0A 96               [ 1] 2169 	ldw	x, sp
      000D0B 1C 00 0A         [ 2] 2170 	addw	x, #10
      000D0E 89               [ 2] 2171 	pushw	x
      000D0F 4B 09            [ 1] 2172 	push	#0x09
      000D11 A6 3C            [ 1] 2173 	ld	a, #0x3c
      000D13 CDr02rC9         [ 4] 2174 	call	_i2c_write
                                   2175 ;	main.c: 192: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D16 96               [ 1] 2176 	ldw	x, sp
      000D17 5C               [ 1] 2177 	incw	x
      000D18 89               [ 2] 2178 	pushw	x
      000D19 4B 09            [ 1] 2179 	push	#0x09
      000D1B A6 3C            [ 1] 2180 	ld	a, #0x3c
      000D1D CDr02rC9         [ 4] 2181 	call	_i2c_write
                                   2182 ;	main.c: 193: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D20 96               [ 1] 2183 	ldw	x, sp
      000D21 5C               [ 1] 2184 	incw	x
      000D22 89               [ 2] 2185 	pushw	x
      000D23 4B 09            [ 1] 2186 	push	#0x09
      000D25 A6 3C            [ 1] 2187 	ld	a, #0x3c
      000D27 CDr02rC9         [ 4] 2188 	call	_i2c_write
                                   2189 ;	main.c: 194: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D2A 96               [ 1] 2190 	ldw	x, sp
      000D2B 5C               [ 1] 2191 	incw	x
      000D2C 89               [ 2] 2192 	pushw	x
      000D2D 4B 09            [ 1] 2193 	push	#0x09
      000D2F A6 3C            [ 1] 2194 	ld	a, #0x3c
      000D31 CDr02rC9         [ 4] 2195 	call	_i2c_write
                                   2196 ;	main.c: 196: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D34 96               [ 1] 2197 	ldw	x, sp
      000D35 5C               [ 1] 2198 	incw	x
      000D36 89               [ 2] 2199 	pushw	x
      000D37 4B 09            [ 1] 2200 	push	#0x09
      000D39 A6 3C            [ 1] 2201 	ld	a, #0x3c
      000D3B CDr02rC9         [ 4] 2202 	call	_i2c_write
                                   2203 ;	main.c: 197: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D3E 96               [ 1] 2204 	ldw	x, sp
      000D3F 5C               [ 1] 2205 	incw	x
      000D40 89               [ 2] 2206 	pushw	x
      000D41 4B 09            [ 1] 2207 	push	#0x09
      000D43 A6 3C            [ 1] 2208 	ld	a, #0x3c
      000D45 CDr02rC9         [ 4] 2209 	call	_i2c_write
                                   2210 ;	main.c: 198: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000D48 96               [ 1] 2211 	ldw	x, sp
      000D49 1C 00 0A         [ 2] 2212 	addw	x, #10
      000D4C 89               [ 2] 2213 	pushw	x
      000D4D 4B 09            [ 1] 2214 	push	#0x09
      000D4F A6 3C            [ 1] 2215 	ld	a, #0x3c
      000D51 CDr02rC9         [ 4] 2216 	call	_i2c_write
                                   2217 ;	main.c: 199: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D54 96               [ 1] 2218 	ldw	x, sp
      000D55 5C               [ 1] 2219 	incw	x
      000D56 89               [ 2] 2220 	pushw	x
      000D57 4B 09            [ 1] 2221 	push	#0x09
      000D59 A6 3C            [ 1] 2222 	ld	a, #0x3c
      000D5B CDr02rC9         [ 4] 2223 	call	_i2c_write
                                   2224 ;	main.c: 200: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000D5E 96               [ 1] 2225 	ldw	x, sp
      000D5F 1C 00 0A         [ 2] 2226 	addw	x, #10
      000D62 89               [ 2] 2227 	pushw	x
      000D63 4B 09            [ 1] 2228 	push	#0x09
      000D65 A6 3C            [ 1] 2229 	ld	a, #0x3c
      000D67 CDr02rC9         [ 4] 2230 	call	_i2c_write
                                   2231 ;	main.c: 201: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D6A 96               [ 1] 2232 	ldw	x, sp
      000D6B 5C               [ 1] 2233 	incw	x
      000D6C 89               [ 2] 2234 	pushw	x
      000D6D 4B 09            [ 1] 2235 	push	#0x09
      000D6F A6 3C            [ 1] 2236 	ld	a, #0x3c
      000D71 CDr02rC9         [ 4] 2237 	call	_i2c_write
                                   2238 ;	main.c: 202: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000D74 96               [ 1] 2239 	ldw	x, sp
      000D75 1C 00 0A         [ 2] 2240 	addw	x, #10
      000D78 89               [ 2] 2241 	pushw	x
      000D79 4B 09            [ 1] 2242 	push	#0x09
      000D7B A6 3C            [ 1] 2243 	ld	a, #0x3c
      000D7D CDr02rC9         [ 4] 2244 	call	_i2c_write
                                   2245 ;	main.c: 203: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000D80 96               [ 1] 2246 	ldw	x, sp
      000D81 5C               [ 1] 2247 	incw	x
      000D82 89               [ 2] 2248 	pushw	x
      000D83 4B 09            [ 1] 2249 	push	#0x09
      000D85 A6 3C            [ 1] 2250 	ld	a, #0x3c
      000D87 CDr02rC9         [ 4] 2251 	call	_i2c_write
                                   2252 ;	main.c: 204: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000D8A 96               [ 1] 2253 	ldw	x, sp
      000D8B 1C 00 0A         [ 2] 2254 	addw	x, #10
      000D8E 89               [ 2] 2255 	pushw	x
      000D8F 4B 09            [ 1] 2256 	push	#0x09
      000D91 A6 3C            [ 1] 2257 	ld	a, #0x3c
      000D93 CDr02rC9         [ 4] 2258 	call	_i2c_write
                                   2259 ;	main.c: 205: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000D96 96               [ 1] 2260 	ldw	x, sp
      000D97 1C 00 0A         [ 2] 2261 	addw	x, #10
      000D9A 89               [ 2] 2262 	pushw	x
      000D9B 4B 09            [ 1] 2263 	push	#0x09
      000D9D A6 3C            [ 1] 2264 	ld	a, #0x3c
      000D9F CDr02rC9         [ 4] 2265 	call	_i2c_write
                                   2266 ;	main.c: 206: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000DA2 96               [ 1] 2267 	ldw	x, sp
      000DA3 1C 00 0A         [ 2] 2268 	addw	x, #10
      000DA6 89               [ 2] 2269 	pushw	x
      000DA7 4B 09            [ 1] 2270 	push	#0x09
      000DA9 A6 3C            [ 1] 2271 	ld	a, #0x3c
      000DAB CDr02rC9         [ 4] 2272 	call	_i2c_write
                                   2273 ;	main.c: 207: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000DAE 96               [ 1] 2274 	ldw	x, sp
      000DAF 1C 00 0A         [ 2] 2275 	addw	x, #10
      000DB2 89               [ 2] 2276 	pushw	x
      000DB3 4B 09            [ 1] 2277 	push	#0x09
      000DB5 A6 3C            [ 1] 2278 	ld	a, #0x3c
      000DB7 CDr02rC9         [ 4] 2279 	call	_i2c_write
                                   2280 ;	main.c: 208: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000DBA 96               [ 1] 2281 	ldw	x, sp
      000DBB 5C               [ 1] 2282 	incw	x
      000DBC 89               [ 2] 2283 	pushw	x
      000DBD 4B 09            [ 1] 2284 	push	#0x09
      000DBF A6 3C            [ 1] 2285 	ld	a, #0x3c
      000DC1 CDr02rC9         [ 4] 2286 	call	_i2c_write
                                   2287 ;	main.c: 209: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000DC4 96               [ 1] 2288 	ldw	x, sp
      000DC5 5C               [ 1] 2289 	incw	x
      000DC6 89               [ 2] 2290 	pushw	x
      000DC7 4B 09            [ 1] 2291 	push	#0x09
      000DC9 A6 3C            [ 1] 2292 	ld	a, #0x3c
      000DCB CDr02rC9         [ 4] 2293 	call	_i2c_write
                                   2294 ;	main.c: 210: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000DCE 96               [ 1] 2295 	ldw	x, sp
      000DCF 5C               [ 1] 2296 	incw	x
      000DD0 89               [ 2] 2297 	pushw	x
      000DD1 4B 09            [ 1] 2298 	push	#0x09
      000DD3 A6 3C            [ 1] 2299 	ld	a, #0x3c
      000DD5 CDr02rC9         [ 4] 2300 	call	_i2c_write
                                   2301 ;	main.c: 211: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000DD8 96               [ 1] 2302 	ldw	x, sp
      000DD9 5C               [ 1] 2303 	incw	x
      000DDA 89               [ 2] 2304 	pushw	x
      000DDB 4B 09            [ 1] 2305 	push	#0x09
      000DDD A6 3C            [ 1] 2306 	ld	a, #0x3c
      000DDF CDr02rC9         [ 4] 2307 	call	_i2c_write
                                   2308 ;	main.c: 213: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000DE2 96               [ 1] 2309 	ldw	x, sp
      000DE3 5C               [ 1] 2310 	incw	x
      000DE4 89               [ 2] 2311 	pushw	x
      000DE5 4B 09            [ 1] 2312 	push	#0x09
      000DE7 A6 3C            [ 1] 2313 	ld	a, #0x3c
      000DE9 CDr02rC9         [ 4] 2314 	call	_i2c_write
                                   2315 ;	main.c: 214: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000DEC 96               [ 1] 2316 	ldw	x, sp
      000DED 5C               [ 1] 2317 	incw	x
      000DEE 89               [ 2] 2318 	pushw	x
      000DEF 4B 09            [ 1] 2319 	push	#0x09
      000DF1 A6 3C            [ 1] 2320 	ld	a, #0x3c
      000DF3 CDr02rC9         [ 4] 2321 	call	_i2c_write
                                   2322 ;	main.c: 215: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000DF6 96               [ 1] 2323 	ldw	x, sp
      000DF7 1C 00 0A         [ 2] 2324 	addw	x, #10
      000DFA 89               [ 2] 2325 	pushw	x
      000DFB 4B 09            [ 1] 2326 	push	#0x09
      000DFD A6 3C            [ 1] 2327 	ld	a, #0x3c
      000DFF CDr02rC9         [ 4] 2328 	call	_i2c_write
                                   2329 ;	main.c: 216: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000E02 96               [ 1] 2330 	ldw	x, sp
      000E03 5C               [ 1] 2331 	incw	x
      000E04 89               [ 2] 2332 	pushw	x
      000E05 4B 09            [ 1] 2333 	push	#0x09
      000E07 A6 3C            [ 1] 2334 	ld	a, #0x3c
      000E09 CDr02rC9         [ 4] 2335 	call	_i2c_write
                                   2336 ;	main.c: 217: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000E0C 96               [ 1] 2337 	ldw	x, sp
      000E0D 1C 00 0A         [ 2] 2338 	addw	x, #10
      000E10 89               [ 2] 2339 	pushw	x
      000E11 4B 09            [ 1] 2340 	push	#0x09
      000E13 A6 3C            [ 1] 2341 	ld	a, #0x3c
      000E15 CDr02rC9         [ 4] 2342 	call	_i2c_write
                                   2343 ;	main.c: 218: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000E18 96               [ 1] 2344 	ldw	x, sp
      000E19 5C               [ 1] 2345 	incw	x
      000E1A 89               [ 2] 2346 	pushw	x
      000E1B 4B 09            [ 1] 2347 	push	#0x09
      000E1D A6 3C            [ 1] 2348 	ld	a, #0x3c
      000E1F CDr02rC9         [ 4] 2349 	call	_i2c_write
                                   2350 ;	main.c: 219: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000E22 96               [ 1] 2351 	ldw	x, sp
      000E23 1C 00 0A         [ 2] 2352 	addw	x, #10
      000E26 89               [ 2] 2353 	pushw	x
      000E27 4B 09            [ 1] 2354 	push	#0x09
      000E29 A6 3C            [ 1] 2355 	ld	a, #0x3c
      000E2B CDr02rC9         [ 4] 2356 	call	_i2c_write
                                   2357 ;	main.c: 220: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000E2E 96               [ 1] 2358 	ldw	x, sp
      000E2F 5C               [ 1] 2359 	incw	x
      000E30 89               [ 2] 2360 	pushw	x
      000E31 4B 09            [ 1] 2361 	push	#0x09
      000E33 A6 3C            [ 1] 2362 	ld	a, #0x3c
      000E35 CDr02rC9         [ 4] 2363 	call	_i2c_write
                                   2364 ;	main.c: 221: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000E38 96               [ 1] 2365 	ldw	x, sp
      000E39 1C 00 0A         [ 2] 2366 	addw	x, #10
      000E3C 89               [ 2] 2367 	pushw	x
      000E3D 4B 09            [ 1] 2368 	push	#0x09
      000E3F A6 3C            [ 1] 2369 	ld	a, #0x3c
      000E41 CDr02rC9         [ 4] 2370 	call	_i2c_write
                                   2371 ;	main.c: 222: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000E44 96               [ 1] 2372 	ldw	x, sp
      000E45 5C               [ 1] 2373 	incw	x
      000E46 89               [ 2] 2374 	pushw	x
      000E47 4B 09            [ 1] 2375 	push	#0x09
      000E49 A6 3C            [ 1] 2376 	ld	a, #0x3c
      000E4B CDr02rC9         [ 4] 2377 	call	_i2c_write
                                   2378 ;	main.c: 223: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000E4E 96               [ 1] 2379 	ldw	x, sp
      000E4F 1C 00 0A         [ 2] 2380 	addw	x, #10
      000E52 89               [ 2] 2381 	pushw	x
      000E53 4B 09            [ 1] 2382 	push	#0x09
      000E55 A6 3C            [ 1] 2383 	ld	a, #0x3c
      000E57 CDr02rC9         [ 4] 2384 	call	_i2c_write
                                   2385 ;	main.c: 224: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000E5A 96               [ 1] 2386 	ldw	x, sp
      000E5B 5C               [ 1] 2387 	incw	x
      000E5C 89               [ 2] 2388 	pushw	x
      000E5D 4B 09            [ 1] 2389 	push	#0x09
      000E5F A6 3C            [ 1] 2390 	ld	a, #0x3c
      000E61 CDr02rC9         [ 4] 2391 	call	_i2c_write
                                   2392 ;	main.c: 225: i2c_write(I2C_DISPLAY_ADDR,9,white_buf);
      000E64 96               [ 1] 2393 	ldw	x, sp
      000E65 1C 00 0A         [ 2] 2394 	addw	x, #10
      000E68 89               [ 2] 2395 	pushw	x
      000E69 4B 09            [ 1] 2396 	push	#0x09
      000E6B A6 3C            [ 1] 2397 	ld	a, #0x3c
      000E6D CDr02rC9         [ 4] 2398 	call	_i2c_write
                                   2399 ;	main.c: 226: i2c_write(I2C_DISPLAY_ADDR,9,black_buf);
      000E70 96               [ 1] 2400 	ldw	x, sp
      000E71 5C               [ 1] 2401 	incw	x
      000E72 89               [ 2] 2402 	pushw	x
      000E73 4B 09            [ 1] 2403 	push	#0x09
      000E75 A6 3C            [ 1] 2404 	ld	a, #0x3c
      000E77 CDr02rC9         [ 4] 2405 	call	_i2c_write
                                   2406 ;	main.c: 229: }
      000E7A 5B 14            [ 2] 2407 	addw	sp, #20
      000E7C 81               [ 4] 2408 	ret
                                   2409 	.area CODE
                                   2410 	.area CONST
                                   2411 	.area CONST
      000000                       2412 ___str_0:
      000000 72 78 5F 62 75 66 5F  2413 	.ascii "rx_buf_pointer"
             70 6F 69 6E 74 65 72
      00000E 0A                    2414 	.db 0x0a
      00000F 00                    2415 	.db 0x00
                                   2416 	.area CODE
                                   2417 	.area CONST
      000010                       2418 ___str_1:
      000010 62 75 66 5F 70 6F 73  2419 	.ascii "buf_pos"
      000017 0A                    2420 	.db 0x0a
      000018 00                    2421 	.db 0x00
                                   2422 	.area CODE
                                   2423 	.area CONST
      000019                       2424 ___str_2:
      000019 62 75 66 5F 73 69 7A  2425 	.ascii "buf_size"
             65
      000021 0A                    2426 	.db 0x0a
      000022 00                    2427 	.db 0x00
                                   2428 	.area CODE
                                   2429 	.area CONST
      000023                       2430 ___str_3:
      000023 52 49 45 4E           2431 	.ascii "RIEN"
      000027 0A                    2432 	.db 0x0a
      000028 00                    2433 	.db 0x00
                                   2434 	.area CODE
                                   2435 	.area INITIALIZER
      000000                       2436 __xinit__I2C_IRQ:
      000000 00                    2437 	.db #0x00	; 0
      000001                       2438 __xinit__splash:
      000001 FF                    2439 	.db #0xff	; 255
      000002 00                    2440 	.db #0x00	; 0
      000003 FF                    2441 	.db #0xff	; 255
      000004 00                    2442 	.db #0x00	; 0
      000005 00                    2443 	.db #0x00	; 0
      000006 00                    2444 	.db #0x00	; 0
      000007 00                    2445 	.db #0x00	; 0
      000008 00                    2446 	.db #0x00	; 0
      000009 00                    2447 	.db #0x00	; 0
      00000A 00                    2448 	.db #0x00	; 0
      00000B 00                    2449 	.db #0x00	; 0
      00000C 00                    2450 	.db #0x00	; 0
      00000D 00                    2451 	.db #0x00	; 0
      00000E 00                    2452 	.db #0x00	; 0
      00000F 00                    2453 	.db #0x00	; 0
      000010 00                    2454 	.db #0x00	; 0
      000011 00                    2455 	.db #0x00	; 0
      000012 00                    2456 	.db #0x00	; 0
      000013 00                    2457 	.db #0x00	; 0
      000014 00                    2458 	.db #0x00	; 0
      000015 00                    2459 	.db #0x00	; 0
      000016 00                    2460 	.db #0x00	; 0
      000017 00                    2461 	.db #0x00	; 0
      000018 00                    2462 	.db #0x00	; 0
      000019 00                    2463 	.db #0x00	; 0
      00001A 00                    2464 	.db #0x00	; 0
      00001B 00                    2465 	.db #0x00	; 0
      00001C 00                    2466 	.db #0x00	; 0
      00001D 00                    2467 	.db #0x00	; 0
      00001E 00                    2468 	.db #0x00	; 0
      00001F 00                    2469 	.db #0x00	; 0
      000020 00                    2470 	.db #0x00	; 0
      000021 00                    2471 	.db #0x00	; 0
      000022 00                    2472 	.db #0x00	; 0
      000023 00                    2473 	.db #0x00	; 0
      000024 00                    2474 	.db #0x00	; 0
      000025 00                    2475 	.db #0x00	; 0
      000026 00                    2476 	.db #0x00	; 0
      000027 00                    2477 	.db #0x00	; 0
      000028 00                    2478 	.db #0x00	; 0
      000029 00                    2479 	.db #0x00	; 0
      00002A 00                    2480 	.db #0x00	; 0
      00002B 00                    2481 	.db #0x00	; 0
      00002C 00                    2482 	.db #0x00	; 0
      00002D 00                    2483 	.db #0x00	; 0
      00002E 00                    2484 	.db #0x00	; 0
      00002F 00                    2485 	.db #0x00	; 0
      000030 00                    2486 	.db #0x00	; 0
      000031 00                    2487 	.db #0x00	; 0
      000032 00                    2488 	.db #0x00	; 0
      000033 00                    2489 	.db #0x00	; 0
      000034 00                    2490 	.db #0x00	; 0
      000035 00                    2491 	.db #0x00	; 0
      000036 00                    2492 	.db #0x00	; 0
      000037 00                    2493 	.db #0x00	; 0
      000038 00                    2494 	.db #0x00	; 0
      000039 00                    2495 	.db #0x00	; 0
      00003A 00                    2496 	.db #0x00	; 0
      00003B 00                    2497 	.db #0x00	; 0
      00003C 00                    2498 	.db #0x00	; 0
      00003D 00                    2499 	.db #0x00	; 0
      00003E 00                    2500 	.db #0x00	; 0
      00003F 00                    2501 	.db #0x00	; 0
      000040 00                    2502 	.db #0x00	; 0
      000041 00                    2503 	.db #0x00	; 0
      000042 00                    2504 	.db #0x00	; 0
      000043 00                    2505 	.db #0x00	; 0
      000044 00                    2506 	.db #0x00	; 0
      000045 00                    2507 	.db #0x00	; 0
      000046 00                    2508 	.db #0x00	; 0
      000047 00                    2509 	.db #0x00	; 0
      000048 00                    2510 	.db #0x00	; 0
      000049 00                    2511 	.db #0x00	; 0
      00004A 00                    2512 	.db #0x00	; 0
      00004B 00                    2513 	.db #0x00	; 0
      00004C 00                    2514 	.db #0x00	; 0
      00004D 00                    2515 	.db #0x00	; 0
      00004E 00                    2516 	.db #0x00	; 0
      00004F 00                    2517 	.db #0x00	; 0
      000050 00                    2518 	.db #0x00	; 0
      000051 00                    2519 	.db #0x00	; 0
      000052 00                    2520 	.db #0x00	; 0
      000053 00                    2521 	.db #0x00	; 0
      000054 00                    2522 	.db #0x00	; 0
      000055 00                    2523 	.db #0x00	; 0
      000056 00                    2524 	.db #0x00	; 0
      000057 00                    2525 	.db #0x00	; 0
      000058 00                    2526 	.db #0x00	; 0
      000059 00                    2527 	.db #0x00	; 0
      00005A 00                    2528 	.db #0x00	; 0
      00005B 00                    2529 	.db #0x00	; 0
      00005C 00                    2530 	.db #0x00	; 0
      00005D 00                    2531 	.db #0x00	; 0
      00005E 00                    2532 	.db #0x00	; 0
      00005F 00                    2533 	.db #0x00	; 0
      000060 00                    2534 	.db #0x00	; 0
      000061 00                    2535 	.db #0x00	; 0
      000062 00                    2536 	.db #0x00	; 0
      000063 00                    2537 	.db #0x00	; 0
      000064 00                    2538 	.db #0x00	; 0
      000065 00                    2539 	.db #0x00	; 0
      000066 00                    2540 	.db #0x00	; 0
      000067 00                    2541 	.db #0x00	; 0
      000068 00                    2542 	.db #0x00	; 0
      000069 00                    2543 	.db #0x00	; 0
      00006A 00                    2544 	.db #0x00	; 0
      00006B 00                    2545 	.db #0x00	; 0
      00006C 00                    2546 	.db #0x00	; 0
      00006D 00                    2547 	.db #0x00	; 0
      00006E 00                    2548 	.db #0x00	; 0
      00006F 00                    2549 	.db #0x00	; 0
      000070 00                    2550 	.db #0x00	; 0
      000071 00                    2551 	.db #0x00	; 0
      000072 00                    2552 	.db #0x00	; 0
      000073 00                    2553 	.db #0x00	; 0
      000074 00                    2554 	.db #0x00	; 0
      000075 00                    2555 	.db #0x00	; 0
      000076 00                    2556 	.db #0x00	; 0
      000077 00                    2557 	.db #0x00	; 0
      000078 00                    2558 	.db #0x00	; 0
      000079 00                    2559 	.db #0x00	; 0
      00007A 00                    2560 	.db #0x00	; 0
      00007B 00                    2561 	.db #0x00	; 0
      00007C 00                    2562 	.db #0x00	; 0
      00007D 00                    2563 	.db #0x00	; 0
      00007E 00                    2564 	.db #0x00	; 0
      00007F 00                    2565 	.db #0x00	; 0
      000080 00                    2566 	.db #0x00	; 0
      000081 00                    2567 	.db #0x00	; 0
      000082 00                    2568 	.db #0x00	; 0
      000083 00                    2569 	.db #0x00	; 0
      000084 00                    2570 	.db #0x00	; 0
      000085 00                    2571 	.db #0x00	; 0
      000086 00                    2572 	.db #0x00	; 0
      000087 00                    2573 	.db #0x00	; 0
      000088 00                    2574 	.db #0x00	; 0
      000089 00                    2575 	.db #0x00	; 0
      00008A 00                    2576 	.db #0x00	; 0
      00008B 00                    2577 	.db #0x00	; 0
      00008C 00                    2578 	.db #0x00	; 0
      00008D 00                    2579 	.db #0x00	; 0
      00008E 00                    2580 	.db #0x00	; 0
      00008F 00                    2581 	.db #0x00	; 0
      000090 00                    2582 	.db #0x00	; 0
      000091 00                    2583 	.db #0x00	; 0
      000092 00                    2584 	.db #0x00	; 0
      000093 00                    2585 	.db #0x00	; 0
      000094 00                    2586 	.db #0x00	; 0
      000095 00                    2587 	.db #0x00	; 0
      000096 00                    2588 	.db #0x00	; 0
      000097 00                    2589 	.db #0x00	; 0
      000098 00                    2590 	.db #0x00	; 0
      000099 00                    2591 	.db #0x00	; 0
      00009A 00                    2592 	.db #0x00	; 0
      00009B 00                    2593 	.db #0x00	; 0
      00009C 00                    2594 	.db #0x00	; 0
      00009D 00                    2595 	.db #0x00	; 0
      00009E 00                    2596 	.db #0x00	; 0
      00009F 00                    2597 	.db #0x00	; 0
      0000A0 00                    2598 	.db #0x00	; 0
      0000A1 00                    2599 	.db #0x00	; 0
      0000A2 00                    2600 	.db #0x00	; 0
      0000A3 00                    2601 	.db #0x00	; 0
      0000A4 00                    2602 	.db #0x00	; 0
      0000A5 00                    2603 	.db #0x00	; 0
      0000A6 00                    2604 	.db #0x00	; 0
      0000A7 00                    2605 	.db #0x00	; 0
      0000A8 00                    2606 	.db #0x00	; 0
      0000A9 00                    2607 	.db #0x00	; 0
      0000AA 00                    2608 	.db #0x00	; 0
      0000AB 00                    2609 	.db #0x00	; 0
      0000AC 00                    2610 	.db #0x00	; 0
      0000AD 00                    2611 	.db #0x00	; 0
      0000AE 00                    2612 	.db #0x00	; 0
      0000AF 00                    2613 	.db #0x00	; 0
      0000B0 00                    2614 	.db #0x00	; 0
      0000B1 00                    2615 	.db #0x00	; 0
      0000B2 00                    2616 	.db #0x00	; 0
      0000B3 00                    2617 	.db #0x00	; 0
      0000B4 00                    2618 	.db #0x00	; 0
      0000B5 00                    2619 	.db #0x00	; 0
      0000B6 00                    2620 	.db #0x00	; 0
      0000B7 00                    2621 	.db #0x00	; 0
      0000B8 00                    2622 	.db #0x00	; 0
      0000B9 00                    2623 	.db #0x00	; 0
      0000BA 00                    2624 	.db #0x00	; 0
      0000BB 00                    2625 	.db #0x00	; 0
      0000BC 00                    2626 	.db #0x00	; 0
      0000BD 00                    2627 	.db #0x00	; 0
      0000BE 00                    2628 	.db #0x00	; 0
      0000BF 00                    2629 	.db #0x00	; 0
      0000C0 00                    2630 	.db #0x00	; 0
      0000C1 00                    2631 	.db #0x00	; 0
      0000C2 00                    2632 	.db #0x00	; 0
      0000C3 00                    2633 	.db #0x00	; 0
      0000C4 00                    2634 	.db #0x00	; 0
      0000C5 00                    2635 	.db #0x00	; 0
      0000C6 00                    2636 	.db #0x00	; 0
      0000C7 00                    2637 	.db #0x00	; 0
      0000C8 00                    2638 	.db #0x00	; 0
      0000C9 00                    2639 	.db #0x00	; 0
      0000CA 00                    2640 	.db #0x00	; 0
      0000CB 00                    2641 	.db #0x00	; 0
      0000CC 00                    2642 	.db #0x00	; 0
      0000CD 00                    2643 	.db #0x00	; 0
      0000CE 00                    2644 	.db #0x00	; 0
      0000CF 00                    2645 	.db #0x00	; 0
      0000D0 00                    2646 	.db #0x00	; 0
      0000D1 00                    2647 	.db #0x00	; 0
      0000D2 00                    2648 	.db #0x00	; 0
      0000D3 00                    2649 	.db #0x00	; 0
      0000D4 00                    2650 	.db #0x00	; 0
      0000D5 00                    2651 	.db #0x00	; 0
      0000D6 00                    2652 	.db #0x00	; 0
      0000D7 00                    2653 	.db #0x00	; 0
      0000D8 00                    2654 	.db #0x00	; 0
      0000D9 00                    2655 	.db #0x00	; 0
      0000DA 00                    2656 	.db #0x00	; 0
      0000DB 00                    2657 	.db #0x00	; 0
      0000DC 00                    2658 	.db #0x00	; 0
      0000DD 00                    2659 	.db #0x00	; 0
      0000DE 00                    2660 	.db #0x00	; 0
      0000DF 00                    2661 	.db #0x00	; 0
      0000E0 00                    2662 	.db #0x00	; 0
      0000E1 00                    2663 	.db #0x00	; 0
      0000E2 00                    2664 	.db #0x00	; 0
      0000E3 00                    2665 	.db #0x00	; 0
      0000E4 00                    2666 	.db #0x00	; 0
      0000E5 00                    2667 	.db #0x00	; 0
      0000E6 00                    2668 	.db #0x00	; 0
      0000E7 00                    2669 	.db #0x00	; 0
      0000E8 00                    2670 	.db #0x00	; 0
      0000E9 00                    2671 	.db #0x00	; 0
      0000EA 00                    2672 	.db #0x00	; 0
      0000EB 00                    2673 	.db #0x00	; 0
      0000EC 00                    2674 	.db #0x00	; 0
      0000ED 00                    2675 	.db #0x00	; 0
      0000EE 00                    2676 	.db #0x00	; 0
      0000EF 00                    2677 	.db #0x00	; 0
      0000F0 00                    2678 	.db #0x00	; 0
      0000F1 00                    2679 	.db #0x00	; 0
      0000F2 00                    2680 	.db #0x00	; 0
      0000F3 00                    2681 	.db #0x00	; 0
      0000F4 00                    2682 	.db #0x00	; 0
      0000F5 00                    2683 	.db #0x00	; 0
      0000F6 00                    2684 	.db #0x00	; 0
      0000F7 00                    2685 	.db #0x00	; 0
      0000F8 00                    2686 	.db #0x00	; 0
      0000F9 00                    2687 	.db #0x00	; 0
      0000FA 00                    2688 	.db #0x00	; 0
      0000FB 00                    2689 	.db #0x00	; 0
      0000FC 00                    2690 	.db #0x00	; 0
      0000FD 00                    2691 	.db #0x00	; 0
      0000FE 00                    2692 	.db #0x00	; 0
      0000FF 00                    2693 	.db #0x00	; 0
      000100 00                    2694 	.db #0x00	; 0
      000101 00                    2695 	.db #0x00	; 0
      000102 00                    2696 	.db #0x00	; 0
      000103 00                    2697 	.db #0x00	; 0
      000104 00                    2698 	.db #0x00	; 0
      000105 00                    2699 	.db #0x00	; 0
      000106 00                    2700 	.db #0x00	; 0
      000107 00                    2701 	.db #0x00	; 0
      000108 00                    2702 	.db #0x00	; 0
      000109 00                    2703 	.db #0x00	; 0
      00010A 00                    2704 	.db #0x00	; 0
      00010B 00                    2705 	.db #0x00	; 0
      00010C 00                    2706 	.db #0x00	; 0
      00010D 00                    2707 	.db #0x00	; 0
      00010E 00                    2708 	.db #0x00	; 0
      00010F 00                    2709 	.db #0x00	; 0
      000110 00                    2710 	.db #0x00	; 0
      000111 00                    2711 	.db #0x00	; 0
      000112 00                    2712 	.db #0x00	; 0
      000113 00                    2713 	.db #0x00	; 0
      000114 00                    2714 	.db #0x00	; 0
      000115 00                    2715 	.db #0x00	; 0
      000116 00                    2716 	.db #0x00	; 0
      000117 00                    2717 	.db #0x00	; 0
      000118 00                    2718 	.db #0x00	; 0
      000119 00                    2719 	.db #0x00	; 0
      00011A 00                    2720 	.db #0x00	; 0
      00011B 00                    2721 	.db #0x00	; 0
      00011C 00                    2722 	.db #0x00	; 0
      00011D 00                    2723 	.db #0x00	; 0
      00011E 00                    2724 	.db #0x00	; 0
      00011F 00                    2725 	.db #0x00	; 0
      000120 00                    2726 	.db #0x00	; 0
      000121 00                    2727 	.db #0x00	; 0
      000122 00                    2728 	.db #0x00	; 0
      000123 00                    2729 	.db #0x00	; 0
      000124 00                    2730 	.db #0x00	; 0
      000125 00                    2731 	.db #0x00	; 0
      000126 00                    2732 	.db #0x00	; 0
      000127 00                    2733 	.db #0x00	; 0
      000128 00                    2734 	.db #0x00	; 0
      000129 00                    2735 	.db #0x00	; 0
      00012A 00                    2736 	.db #0x00	; 0
      00012B 00                    2737 	.db #0x00	; 0
      00012C 00                    2738 	.db #0x00	; 0
      00012D 00                    2739 	.db #0x00	; 0
      00012E 00                    2740 	.db #0x00	; 0
      00012F 00                    2741 	.db #0x00	; 0
      000130 00                    2742 	.db #0x00	; 0
      000131 00                    2743 	.db #0x00	; 0
      000132 00                    2744 	.db #0x00	; 0
      000133 00                    2745 	.db #0x00	; 0
      000134 00                    2746 	.db #0x00	; 0
      000135 00                    2747 	.db #0x00	; 0
      000136 00                    2748 	.db #0x00	; 0
      000137 00                    2749 	.db #0x00	; 0
      000138 00                    2750 	.db #0x00	; 0
      000139 00                    2751 	.db #0x00	; 0
      00013A 00                    2752 	.db #0x00	; 0
      00013B 00                    2753 	.db #0x00	; 0
      00013C 00                    2754 	.db #0x00	; 0
      00013D 00                    2755 	.db #0x00	; 0
      00013E 00                    2756 	.db #0x00	; 0
      00013F 00                    2757 	.db #0x00	; 0
      000140 00                    2758 	.db #0x00	; 0
      000141 00                    2759 	.db #0x00	; 0
      000142 00                    2760 	.db #0x00	; 0
      000143 00                    2761 	.db #0x00	; 0
      000144 00                    2762 	.db #0x00	; 0
      000145 00                    2763 	.db #0x00	; 0
      000146 00                    2764 	.db #0x00	; 0
      000147 00                    2765 	.db #0x00	; 0
      000148 00                    2766 	.db #0x00	; 0
      000149 00                    2767 	.db #0x00	; 0
      00014A 00                    2768 	.db #0x00	; 0
      00014B 00                    2769 	.db #0x00	; 0
      00014C 00                    2770 	.db #0x00	; 0
      00014D 00                    2771 	.db #0x00	; 0
      00014E 00                    2772 	.db #0x00	; 0
      00014F 00                    2773 	.db #0x00	; 0
      000150 00                    2774 	.db #0x00	; 0
      000151 00                    2775 	.db #0x00	; 0
      000152 00                    2776 	.db #0x00	; 0
      000153 00                    2777 	.db #0x00	; 0
      000154 00                    2778 	.db #0x00	; 0
      000155 00                    2779 	.db #0x00	; 0
      000156 00                    2780 	.db #0x00	; 0
      000157 00                    2781 	.db #0x00	; 0
      000158 00                    2782 	.db #0x00	; 0
      000159 00                    2783 	.db #0x00	; 0
      00015A 00                    2784 	.db #0x00	; 0
      00015B 00                    2785 	.db #0x00	; 0
      00015C 00                    2786 	.db #0x00	; 0
      00015D 00                    2787 	.db #0x00	; 0
      00015E 00                    2788 	.db #0x00	; 0
      00015F 00                    2789 	.db #0x00	; 0
      000160 00                    2790 	.db #0x00	; 0
      000161 00                    2791 	.db #0x00	; 0
      000162 00                    2792 	.db #0x00	; 0
      000163 00                    2793 	.db #0x00	; 0
      000164 00                    2794 	.db #0x00	; 0
      000165 00                    2795 	.db #0x00	; 0
      000166 00                    2796 	.db #0x00	; 0
      000167 00                    2797 	.db #0x00	; 0
      000168 00                    2798 	.db #0x00	; 0
      000169 00                    2799 	.db #0x00	; 0
      00016A 00                    2800 	.db #0x00	; 0
      00016B 00                    2801 	.db #0x00	; 0
      00016C 00                    2802 	.db #0x00	; 0
      00016D 00                    2803 	.db #0x00	; 0
      00016E 00                    2804 	.db #0x00	; 0
      00016F 00                    2805 	.db #0x00	; 0
      000170 00                    2806 	.db #0x00	; 0
      000171 00                    2807 	.db #0x00	; 0
      000172 00                    2808 	.db #0x00	; 0
      000173 00                    2809 	.db #0x00	; 0
      000174 00                    2810 	.db #0x00	; 0
      000175 00                    2811 	.db #0x00	; 0
      000176 00                    2812 	.db #0x00	; 0
      000177 00                    2813 	.db #0x00	; 0
      000178 00                    2814 	.db #0x00	; 0
      000179 00                    2815 	.db #0x00	; 0
      00017A 00                    2816 	.db #0x00	; 0
      00017B 00                    2817 	.db #0x00	; 0
      00017C 00                    2818 	.db #0x00	; 0
      00017D 00                    2819 	.db #0x00	; 0
      00017E 00                    2820 	.db #0x00	; 0
      00017F 00                    2821 	.db #0x00	; 0
      000180 00                    2822 	.db #0x00	; 0
      000181 00                    2823 	.db #0x00	; 0
      000182 00                    2824 	.db #0x00	; 0
      000183 00                    2825 	.db #0x00	; 0
      000184 00                    2826 	.db #0x00	; 0
      000185 00                    2827 	.db #0x00	; 0
      000186 00                    2828 	.db #0x00	; 0
      000187 00                    2829 	.db #0x00	; 0
      000188 00                    2830 	.db #0x00	; 0
      000189 00                    2831 	.db #0x00	; 0
      00018A 00                    2832 	.db #0x00	; 0
      00018B 00                    2833 	.db #0x00	; 0
      00018C 00                    2834 	.db #0x00	; 0
      00018D 00                    2835 	.db #0x00	; 0
      00018E 00                    2836 	.db #0x00	; 0
      00018F 00                    2837 	.db #0x00	; 0
      000190 00                    2838 	.db #0x00	; 0
      000191 00                    2839 	.db #0x00	; 0
      000192 00                    2840 	.db #0x00	; 0
      000193 00                    2841 	.db #0x00	; 0
      000194 00                    2842 	.db #0x00	; 0
      000195 00                    2843 	.db #0x00	; 0
      000196 00                    2844 	.db #0x00	; 0
      000197 00                    2845 	.db #0x00	; 0
      000198 00                    2846 	.db #0x00	; 0
      000199 00                    2847 	.db #0x00	; 0
      00019A 00                    2848 	.db #0x00	; 0
      00019B 00                    2849 	.db #0x00	; 0
      00019C 00                    2850 	.db #0x00	; 0
      00019D 00                    2851 	.db #0x00	; 0
      00019E 00                    2852 	.db #0x00	; 0
      00019F 00                    2853 	.db #0x00	; 0
      0001A0 00                    2854 	.db #0x00	; 0
      0001A1 00                    2855 	.db #0x00	; 0
      0001A2 00                    2856 	.db #0x00	; 0
      0001A3 00                    2857 	.db #0x00	; 0
      0001A4 00                    2858 	.db #0x00	; 0
      0001A5 00                    2859 	.db #0x00	; 0
      0001A6 00                    2860 	.db #0x00	; 0
      0001A7 00                    2861 	.db #0x00	; 0
      0001A8 00                    2862 	.db #0x00	; 0
      0001A9 00                    2863 	.db #0x00	; 0
      0001AA 00                    2864 	.db #0x00	; 0
      0001AB 00                    2865 	.db #0x00	; 0
      0001AC 00                    2866 	.db #0x00	; 0
      0001AD 00                    2867 	.db #0x00	; 0
      0001AE 00                    2868 	.db #0x00	; 0
      0001AF 00                    2869 	.db #0x00	; 0
      0001B0 00                    2870 	.db #0x00	; 0
      0001B1 00                    2871 	.db #0x00	; 0
      0001B2 00                    2872 	.db #0x00	; 0
      0001B3 00                    2873 	.db #0x00	; 0
      0001B4 00                    2874 	.db #0x00	; 0
      0001B5 00                    2875 	.db #0x00	; 0
      0001B6 00                    2876 	.db #0x00	; 0
      0001B7 00                    2877 	.db #0x00	; 0
      0001B8 00                    2878 	.db #0x00	; 0
      0001B9 00                    2879 	.db #0x00	; 0
      0001BA 00                    2880 	.db #0x00	; 0
      0001BB 00                    2881 	.db #0x00	; 0
      0001BC 00                    2882 	.db #0x00	; 0
      0001BD 00                    2883 	.db #0x00	; 0
      0001BE 00                    2884 	.db #0x00	; 0
      0001BF 00                    2885 	.db #0x00	; 0
      0001C0 00                    2886 	.db #0x00	; 0
      0001C1 00                    2887 	.db #0x00	; 0
      0001C2 00                    2888 	.db #0x00	; 0
      0001C3 00                    2889 	.db #0x00	; 0
      0001C4 00                    2890 	.db #0x00	; 0
      0001C5 00                    2891 	.db #0x00	; 0
      0001C6 00                    2892 	.db #0x00	; 0
      0001C7 00                    2893 	.db #0x00	; 0
      0001C8 00                    2894 	.db #0x00	; 0
      0001C9 00                    2895 	.db #0x00	; 0
      0001CA 00                    2896 	.db #0x00	; 0
      0001CB 00                    2897 	.db #0x00	; 0
      0001CC 00                    2898 	.db #0x00	; 0
      0001CD 00                    2899 	.db #0x00	; 0
      0001CE 00                    2900 	.db #0x00	; 0
      0001CF 00                    2901 	.db #0x00	; 0
      0001D0 00                    2902 	.db #0x00	; 0
      0001D1 00                    2903 	.db #0x00	; 0
      0001D2 00                    2904 	.db #0x00	; 0
      0001D3 00                    2905 	.db #0x00	; 0
      0001D4 00                    2906 	.db #0x00	; 0
      0001D5 00                    2907 	.db #0x00	; 0
      0001D6 00                    2908 	.db #0x00	; 0
      0001D7 00                    2909 	.db #0x00	; 0
      0001D8 00                    2910 	.db #0x00	; 0
      0001D9 00                    2911 	.db #0x00	; 0
      0001DA 00                    2912 	.db #0x00	; 0
      0001DB 00                    2913 	.db #0x00	; 0
      0001DC 00                    2914 	.db #0x00	; 0
      0001DD 00                    2915 	.db #0x00	; 0
      0001DE 00                    2916 	.db #0x00	; 0
      0001DF 00                    2917 	.db #0x00	; 0
      0001E0 00                    2918 	.db #0x00	; 0
      0001E1 00                    2919 	.db #0x00	; 0
      0001E2 00                    2920 	.db #0x00	; 0
      0001E3 00                    2921 	.db #0x00	; 0
      0001E4 00                    2922 	.db #0x00	; 0
      0001E5 00                    2923 	.db #0x00	; 0
      0001E6 00                    2924 	.db #0x00	; 0
      0001E7 00                    2925 	.db #0x00	; 0
      0001E8 00                    2926 	.db #0x00	; 0
      0001E9 00                    2927 	.db #0x00	; 0
      0001EA 00                    2928 	.db #0x00	; 0
      0001EB 00                    2929 	.db #0x00	; 0
      0001EC 00                    2930 	.db #0x00	; 0
      0001ED 00                    2931 	.db #0x00	; 0
      0001EE 00                    2932 	.db #0x00	; 0
      0001EF 00                    2933 	.db #0x00	; 0
      0001F0 00                    2934 	.db #0x00	; 0
      0001F1 00                    2935 	.db #0x00	; 0
      0001F2 00                    2936 	.db #0x00	; 0
      0001F3 00                    2937 	.db #0x00	; 0
      0001F4 00                    2938 	.db #0x00	; 0
      0001F5 00                    2939 	.db #0x00	; 0
      0001F6 00                    2940 	.db #0x00	; 0
      0001F7 00                    2941 	.db #0x00	; 0
      0001F8 00                    2942 	.db #0x00	; 0
      0001F9 00                    2943 	.db #0x00	; 0
      0001FA 00                    2944 	.db #0x00	; 0
      0001FB 00                    2945 	.db #0x00	; 0
      0001FC 00                    2946 	.db #0x00	; 0
      0001FD 00                    2947 	.db #0x00	; 0
      0001FE 00                    2948 	.db #0x00	; 0
      0001FF 00                    2949 	.db #0x00	; 0
      000200 00                    2950 	.db #0x00	; 0
                                   2951 	.area CABS (ABS)
