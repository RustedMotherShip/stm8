                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gg
                                     13 	.globl _setup
                                     14 	.globl _params_default_conf
                                     15 	.globl _tmr2_irq
                                     16 	.globl _menu_set_paragraph
                                     17 	.globl _menu_set_item_menu
                                     18 	.globl _menu_set_params_value
                                     19 	.globl _menu_border_item
                                     20 	.globl _menu_border_paragraph
                                     21 	.globl _menu_border
                                     22 	.globl _ssd1306_send_buffer
                                     23 	.globl _ssd1306_buffer_clean
                                     24 	.globl _set_bit
                                     25 	.globl _get_bit
                                     26 	.globl _i2c_irq
                                     27 	.globl _memset
                                     28 	.globl _TIM2_IRQ
                                     29 	.globl _main_buffer
                                     30 	.globl _ttf_line_down
                                     31 	.globl _ttf_line_up
                                     32 	.globl _ttf_line_left
                                     33 	.globl _ttf_line_right
                                     34 	.globl _ttf_corner_right_down
                                     35 	.globl _ttf_corner_left_down
                                     36 	.globl _ttf_corner_right_up
                                     37 	.globl _ttf_corner_left_up
                                     38 	.globl _ttf_num_0
                                     39 	.globl _ttf_num_9
                                     40 	.globl _ttf_num_8
                                     41 	.globl _ttf_num_7
                                     42 	.globl _ttf_num_6
                                     43 	.globl _ttf_num_5
                                     44 	.globl _ttf_num_4
                                     45 	.globl _ttf_num_3
                                     46 	.globl _ttf_num_2
                                     47 	.globl _ttf_num_1
                                     48 	.globl _ttf_void
                                     49 	.globl _I2C_IRQ
                                     50 	.globl _ttf_eng_z
                                     51 	.globl _ttf_eng_y
                                     52 	.globl _ttf_eng_x
                                     53 	.globl _ttf_eng_w
                                     54 	.globl _ttf_eng_v
                                     55 	.globl _ttf_eng_u
                                     56 	.globl _ttf_eng_t
                                     57 	.globl _ttf_eng_s
                                     58 	.globl _ttf_eng_r
                                     59 	.globl _ttf_eng_q
                                     60 	.globl _ttf_eng_p
                                     61 	.globl _ttf_eng_o
                                     62 	.globl _ttf_eng_n
                                     63 	.globl _ttf_eng_m
                                     64 	.globl _ttf_eng_l
                                     65 	.globl _ttf_eng_k
                                     66 	.globl _ttf_eng_j
                                     67 	.globl _ttf_eng_i
                                     68 	.globl _ttf_eng_h
                                     69 	.globl _ttf_eng_g
                                     70 	.globl _ttf_eng_f
                                     71 	.globl _ttf_eng_e
                                     72 	.globl _ttf_eng_d
                                     73 	.globl _ttf_eng_c
                                     74 	.globl _ttf_eng_b
                                     75 	.globl _ttf_eng_a
                                     76 	.globl _params_value
                                     77 	.globl _buf_size
                                     78 	.globl _buf_pos
                                     79 	.globl _rx_buf_pointer
                                     80 	.globl _tx_buf_pointer
                                     81 	.globl _uart_transmission_irq
                                     82 	.globl _uart_reciever_irq
                                     83 	.globl _uart_write_irq
                                     84 	.globl _uart_read_irq
                                     85 	.globl _uart_init
                                     86 	.globl _uart_read_byte
                                     87 	.globl _uart_write_byte
                                     88 	.globl _uart_write
                                     89 	.globl _uart_read
                                     90 	.globl _i2c_init
                                     91 	.globl _i2c_start
                                     92 	.globl _i2c_stop
                                     93 	.globl _i2c_send_address
                                     94 	.globl _i2c_read_byte
                                     95 	.globl _i2c_read
                                     96 	.globl _i2c_send_byte
                                     97 	.globl _i2c_write
                                     98 	.globl _i2c_scan
                                     99 	.globl _i2c_start_irq
                                    100 	.globl _i2c_stop_irq
                                    101 	.globl _ssd1306_init
                                    102 	.globl _ssd1306_set_params_to_write
                                    103 	.globl _ssd1306_draw_pixel
                                    104 	.globl _ssd1306_buffer_write
                                    105 	.globl _ssd1306_clean
                                    106 	.globl _delay_s
                                    107 	.globl _delay_ms
                                    108 ;--------------------------------------------------------
                                    109 ; ram data
                                    110 ;--------------------------------------------------------
                                    111 	.area DATA
      000000                        112 _tx_buf_pointer::
      000000                        113 	.ds 2
      000002                        114 _rx_buf_pointer::
      000002                        115 	.ds 2
      000004                        116 _buf_pos::
      000004                        117 	.ds 1
      000005                        118 _buf_size::
      000005                        119 	.ds 1
      000006                        120 _params_value::
      000006                        121 	.ds 8
      00000E                        122 _menu_set_params_value_numbers_10000_171:
      00000E                        123 	.ds 20
                                    124 ;--------------------------------------------------------
                                    125 ; ram data
                                    126 ;--------------------------------------------------------
                                    127 	.area INITIALIZED
      000000                        128 _ttf_eng_a::
      000000                        129 	.ds 8
      000008                        130 _ttf_eng_b::
      000008                        131 	.ds 8
      000010                        132 _ttf_eng_c::
      000010                        133 	.ds 8
      000018                        134 _ttf_eng_d::
      000018                        135 	.ds 8
      000020                        136 _ttf_eng_e::
      000020                        137 	.ds 8
      000028                        138 _ttf_eng_f::
      000028                        139 	.ds 8
      000030                        140 _ttf_eng_g::
      000030                        141 	.ds 8
      000038                        142 _ttf_eng_h::
      000038                        143 	.ds 8
      000040                        144 _ttf_eng_i::
      000040                        145 	.ds 8
      000048                        146 _ttf_eng_j::
      000048                        147 	.ds 8
      000050                        148 _ttf_eng_k::
      000050                        149 	.ds 8
      000058                        150 _ttf_eng_l::
      000058                        151 	.ds 8
      000060                        152 _ttf_eng_m::
      000060                        153 	.ds 8
      000068                        154 _ttf_eng_n::
      000068                        155 	.ds 8
      000070                        156 _ttf_eng_o::
      000070                        157 	.ds 8
      000078                        158 _ttf_eng_p::
      000078                        159 	.ds 8
      000080                        160 _ttf_eng_q::
      000080                        161 	.ds 8
      000088                        162 _ttf_eng_r::
      000088                        163 	.ds 8
      000090                        164 _ttf_eng_s::
      000090                        165 	.ds 8
      000098                        166 _ttf_eng_t::
      000098                        167 	.ds 8
      0000A0                        168 _ttf_eng_u::
      0000A0                        169 	.ds 8
      0000A8                        170 _ttf_eng_v::
      0000A8                        171 	.ds 8
      0000B0                        172 _ttf_eng_w::
      0000B0                        173 	.ds 8
      0000B8                        174 _ttf_eng_x::
      0000B8                        175 	.ds 8
      0000C0                        176 _ttf_eng_y::
      0000C0                        177 	.ds 8
      0000C8                        178 _ttf_eng_z::
      0000C8                        179 	.ds 8
      0000D0                        180 _I2C_IRQ::
      0000D0                        181 	.ds 1
      0000D1                        182 _ttf_void::
      0000D1                        183 	.ds 8
      0000D9                        184 _ttf_num_1::
      0000D9                        185 	.ds 8
      0000E1                        186 _ttf_num_2::
      0000E1                        187 	.ds 8
      0000E9                        188 _ttf_num_3::
      0000E9                        189 	.ds 8
      0000F1                        190 _ttf_num_4::
      0000F1                        191 	.ds 8
      0000F9                        192 _ttf_num_5::
      0000F9                        193 	.ds 8
      000101                        194 _ttf_num_6::
      000101                        195 	.ds 8
      000109                        196 _ttf_num_7::
      000109                        197 	.ds 8
      000111                        198 _ttf_num_8::
      000111                        199 	.ds 8
      000119                        200 _ttf_num_9::
      000119                        201 	.ds 8
      000121                        202 _ttf_num_0::
      000121                        203 	.ds 8
      000129                        204 _ttf_corner_left_up::
      000129                        205 	.ds 8
      000131                        206 _ttf_corner_right_up::
      000131                        207 	.ds 8
      000139                        208 _ttf_corner_left_down::
      000139                        209 	.ds 8
      000141                        210 _ttf_corner_right_down::
      000141                        211 	.ds 8
      000149                        212 _ttf_line_right::
      000149                        213 	.ds 8
      000151                        214 _ttf_line_left::
      000151                        215 	.ds 8
      000159                        216 _ttf_line_up::
      000159                        217 	.ds 8
      000161                        218 _ttf_line_down::
      000161                        219 	.ds 8
      000169                        220 _main_buffer::
      000169                        221 	.ds 512
      000369                        222 _TIM2_IRQ::
      000369                        223 	.ds 1
                                    224 ;--------------------------------------------------------
                                    225 ; Stack segment in internal ram
                                    226 ;--------------------------------------------------------
                                    227 	.area SSEG
      000000                        228 __start__stack:
      000000                        229 	.ds	1
                                    230 
                                    231 ;--------------------------------------------------------
                                    232 ; absolute external ram data
                                    233 ;--------------------------------------------------------
                                    234 	.area DABS (ABS)
                                    235 
                                    236 ; default segment ordering for linker
                                    237 	.area HOME
                                    238 	.area GSINIT
                                    239 	.area GSFINAL
                                    240 	.area CONST
                                    241 	.area INITIALIZER
                                    242 	.area CODE
                                    243 
                                    244 ;--------------------------------------------------------
                                    245 ; interrupt vector
                                    246 ;--------------------------------------------------------
                                    247 	.area HOME
      000000                        248 __interrupt_vect:
      000000 82v00u00u00            249 	int s_GSINIT ; reset
      000004 82 00 00 00            250 	int 0x000000 ; trap
      000008 82 00 00 00            251 	int 0x000000 ; int0
      00000C 82 00 00 00            252 	int 0x000000 ; int1
      000010 82 00 00 00            253 	int 0x000000 ; int2
      000014 82 00 00 00            254 	int 0x000000 ; int3
      000018 82 00 00 00            255 	int 0x000000 ; int4
      00001C 82 00 00 00            256 	int 0x000000 ; int5
      000020 82 00 00 00            257 	int 0x000000 ; int6
      000024 82 00 00 00            258 	int 0x000000 ; int7
      000028 82 00 00 00            259 	int 0x000000 ; int8
      00002C 82 00 00 00            260 	int 0x000000 ; int9
      000030 82 00 00 00            261 	int 0x000000 ; int10
      000034 82 00 00 00            262 	int 0x000000 ; int11
      000038 82 00 00 00            263 	int 0x000000 ; int12
      00003C 82v00u0DuBF            264 	int _tmr2_irq ; int13
      000040 82 00 00 00            265 	int 0x000000 ; int14
      000044 82 00 00 00            266 	int 0x000000 ; int15
      000048 82 00 00 00            267 	int 0x000000 ; int16
      00004C 82v00u00u00            268 	int _uart_transmission_irq ; int17
      000050 82v00u00u3C            269 	int _uart_reciever_irq ; int18
      000054 82v00u02u1E            270 	int _i2c_irq ; int19
                                    271 ;--------------------------------------------------------
                                    272 ; global & static initialisations
                                    273 ;--------------------------------------------------------
                                    274 	.area HOME
                                    275 	.area GSINIT
                                    276 	.area GSFINAL
                                    277 	.area GSINIT
      000000 CDr00r00         [ 4]  278 	call	___sdcc_external_startup
      000003 4D               [ 1]  279 	tnz	a
      000004 27 03            [ 1]  280 	jreq	__sdcc_init_data
      000006 CCr00r58         [ 2]  281 	jp	__sdcc_program_startup
      000009                        282 __sdcc_init_data:
                                    283 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]  284 	ldw x, #l_DATA
      00000C 27 07            [ 1]  285 	jreq	00002$
      00000E                        286 00001$:
      00000E 72 4FuFFuFF      [ 1]  287 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  288 	decw x
      000013 26 F9            [ 1]  289 	jrne	00001$
      000015                        290 00002$:
      000015 AEr00r00         [ 2]  291 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  292 	jreq	00004$
      00001A                        293 00003$:
      00001A D6uFFuFF         [ 1]  294 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  295 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  296 	decw	x
      000021 26 F7            [ 1]  297 	jrne	00003$
      000023                        298 00004$:
                                    299 ; stm8_genXINIT() end
                                    300 ;	./libs/menu_lib.c: 63: static uint8_t *numbers[] = {&ttf_num_0[0],&ttf_num_1[0],&ttf_num_2[0],&ttf_num_3[0],&ttf_num_4[0],&ttf_num_5[0],&ttf_num_6[0],&ttf_num_7[0],&ttf_num_8[0],&ttf_num_9[0]};
      000023 AEr01r21         [ 2]  301 	ldw	x, #_ttf_num_0+0
      000026 CFu00u0E         [ 2]  302 	ldw	_menu_set_params_value_numbers_10000_171+0, x
      000029 AEr00rD9         [ 2]  303 	ldw	x, #_ttf_num_1+0
      00002C CFu00u10         [ 2]  304 	ldw	_menu_set_params_value_numbers_10000_171+2, x
      00002F AEr00rE1         [ 2]  305 	ldw	x, #_ttf_num_2+0
      000032 CFu00u12         [ 2]  306 	ldw	_menu_set_params_value_numbers_10000_171+4, x
      000035 AEr00rE9         [ 2]  307 	ldw	x, #_ttf_num_3+0
      000038 CFu00u14         [ 2]  308 	ldw	_menu_set_params_value_numbers_10000_171+6, x
      00003B AEr00rF1         [ 2]  309 	ldw	x, #_ttf_num_4+0
      00003E CFu00u16         [ 2]  310 	ldw	_menu_set_params_value_numbers_10000_171+8, x
      000041 AEr00rF9         [ 2]  311 	ldw	x, #_ttf_num_5+0
      000044 CFu00u18         [ 2]  312 	ldw	_menu_set_params_value_numbers_10000_171+10, x
      000047 AEr01r01         [ 2]  313 	ldw	x, #_ttf_num_6+0
      00004A CFu00u1A         [ 2]  314 	ldw	_menu_set_params_value_numbers_10000_171+12, x
      00004D AEr01r09         [ 2]  315 	ldw	x, #_ttf_num_7+0
      000050 CFu00u1C         [ 2]  316 	ldw	_menu_set_params_value_numbers_10000_171+14, x
      000053 AEr01r11         [ 2]  317 	ldw	x, #_ttf_num_8+0
      000056 CFu00u1E         [ 2]  318 	ldw	_menu_set_params_value_numbers_10000_171+16, x
      000059 AEr01r19         [ 2]  319 	ldw	x, #_ttf_num_9+0
      00005C CFu00u20         [ 2]  320 	ldw	_menu_set_params_value_numbers_10000_171+18, x
                                    321 	.area GSFINAL
      000000 CCr00r58         [ 2]  322 	jp	__sdcc_program_startup
                                    323 ;--------------------------------------------------------
                                    324 ; Home
                                    325 ;--------------------------------------------------------
                                    326 	.area HOME
                                    327 	.area HOME
      000058                        328 __sdcc_program_startup:
      000058 CCr0ErC1         [ 2]  329 	jp	_main
                                    330 ;	return from main will return to caller
                                    331 ;--------------------------------------------------------
                                    332 ; code
                                    333 ;--------------------------------------------------------
                                    334 	.area CODE
                                    335 ;	./libs/uart_lib.c: 3: void uart_transmission_irq(void) __interrupt(UART1_T_vector)
                                    336 ;	-----------------------------------------
                                    337 ;	 function uart_transmission_irq
                                    338 ;	-----------------------------------------
      000000                        339 _uart_transmission_irq:
                                    340 ;	./libs/uart_lib.c: 5: if(UART1_SR -> TXE) 
      000000 AE 52 30         [ 2]  341 	ldw	x, #0x5230
      000003 F6               [ 1]  342 	ld	a, (x)
      000004 4E               [ 1]  343 	swap	a
      000005 44               [ 1]  344 	srl	a
      000006 44               [ 1]  345 	srl	a
      000007 44               [ 1]  346 	srl	a
      000008 A5 01            [ 1]  347 	bcp	a, #0x01
      00000A 27 2F            [ 1]  348 	jreq	00107$
                                    349 ;	./libs/uart_lib.c: 7: if(tx_buf_pointer[buf_pos] != '\0' && buf_size>buf_pos)
      00000C C6u00u01         [ 1]  350 	ld	a, _tx_buf_pointer+1
      00000F CBu00u04         [ 1]  351 	add	a, _buf_pos+0
      000012 97               [ 1]  352 	ld	xl, a
      000013 C6u00u00         [ 1]  353 	ld	a, _tx_buf_pointer+0
      000016 A9 00            [ 1]  354 	adc	a, #0x00
      000018 95               [ 1]  355 	ld	xh, a
      000019 F6               [ 1]  356 	ld	a, (x)
      00001A 27 1B            [ 1]  357 	jreq	00102$
      00001C C6u00u04         [ 1]  358 	ld	a, _buf_pos+0
      00001F C1u00u05         [ 1]  359 	cp	a, _buf_size+0
      000022 24 13            [ 1]  360 	jrnc	00102$
                                    361 ;	./libs/uart_lib.c: 8: UART1_DR -> DR = tx_buf_pointer[buf_pos++];
      000024 C6u00u04         [ 1]  362 	ld	a, _buf_pos+0
      000027 72 5Cu00u04      [ 1]  363 	inc	_buf_pos+0
      00002B 5F               [ 1]  364 	clrw	x
      00002C 97               [ 1]  365 	ld	xl, a
      00002D 72 BBu00u00      [ 2]  366 	addw	x, _tx_buf_pointer+0
      000031 F6               [ 1]  367 	ld	a, (x)
      000032 C7 52 31         [ 1]  368 	ld	0x5231, a
      000035 20 04            [ 2]  369 	jra	00107$
      000037                        370 00102$:
                                    371 ;	./libs/uart_lib.c: 10: UART1_CR2 -> TIEN = 0;
      000037 72 1F 52 35      [ 1]  372 	bres	0x5235, #7
      00003B                        373 00107$:
                                    374 ;	./libs/uart_lib.c: 14: }
      00003B 80               [11]  375 	iret
                                    376 ;	./libs/uart_lib.c: 16: void uart_reciever_irq(void) __interrupt(UART1_R_vector)
                                    377 ;	-----------------------------------------
                                    378 ;	 function uart_reciever_irq
                                    379 ;	-----------------------------------------
      00003C                        380 _uart_reciever_irq:
      00003C 88               [ 1]  381 	push	a
                                    382 ;	./libs/uart_lib.c: 20: if(UART1_SR -> RXNE)
      00003D C6 52 30         [ 1]  383 	ld	a, 0x5230
      000040 4E               [ 1]  384 	swap	a
      000041 44               [ 1]  385 	srl	a
      000042 A5 01            [ 1]  386 	bcp	a, #0x01
      000044 27 27            [ 1]  387 	jreq	00107$
                                    388 ;	./libs/uart_lib.c: 22: trash_reg = UART1_DR -> DR;
      000046 C6 52 31         [ 1]  389 	ld	a, 0x5231
                                    390 ;	./libs/uart_lib.c: 23: if(trash_reg != '\n' && buf_size>buf_pos)
      000049 6B 01            [ 1]  391 	ld	(0x01, sp), a
      00004B A1 0A            [ 1]  392 	cp	a, #0x0a
      00004D 27 1A            [ 1]  393 	jreq	00102$
      00004F C6u00u04         [ 1]  394 	ld	a, _buf_pos+0
      000052 C1u00u05         [ 1]  395 	cp	a, _buf_size+0
      000055 24 12            [ 1]  396 	jrnc	00102$
                                    397 ;	./libs/uart_lib.c: 24: rx_buf_pointer[buf_pos++] = trash_reg;
      000057 C6u00u04         [ 1]  398 	ld	a, _buf_pos+0
      00005A 72 5Cu00u04      [ 1]  399 	inc	_buf_pos+0
      00005E 5F               [ 1]  400 	clrw	x
      00005F 97               [ 1]  401 	ld	xl, a
      000060 72 BBu00u02      [ 2]  402 	addw	x, _rx_buf_pointer+0
      000064 7B 01            [ 1]  403 	ld	a, (0x01, sp)
      000066 F7               [ 1]  404 	ld	(x), a
      000067 20 04            [ 2]  405 	jra	00107$
      000069                        406 00102$:
                                    407 ;	./libs/uart_lib.c: 26: UART1_CR2 -> RIEN = 0;
      000069 72 1B 52 35      [ 1]  408 	bres	0x5235, #5
      00006D                        409 00107$:
                                    410 ;	./libs/uart_lib.c: 30: }
      00006D 84               [ 1]  411 	pop	a
      00006E 80               [11]  412 	iret
                                    413 ;	./libs/uart_lib.c: 32: void uart_write_irq(uint8_t *data_buf)
                                    414 ;	-----------------------------------------
                                    415 ;	 function uart_write_irq
                                    416 ;	-----------------------------------------
      00006F                        417 _uart_write_irq:
      00006F 52 02            [ 2]  418 	sub	sp, #2
                                    419 ;	./libs/uart_lib.c: 34: tx_buf_pointer = data_buf;
      000071 1F 01            [ 2]  420 	ldw	(0x01, sp), x
      000073 CFu00u00         [ 2]  421 	ldw	_tx_buf_pointer+0, x
                                    422 ;	./libs/uart_lib.c: 35: buf_pos = 0;
      000076 72 5Fu00u04      [ 1]  423 	clr	_buf_pos+0
                                    424 ;	./libs/uart_lib.c: 36: buf_size = 0;
      00007A 72 5Fu00u05      [ 1]  425 	clr	_buf_size+0
                                    426 ;	./libs/uart_lib.c: 37: while (data_buf[buf_size++] != '\0');
      00007E                        427 00101$:
      00007E C6u00u05         [ 1]  428 	ld	a, _buf_size+0
      000081 72 5Cu00u05      [ 1]  429 	inc	_buf_size+0
      000085 5F               [ 1]  430 	clrw	x
      000086 97               [ 1]  431 	ld	xl, a
      000087 72 FB 01         [ 2]  432 	addw	x, (0x01, sp)
      00008A F6               [ 1]  433 	ld	a, (x)
      00008B 26 F1            [ 1]  434 	jrne	00101$
                                    435 ;	./libs/uart_lib.c: 38: UART1_CR2 -> TIEN = 1;
      00008D 72 1E 52 35      [ 1]  436 	bset	0x5235, #7
                                    437 ;	./libs/uart_lib.c: 39: while(UART1_CR2 -> TIEN);
      000091                        438 00104$:
      000091 72 0E 52 35 FB   [ 2]  439 	btjt	0x5235, #7, 00104$
                                    440 ;	./libs/uart_lib.c: 40: }
      000096 5B 02            [ 2]  441 	addw	sp, #2
      000098 81               [ 4]  442 	ret
                                    443 ;	./libs/uart_lib.c: 41: void uart_read_irq(uint8_t *data_buf,int size)
                                    444 ;	-----------------------------------------
                                    445 ;	 function uart_read_irq
                                    446 ;	-----------------------------------------
      000099                        447 _uart_read_irq:
                                    448 ;	./libs/uart_lib.c: 43: rx_buf_pointer = data_buf;
      000099 CFu00u02         [ 2]  449 	ldw	_rx_buf_pointer+0, x
                                    450 ;	./libs/uart_lib.c: 44: buf_pos = 0;
      00009C 72 5Fu00u04      [ 1]  451 	clr	_buf_pos+0
                                    452 ;	./libs/uart_lib.c: 45: buf_size = size;
      0000A0 7B 04            [ 1]  453 	ld	a, (0x04, sp)
      0000A2 C7u00u05         [ 1]  454 	ld	_buf_size+0, a
                                    455 ;	./libs/uart_lib.c: 46: UART1_CR2 -> RIEN = 1;
      0000A5 72 1A 52 35      [ 1]  456 	bset	0x5235, #5
                                    457 ;	./libs/uart_lib.c: 47: while(UART1_CR2 -> RIEN);
      0000A9                        458 00101$:
      0000A9 C6 52 35         [ 1]  459 	ld	a, 0x5235
      0000AC 4E               [ 1]  460 	swap	a
      0000AD 44               [ 1]  461 	srl	a
      0000AE A4 01            [ 1]  462 	and	a, #0x01
      0000B0 26 F7            [ 1]  463 	jrne	00101$
                                    464 ;	./libs/uart_lib.c: 48: }
      0000B2 1E 01            [ 2]  465 	ldw	x, (1, sp)
      0000B4 5B 04            [ 2]  466 	addw	sp, #4
      0000B6 FC               [ 2]  467 	jp	(x)
                                    468 ;	./libs/uart_lib.c: 50: void uart_init(unsigned int baudrate,uint8_t stopbit)
                                    469 ;	-----------------------------------------
                                    470 ;	 function uart_init
                                    471 ;	-----------------------------------------
      0000B7                        472 _uart_init:
      0000B7 52 02            [ 2]  473 	sub	sp, #2
      0000B9 1F 01            [ 2]  474 	ldw	(0x01, sp), x
                                    475 ;	./libs/uart_lib.c: 54: UART1_CR2 -> TEN = 1; // Transmitter enable
      0000BB AE 52 35         [ 2]  476 	ldw	x, #0x5235
      0000BE 88               [ 1]  477 	push	a
      0000BF F6               [ 1]  478 	ld	a, (x)
      0000C0 AA 08            [ 1]  479 	or	a, #0x08
      0000C2 F7               [ 1]  480 	ld	(x), a
      0000C3 84               [ 1]  481 	pop	a
                                    482 ;	./libs/uart_lib.c: 55: UART1_CR2 -> REN = 1; // Receiver enable
      0000C4 AE 52 35         [ 2]  483 	ldw	x, #0x5235
      0000C7 88               [ 1]  484 	push	a
      0000C8 F6               [ 1]  485 	ld	a, (x)
      0000C9 AA 04            [ 1]  486 	or	a, #0x04
      0000CB F7               [ 1]  487 	ld	(x), a
      0000CC 84               [ 1]  488 	pop	a
                                    489 ;	./libs/uart_lib.c: 56: switch(stopbit)
      0000CD A1 02            [ 1]  490 	cp	a, #0x02
      0000CF 27 06            [ 1]  491 	jreq	00101$
      0000D1 A1 03            [ 1]  492 	cp	a, #0x03
      0000D3 27 0E            [ 1]  493 	jreq	00102$
      0000D5 20 16            [ 2]  494 	jra	00103$
                                    495 ;	./libs/uart_lib.c: 58: case 2:
      0000D7                        496 00101$:
                                    497 ;	./libs/uart_lib.c: 59: UART1_CR3 -> STOP = 2;
      0000D7 C6 52 36         [ 1]  498 	ld	a, 0x5236
      0000DA A4 CF            [ 1]  499 	and	a, #0xcf
      0000DC AA 20            [ 1]  500 	or	a, #0x20
      0000DE C7 52 36         [ 1]  501 	ld	0x5236, a
                                    502 ;	./libs/uart_lib.c: 60: break;
      0000E1 20 12            [ 2]  503 	jra	00104$
                                    504 ;	./libs/uart_lib.c: 61: case 3:
      0000E3                        505 00102$:
                                    506 ;	./libs/uart_lib.c: 62: UART1_CR3 -> STOP = 3;
      0000E3 C6 52 36         [ 1]  507 	ld	a, 0x5236
      0000E6 AA 30            [ 1]  508 	or	a, #0x30
      0000E8 C7 52 36         [ 1]  509 	ld	0x5236, a
                                    510 ;	./libs/uart_lib.c: 63: break;
      0000EB 20 08            [ 2]  511 	jra	00104$
                                    512 ;	./libs/uart_lib.c: 64: default:
      0000ED                        513 00103$:
                                    514 ;	./libs/uart_lib.c: 65: UART1_CR3 -> STOP = 0;
      0000ED C6 52 36         [ 1]  515 	ld	a, 0x5236
      0000F0 A4 CF            [ 1]  516 	and	a, #0xcf
      0000F2 C7 52 36         [ 1]  517 	ld	0x5236, a
                                    518 ;	./libs/uart_lib.c: 67: }
      0000F5                        519 00104$:
                                    520 ;	./libs/uart_lib.c: 68: switch(baudrate)
      0000F5 1E 01            [ 2]  521 	ldw	x, (0x01, sp)
      0000F7 A3 08 00         [ 2]  522 	cpw	x, #0x0800
      0000FA 26 03            [ 1]  523 	jrne	00186$
      0000FC CCr01r88         [ 2]  524 	jp	00110$
      0000FF                        525 00186$:
      0000FF 1E 01            [ 2]  526 	ldw	x, (0x01, sp)
      000101 A3 09 60         [ 2]  527 	cpw	x, #0x0960
      000104 27 28            [ 1]  528 	jreq	00105$
      000106 1E 01            [ 2]  529 	ldw	x, (0x01, sp)
      000108 A3 10 00         [ 2]  530 	cpw	x, #0x1000
      00010B 26 03            [ 1]  531 	jrne	00192$
      00010D CCr01r98         [ 2]  532 	jp	00111$
      000110                        533 00192$:
      000110 1E 01            [ 2]  534 	ldw	x, (0x01, sp)
      000112 A3 4B 00         [ 2]  535 	cpw	x, #0x4b00
      000115 27 31            [ 1]  536 	jreq	00106$
      000117 1E 01            [ 2]  537 	ldw	x, (0x01, sp)
      000119 A3 84 00         [ 2]  538 	cpw	x, #0x8400
      00011C 27 5A            [ 1]  539 	jreq	00109$
      00011E 1E 01            [ 2]  540 	ldw	x, (0x01, sp)
      000120 A3 C2 00         [ 2]  541 	cpw	x, #0xc200
      000123 27 43            [ 1]  542 	jreq	00108$
      000125 1E 01            [ 2]  543 	ldw	x, (0x01, sp)
      000127 A3 E1 00         [ 2]  544 	cpw	x, #0xe100
      00012A 27 2C            [ 1]  545 	jreq	00107$
      00012C 20 7A            [ 2]  546 	jra	00112$
                                    547 ;	./libs/uart_lib.c: 70: case (unsigned int)2400:
      00012E                        548 00105$:
                                    549 ;	./libs/uart_lib.c: 71: UART1_BRR2 -> MSB = 0x01;
      00012E C6 52 33         [ 1]  550 	ld	a, 0x5233
      000131 A4 0F            [ 1]  551 	and	a, #0x0f
      000133 AA 10            [ 1]  552 	or	a, #0x10
      000135 C7 52 33         [ 1]  553 	ld	0x5233, a
                                    554 ;	./libs/uart_lib.c: 72: UART1_BRR1 -> DIV = 0xA0;
      000138 35 A0 52 32      [ 1]  555 	mov	0x5232+0, #0xa0
                                    556 ;	./libs/uart_lib.c: 73: UART1_BRR2 -> LSB = 0x0B; 
      00013C C6 52 33         [ 1]  557 	ld	a, 0x5233
      00013F A4 F0            [ 1]  558 	and	a, #0xf0
      000141 AA 0B            [ 1]  559 	or	a, #0x0b
      000143 C7 52 33         [ 1]  560 	ld	0x5233, a
                                    561 ;	./libs/uart_lib.c: 74: break;
      000146 20 6E            [ 2]  562 	jra	00114$
                                    563 ;	./libs/uart_lib.c: 75: case (unsigned int)19200:
      000148                        564 00106$:
                                    565 ;	./libs/uart_lib.c: 76: UART1_BRR1 -> DIV = 0x34;
      000148 35 34 52 32      [ 1]  566 	mov	0x5232+0, #0x34
                                    567 ;	./libs/uart_lib.c: 77: UART1_BRR2 -> LSB = 0x01;
      00014C C6 52 33         [ 1]  568 	ld	a, 0x5233
      00014F A4 F0            [ 1]  569 	and	a, #0xf0
      000151 AA 01            [ 1]  570 	or	a, #0x01
      000153 C7 52 33         [ 1]  571 	ld	0x5233, a
                                    572 ;	./libs/uart_lib.c: 78: break;
      000156 20 5E            [ 2]  573 	jra	00114$
                                    574 ;	./libs/uart_lib.c: 79: case (unsigned int)57600:
      000158                        575 00107$:
                                    576 ;	./libs/uart_lib.c: 80: UART1_BRR1 -> DIV = 0x11;
      000158 35 11 52 32      [ 1]  577 	mov	0x5232+0, #0x11
                                    578 ;	./libs/uart_lib.c: 81: UART1_BRR2 -> LSB = 0x06;
      00015C C6 52 33         [ 1]  579 	ld	a, 0x5233
      00015F A4 F0            [ 1]  580 	and	a, #0xf0
      000161 AA 06            [ 1]  581 	or	a, #0x06
      000163 C7 52 33         [ 1]  582 	ld	0x5233, a
                                    583 ;	./libs/uart_lib.c: 82: break;
      000166 20 4E            [ 2]  584 	jra	00114$
                                    585 ;	./libs/uart_lib.c: 83: case (unsigned int)115200:
      000168                        586 00108$:
                                    587 ;	./libs/uart_lib.c: 84: UART1_BRR1 -> DIV = 0x08;
      000168 35 08 52 32      [ 1]  588 	mov	0x5232+0, #0x08
                                    589 ;	./libs/uart_lib.c: 85: UART1_BRR2 -> LSB = 0x0B;
      00016C C6 52 33         [ 1]  590 	ld	a, 0x5233
      00016F A4 F0            [ 1]  591 	and	a, #0xf0
      000171 AA 0B            [ 1]  592 	or	a, #0x0b
      000173 C7 52 33         [ 1]  593 	ld	0x5233, a
                                    594 ;	./libs/uart_lib.c: 86: break;
      000176 20 3E            [ 2]  595 	jra	00114$
                                    596 ;	./libs/uart_lib.c: 87: case (unsigned int)230400:
      000178                        597 00109$:
                                    598 ;	./libs/uart_lib.c: 88: UART1_BRR1 -> DIV = 0x04;
      000178 35 04 52 32      [ 1]  599 	mov	0x5232+0, #0x04
                                    600 ;	./libs/uart_lib.c: 89: UART1_BRR2 -> LSB = 0x05;
      00017C C6 52 33         [ 1]  601 	ld	a, 0x5233
      00017F A4 F0            [ 1]  602 	and	a, #0xf0
      000181 AA 05            [ 1]  603 	or	a, #0x05
      000183 C7 52 33         [ 1]  604 	ld	0x5233, a
                                    605 ;	./libs/uart_lib.c: 90: break;
      000186 20 2E            [ 2]  606 	jra	00114$
                                    607 ;	./libs/uart_lib.c: 91: case (unsigned int)460800:
      000188                        608 00110$:
                                    609 ;	./libs/uart_lib.c: 92: UART1_BRR1 -> DIV = 0x02;
      000188 35 02 52 32      [ 1]  610 	mov	0x5232+0, #0x02
                                    611 ;	./libs/uart_lib.c: 93: UART1_BRR2 -> LSB = 0x03;
      00018C C6 52 33         [ 1]  612 	ld	a, 0x5233
      00018F A4 F0            [ 1]  613 	and	a, #0xf0
      000191 AA 03            [ 1]  614 	or	a, #0x03
      000193 C7 52 33         [ 1]  615 	ld	0x5233, a
                                    616 ;	./libs/uart_lib.c: 94: break;
      000196 20 1E            [ 2]  617 	jra	00114$
                                    618 ;	./libs/uart_lib.c: 95: case (unsigned int)921600:
      000198                        619 00111$:
                                    620 ;	./libs/uart_lib.c: 96: UART1_BRR1 -> DIV = 0x01;
      000198 35 01 52 32      [ 1]  621 	mov	0x5232+0, #0x01
                                    622 ;	./libs/uart_lib.c: 97: UART1_BRR2 -> LSB = 0x01;
      00019C C6 52 33         [ 1]  623 	ld	a, 0x5233
      00019F A4 F0            [ 1]  624 	and	a, #0xf0
      0001A1 AA 01            [ 1]  625 	or	a, #0x01
      0001A3 C7 52 33         [ 1]  626 	ld	0x5233, a
                                    627 ;	./libs/uart_lib.c: 98: break;
      0001A6 20 0E            [ 2]  628 	jra	00114$
                                    629 ;	./libs/uart_lib.c: 99: default:
      0001A8                        630 00112$:
                                    631 ;	./libs/uart_lib.c: 100: UART1_BRR1 -> DIV = 0x68;
      0001A8 35 68 52 32      [ 1]  632 	mov	0x5232+0, #0x68
                                    633 ;	./libs/uart_lib.c: 101: UART1_BRR2 -> LSB = 0x03;
      0001AC C6 52 33         [ 1]  634 	ld	a, 0x5233
      0001AF A4 F0            [ 1]  635 	and	a, #0xf0
      0001B1 AA 03            [ 1]  636 	or	a, #0x03
      0001B3 C7 52 33         [ 1]  637 	ld	0x5233, a
                                    638 ;	./libs/uart_lib.c: 103: }
      0001B6                        639 00114$:
                                    640 ;	./libs/uart_lib.c: 104: }
      0001B6 5B 02            [ 2]  641 	addw	sp, #2
      0001B8 81               [ 4]  642 	ret
                                    643 ;	./libs/uart_lib.c: 106: int uart_read_byte(uint8_t *data)
                                    644 ;	-----------------------------------------
                                    645 ;	 function uart_read_byte
                                    646 ;	-----------------------------------------
      0001B9                        647 _uart_read_byte:
                                    648 ;	./libs/uart_lib.c: 108: while(!(UART1_SR -> RXNE));
      0001B9                        649 00101$:
      0001B9 72 0B 52 30 FB   [ 2]  650 	btjf	0x5230, #5, 00101$
                                    651 ;	./libs/uart_lib.c: 110: return 1;
      0001BE 5F               [ 1]  652 	clrw	x
      0001BF 5C               [ 1]  653 	incw	x
                                    654 ;	./libs/uart_lib.c: 111: }
      0001C0 81               [ 4]  655 	ret
                                    656 ;	./libs/uart_lib.c: 113: int uart_write_byte(uint8_t data)
                                    657 ;	-----------------------------------------
                                    658 ;	 function uart_write_byte
                                    659 ;	-----------------------------------------
      0001C1                        660 _uart_write_byte:
                                    661 ;	./libs/uart_lib.c: 115: UART1_DR -> DR = data;
      0001C1 C7 52 31         [ 1]  662 	ld	0x5231, a
                                    663 ;	./libs/uart_lib.c: 116: while(!(UART1_SR -> TXE));
      0001C4                        664 00101$:
      0001C4 72 0F 52 30 FB   [ 2]  665 	btjf	0x5230, #7, 00101$
                                    666 ;	./libs/uart_lib.c: 117: return 1;
      0001C9 5F               [ 1]  667 	clrw	x
      0001CA 5C               [ 1]  668 	incw	x
                                    669 ;	./libs/uart_lib.c: 118: }
      0001CB 81               [ 4]  670 	ret
                                    671 ;	./libs/uart_lib.c: 120: int uart_write(uint8_t *data_buf)
                                    672 ;	-----------------------------------------
                                    673 ;	 function uart_write
                                    674 ;	-----------------------------------------
      0001CC                        675 _uart_write:
      0001CC 52 04            [ 2]  676 	sub	sp, #4
      0001CE 1F 01            [ 2]  677 	ldw	(0x01, sp), x
                                    678 ;	./libs/uart_lib.c: 122: int count = 0;
      0001D0 5F               [ 1]  679 	clrw	x
      0001D1 1F 03            [ 2]  680 	ldw	(0x03, sp), x
                                    681 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001D3 5F               [ 1]  682 	clrw	x
      0001D4                        683 00103$:
      0001D4 90 93            [ 1]  684 	ldw	y, x
      0001D6 72 F9 01         [ 2]  685 	addw	y, (0x01, sp)
      0001D9 90 F6            [ 1]  686 	ld	a, (y)
      0001DB 27 0E            [ 1]  687 	jreq	00101$
                                    688 ;	./libs/uart_lib.c: 124: count += uart_write_byte(data_buf[i]);
      0001DD 89               [ 2]  689 	pushw	x
      0001DE CDr01rC1         [ 4]  690 	call	_uart_write_byte
      0001E1 51               [ 1]  691 	exgw	x, y
      0001E2 85               [ 2]  692 	popw	x
      0001E3 72 F9 03         [ 2]  693 	addw	y, (0x03, sp)
      0001E6 17 03            [ 2]  694 	ldw	(0x03, sp), y
                                    695 ;	./libs/uart_lib.c: 123: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001E8 5C               [ 1]  696 	incw	x
      0001E9 20 E9            [ 2]  697 	jra	00103$
      0001EB                        698 00101$:
                                    699 ;	./libs/uart_lib.c: 125: return count;
      0001EB 1E 03            [ 2]  700 	ldw	x, (0x03, sp)
                                    701 ;	./libs/uart_lib.c: 126: }
      0001ED 5B 04            [ 2]  702 	addw	sp, #4
      0001EF 81               [ 4]  703 	ret
                                    704 ;	./libs/uart_lib.c: 127: int uart_read(uint8_t *data_buf,int size)
                                    705 ;	-----------------------------------------
                                    706 ;	 function uart_read
                                    707 ;	-----------------------------------------
      0001F0                        708 _uart_read:
      0001F0 52 04            [ 2]  709 	sub	sp, #4
      0001F2 1F 01            [ 2]  710 	ldw	(0x01, sp), x
                                    711 ;	./libs/uart_lib.c: 130: int count = 0;
      0001F4 5F               [ 1]  712 	clrw	x
      0001F5 1F 03            [ 2]  713 	ldw	(0x03, sp), x
                                    714 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      0001F7 5F               [ 1]  715 	clrw	x
      0001F8                        716 00103$:
      0001F8 90 93            [ 1]  717 	ldw	y, x
      0001FA 72 F9 01         [ 2]  718 	addw	y, (0x01, sp)
      0001FD 90 F6            [ 1]  719 	ld	a, (y)
      0001FF 27 13            [ 1]  720 	jreq	00101$
                                    721 ;	./libs/uart_lib.c: 132: count += uart_read_byte((unsigned char *)data_buf[i]);
      000201 90 5F            [ 1]  722 	clrw	y
      000203 90 97            [ 1]  723 	ld	yl, a
      000205 89               [ 2]  724 	pushw	x
      000206 93               [ 1]  725 	ldw	x, y
      000207 CDr01rB9         [ 4]  726 	call	_uart_read_byte
      00020A 51               [ 1]  727 	exgw	x, y
      00020B 85               [ 2]  728 	popw	x
      00020C 72 F9 03         [ 2]  729 	addw	y, (0x03, sp)
      00020F 17 03            [ 2]  730 	ldw	(0x03, sp), y
                                    731 ;	./libs/uart_lib.c: 131: for (int i = 0; data_buf[i] != '\0'; i++) // Цикл до нулевого терминатора
      000211 5C               [ 1]  732 	incw	x
      000212 20 E4            [ 2]  733 	jra	00103$
      000214                        734 00101$:
                                    735 ;	./libs/uart_lib.c: 133: return count;
      000214 1E 03            [ 2]  736 	ldw	x, (0x03, sp)
                                    737 ;	./libs/uart_lib.c: 134: }
      000216 5B 04            [ 2]  738 	addw	sp, #4
      000218 90 85            [ 2]  739 	popw	y
      00021A 5B 02            [ 2]  740 	addw	sp, #2
      00021C 90 FC            [ 2]  741 	jp	(y)
                                    742 ;	./libs/i2c_lib.c: 3: void i2c_irq(void) __interrupt(I2C_vector)
                                    743 ;	-----------------------------------------
                                    744 ;	 function i2c_irq
                                    745 ;	-----------------------------------------
      00021E                        746 _i2c_irq:
      00021E 4F               [ 1]  747 	clr	a
      00021F 62               [ 2]  748 	div	x, a
                                    749 ;	./libs/i2c_lib.c: 6: disableInterrupts();
      000220 9B               [ 1]  750 	sim
                                    751 ;	./libs/i2c_lib.c: 7: I2C_IRQ.all = 0;//обнуление флагов регистров
      000221 35 00u00uD0      [ 1]  752 	mov	_I2C_IRQ+0, #0x00
                                    753 ;	./libs/i2c_lib.c: 9: if(I2C_SR1 -> ADDR)//прерывание адреса
      000225 AE 52 17         [ 2]  754 	ldw	x, #0x5217
      000228 F6               [ 1]  755 	ld	a, (x)
      000229 44               [ 1]  756 	srl	a
      00022A A4 01            [ 1]  757 	and	a, #0x01
      00022C 27 16            [ 1]  758 	jreq	00102$
                                    759 ;	./libs/i2c_lib.c: 11: clr_sr1();
      00022E C6 52 17         [ 1]  760 	ld	a,0x5217
                                    761 ;	./libs/i2c_lib.c: 12: I2C_IRQ.ADDR = 1;
      000231 72 12u00uD0      [ 1]  762 	bset	_I2C_IRQ+0, #1
                                    763 ;	./libs/i2c_lib.c: 13: clr_sr3();//EV6
      000235 C6 52 19         [ 1]  764 	ld	a,0x5219
                                    765 ;	./libs/i2c_lib.c: 14: I2C_ITR -> ITEVTEN = 0;
      000238 72 13 52 1A      [ 1]  766 	bres	0x521a, #1
                                    767 ;	./libs/i2c_lib.c: 15: uart_write_byte(0xE1);
      00023C A6 E1            [ 1]  768 	ld	a, #0xe1
      00023E CDr01rC1         [ 4]  769 	call	_uart_write_byte
                                    770 ;	./libs/i2c_lib.c: 16: return;
      000241 CCr02rD7         [ 2]  771 	jp	00113$
      000244                        772 00102$:
                                    773 ;	./libs/i2c_lib.c: 19: if(I2C_SR1 -> TXE) //прерывание регистра данных(он пуст)
      000244 C6 52 17         [ 1]  774 	ld	a, 0x5217
      000247 4E               [ 1]  775 	swap	a
      000248 44               [ 1]  776 	srl	a
      000249 44               [ 1]  777 	srl	a
      00024A 44               [ 1]  778 	srl	a
      00024B A5 01            [ 1]  779 	bcp	a, #0x01
      00024D 27 17            [ 1]  780 	jreq	00104$
                                    781 ;	./libs/i2c_lib.c: 21: I2C_IRQ.TXE = 1;
      00024F 72 18u00uD0      [ 1]  782 	bset	_I2C_IRQ+0, #4
                                    783 ;	./libs/i2c_lib.c: 22: I2C_ITR -> ITBUFEN = 0;
      000253 72 15 52 1A      [ 1]  784 	bres	0x521a, #2
                                    785 ;	./libs/i2c_lib.c: 23: I2C_ITR -> ITEVTEN = 0;
      000257 72 13 52 1A      [ 1]  786 	bres	0x521a, #1
                                    787 ;	./libs/i2c_lib.c: 24: I2C_ITR -> ITERREN = 0;
      00025B 72 11 52 1A      [ 1]  788 	bres	0x521a, #0
                                    789 ;	./libs/i2c_lib.c: 25: uart_write_byte(0xEA);
      00025F A6 EA            [ 1]  790 	ld	a, #0xea
      000261 CDr01rC1         [ 4]  791 	call	_uart_write_byte
                                    792 ;	./libs/i2c_lib.c: 26: return;
      000264 20 71            [ 2]  793 	jra	00113$
      000266                        794 00104$:
                                    795 ;	./libs/i2c_lib.c: 28: if(I2C_SR1 -> RXNE) //прерывание регистра данных(он не пуст)
      000266 C6 52 17         [ 1]  796 	ld	a, 0x5217
      000269 4E               [ 1]  797 	swap	a
      00026A 44               [ 1]  798 	srl	a
      00026B 44               [ 1]  799 	srl	a
      00026C A5 01            [ 1]  800 	bcp	a, #0x01
      00026E 27 17            [ 1]  801 	jreq	00106$
                                    802 ;	./libs/i2c_lib.c: 30: I2C_IRQ.RXNE = 1;
      000270 72 16u00uD0      [ 1]  803 	bset	_I2C_IRQ+0, #3
                                    804 ;	./libs/i2c_lib.c: 31: I2C_ITR -> ITBUFEN = 0;
      000274 72 15 52 1A      [ 1]  805 	bres	0x521a, #2
                                    806 ;	./libs/i2c_lib.c: 32: I2C_ITR -> ITEVTEN = 0;
      000278 72 13 52 1A      [ 1]  807 	bres	0x521a, #1
                                    808 ;	./libs/i2c_lib.c: 33: I2C_ITR -> ITERREN = 0;
      00027C 72 11 52 1A      [ 1]  809 	bres	0x521a, #0
                                    810 ;	./libs/i2c_lib.c: 34: uart_write_byte(0xEB);
      000280 A6 EB            [ 1]  811 	ld	a, #0xeb
      000282 CDr01rC1         [ 4]  812 	call	_uart_write_byte
                                    813 ;	./libs/i2c_lib.c: 35: return;
      000285 20 50            [ 2]  814 	jra	00113$
      000287                        815 00106$:
                                    816 ;	./libs/i2c_lib.c: 38: if(I2C_SR1 -> SB)//EV5 прерывание стартового импульса
      000287 C6 52 17         [ 1]  817 	ld	a, 0x5217
      00028A A5 01            [ 1]  818 	bcp	a, #0x01
      00028C 27 0F            [ 1]  819 	jreq	00108$
                                    820 ;	./libs/i2c_lib.c: 40: I2C_IRQ.SB = 1;
      00028E 72 10u00uD0      [ 1]  821 	bset	_I2C_IRQ+0, #0
                                    822 ;	./libs/i2c_lib.c: 41: I2C_ITR -> ITEVTEN = 0;
      000292 72 13 52 1A      [ 1]  823 	bres	0x521a, #1
                                    824 ;	./libs/i2c_lib.c: 42: uart_write_byte(0xE2);
      000296 A6 E2            [ 1]  825 	ld	a, #0xe2
      000298 CDr01rC1         [ 4]  826 	call	_uart_write_byte
                                    827 ;	./libs/i2c_lib.c: 43: return;
      00029B 20 3A            [ 2]  828 	jra	00113$
      00029D                        829 00108$:
                                    830 ;	./libs/i2c_lib.c: 45: if(I2C_SR1 -> BTF) //прерывание отправки данных
      00029D C6 52 17         [ 1]  831 	ld	a, 0x5217
      0002A0 44               [ 1]  832 	srl	a
      0002A1 44               [ 1]  833 	srl	a
      0002A2 A5 01            [ 1]  834 	bcp	a, #0x01
      0002A4 27 0F            [ 1]  835 	jreq	00110$
                                    836 ;	./libs/i2c_lib.c: 47: I2C_IRQ.BTF = 1;
      0002A6 72 14u00uD0      [ 1]  837 	bset	_I2C_IRQ+0, #2
                                    838 ;	./libs/i2c_lib.c: 48: I2C_ITR -> ITEVTEN = 0;
      0002AA 72 13 52 1A      [ 1]  839 	bres	0x521a, #1
                                    840 ;	./libs/i2c_lib.c: 49: uart_write_byte(0xE3);
      0002AE A6 E3            [ 1]  841 	ld	a, #0xe3
      0002B0 CDr01rC1         [ 4]  842 	call	_uart_write_byte
                                    843 ;	./libs/i2c_lib.c: 50: return;
      0002B3 20 22            [ 2]  844 	jra	00113$
      0002B5                        845 00110$:
                                    846 ;	./libs/i2c_lib.c: 53: if(I2C_SR2 -> AF) //прерывание ошибки NACK
      0002B5 AE 52 18         [ 2]  847 	ldw	x, #0x5218
      0002B8 F6               [ 1]  848 	ld	a, (x)
      0002B9 44               [ 1]  849 	srl	a
      0002BA 44               [ 1]  850 	srl	a
      0002BB A4 01            [ 1]  851 	and	a, #0x01
      0002BD 27 17            [ 1]  852 	jreq	00112$
                                    853 ;	./libs/i2c_lib.c: 55: I2C_IRQ.AF = 1;
      0002BF 72 1Au00uD0      [ 1]  854 	bset	_I2C_IRQ+0, #5
                                    855 ;	./libs/i2c_lib.c: 56: I2C_ITR -> ITEVTEN = 0;
      0002C3 72 13 52 1A      [ 1]  856 	bres	0x521a, #1
                                    857 ;	./libs/i2c_lib.c: 57: I2C_ITR -> ITERREN = 0;
      0002C7 72 11 52 1A      [ 1]  858 	bres	0x521a, #0
                                    859 ;	./libs/i2c_lib.c: 58: I2C_ITR -> ITBUFEN = 0;
      0002CB 72 15 52 1A      [ 1]  860 	bres	0x521a, #2
                                    861 ;	./libs/i2c_lib.c: 59: uart_write_byte(0xEE);
      0002CF A6 EE            [ 1]  862 	ld	a, #0xee
      0002D1 CDr01rC1         [ 4]  863 	call	_uart_write_byte
                                    864 ;	./libs/i2c_lib.c: 60: return;
      0002D4 20 01            [ 2]  865 	jra	00113$
      0002D6                        866 00112$:
                                    867 ;	./libs/i2c_lib.c: 63: enableInterrupts(); 
      0002D6 9A               [ 1]  868 	rim
      0002D7                        869 00113$:
                                    870 ;	./libs/i2c_lib.c: 64: }
      0002D7 80               [11]  871 	iret
                                    872 ;	./libs/i2c_lib.c: 66: void i2c_init(void)
                                    873 ;	-----------------------------------------
                                    874 ;	 function i2c_init
                                    875 ;	-----------------------------------------
      0002D8                        876 _i2c_init:
                                    877 ;	./libs/i2c_lib.c: 70: I2C_CR1 -> PE = 0;// PE=0, disable I2C before setup
      0002D8 72 11 52 10      [ 1]  878 	bres	0x5210, #0
                                    879 ;	./libs/i2c_lib.c: 71: I2C_FREQR -> FREQ = 16;// peripheral frequence =16MHz
      0002DC C6 52 12         [ 1]  880 	ld	a, 0x5212
      0002DF A4 C0            [ 1]  881 	and	a, #0xc0
      0002E1 AA 10            [ 1]  882 	or	a, #0x10
      0002E3 C7 52 12         [ 1]  883 	ld	0x5212, a
                                    884 ;	./libs/i2c_lib.c: 72: I2C_CCRH -> CCR = 0;// =0
      0002E6 C6 52 1C         [ 1]  885 	ld	a, 0x521c
      0002E9 A4 F0            [ 1]  886 	and	a, #0xf0
      0002EB C7 52 1C         [ 1]  887 	ld	0x521c, a
                                    888 ;	./libs/i2c_lib.c: 73: I2C_CCRL -> CCR = 80;// 100kHz for I2C
      0002EE 35 50 52 1B      [ 1]  889 	mov	0x521b+0, #0x50
                                    890 ;	./libs/i2c_lib.c: 74: I2C_CCRH -> FS = 0;// set standart mode(100кHz)
      0002F2 72 1F 52 1C      [ 1]  891 	bres	0x521c, #7
                                    892 ;	./libs/i2c_lib.c: 75: I2C_OARH -> ADDMODE = 0;// 7-bit address mode
      0002F6 72 1F 52 14      [ 1]  893 	bres	0x5214, #7
                                    894 ;	./libs/i2c_lib.c: 76: I2C_OARH -> ADDCONF = 1;// see reference manual
      0002FA 72 10 52 14      [ 1]  895 	bset	0x5214, #0
                                    896 ;	./libs/i2c_lib.c: 77: I2C_CR1 -> PE = 1;// PE=1, enable I2C
      0002FE 72 10 52 10      [ 1]  897 	bset	0x5210, #0
                                    898 ;	./libs/i2c_lib.c: 78: }
      000302 81               [ 4]  899 	ret
                                    900 ;	./libs/i2c_lib.c: 80: void i2c_start(void)
                                    901 ;	-----------------------------------------
                                    902 ;	 function i2c_start
                                    903 ;	-----------------------------------------
      000303                        904 _i2c_start:
                                    905 ;	./libs/i2c_lib.c: 82: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000303 72 10 52 11      [ 1]  906 	bset	0x5211, #0
                                    907 ;	./libs/i2c_lib.c: 83: while(!I2C_SR1 -> SB);// Ожидание отправки стартового сигнала
      000307                        908 00101$:
      000307 72 01 52 17 FB   [ 2]  909 	btjf	0x5217, #0, 00101$
                                    910 ;	./libs/i2c_lib.c: 84: }
      00030C 81               [ 4]  911 	ret
                                    912 ;	./libs/i2c_lib.c: 86: void i2c_stop(void)
                                    913 ;	-----------------------------------------
                                    914 ;	 function i2c_stop
                                    915 ;	-----------------------------------------
      00030D                        916 _i2c_stop:
                                    917 ;	./libs/i2c_lib.c: 88: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00030D 72 12 52 11      [ 1]  918 	bset	0x5211, #1
                                    919 ;	./libs/i2c_lib.c: 89: }
      000311 81               [ 4]  920 	ret
                                    921 ;	./libs/i2c_lib.c: 91: uint8_t i2c_send_address(uint8_t address,uint8_t rw_type) 
                                    922 ;	-----------------------------------------
                                    923 ;	 function i2c_send_address
                                    924 ;	-----------------------------------------
      000312                        925 _i2c_send_address:
                                    926 ;	./libs/i2c_lib.c: 96: address = address << 1;
      000312 48               [ 1]  927 	sll	a
                                    928 ;	./libs/i2c_lib.c: 93: switch(rw_type)
      000313 88               [ 1]  929 	push	a
      000314 7B 04            [ 1]  930 	ld	a, (0x04, sp)
      000316 4A               [ 1]  931 	dec	a
      000317 84               [ 1]  932 	pop	a
      000318 26 02            [ 1]  933 	jrne	00102$
                                    934 ;	./libs/i2c_lib.c: 96: address = address << 1;
                                    935 ;	./libs/i2c_lib.c: 97: address |= 0x01; // Отправка адреса устройства с битом на чтение
      00031A AA 01            [ 1]  936 	or	a, #0x01
                                    937 ;	./libs/i2c_lib.c: 98: break;
                                    938 ;	./libs/i2c_lib.c: 99: default:
                                    939 ;	./libs/i2c_lib.c: 100: address = address << 1; // Отправка адреса устройства с битом на запись
                                    940 ;	./libs/i2c_lib.c: 102: }
      00031C                        941 00102$:
                                    942 ;	./libs/i2c_lib.c: 103: i2c_start();
      00031C 88               [ 1]  943 	push	a
      00031D CDr03r03         [ 4]  944 	call	_i2c_start
      000320 84               [ 1]  945 	pop	a
                                    946 ;	./libs/i2c_lib.c: 104: I2C_DR -> DR = address;
      000321 C7 52 16         [ 1]  947 	ld	0x5216, a
                                    948 ;	./libs/i2c_lib.c: 105: while(!I2C_SR1 -> ADDR)
      000324                        949 00106$:
      000324 AE 52 17         [ 2]  950 	ldw	x, #0x5217
      000327 F6               [ 1]  951 	ld	a, (x)
      000328 44               [ 1]  952 	srl	a
      000329 A4 01            [ 1]  953 	and	a, #0x01
      00032B 26 08            [ 1]  954 	jrne	00108$
                                    955 ;	./libs/i2c_lib.c: 106: if(I2C_SR2 -> AF)
      00032D 72 05 52 18 F2   [ 2]  956 	btjf	0x5218, #2, 00106$
                                    957 ;	./libs/i2c_lib.c: 107: return 0;
      000332 4F               [ 1]  958 	clr	a
      000333 20 08            [ 2]  959 	jra	00109$
      000335                        960 00108$:
                                    961 ;	./libs/i2c_lib.c: 108: clr_sr1();
      000335 C6 52 17         [ 1]  962 	ld	a,0x5217
                                    963 ;	./libs/i2c_lib.c: 109: clr_sr3();
      000338 C6 52 19         [ 1]  964 	ld	a,0x5219
                                    965 ;	./libs/i2c_lib.c: 110: return 1;
      00033B A6 01            [ 1]  966 	ld	a, #0x01
      00033D                        967 00109$:
                                    968 ;	./libs/i2c_lib.c: 111: }
      00033D 85               [ 2]  969 	popw	x
      00033E 5B 01            [ 2]  970 	addw	sp, #1
      000340 FC               [ 2]  971 	jp	(x)
                                    972 ;	./libs/i2c_lib.c: 113: uint8_t i2c_read_byte(void)
                                    973 ;	-----------------------------------------
                                    974 ;	 function i2c_read_byte
                                    975 ;	-----------------------------------------
      000341                        976 _i2c_read_byte:
                                    977 ;	./libs/i2c_lib.c: 115: while(!I2C_SR1 -> RXNE);
      000341                        978 00101$:
      000341 72 0D 52 17 FB   [ 2]  979 	btjf	0x5217, #6, 00101$
                                    980 ;	./libs/i2c_lib.c: 116: return I2C_DR -> DR;
      000346 C6 52 16         [ 1]  981 	ld	a, 0x5216
                                    982 ;	./libs/i2c_lib.c: 117: }
      000349 81               [ 4]  983 	ret
                                    984 ;	./libs/i2c_lib.c: 119: void i2c_read(uint8_t dev_addr, uint8_t size,uint8_t *data)
                                    985 ;	-----------------------------------------
                                    986 ;	 function i2c_read
                                    987 ;	-----------------------------------------
      00034A                        988 _i2c_read:
      00034A 52 04            [ 2]  989 	sub	sp, #4
                                    990 ;	./libs/i2c_lib.c: 121: if(i2c_send_address(dev_addr, 1))//проверка на ACK
      00034C 4B 01            [ 1]  991 	push	#0x01
      00034E CDr03r12         [ 4]  992 	call	_i2c_send_address
      000351 4D               [ 1]  993 	tnz	a
      000352 27 3C            [ 1]  994 	jreq	00103$
                                    995 ;	./libs/i2c_lib.c: 123: I2C_CR2 -> ACK = 1;//включение ответа на посылки 
      000354 72 14 52 11      [ 1]  996 	bset	0x5211, #2
                                    997 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000358 5F               [ 1]  998 	clrw	x
      000359 1F 03            [ 2]  999 	ldw	(0x03, sp), x
      00035B                       1000 00105$:
      00035B 5F               [ 1] 1001 	clrw	x
      00035C 7B 07            [ 1] 1002 	ld	a, (0x07, sp)
      00035E 97               [ 1] 1003 	ld	xl, a
      00035F 5A               [ 2] 1004 	decw	x
      000360 1F 01            [ 2] 1005 	ldw	(0x01, sp), x
      000362 1E 03            [ 2] 1006 	ldw	x, (0x03, sp)
      000364 13 01            [ 2] 1007 	cpw	x, (0x01, sp)
      000366 2E 12            [ 1] 1008 	jrsge	00101$
                                   1009 ;	./libs/i2c_lib.c: 126: data[i] = i2c_read_byte();//функция записи байта в элемент массива
      000368 1E 08            [ 2] 1010 	ldw	x, (0x08, sp)
      00036A 72 FB 03         [ 2] 1011 	addw	x, (0x03, sp)
      00036D 89               [ 2] 1012 	pushw	x
      00036E CDr03r41         [ 4] 1013 	call	_i2c_read_byte
      000371 85               [ 2] 1014 	popw	x
      000372 F7               [ 1] 1015 	ld	(x), a
                                   1016 ;	./libs/i2c_lib.c: 124: for(int i = 0;i < size-1;i++) //цикл чтения данных с шины
      000373 1E 03            [ 2] 1017 	ldw	x, (0x03, sp)
      000375 5C               [ 1] 1018 	incw	x
      000376 1F 03            [ 2] 1019 	ldw	(0x03, sp), x
      000378 20 E1            [ 2] 1020 	jra	00105$
      00037A                       1021 00101$:
                                   1022 ;	./libs/i2c_lib.c: 128: I2C_CR2 -> ACK = 0;//выключение ответа на посылки
      00037A C6 52 11         [ 1] 1023 	ld	a, 0x5211
      00037D A4 FB            [ 1] 1024 	and	a, #0xfb
      00037F C7 52 11         [ 1] 1025 	ld	0x5211, a
                                   1026 ;	./libs/i2c_lib.c: 130: data[size-1] = i2c_read_byte();
      000382 1E 08            [ 2] 1027 	ldw	x, (0x08, sp)
      000384 72 FB 01         [ 2] 1028 	addw	x, (0x01, sp)
      000387 89               [ 2] 1029 	pushw	x
      000388 CDr03r41         [ 4] 1030 	call	_i2c_read_byte
      00038B 85               [ 2] 1031 	popw	x
      00038C F7               [ 1] 1032 	ld	(x), a
                                   1033 ;	./libs/i2c_lib.c: 132: i2c_stop();
      00038D CDr03r0D         [ 4] 1034 	call	_i2c_stop
      000390                       1035 00103$:
                                   1036 ;	./libs/i2c_lib.c: 135: i2c_stop();
      000390 1E 05            [ 2] 1037 	ldw	x, (5, sp)
      000392 1F 08            [ 2] 1038 	ldw	(8, sp), x
      000394 5B 07            [ 2] 1039 	addw	sp, #7
                                   1040 ;	./libs/i2c_lib.c: 137: }
      000396 CCr03r0D         [ 2] 1041 	jp	_i2c_stop
                                   1042 ;	./libs/i2c_lib.c: 139: uint8_t i2c_send_byte(uint8_t data)
                                   1043 ;	-----------------------------------------
                                   1044 ;	 function i2c_send_byte
                                   1045 ;	-----------------------------------------
      000399                       1046 _i2c_send_byte:
                                   1047 ;	./libs/i2c_lib.c: 141: I2C_DR -> DR = data; //Отправка данных
      000399 C7 52 16         [ 1] 1048 	ld	0x5216, a
                                   1049 ;	./libs/i2c_lib.c: 142: while(!I2C_SR1 -> TXE)
      00039C                       1050 00103$:
      00039C 72 0E 52 17 08   [ 2] 1051 	btjt	0x5217, #7, 00105$
                                   1052 ;	./libs/i2c_lib.c: 143: if(I2C_SR2 -> AF)
      0003A1 72 05 52 18 F6   [ 2] 1053 	btjf	0x5218, #2, 00103$
                                   1054 ;	./libs/i2c_lib.c: 144: return 1;
      0003A6 A6 01            [ 1] 1055 	ld	a, #0x01
      0003A8 81               [ 4] 1056 	ret
      0003A9                       1057 00105$:
                                   1058 ;	./libs/i2c_lib.c: 145: return 0;//флаг ответа
      0003A9 4F               [ 1] 1059 	clr	a
                                   1060 ;	./libs/i2c_lib.c: 146: }
      0003AA 81               [ 4] 1061 	ret
                                   1062 ;	./libs/i2c_lib.c: 148: void i2c_write(uint8_t dev_addr,uint8_t size,uint8_t *data)
                                   1063 ;	-----------------------------------------
                                   1064 ;	 function i2c_write
                                   1065 ;	-----------------------------------------
      0003AB                       1066 _i2c_write:
      0003AB 52 02            [ 2] 1067 	sub	sp, #2
                                   1068 ;	./libs/i2c_lib.c: 150: if(i2c_send_address(dev_addr, 0))//Проверка на АСК бит
      0003AD 4B 00            [ 1] 1069 	push	#0x00
      0003AF CDr03r12         [ 4] 1070 	call	_i2c_send_address
      0003B2 4D               [ 1] 1071 	tnz	a
      0003B3 27 1D            [ 1] 1072 	jreq	00105$
                                   1073 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003B5 5F               [ 1] 1074 	clrw	x
      0003B6                       1075 00107$:
      0003B6 7B 05            [ 1] 1076 	ld	a, (0x05, sp)
      0003B8 6B 02            [ 1] 1077 	ld	(0x02, sp), a
      0003BA 0F 01            [ 1] 1078 	clr	(0x01, sp)
      0003BC 13 01            [ 2] 1079 	cpw	x, (0x01, sp)
      0003BE 2E 12            [ 1] 1080 	jrsge	00105$
                                   1081 ;	./libs/i2c_lib.c: 153: if(i2c_send_byte(data[i]))//Проверка на АСК бит
      0003C0 90 93            [ 1] 1082 	ldw	y, x
      0003C2 72 F9 06         [ 2] 1083 	addw	y, (0x06, sp)
      0003C5 90 F6            [ 1] 1084 	ld	a, (y)
      0003C7 89               [ 2] 1085 	pushw	x
      0003C8 CDr03r99         [ 4] 1086 	call	_i2c_send_byte
      0003CB 85               [ 2] 1087 	popw	x
      0003CC 4D               [ 1] 1088 	tnz	a
      0003CD 26 03            [ 1] 1089 	jrne	00105$
                                   1090 ;	./libs/i2c_lib.c: 151: for(int i = 0;i < size;i++)
      0003CF 5C               [ 1] 1091 	incw	x
      0003D0 20 E4            [ 2] 1092 	jra	00107$
      0003D2                       1093 00105$:
                                   1094 ;	./libs/i2c_lib.c: 158: i2c_stop();
      0003D2 1E 03            [ 2] 1095 	ldw	x, (3, sp)
      0003D4 1F 06            [ 2] 1096 	ldw	(6, sp), x
      0003D6 5B 05            [ 2] 1097 	addw	sp, #5
                                   1098 ;	./libs/i2c_lib.c: 159: }
      0003D8 CCr03r0D         [ 2] 1099 	jp	_i2c_stop
                                   1100 ;	./libs/i2c_lib.c: 161: uint8_t i2c_scan(void) 
                                   1101 ;	-----------------------------------------
                                   1102 ;	 function i2c_scan
                                   1103 ;	-----------------------------------------
      0003DB                       1104 _i2c_scan:
      0003DB 52 02            [ 2] 1105 	sub	sp, #2
                                   1106 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      0003DD A6 01            [ 1] 1107 	ld	a, #0x01
      0003DF 6B 01            [ 1] 1108 	ld	(0x01, sp), a
      0003E1                       1109 00105$:
      0003E1 A1 7F            [ 1] 1110 	cp	a, #0x7f
      0003E3 24 22            [ 1] 1111 	jrnc	00103$
                                   1112 ;	./libs/i2c_lib.c: 165: if(i2c_send_address(addr, 0))//отправка адреса на проверку 
      0003E5 88               [ 1] 1113 	push	a
      0003E6 4B 00            [ 1] 1114 	push	#0x00
      0003E8 CDr03r12         [ 4] 1115 	call	_i2c_send_address
      0003EB 6B 03            [ 1] 1116 	ld	(0x03, sp), a
      0003ED 84               [ 1] 1117 	pop	a
      0003EE 0D 02            [ 1] 1118 	tnz	(0x02, sp)
      0003F0 27 07            [ 1] 1119 	jreq	00102$
                                   1120 ;	./libs/i2c_lib.c: 167: i2c_stop();//адрес совпал 
      0003F2 CDr03r0D         [ 4] 1121 	call	_i2c_stop
                                   1122 ;	./libs/i2c_lib.c: 168: return addr;// выход из цикла
      0003F5 7B 01            [ 1] 1123 	ld	a, (0x01, sp)
      0003F7 20 12            [ 2] 1124 	jra	00107$
      0003F9                       1125 00102$:
                                   1126 ;	./libs/i2c_lib.c: 170: I2C_SR2 -> AF = 0;//очистка флага ошибки
      0003F9 AE 52 18         [ 2] 1127 	ldw	x, #0x5218
      0003FC 88               [ 1] 1128 	push	a
      0003FD F6               [ 1] 1129 	ld	a, (x)
      0003FE A4 FB            [ 1] 1130 	and	a, #0xfb
      000400 F7               [ 1] 1131 	ld	(x), a
      000401 84               [ 1] 1132 	pop	a
                                   1133 ;	./libs/i2c_lib.c: 163: for (uint8_t addr = 1; addr < 127; addr++)
      000402 4C               [ 1] 1134 	inc	a
      000403 6B 01            [ 1] 1135 	ld	(0x01, sp), a
      000405 20 DA            [ 2] 1136 	jra	00105$
      000407                       1137 00103$:
                                   1138 ;	./libs/i2c_lib.c: 172: i2c_stop();//совпадений нет выход из функции
      000407 CDr03r0D         [ 4] 1139 	call	_i2c_stop
                                   1140 ;	./libs/i2c_lib.c: 173: return 0;
      00040A 4F               [ 1] 1141 	clr	a
      00040B                       1142 00107$:
                                   1143 ;	./libs/i2c_lib.c: 174: }
      00040B 5B 02            [ 2] 1144 	addw	sp, #2
      00040D 81               [ 4] 1145 	ret
                                   1146 ;	./libs/i2c_lib.c: 176: void i2c_start_irq(void)
                                   1147 ;	-----------------------------------------
                                   1148 ;	 function i2c_start_irq
                                   1149 ;	-----------------------------------------
      00040E                       1150 _i2c_start_irq:
                                   1151 ;	./libs/i2c_lib.c: 179: I2C_ITR -> ITEVTEN = 1;//Включение прерываний для обработки сигнала старт
      00040E 72 12 52 1A      [ 1] 1152 	bset	0x521a, #1
                                   1153 ;	./libs/i2c_lib.c: 180: I2C_CR2 -> START = 1;// Отправляем стартовый сигнал
      000412 72 10 52 11      [ 1] 1154 	bset	0x5211, #0
                                   1155 ;	./libs/i2c_lib.c: 181: while(I2C_ITR -> ITEVTEN);// Ожидание отправки стартового сигнала
      000416                       1156 00101$:
      000416 C6 52 1A         [ 1] 1157 	ld	a, 0x521a
      000419 A5 02            [ 1] 1158 	bcp	a, #2
      00041B 26 F9            [ 1] 1159 	jrne	00101$
                                   1160 ;	./libs/i2c_lib.c: 182: }
      00041D 81               [ 4] 1161 	ret
                                   1162 ;	./libs/i2c_lib.c: 184: void i2c_stop_irq(void)
                                   1163 ;	-----------------------------------------
                                   1164 ;	 function i2c_stop_irq
                                   1165 ;	-----------------------------------------
      00041E                       1166 _i2c_stop_irq:
                                   1167 ;	./libs/i2c_lib.c: 186: I2C_CR2 -> STOP = 1;// Отправка стопового сигнала  
      00041E 72 12 52 11      [ 1] 1168 	bset	0x5211, #1
                                   1169 ;	./libs/i2c_lib.c: 187: }
      000422 81               [ 4] 1170 	ret
                                   1171 ;	./libs/ssd1306_lib.c: 3: int get_bit(int data,int bit)
                                   1172 ;	-----------------------------------------
                                   1173 ;	 function get_bit
                                   1174 ;	-----------------------------------------
      000423                       1175 _get_bit:
                                   1176 ;	./libs/ssd1306_lib.c: 5: return ((data >> bit) & 1) ? 1 : 0;
      000423 7B 04            [ 1] 1177 	ld	a, (0x04, sp)
      000425 27 04            [ 1] 1178 	jreq	00113$
      000427                       1179 00112$:
      000427 57               [ 2] 1180 	sraw	x
      000428 4A               [ 1] 1181 	dec	a
      000429 26 FC            [ 1] 1182 	jrne	00112$
      00042B                       1183 00113$:
      00042B 54               [ 2] 1184 	srlw	x
      00042C 24 03            [ 1] 1185 	jrnc	00103$
      00042E 5F               [ 1] 1186 	clrw	x
      00042F 5C               [ 1] 1187 	incw	x
      000430 21                    1188 	.byte 0x21
      000431                       1189 00103$:
      000431 5F               [ 1] 1190 	clrw	x
      000432                       1191 00104$:
                                   1192 ;	./libs/ssd1306_lib.c: 6: }
      000432 90 85            [ 2] 1193 	popw	y
      000434 5B 02            [ 2] 1194 	addw	sp, #2
      000436 90 FC            [ 2] 1195 	jp	(y)
                                   1196 ;	./libs/ssd1306_lib.c: 7: int set_bit(int data,int bit, int value)
                                   1197 ;	-----------------------------------------
                                   1198 ;	 function set_bit
                                   1199 ;	-----------------------------------------
      000438                       1200 _set_bit:
      000438 52 04            [ 2] 1201 	sub	sp, #4
      00043A 1F 01            [ 2] 1202 	ldw	(0x01, sp), x
                                   1203 ;	./libs/ssd1306_lib.c: 9: int mask = 1 << bit ;
      00043C 5F               [ 1] 1204 	clrw	x
      00043D 5C               [ 1] 1205 	incw	x
      00043E 1F 03            [ 2] 1206 	ldw	(0x03, sp), x
      000440 7B 08            [ 1] 1207 	ld	a, (0x08, sp)
      000442 27 07            [ 1] 1208 	jreq	00114$
      000444                       1209 00113$:
      000444 08 04            [ 1] 1210 	sll	(0x04, sp)
      000446 09 03            [ 1] 1211 	rlc	(0x03, sp)
      000448 4A               [ 1] 1212 	dec	a
      000449 26 F9            [ 1] 1213 	jrne	00113$
      00044B                       1214 00114$:
                                   1215 ;	./libs/ssd1306_lib.c: 10: switch(value)
      00044B 1E 09            [ 2] 1216 	ldw	x, (0x09, sp)
      00044D 5A               [ 2] 1217 	decw	x
      00044E 26 0B            [ 1] 1218 	jrne	00102$
                                   1219 ;	./libs/ssd1306_lib.c: 13: data |= mask;
      000450 7B 02            [ 1] 1220 	ld	a, (0x02, sp)
      000452 1A 04            [ 1] 1221 	or	a, (0x04, sp)
      000454 97               [ 1] 1222 	ld	xl, a
      000455 7B 01            [ 1] 1223 	ld	a, (0x01, sp)
      000457 1A 03            [ 1] 1224 	or	a, (0x03, sp)
                                   1225 ;	./libs/ssd1306_lib.c: 14: break;
      000459 20 09            [ 2] 1226 	jra	00103$
                                   1227 ;	./libs/ssd1306_lib.c: 16: default:
      00045B                       1228 00102$:
                                   1229 ;	./libs/ssd1306_lib.c: 17: data &= ~mask;
      00045B 1E 03            [ 2] 1230 	ldw	x, (0x03, sp)
      00045D 53               [ 2] 1231 	cplw	x
      00045E 9F               [ 1] 1232 	ld	a, xl
      00045F 14 02            [ 1] 1233 	and	a, (0x02, sp)
      000461 02               [ 1] 1234 	rlwa	x
      000462 14 01            [ 1] 1235 	and	a, (0x01, sp)
                                   1236 ;	./libs/ssd1306_lib.c: 19: }
      000464                       1237 00103$:
                                   1238 ;	./libs/ssd1306_lib.c: 20: return data;
      000464 95               [ 1] 1239 	ld	xh, a
                                   1240 ;	./libs/ssd1306_lib.c: 21: }
      000465 16 05            [ 2] 1241 	ldw	y, (5, sp)
      000467 5B 0A            [ 2] 1242 	addw	sp, #10
      000469 90 FC            [ 2] 1243 	jp	(y)
                                   1244 ;	./libs/ssd1306_lib.c: 23: void ssd1306_init(void)
                                   1245 ;	-----------------------------------------
                                   1246 ;	 function ssd1306_init
                                   1247 ;	-----------------------------------------
      00046B                       1248 _ssd1306_init:
      00046B 52 1B            [ 2] 1249 	sub	sp, #27
                                   1250 ;	./libs/ssd1306_lib.c: 25: uint8_t setup_buffer[27] = {COMMAND, DISPLAY_OFF, 
      00046D 96               [ 1] 1251 	ldw	x, sp
      00046E 5C               [ 1] 1252 	incw	x
      00046F 7F               [ 1] 1253 	clr	(x)
      000470 A6 AE            [ 1] 1254 	ld	a, #0xae
      000472 6B 02            [ 1] 1255 	ld	(0x02, sp), a
      000474 A6 D5            [ 1] 1256 	ld	a, #0xd5
      000476 6B 03            [ 1] 1257 	ld	(0x03, sp), a
      000478 A6 80            [ 1] 1258 	ld	a, #0x80
      00047A 6B 04            [ 1] 1259 	ld	(0x04, sp), a
      00047C A6 A8            [ 1] 1260 	ld	a, #0xa8
      00047E 6B 05            [ 1] 1261 	ld	(0x05, sp), a
      000480 A6 1F            [ 1] 1262 	ld	a, #0x1f
      000482 6B 06            [ 1] 1263 	ld	(0x06, sp), a
      000484 A6 D3            [ 1] 1264 	ld	a, #0xd3
      000486 6B 07            [ 1] 1265 	ld	(0x07, sp), a
      000488 0F 08            [ 1] 1266 	clr	(0x08, sp)
      00048A A6 40            [ 1] 1267 	ld	a, #0x40
      00048C 6B 09            [ 1] 1268 	ld	(0x09, sp), a
      00048E A6 8D            [ 1] 1269 	ld	a, #0x8d
      000490 6B 0A            [ 1] 1270 	ld	(0x0a, sp), a
      000492 A6 14            [ 1] 1271 	ld	a, #0x14
      000494 6B 0B            [ 1] 1272 	ld	(0x0b, sp), a
      000496 A6 DB            [ 1] 1273 	ld	a, #0xdb
      000498 6B 0C            [ 1] 1274 	ld	(0x0c, sp), a
      00049A A6 40            [ 1] 1275 	ld	a, #0x40
      00049C 6B 0D            [ 1] 1276 	ld	(0x0d, sp), a
      00049E A6 A4            [ 1] 1277 	ld	a, #0xa4
      0004A0 6B 0E            [ 1] 1278 	ld	(0x0e, sp), a
      0004A2 A6 A6            [ 1] 1279 	ld	a, #0xa6
      0004A4 6B 0F            [ 1] 1280 	ld	(0x0f, sp), a
      0004A6 A6 DA            [ 1] 1281 	ld	a, #0xda
      0004A8 6B 10            [ 1] 1282 	ld	(0x10, sp), a
      0004AA A6 02            [ 1] 1283 	ld	a, #0x02
      0004AC 6B 11            [ 1] 1284 	ld	(0x11, sp), a
      0004AE A6 81            [ 1] 1285 	ld	a, #0x81
      0004B0 6B 12            [ 1] 1286 	ld	(0x12, sp), a
      0004B2 A6 8F            [ 1] 1287 	ld	a, #0x8f
      0004B4 6B 13            [ 1] 1288 	ld	(0x13, sp), a
      0004B6 A6 D9            [ 1] 1289 	ld	a, #0xd9
      0004B8 6B 14            [ 1] 1290 	ld	(0x14, sp), a
      0004BA A6 F1            [ 1] 1291 	ld	a, #0xf1
      0004BC 6B 15            [ 1] 1292 	ld	(0x15, sp), a
      0004BE A6 20            [ 1] 1293 	ld	a, #0x20
      0004C0 6B 16            [ 1] 1294 	ld	(0x16, sp), a
      0004C2 0F 17            [ 1] 1295 	clr	(0x17, sp)
      0004C4 A6 A0            [ 1] 1296 	ld	a, #0xa0
      0004C6 6B 18            [ 1] 1297 	ld	(0x18, sp), a
      0004C8 A6 C0            [ 1] 1298 	ld	a, #0xc0
      0004CA 6B 19            [ 1] 1299 	ld	(0x19, sp), a
      0004CC A6 1F            [ 1] 1300 	ld	a, #0x1f
      0004CE 6B 1A            [ 1] 1301 	ld	(0x1a, sp), a
      0004D0 A6 AF            [ 1] 1302 	ld	a, #0xaf
      0004D2 6B 1B            [ 1] 1303 	ld	(0x1b, sp), a
                                   1304 ;	./libs/ssd1306_lib.c: 41: i2c_write(I2C_DISPLAY_ADDR, 27, setup_buffer);
      0004D4 89               [ 2] 1305 	pushw	x
      0004D5 4B 1B            [ 1] 1306 	push	#0x1b
      0004D7 A6 3C            [ 1] 1307 	ld	a, #0x3c
      0004D9 CDr03rAB         [ 4] 1308 	call	_i2c_write
                                   1309 ;	./libs/ssd1306_lib.c: 43: }
      0004DC 5B 1B            [ 2] 1310 	addw	sp, #27
      0004DE 81               [ 4] 1311 	ret
                                   1312 ;	./libs/ssd1306_lib.c: 45: void ssd1306_set_params_to_write(void)
                                   1313 ;	-----------------------------------------
                                   1314 ;	 function ssd1306_set_params_to_write
                                   1315 ;	-----------------------------------------
      0004DF                       1316 _ssd1306_set_params_to_write:
      0004DF 52 07            [ 2] 1317 	sub	sp, #7
                                   1318 ;	./libs/ssd1306_lib.c: 47: uint8_t set_params_buf[7] = {COMMAND,
      0004E1 96               [ 1] 1319 	ldw	x, sp
      0004E2 5C               [ 1] 1320 	incw	x
      0004E3 7F               [ 1] 1321 	clr	(x)
      0004E4 A6 22            [ 1] 1322 	ld	a, #0x22
      0004E6 6B 02            [ 1] 1323 	ld	(0x02, sp), a
      0004E8 0F 03            [ 1] 1324 	clr	(0x03, sp)
      0004EA A6 03            [ 1] 1325 	ld	a, #0x03
      0004EC 6B 04            [ 1] 1326 	ld	(0x04, sp), a
      0004EE A6 21            [ 1] 1327 	ld	a, #0x21
      0004F0 6B 05            [ 1] 1328 	ld	(0x05, sp), a
      0004F2 0F 06            [ 1] 1329 	clr	(0x06, sp)
      0004F4 A6 7F            [ 1] 1330 	ld	a, #0x7f
      0004F6 6B 07            [ 1] 1331 	ld	(0x07, sp), a
                                   1332 ;	./libs/ssd1306_lib.c: 51: i2c_write(I2C_DISPLAY_ADDR,7,set_params_buf);
      0004F8 89               [ 2] 1333 	pushw	x
      0004F9 4B 07            [ 1] 1334 	push	#0x07
      0004FB A6 3C            [ 1] 1335 	ld	a, #0x3c
      0004FD CDr03rAB         [ 4] 1336 	call	_i2c_write
                                   1337 ;	./libs/ssd1306_lib.c: 52: }
      000500 5B 07            [ 2] 1338 	addw	sp, #7
      000502 81               [ 4] 1339 	ret
                                   1340 ;	./libs/ssd1306_lib.c: 54: void ssd1306_draw_pixel(uint8_t *buffer, uint8_t x, uint8_t y, uint8_t color)
                                   1341 ;	-----------------------------------------
                                   1342 ;	 function ssd1306_draw_pixel
                                   1343 ;	-----------------------------------------
      000503                       1344 _ssd1306_draw_pixel:
      000503 52 08            [ 2] 1345 	sub	sp, #8
      000505 1F 07            [ 2] 1346 	ldw	(0x07, sp), x
                                   1347 ;	./libs/ssd1306_lib.c: 56: buffer[x + ((y / 8) * SSD1306_LCDWIDTH)] = set_bit(buffer[x + ((y / 8) * SSD1306_LCDWIDTH)],(y % 8),color);
      000507 6B 06            [ 1] 1348 	ld	(0x06, sp), a
      000509 0F 05            [ 1] 1349 	clr	(0x05, sp)
      00050B 7B 0B            [ 1] 1350 	ld	a, (0x0b, sp)
      00050D 0F 01            [ 1] 1351 	clr	(0x01, sp)
      00050F 97               [ 1] 1352 	ld	xl, a
      000510 02               [ 1] 1353 	rlwa	x
      000511 4F               [ 1] 1354 	clr	a
      000512 01               [ 1] 1355 	rrwa	x
      000513 5D               [ 2] 1356 	tnzw	x
      000514 2A 03            [ 1] 1357 	jrpl	00103$
      000516 1C 00 07         [ 2] 1358 	addw	x, #0x0007
      000519                       1359 00103$:
      000519 57               [ 2] 1360 	sraw	x
      00051A 57               [ 2] 1361 	sraw	x
      00051B 57               [ 2] 1362 	sraw	x
      00051C 58               [ 2] 1363 	sllw	x
      00051D 58               [ 2] 1364 	sllw	x
      00051E 58               [ 2] 1365 	sllw	x
      00051F 58               [ 2] 1366 	sllw	x
      000520 58               [ 2] 1367 	sllw	x
      000521 58               [ 2] 1368 	sllw	x
      000522 58               [ 2] 1369 	sllw	x
      000523 72 FB 05         [ 2] 1370 	addw	x, (0x05, sp)
      000526 72 FB 07         [ 2] 1371 	addw	x, (0x07, sp)
      000529 1F 03            [ 2] 1372 	ldw	(0x03, sp), x
      00052B 90 5F            [ 1] 1373 	clrw	y
      00052D 61               [ 1] 1374 	exg	a, yl
      00052E 7B 0C            [ 1] 1375 	ld	a, (0x0c, sp)
      000530 61               [ 1] 1376 	exg	a, yl
      000531 A4 07            [ 1] 1377 	and	a, #0x07
      000533 6B 06            [ 1] 1378 	ld	(0x06, sp), a
      000535 0F 05            [ 1] 1379 	clr	(0x05, sp)
      000537 1E 03            [ 2] 1380 	ldw	x, (0x03, sp)
      000539 F6               [ 1] 1381 	ld	a, (x)
      00053A 5F               [ 1] 1382 	clrw	x
      00053B 90 89            [ 2] 1383 	pushw	y
      00053D 16 07            [ 2] 1384 	ldw	y, (0x07, sp)
      00053F 90 89            [ 2] 1385 	pushw	y
      000541 97               [ 1] 1386 	ld	xl, a
      000542 CDr04r38         [ 4] 1387 	call	_set_bit
      000545 9F               [ 1] 1388 	ld	a, xl
      000546 1E 03            [ 2] 1389 	ldw	x, (0x03, sp)
      000548 F7               [ 1] 1390 	ld	(x), a
                                   1391 ;	./libs/ssd1306_lib.c: 57: }
      000549 1E 09            [ 2] 1392 	ldw	x, (9, sp)
      00054B 5B 0C            [ 2] 1393 	addw	sp, #12
      00054D FC               [ 2] 1394 	jp	(x)
                                   1395 ;	./libs/ssd1306_lib.c: 59: void ssd1306_buffer_clean(void)
                                   1396 ;	-----------------------------------------
                                   1397 ;	 function ssd1306_buffer_clean
                                   1398 ;	-----------------------------------------
      00054E                       1399 _ssd1306_buffer_clean:
                                   1400 ;	./libs/ssd1306_lib.c: 61: memset(main_buffer,0,512);
      00054E 4B 00            [ 1] 1401 	push	#0x00
      000550 4B 02            [ 1] 1402 	push	#0x02
      000552 5F               [ 1] 1403 	clrw	x
      000553 89               [ 2] 1404 	pushw	x
      000554 AEr01r69         [ 2] 1405 	ldw	x, #(_main_buffer+0)
      000557 CDr00r00         [ 4] 1406 	call	_memset
                                   1407 ;	./libs/ssd1306_lib.c: 62: }
      00055A 81               [ 4] 1408 	ret
                                   1409 ;	./libs/ssd1306_lib.c: 63: void ssd1306_send_buffer(void)
                                   1410 ;	-----------------------------------------
                                   1411 ;	 function ssd1306_send_buffer
                                   1412 ;	-----------------------------------------
      00055B                       1413 _ssd1306_send_buffer:
      00055B 52 04            [ 2] 1414 	sub	sp, #4
                                   1415 ;	./libs/ssd1306_lib.c: 65: ssd1306_set_params_to_write();
      00055D CDr04rDF         [ 4] 1416 	call	_ssd1306_set_params_to_write
                                   1417 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      000560 5F               [ 1] 1418 	clrw	x
      000561 1F 03            [ 2] 1419 	ldw	(0x03, sp), x
      000563                       1420 00112$:
      000563 1E 03            [ 2] 1421 	ldw	x, (0x03, sp)
      000565 A3 00 04         [ 2] 1422 	cpw	x, #0x0004
      000568 2E 43            [ 1] 1423 	jrsge	00114$
                                   1424 ;	./libs/ssd1306_lib.c: 68: if(i2c_send_address(I2C_DISPLAY_ADDR, 0))//Проверка на АСК бит
      00056A 4B 00            [ 1] 1425 	push	#0x00
      00056C A6 3C            [ 1] 1426 	ld	a, #0x3c
      00056E CDr03r12         [ 4] 1427 	call	_i2c_send_address
      000571 4D               [ 1] 1428 	tnz	a
      000572 27 2F            [ 1] 1429 	jreq	00105$
                                   1430 ;	./libs/ssd1306_lib.c: 70: i2c_send_byte(SET_DISPLAY_START_LINE);
      000574 A6 40            [ 1] 1431 	ld	a, #0x40
      000576 CDr03r99         [ 4] 1432 	call	_i2c_send_byte
                                   1433 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      000579 1E 03            [ 2] 1434 	ldw	x, (0x03, sp)
      00057B 58               [ 2] 1435 	sllw	x
      00057C 58               [ 2] 1436 	sllw	x
      00057D 58               [ 2] 1437 	sllw	x
      00057E 58               [ 2] 1438 	sllw	x
      00057F 58               [ 2] 1439 	sllw	x
      000580 58               [ 2] 1440 	sllw	x
      000581 58               [ 2] 1441 	sllw	x
      000582 1F 01            [ 2] 1442 	ldw	(0x01, sp), x
      000584 5F               [ 1] 1443 	clrw	x
      000585                       1444 00109$:
      000585 A3 00 80         [ 2] 1445 	cpw	x, #0x0080
      000588 2E 14            [ 1] 1446 	jrsge	00103$
                                   1447 ;	./libs/ssd1306_lib.c: 73: if(i2c_send_byte(main_buffer[i+(128*j)]))//Проверка на АСК бит
      00058A 90 93            [ 1] 1448 	ldw	y, x
      00058C 72 F9 01         [ 2] 1449 	addw	y, (0x01, sp)
      00058F 90 D6u01u69      [ 1] 1450 	ld	a, (_main_buffer+0, y)
      000593 89               [ 2] 1451 	pushw	x
      000594 CDr03r99         [ 4] 1452 	call	_i2c_send_byte
      000597 85               [ 2] 1453 	popw	x
      000598 4D               [ 1] 1454 	tnz	a
      000599 26 03            [ 1] 1455 	jrne	00103$
                                   1456 ;	./libs/ssd1306_lib.c: 71: for(int i = 0;i < 128;i++)
      00059B 5C               [ 1] 1457 	incw	x
      00059C 20 E7            [ 2] 1458 	jra	00109$
      00059E                       1459 00103$:
                                   1460 ;	./libs/ssd1306_lib.c: 78: i2c_stop();
      00059E CDr03r0D         [ 4] 1461 	call	_i2c_stop
      0005A1 20 03            [ 2] 1462 	jra	00113$
      0005A3                       1463 00105$:
                                   1464 ;	./libs/ssd1306_lib.c: 81: i2c_stop();
      0005A3 CDr03r0D         [ 4] 1465 	call	_i2c_stop
      0005A6                       1466 00113$:
                                   1467 ;	./libs/ssd1306_lib.c: 66: for(int j = 0;j<4;j++)
      0005A6 1E 03            [ 2] 1468 	ldw	x, (0x03, sp)
      0005A8 5C               [ 1] 1469 	incw	x
      0005A9 1F 03            [ 2] 1470 	ldw	(0x03, sp), x
      0005AB 20 B6            [ 2] 1471 	jra	00112$
      0005AD                       1472 00114$:
                                   1473 ;	./libs/ssd1306_lib.c: 83: }
      0005AD 5B 04            [ 2] 1474 	addw	sp, #4
      0005AF 81               [ 4] 1475 	ret
                                   1476 ;	./libs/ssd1306_lib.c: 85: void ssd1306_buffer_write(int x, int y, const uint8_t *data)
                                   1477 ;	-----------------------------------------
                                   1478 ;	 function ssd1306_buffer_write
                                   1479 ;	-----------------------------------------
      0005B0                       1480 _ssd1306_buffer_write:
      0005B0 52 0D            [ 2] 1481 	sub	sp, #13
      0005B2 1F 08            [ 2] 1482 	ldw	(0x08, sp), x
                                   1483 ;	./libs/ssd1306_lib.c: 87: for (int height = 0; height < 8; height++)
      0005B4 5F               [ 1] 1484 	clrw	x
      0005B5 1F 0A            [ 2] 1485 	ldw	(0x0a, sp), x
      0005B7                       1486 00109$:
      0005B7 1E 0A            [ 2] 1487 	ldw	x, (0x0a, sp)
      0005B9 A3 00 08         [ 2] 1488 	cpw	x, #0x0008
      0005BC 2F 03            [ 1] 1489 	jrslt	00150$
      0005BE CCr06r40         [ 2] 1490 	jp	00111$
      0005C1                       1491 00150$:
                                   1492 ;	./libs/ssd1306_lib.c: 89: for (int width = 0; width < 8; width++)
      0005C1 1E 12            [ 2] 1493 	ldw	x, (0x12, sp)
      0005C3 72 FB 0A         [ 2] 1494 	addw	x, (0x0a, sp)
      0005C6 1F 05            [ 2] 1495 	ldw	(0x05, sp), x
      0005C8 5F               [ 1] 1496 	clrw	x
      0005C9 1F 0C            [ 2] 1497 	ldw	(0x0c, sp), x
      0005CB                       1498 00106$:
      0005CB 1E 0C            [ 2] 1499 	ldw	x, (0x0c, sp)
      0005CD A3 00 08         [ 2] 1500 	cpw	x, #0x0008
      0005D0 2E 66            [ 1] 1501 	jrsge	00110$
                                   1502 ;	./libs/ssd1306_lib.c: 90: if(data[height + width / 8] & (128 >> (width & 7)))
      0005D2 1E 0A            [ 2] 1503 	ldw	x, (0x0a, sp)
      0005D4 72 FB 12         [ 2] 1504 	addw	x, (0x12, sp)
      0005D7 F6               [ 1] 1505 	ld	a, (x)
      0005D8 6B 07            [ 1] 1506 	ld	(0x07, sp), a
      0005DA 7B 0D            [ 1] 1507 	ld	a, (0x0d, sp)
      0005DC A4 07            [ 1] 1508 	and	a, #0x07
      0005DE AE 00 80         [ 2] 1509 	ldw	x, #0x0080
      0005E1 4D               [ 1] 1510 	tnz	a
      0005E2 27 04            [ 1] 1511 	jreq	00153$
      0005E4                       1512 00152$:
      0005E4 57               [ 2] 1513 	sraw	x
      0005E5 4A               [ 1] 1514 	dec	a
      0005E6 26 FC            [ 1] 1515 	jrne	00152$
      0005E8                       1516 00153$:
      0005E8 1F 01            [ 2] 1517 	ldw	(0x01, sp), x
      0005EA 7B 07            [ 1] 1518 	ld	a, (0x07, sp)
      0005EC 14 02            [ 1] 1519 	and	a, (0x02, sp)
      0005EE 6B 04            [ 1] 1520 	ld	(0x04, sp), a
      0005F0 0F 03            [ 1] 1521 	clr	(0x03, sp)
      0005F2 1E 03            [ 2] 1522 	ldw	x, (0x03, sp)
      0005F4 27 3B            [ 1] 1523 	jreq	00107$
                                   1524 ;	./libs/ssd1306_lib.c: 91: ssd1306_draw_pixel(main_buffer, x + width, y + height, get_bit(data[height], 7 - (width % 8)));
      0005F6 4B 08            [ 1] 1525 	push	#0x08
      0005F8 4B 00            [ 1] 1526 	push	#0x00
      0005FA 1E 0E            [ 2] 1527 	ldw	x, (0x0e, sp)
      0005FC CDr00r00         [ 4] 1528 	call	__modsint
      0005FF 1F 03            [ 2] 1529 	ldw	(0x03, sp), x
      000601 90 AE 00 07      [ 2] 1530 	ldw	y, #0x0007
      000605 72 F2 03         [ 2] 1531 	subw	y, (0x03, sp)
      000608 1E 05            [ 2] 1532 	ldw	x, (0x05, sp)
      00060A F6               [ 1] 1533 	ld	a, (x)
      00060B 5F               [ 1] 1534 	clrw	x
      00060C 90 89            [ 2] 1535 	pushw	y
      00060E 97               [ 1] 1536 	ld	xl, a
      00060F CDr04r23         [ 4] 1537 	call	_get_bit
      000612 7B 11            [ 1] 1538 	ld	a, (0x11, sp)
      000614 6B 07            [ 1] 1539 	ld	(0x07, sp), a
      000616 7B 0B            [ 1] 1540 	ld	a, (0x0b, sp)
      000618 1B 07            [ 1] 1541 	add	a, (0x07, sp)
      00061A 95               [ 1] 1542 	ld	xh, a
      00061B 7B 09            [ 1] 1543 	ld	a, (0x09, sp)
      00061D 6B 07            [ 1] 1544 	ld	(0x07, sp), a
      00061F 7B 0D            [ 1] 1545 	ld	a, (0x0d, sp)
      000621 1B 07            [ 1] 1546 	add	a, (0x07, sp)
      000623 6B 07            [ 1] 1547 	ld	(0x07, sp), a
      000625 9F               [ 1] 1548 	ld	a, xl
      000626 88               [ 1] 1549 	push	a
      000627 9E               [ 1] 1550 	ld	a, xh
      000628 88               [ 1] 1551 	push	a
      000629 7B 09            [ 1] 1552 	ld	a, (0x09, sp)
      00062B AEr01r69         [ 2] 1553 	ldw	x, #(_main_buffer+0)
      00062E CDr05r03         [ 4] 1554 	call	_ssd1306_draw_pixel
      000631                       1555 00107$:
                                   1556 ;	./libs/ssd1306_lib.c: 89: for (int width = 0; width < 8; width++)
      000631 1E 0C            [ 2] 1557 	ldw	x, (0x0c, sp)
      000633 5C               [ 1] 1558 	incw	x
      000634 1F 0C            [ 2] 1559 	ldw	(0x0c, sp), x
      000636 20 93            [ 2] 1560 	jra	00106$
      000638                       1561 00110$:
                                   1562 ;	./libs/ssd1306_lib.c: 87: for (int height = 0; height < 8; height++)
      000638 1E 0A            [ 2] 1563 	ldw	x, (0x0a, sp)
      00063A 5C               [ 1] 1564 	incw	x
      00063B 1F 0A            [ 2] 1565 	ldw	(0x0a, sp), x
      00063D CCr05rB7         [ 2] 1566 	jp	00109$
      000640                       1567 00111$:
                                   1568 ;	./libs/ssd1306_lib.c: 93: }
      000640 1E 0E            [ 2] 1569 	ldw	x, (14, sp)
      000642 5B 13            [ 2] 1570 	addw	sp, #19
      000644 FC               [ 2] 1571 	jp	(x)
                                   1572 ;	./libs/ssd1306_lib.c: 95: void ssd1306_clean(void)
                                   1573 ;	-----------------------------------------
                                   1574 ;	 function ssd1306_clean
                                   1575 ;	-----------------------------------------
      000645                       1576 _ssd1306_clean:
                                   1577 ;	./libs/ssd1306_lib.c: 97: ssd1306_buffer_clean();
      000645 CDr05r4E         [ 4] 1578 	call	_ssd1306_buffer_clean
                                   1579 ;	./libs/ssd1306_lib.c: 98: ssd1306_send_buffer();
                                   1580 ;	./libs/ssd1306_lib.c: 99: }
      000648 CCr05r5B         [ 2] 1581 	jp	_ssd1306_send_buffer
                                   1582 ;	./libs/menu_lib.c: 3: void menu_border(void)
                                   1583 ;	-----------------------------------------
                                   1584 ;	 function menu_border
                                   1585 ;	-----------------------------------------
      00064B                       1586 _menu_border:
      00064B 52 04            [ 2] 1587 	sub	sp, #4
                                   1588 ;	./libs/menu_lib.c: 6: ssd1306_buffer_write(0,0,ttf_corner_left_up);
      00064D 4Br29            [ 1] 1589 	push	#<(_ttf_corner_left_up+0)
      00064F 4Bs01            [ 1] 1590 	push	#((_ttf_corner_left_up+0) >> 8)
      000651 5F               [ 1] 1591 	clrw	x
      000652 89               [ 2] 1592 	pushw	x
      000653 5F               [ 1] 1593 	clrw	x
      000654 CDr05rB0         [ 4] 1594 	call	_ssd1306_buffer_write
                                   1595 ;	./libs/menu_lib.c: 7: for(int x = 1;x<15;x++)
      000657 5F               [ 1] 1596 	clrw	x
      000658 5C               [ 1] 1597 	incw	x
      000659 1F 03            [ 2] 1598 	ldw	(0x03, sp), x
      00065B                       1599 00104$:
      00065B 1E 03            [ 2] 1600 	ldw	x, (0x03, sp)
      00065D A3 00 0F         [ 2] 1601 	cpw	x, #0x000f
      000660 2E 19            [ 1] 1602 	jrsge	00101$
                                   1603 ;	./libs/menu_lib.c: 8: ssd1306_buffer_write(x*8,0,ttf_line_up);
      000662 1E 03            [ 2] 1604 	ldw	x, (0x03, sp)
      000664 58               [ 2] 1605 	sllw	x
      000665 58               [ 2] 1606 	sllw	x
      000666 58               [ 2] 1607 	sllw	x
      000667 1F 01            [ 2] 1608 	ldw	(0x01, sp), x
      000669 4Br59            [ 1] 1609 	push	#<(_ttf_line_up+0)
      00066B 4Bs01            [ 1] 1610 	push	#((_ttf_line_up+0) >> 8)
      00066D 5F               [ 1] 1611 	clrw	x
      00066E 89               [ 2] 1612 	pushw	x
      00066F 1E 05            [ 2] 1613 	ldw	x, (0x05, sp)
      000671 CDr05rB0         [ 4] 1614 	call	_ssd1306_buffer_write
                                   1615 ;	./libs/menu_lib.c: 7: for(int x = 1;x<15;x++)
      000674 1E 03            [ 2] 1616 	ldw	x, (0x03, sp)
      000676 5C               [ 1] 1617 	incw	x
      000677 1F 03            [ 2] 1618 	ldw	(0x03, sp), x
      000679 20 E0            [ 2] 1619 	jra	00104$
      00067B                       1620 00101$:
                                   1621 ;	./libs/menu_lib.c: 9: ssd1306_buffer_write(120,0,ttf_corner_right_up);
      00067B 4Br31            [ 1] 1622 	push	#<(_ttf_corner_right_up+0)
      00067D 4Bs01            [ 1] 1623 	push	#((_ttf_corner_right_up+0) >> 8)
      00067F 5F               [ 1] 1624 	clrw	x
      000680 89               [ 2] 1625 	pushw	x
      000681 AE 00 78         [ 2] 1626 	ldw	x, #0x0078
      000684 CDr05rB0         [ 4] 1627 	call	_ssd1306_buffer_write
                                   1628 ;	./libs/menu_lib.c: 11: ssd1306_buffer_write(0,8,ttf_line_left);
      000687 4Br51            [ 1] 1629 	push	#<(_ttf_line_left+0)
      000689 4Bs01            [ 1] 1630 	push	#((_ttf_line_left+0) >> 8)
      00068B 4B 08            [ 1] 1631 	push	#0x08
      00068D 4B 00            [ 1] 1632 	push	#0x00
      00068F 5F               [ 1] 1633 	clrw	x
      000690 CDr05rB0         [ 4] 1634 	call	_ssd1306_buffer_write
                                   1635 ;	./libs/menu_lib.c: 12: ssd1306_buffer_write(0,16,ttf_line_left);
      000693 4Br51            [ 1] 1636 	push	#<(_ttf_line_left+0)
      000695 4Bs01            [ 1] 1637 	push	#((_ttf_line_left+0) >> 8)
      000697 4B 10            [ 1] 1638 	push	#0x10
      000699 4B 00            [ 1] 1639 	push	#0x00
      00069B 5F               [ 1] 1640 	clrw	x
      00069C CDr05rB0         [ 4] 1641 	call	_ssd1306_buffer_write
                                   1642 ;	./libs/menu_lib.c: 14: ssd1306_buffer_write(120,8,ttf_line_right);
      00069F 4Br49            [ 1] 1643 	push	#<(_ttf_line_right+0)
      0006A1 4Bs01            [ 1] 1644 	push	#((_ttf_line_right+0) >> 8)
      0006A3 4B 08            [ 1] 1645 	push	#0x08
      0006A5 4B 00            [ 1] 1646 	push	#0x00
      0006A7 AE 00 78         [ 2] 1647 	ldw	x, #0x0078
      0006AA CDr05rB0         [ 4] 1648 	call	_ssd1306_buffer_write
                                   1649 ;	./libs/menu_lib.c: 15: ssd1306_buffer_write(120,16,ttf_line_right);
      0006AD 4Br49            [ 1] 1650 	push	#<(_ttf_line_right+0)
      0006AF 4Bs01            [ 1] 1651 	push	#((_ttf_line_right+0) >> 8)
      0006B1 4B 10            [ 1] 1652 	push	#0x10
      0006B3 4B 00            [ 1] 1653 	push	#0x00
      0006B5 AE 00 78         [ 2] 1654 	ldw	x, #0x0078
      0006B8 CDr05rB0         [ 4] 1655 	call	_ssd1306_buffer_write
                                   1656 ;	./libs/menu_lib.c: 17: ssd1306_buffer_write(0,24,ttf_corner_left_down);
      0006BB 4Br39            [ 1] 1657 	push	#<(_ttf_corner_left_down+0)
      0006BD 4Bs01            [ 1] 1658 	push	#((_ttf_corner_left_down+0) >> 8)
      0006BF 4B 18            [ 1] 1659 	push	#0x18
      0006C1 4B 00            [ 1] 1660 	push	#0x00
      0006C3 5F               [ 1] 1661 	clrw	x
      0006C4 CDr05rB0         [ 4] 1662 	call	_ssd1306_buffer_write
                                   1663 ;	./libs/menu_lib.c: 18: for(int x = 1;x<15;x++)
      0006C7 5F               [ 1] 1664 	clrw	x
      0006C8 5C               [ 1] 1665 	incw	x
      0006C9                       1666 00107$:
      0006C9 A3 00 0F         [ 2] 1667 	cpw	x, #0x000f
      0006CC 2E 19            [ 1] 1668 	jrsge	00102$
                                   1669 ;	./libs/menu_lib.c: 19: ssd1306_buffer_write(x*8,24,ttf_line_down);
      0006CE 90 93            [ 1] 1670 	ldw	y, x
      0006D0 90 58            [ 2] 1671 	sllw	y
      0006D2 90 58            [ 2] 1672 	sllw	y
      0006D4 90 58            [ 2] 1673 	sllw	y
      0006D6 89               [ 2] 1674 	pushw	x
      0006D7 4Br61            [ 1] 1675 	push	#<(_ttf_line_down+0)
      0006D9 4Bs01            [ 1] 1676 	push	#((_ttf_line_down+0) >> 8)
      0006DB 4B 18            [ 1] 1677 	push	#0x18
      0006DD 4B 00            [ 1] 1678 	push	#0x00
      0006DF 93               [ 1] 1679 	ldw	x, y
      0006E0 CDr05rB0         [ 4] 1680 	call	_ssd1306_buffer_write
      0006E3 85               [ 2] 1681 	popw	x
                                   1682 ;	./libs/menu_lib.c: 18: for(int x = 1;x<15;x++)
      0006E4 5C               [ 1] 1683 	incw	x
      0006E5 20 E2            [ 2] 1684 	jra	00107$
      0006E7                       1685 00102$:
                                   1686 ;	./libs/menu_lib.c: 20: ssd1306_buffer_write(120,24,ttf_corner_right_down);
      0006E7 4Br41            [ 1] 1687 	push	#<(_ttf_corner_right_down+0)
      0006E9 4Bs01            [ 1] 1688 	push	#((_ttf_corner_right_down+0) >> 8)
      0006EB 4B 18            [ 1] 1689 	push	#0x18
      0006ED 4B 00            [ 1] 1690 	push	#0x00
      0006EF AE 00 78         [ 2] 1691 	ldw	x, #0x0078
      0006F2 CDr05rB0         [ 4] 1692 	call	_ssd1306_buffer_write
                                   1693 ;	./libs/menu_lib.c: 21: }
      0006F5 5B 04            [ 2] 1694 	addw	sp, #4
      0006F7 81               [ 4] 1695 	ret
                                   1696 ;	./libs/menu_lib.c: 23: void menu_border_paragraph(uint8_t number_of_letters)
                                   1697 ;	-----------------------------------------
                                   1698 ;	 function menu_border_paragraph
                                   1699 ;	-----------------------------------------
      0006F8                       1700 _menu_border_paragraph:
      0006F8 52 07            [ 2] 1701 	sub	sp, #7
      0006FA 6B 07            [ 1] 1702 	ld	(0x07, sp), a
                                   1703 ;	./libs/menu_lib.c: 26: ssd1306_buffer_write(6,8,ttf_corner_left_up);
      0006FC 4Br29            [ 1] 1704 	push	#<(_ttf_corner_left_up+0)
      0006FE 4Bs01            [ 1] 1705 	push	#((_ttf_corner_left_up+0) >> 8)
      000700 4B 08            [ 1] 1706 	push	#0x08
      000702 4B 00            [ 1] 1707 	push	#0x00
      000704 AE 00 06         [ 2] 1708 	ldw	x, #0x0006
      000707 CDr05rB0         [ 4] 1709 	call	_ssd1306_buffer_write
                                   1710 ;	./libs/menu_lib.c: 27: ssd1306_buffer_write(6,16,ttf_corner_left_down);
      00070A 4Br39            [ 1] 1711 	push	#<(_ttf_corner_left_down+0)
      00070C 4Bs01            [ 1] 1712 	push	#((_ttf_corner_left_down+0) >> 8)
      00070E 4B 10            [ 1] 1713 	push	#0x10
      000710 4B 00            [ 1] 1714 	push	#0x00
      000712 AE 00 06         [ 2] 1715 	ldw	x, #0x0006
      000715 CDr05rB0         [ 4] 1716 	call	_ssd1306_buffer_write
                                   1717 ;	./libs/menu_lib.c: 28: for(int x = 1;x<number_of_letters+1;x++)
      000718 5F               [ 1] 1718 	clrw	x
      000719 5C               [ 1] 1719 	incw	x
      00071A 1F 05            [ 2] 1720 	ldw	(0x05, sp), x
      00071C                       1721 00104$:
      00071C 90 5F            [ 1] 1722 	clrw	y
      00071E 7B 07            [ 1] 1723 	ld	a, (0x07, sp)
      000720 90 97            [ 1] 1724 	ld	yl, a
      000722 93               [ 1] 1725 	ldw	x, y
      000723 5C               [ 1] 1726 	incw	x
      000724 1F 01            [ 2] 1727 	ldw	(0x01, sp), x
      000726 1E 05            [ 2] 1728 	ldw	x, (0x05, sp)
      000728 13 01            [ 2] 1729 	cpw	x, (0x01, sp)
      00072A 2E 20            [ 1] 1730 	jrsge	00101$
                                   1731 ;	./libs/menu_lib.c: 29: ssd1306_buffer_write(6+x*8,8,ttf_line_up);
      00072C 1E 05            [ 2] 1732 	ldw	x, (0x05, sp)
      00072E 58               [ 2] 1733 	sllw	x
      00072F 58               [ 2] 1734 	sllw	x
      000730 58               [ 2] 1735 	sllw	x
      000731 1F 01            [ 2] 1736 	ldw	(0x01, sp), x
      000733 1C 00 06         [ 2] 1737 	addw	x, #0x0006
      000736 1F 03            [ 2] 1738 	ldw	(0x03, sp), x
      000738 4Br59            [ 1] 1739 	push	#<(_ttf_line_up+0)
      00073A 4Bs01            [ 1] 1740 	push	#((_ttf_line_up+0) >> 8)
      00073C 4B 08            [ 1] 1741 	push	#0x08
      00073E 4B 00            [ 1] 1742 	push	#0x00
      000740 1E 07            [ 2] 1743 	ldw	x, (0x07, sp)
      000742 CDr05rB0         [ 4] 1744 	call	_ssd1306_buffer_write
                                   1745 ;	./libs/menu_lib.c: 28: for(int x = 1;x<number_of_letters+1;x++)
      000745 1E 05            [ 2] 1746 	ldw	x, (0x05, sp)
      000747 5C               [ 1] 1747 	incw	x
      000748 1F 05            [ 2] 1748 	ldw	(0x05, sp), x
      00074A 20 D0            [ 2] 1749 	jra	00104$
      00074C                       1750 00101$:
                                   1751 ;	./libs/menu_lib.c: 30: ssd1306_buffer_write(6+number_of_letters*8,8,ttf_corner_right_up);
      00074C 93               [ 1] 1752 	ldw	x, y
      00074D 58               [ 2] 1753 	sllw	x
      00074E 58               [ 2] 1754 	sllw	x
      00074F 58               [ 2] 1755 	sllw	x
      000750 9F               [ 1] 1756 	ld	a, xl
      000751 AB 06            [ 1] 1757 	add	a, #0x06
      000753 6B 04            [ 1] 1758 	ld	(0x04, sp), a
      000755 9E               [ 1] 1759 	ld	a, xh
      000756 A9 00            [ 1] 1760 	adc	a, #0x00
      000758 6B 03            [ 1] 1761 	ld	(0x03, sp), a
      00075A 89               [ 2] 1762 	pushw	x
      00075B 4Br31            [ 1] 1763 	push	#<(_ttf_corner_right_up+0)
      00075D 4Bs01            [ 1] 1764 	push	#((_ttf_corner_right_up+0) >> 8)
      00075F 4B 08            [ 1] 1765 	push	#0x08
      000761 4B 00            [ 1] 1766 	push	#0x00
      000763 1E 09            [ 2] 1767 	ldw	x, (0x09, sp)
      000765 CDr05rB0         [ 4] 1768 	call	_ssd1306_buffer_write
      000768 85               [ 2] 1769 	popw	x
                                   1770 ;	./libs/menu_lib.c: 31: ssd1306_buffer_write(12+number_of_letters*8,0,ttf_line_left);
      000769 1C 00 0C         [ 2] 1771 	addw	x, #0x000c
      00076C 1F 05            [ 2] 1772 	ldw	(0x05, sp), x
      00076E 4Br51            [ 1] 1773 	push	#<(_ttf_line_left+0)
      000770 4Bs01            [ 1] 1774 	push	#((_ttf_line_left+0) >> 8)
      000772 5F               [ 1] 1775 	clrw	x
      000773 89               [ 2] 1776 	pushw	x
      000774 1E 09            [ 2] 1777 	ldw	x, (0x09, sp)
      000776 CDr05rB0         [ 4] 1778 	call	_ssd1306_buffer_write
                                   1779 ;	./libs/menu_lib.c: 34: ssd1306_buffer_write(6,16,ttf_corner_left_down);
      000779 4Br39            [ 1] 1780 	push	#<(_ttf_corner_left_down+0)
      00077B 4Bs01            [ 1] 1781 	push	#((_ttf_corner_left_down+0) >> 8)
      00077D 4B 10            [ 1] 1782 	push	#0x10
      00077F 4B 00            [ 1] 1783 	push	#0x00
      000781 AE 00 06         [ 2] 1784 	ldw	x, #0x0006
      000784 CDr05rB0         [ 4] 1785 	call	_ssd1306_buffer_write
                                   1786 ;	./libs/menu_lib.c: 35: for(int x = 1;x<number_of_letters+1;x++)
      000787 5F               [ 1] 1787 	clrw	x
      000788 5C               [ 1] 1788 	incw	x
      000789                       1789 00107$:
      000789 13 01            [ 2] 1790 	cpw	x, (0x01, sp)
      00078B 2E 1D            [ 1] 1791 	jrsge	00102$
                                   1792 ;	./libs/menu_lib.c: 36: ssd1306_buffer_write(6+x*8,16,ttf_line_down);
      00078D 90 93            [ 1] 1793 	ldw	y, x
      00078F 90 58            [ 2] 1794 	sllw	y
      000791 90 58            [ 2] 1795 	sllw	y
      000793 90 58            [ 2] 1796 	sllw	y
      000795 72 A9 00 06      [ 2] 1797 	addw	y, #0x0006
      000799 89               [ 2] 1798 	pushw	x
      00079A 4Br61            [ 1] 1799 	push	#<(_ttf_line_down+0)
      00079C 4Bs01            [ 1] 1800 	push	#((_ttf_line_down+0) >> 8)
      00079E 4B 10            [ 1] 1801 	push	#0x10
      0007A0 4B 00            [ 1] 1802 	push	#0x00
      0007A2 93               [ 1] 1803 	ldw	x, y
      0007A3 CDr05rB0         [ 4] 1804 	call	_ssd1306_buffer_write
      0007A6 85               [ 2] 1805 	popw	x
                                   1806 ;	./libs/menu_lib.c: 35: for(int x = 1;x<number_of_letters+1;x++)
      0007A7 5C               [ 1] 1807 	incw	x
      0007A8 20 DF            [ 2] 1808 	jra	00107$
      0007AA                       1809 00102$:
                                   1810 ;	./libs/menu_lib.c: 37: ssd1306_buffer_write(6+number_of_letters*8,16,ttf_corner_right_down);
      0007AA 4Br41            [ 1] 1811 	push	#<(_ttf_corner_right_down+0)
      0007AC 4Bs01            [ 1] 1812 	push	#((_ttf_corner_right_down+0) >> 8)
      0007AE 4B 10            [ 1] 1813 	push	#0x10
      0007B0 4B 00            [ 1] 1814 	push	#0x00
      0007B2 1E 07            [ 2] 1815 	ldw	x, (0x07, sp)
      0007B4 CDr05rB0         [ 4] 1816 	call	_ssd1306_buffer_write
                                   1817 ;	./libs/menu_lib.c: 38: ssd1306_buffer_write(12+number_of_letters*8,24,ttf_line_left);
      0007B7 4Br51            [ 1] 1818 	push	#<(_ttf_line_left+0)
      0007B9 4Bs01            [ 1] 1819 	push	#((_ttf_line_left+0) >> 8)
      0007BB 4B 18            [ 1] 1820 	push	#0x18
      0007BD 4B 00            [ 1] 1821 	push	#0x00
      0007BF 1E 09            [ 2] 1822 	ldw	x, (0x09, sp)
      0007C1 CDr05rB0         [ 4] 1823 	call	_ssd1306_buffer_write
                                   1824 ;	./libs/menu_lib.c: 40: }
      0007C4 5B 07            [ 2] 1825 	addw	sp, #7
      0007C6 81               [ 4] 1826 	ret
                                   1827 ;	./libs/menu_lib.c: 42: void menu_border_item(uint8_t number_of_letters)
                                   1828 ;	-----------------------------------------
                                   1829 ;	 function menu_border_item
                                   1830 ;	-----------------------------------------
      0007C7                       1831 _menu_border_item:
      0007C7 52 06            [ 2] 1832 	sub	sp, #6
                                   1833 ;	./libs/menu_lib.c: 45: ssd1306_buffer_write(12+number_of_letters*8,7,ttf_corner_left_down);
      0007C9 6B 02            [ 1] 1834 	ld	(0x02, sp), a
      0007CB 0F 01            [ 1] 1835 	clr	(0x01, sp)
      0007CD 1E 01            [ 2] 1836 	ldw	x, (0x01, sp)
      0007CF 58               [ 2] 1837 	sllw	x
      0007D0 58               [ 2] 1838 	sllw	x
      0007D1 58               [ 2] 1839 	sllw	x
      0007D2 1C 00 0C         [ 2] 1840 	addw	x, #0x000c
      0007D5 1F 03            [ 2] 1841 	ldw	(0x03, sp), x
      0007D7 4Br39            [ 1] 1842 	push	#<(_ttf_corner_left_down+0)
      0007D9 4Bs01            [ 1] 1843 	push	#((_ttf_corner_left_down+0) >> 8)
      0007DB 4B 07            [ 1] 1844 	push	#0x07
      0007DD 4B 00            [ 1] 1845 	push	#0x00
      0007DF 1E 07            [ 2] 1846 	ldw	x, (0x07, sp)
      0007E1 CDr05rB0         [ 4] 1847 	call	_ssd1306_buffer_write
                                   1848 ;	./libs/menu_lib.c: 46: for(int x = 1;x<14-number_of_letters;x++)
      0007E4 A6 0E            [ 1] 1849 	ld	a, #0x0e
      0007E6 10 02            [ 1] 1850 	sub	a, (0x02, sp)
      0007E8 6B 06            [ 1] 1851 	ld	(0x06, sp), a
      0007EA 4F               [ 1] 1852 	clr	a
      0007EB 12 01            [ 1] 1853 	sbc	a, (0x01, sp)
      0007ED 6B 05            [ 1] 1854 	ld	(0x05, sp), a
      0007EF 5F               [ 1] 1855 	clrw	x
      0007F0 5C               [ 1] 1856 	incw	x
      0007F1                       1857 00103$:
      0007F1 13 05            [ 2] 1858 	cpw	x, (0x05, sp)
      0007F3 2E 1C            [ 1] 1859 	jrsge	00101$
                                   1860 ;	./libs/menu_lib.c: 47: ssd1306_buffer_write(12+number_of_letters*8+x*8,7,ttf_line_down);
      0007F5 90 93            [ 1] 1861 	ldw	y, x
      0007F7 90 58            [ 2] 1862 	sllw	y
      0007F9 90 58            [ 2] 1863 	sllw	y
      0007FB 90 58            [ 2] 1864 	sllw	y
      0007FD 72 F9 03         [ 2] 1865 	addw	y, (0x03, sp)
      000800 89               [ 2] 1866 	pushw	x
      000801 4Br61            [ 1] 1867 	push	#<(_ttf_line_down+0)
      000803 4Bs01            [ 1] 1868 	push	#((_ttf_line_down+0) >> 8)
      000805 4B 07            [ 1] 1869 	push	#0x07
      000807 4B 00            [ 1] 1870 	push	#0x00
      000809 93               [ 1] 1871 	ldw	x, y
      00080A CDr05rB0         [ 4] 1872 	call	_ssd1306_buffer_write
      00080D 85               [ 2] 1873 	popw	x
                                   1874 ;	./libs/menu_lib.c: 46: for(int x = 1;x<14-number_of_letters;x++)
      00080E 5C               [ 1] 1875 	incw	x
      00080F 20 E0            [ 2] 1876 	jra	00103$
      000811                       1877 00101$:
                                   1878 ;	./libs/menu_lib.c: 48: ssd1306_buffer_write(120,7,ttf_corner_right_down);
      000811 4Br41            [ 1] 1879 	push	#<(_ttf_corner_right_down+0)
      000813 4Bs01            [ 1] 1880 	push	#((_ttf_corner_right_down+0) >> 8)
      000815 4B 07            [ 1] 1881 	push	#0x07
      000817 4B 00            [ 1] 1882 	push	#0x00
      000819 AE 00 78         [ 2] 1883 	ldw	x, #0x0078
      00081C CDr05rB0         [ 4] 1884 	call	_ssd1306_buffer_write
                                   1885 ;	./libs/menu_lib.c: 51: ssd1306_buffer_write(97,15,ttf_line_left);
      00081F 4Br51            [ 1] 1886 	push	#<(_ttf_line_left+0)
      000821 4Bs01            [ 1] 1887 	push	#((_ttf_line_left+0) >> 8)
      000823 4B 0F            [ 1] 1888 	push	#0x0f
      000825 4B 00            [ 1] 1889 	push	#0x00
      000827 AE 00 61         [ 2] 1890 	ldw	x, #0x0061
      00082A CDr05rB0         [ 4] 1891 	call	_ssd1306_buffer_write
                                   1892 ;	./libs/menu_lib.c: 52: ssd1306_buffer_write(97,17,ttf_corner_left_down);
      00082D 4Br39            [ 1] 1893 	push	#<(_ttf_corner_left_down+0)
      00082F 4Bs01            [ 1] 1894 	push	#((_ttf_corner_left_down+0) >> 8)
      000831 4B 11            [ 1] 1895 	push	#0x11
      000833 4B 00            [ 1] 1896 	push	#0x00
      000835 AE 00 61         [ 2] 1897 	ldw	x, #0x0061
      000838 CDr05rB0         [ 4] 1898 	call	_ssd1306_buffer_write
                                   1899 ;	./libs/menu_lib.c: 53: ssd1306_buffer_write(104,17,ttf_line_down);
      00083B 4Br61            [ 1] 1900 	push	#<(_ttf_line_down+0)
      00083D 4Bs01            [ 1] 1901 	push	#((_ttf_line_down+0) >> 8)
      00083F 4B 11            [ 1] 1902 	push	#0x11
      000841 4B 00            [ 1] 1903 	push	#0x00
      000843 AE 00 68         [ 2] 1904 	ldw	x, #0x0068
      000846 CDr05rB0         [ 4] 1905 	call	_ssd1306_buffer_write
                                   1906 ;	./libs/menu_lib.c: 54: ssd1306_buffer_write(112,17,ttf_line_down);
      000849 4Br61            [ 1] 1907 	push	#<(_ttf_line_down+0)
      00084B 4Bs01            [ 1] 1908 	push	#((_ttf_line_down+0) >> 8)
      00084D 4B 11            [ 1] 1909 	push	#0x11
      00084F 4B 00            [ 1] 1910 	push	#0x00
      000851 AE 00 70         [ 2] 1911 	ldw	x, #0x0070
      000854 CDr05rB0         [ 4] 1912 	call	_ssd1306_buffer_write
                                   1913 ;	./libs/menu_lib.c: 55: ssd1306_buffer_write(120,17,ttf_line_down);
      000857 4Br61            [ 1] 1914 	push	#<(_ttf_line_down+0)
      000859 4Bs01            [ 1] 1915 	push	#((_ttf_line_down+0) >> 8)
      00085B 4B 11            [ 1] 1916 	push	#0x11
      00085D 4B 00            [ 1] 1917 	push	#0x00
      00085F AE 00 78         [ 2] 1918 	ldw	x, #0x0078
      000862 CDr05rB0         [ 4] 1919 	call	_ssd1306_buffer_write
                                   1920 ;	./libs/menu_lib.c: 58: }
      000865 5B 06            [ 2] 1921 	addw	sp, #6
      000867 81               [ 4] 1922 	ret
                                   1923 ;	./libs/menu_lib.c: 60: void menu_set_params_value(uint8_t number)
                                   1924 ;	-----------------------------------------
                                   1925 ;	 function menu_set_params_value
                                   1926 ;	-----------------------------------------
      000868                       1927 _menu_set_params_value:
      000868 52 05            [ 2] 1928 	sub	sp, #5
                                   1929 ;	./libs/menu_lib.c: 64: do {
      00086A 0F 05            [ 1] 1930 	clr	(0x05, sp)
      00086C                       1931 00101$:
                                   1932 ;	./libs/menu_lib.c: 65: ssd1306_buffer_write(117-8*index,15,numbers[number % 10]); // Получаем последнюю цифру
      00086C 6B 02            [ 1] 1933 	ld	(0x02, sp), a
      00086E 0F 01            [ 1] 1934 	clr	(0x01, sp)
      000870 4B 0A            [ 1] 1935 	push	#0x0a
      000872 4B 00            [ 1] 1936 	push	#0x00
      000874 1E 03            [ 2] 1937 	ldw	x, (0x03, sp)
      000876 CDr00r00         [ 4] 1938 	call	__modsint
      000879 58               [ 2] 1939 	sllw	x
      00087A DEu00u0E         [ 2] 1940 	ldw	x, (_menu_set_params_value_numbers_10000_171+0, x)
      00087D 90 93            [ 1] 1941 	ldw	y, x
      00087F 5F               [ 1] 1942 	clrw	x
      000880 7B 05            [ 1] 1943 	ld	a, (0x05, sp)
      000882 97               [ 1] 1944 	ld	xl, a
      000883 58               [ 2] 1945 	sllw	x
      000884 58               [ 2] 1946 	sllw	x
      000885 58               [ 2] 1947 	sllw	x
      000886 1F 03            [ 2] 1948 	ldw	(0x03, sp), x
      000888 AE 00 75         [ 2] 1949 	ldw	x, #0x0075
      00088B 72 F0 03         [ 2] 1950 	subw	x, (0x03, sp)
      00088E 90 89            [ 2] 1951 	pushw	y
      000890 4B 0F            [ 1] 1952 	push	#0x0f
      000892 4B 00            [ 1] 1953 	push	#0x00
      000894 CDr05rB0         [ 4] 1954 	call	_ssd1306_buffer_write
                                   1955 ;	./libs/menu_lib.c: 66: number /= 10; // Убираем последнюю цифру
      000897 4B 0A            [ 1] 1956 	push	#0x0a
      000899 4B 00            [ 1] 1957 	push	#0x00
      00089B 1E 03            [ 2] 1958 	ldw	x, (0x03, sp)
      00089D CDr00r00         [ 4] 1959 	call	__divsint
      0008A0 9F               [ 1] 1960 	ld	a, xl
                                   1961 ;	./libs/menu_lib.c: 67: index++;
      0008A1 0C 05            [ 1] 1962 	inc	(0x05, sp)
                                   1963 ;	./libs/menu_lib.c: 68: } while (number > 0);
      0008A3 4D               [ 1] 1964 	tnz	a
      0008A4 26 C6            [ 1] 1965 	jrne	00101$
                                   1966 ;	./libs/menu_lib.c: 69: }
      0008A6 5B 05            [ 2] 1967 	addw	sp, #5
      0008A8 81               [ 4] 1968 	ret
                                   1969 ;	./libs/menu_lib.c: 70: void menu_set_item_menu(uint8_t item)
                                   1970 ;	-----------------------------------------
                                   1971 ;	 function menu_set_item_menu
                                   1972 ;	-----------------------------------------
      0008A9                       1973 _menu_set_item_menu:
                                   1974 ;	./libs/menu_lib.c: 73: switch(item)
      0008A9 A1 07            [ 1] 1975 	cp	a, #0x07
      0008AB 23 01            [ 2] 1976 	jrule	00118$
      0008AD 81               [ 4] 1977 	ret
      0008AE                       1978 00118$:
      0008AE 5F               [ 1] 1979 	clrw	x
      0008AF 97               [ 1] 1980 	ld	xl, a
      0008B0 58               [ 2] 1981 	sllw	x
      0008B1 DEu08uB5         [ 2] 1982 	ldw	x, (#00119$, x)
      0008B4 FC               [ 2] 1983 	jp	(x)
      0008B5                       1984 00119$:
      0008B5r0ArCB                 1985 	.dw	#00109$
      0008B7r08rC5                 1986 	.dw	#00101$
      0008B9r08rFA                 1987 	.dw	#00102$
      0008BBr09r4B                 1988 	.dw	#00103$
      0008BDr09r8E                 1989 	.dw	#00104$
      0008BFr09rE2                 1990 	.dw	#00105$
      0008C1r0Ar45                 1991 	.dw	#00106$
      0008C3r0Ar88                 1992 	.dw	#00107$
                                   1993 ;	./libs/menu_lib.c: 75: case red:
      0008C5                       1994 00101$:
                                   1995 ;	./libs/menu_lib.c: 76: menu_border_item(color);
      0008C5 A6 05            [ 1] 1996 	ld	a, #0x05
      0008C7 CDr07rC7         [ 4] 1997 	call	_menu_border_item
                                   1998 ;	./libs/menu_lib.c: 78: ssd1306_buffer_write(15+color*8,4,ttf_eng_r);
      0008CA 4Br88            [ 1] 1999 	push	#<(_ttf_eng_r+0)
      0008CC 4Bs00            [ 1] 2000 	push	#((_ttf_eng_r+0) >> 8)
      0008CE 4B 04            [ 1] 2001 	push	#0x04
      0008D0 4B 00            [ 1] 2002 	push	#0x00
      0008D2 AE 00 37         [ 2] 2003 	ldw	x, #0x0037
      0008D5 CDr05rB0         [ 4] 2004 	call	_ssd1306_buffer_write
                                   2005 ;	./libs/menu_lib.c: 79: ssd1306_buffer_write(15+color*8+8,4,ttf_eng_e);
      0008D8 4Br20            [ 1] 2006 	push	#<(_ttf_eng_e+0)
      0008DA 4Bs00            [ 1] 2007 	push	#((_ttf_eng_e+0) >> 8)
      0008DC 4B 04            [ 1] 2008 	push	#0x04
      0008DE 4B 00            [ 1] 2009 	push	#0x00
      0008E0 AE 00 3F         [ 2] 2010 	ldw	x, #0x003f
      0008E3 CDr05rB0         [ 4] 2011 	call	_ssd1306_buffer_write
                                   2012 ;	./libs/menu_lib.c: 80: ssd1306_buffer_write(15+color*8+16,4,ttf_eng_d);
      0008E6 4Br18            [ 1] 2013 	push	#<(_ttf_eng_d+0)
      0008E8 4Bs00            [ 1] 2014 	push	#((_ttf_eng_d+0) >> 8)
      0008EA 4B 04            [ 1] 2015 	push	#0x04
      0008EC 4B 00            [ 1] 2016 	push	#0x00
      0008EE AE 00 47         [ 2] 2017 	ldw	x, #0x0047
      0008F1 CDr05rB0         [ 4] 2018 	call	_ssd1306_buffer_write
                                   2019 ;	./libs/menu_lib.c: 82: menu_set_params_value(params_value.current_red);
      0008F4 C6u00u08         [ 1] 2020 	ld	a, _params_value+2
                                   2021 ;	./libs/menu_lib.c: 84: break;
      0008F7 CCr08r68         [ 2] 2022 	jp	_menu_set_params_value
                                   2023 ;	./libs/menu_lib.c: 85: case green:
      0008FA                       2024 00102$:
                                   2025 ;	./libs/menu_lib.c: 86: menu_border_item(color);
      0008FA A6 05            [ 1] 2026 	ld	a, #0x05
      0008FC CDr07rC7         [ 4] 2027 	call	_menu_border_item
                                   2028 ;	./libs/menu_lib.c: 88: ssd1306_buffer_write(15+color*8,4,ttf_eng_g);
      0008FF 4Br30            [ 1] 2029 	push	#<(_ttf_eng_g+0)
      000901 4Bs00            [ 1] 2030 	push	#((_ttf_eng_g+0) >> 8)
      000903 4B 04            [ 1] 2031 	push	#0x04
      000905 4B 00            [ 1] 2032 	push	#0x00
      000907 AE 00 37         [ 2] 2033 	ldw	x, #0x0037
      00090A CDr05rB0         [ 4] 2034 	call	_ssd1306_buffer_write
                                   2035 ;	./libs/menu_lib.c: 89: ssd1306_buffer_write(15+color*8+8,4,ttf_eng_r);
      00090D 4Br88            [ 1] 2036 	push	#<(_ttf_eng_r+0)
      00090F 4Bs00            [ 1] 2037 	push	#((_ttf_eng_r+0) >> 8)
      000911 4B 04            [ 1] 2038 	push	#0x04
      000913 4B 00            [ 1] 2039 	push	#0x00
      000915 AE 00 3F         [ 2] 2040 	ldw	x, #0x003f
      000918 CDr05rB0         [ 4] 2041 	call	_ssd1306_buffer_write
                                   2042 ;	./libs/menu_lib.c: 90: ssd1306_buffer_write(15+color*8+16,4,ttf_eng_e);
      00091B 4Br20            [ 1] 2043 	push	#<(_ttf_eng_e+0)
      00091D 4Bs00            [ 1] 2044 	push	#((_ttf_eng_e+0) >> 8)
      00091F 4B 04            [ 1] 2045 	push	#0x04
      000921 4B 00            [ 1] 2046 	push	#0x00
      000923 AE 00 47         [ 2] 2047 	ldw	x, #0x0047
      000926 CDr05rB0         [ 4] 2048 	call	_ssd1306_buffer_write
                                   2049 ;	./libs/menu_lib.c: 91: ssd1306_buffer_write(15+color*8+24,4,ttf_eng_e);
      000929 4Br20            [ 1] 2050 	push	#<(_ttf_eng_e+0)
      00092B 4Bs00            [ 1] 2051 	push	#((_ttf_eng_e+0) >> 8)
      00092D 4B 04            [ 1] 2052 	push	#0x04
      00092F 4B 00            [ 1] 2053 	push	#0x00
      000931 AE 00 4F         [ 2] 2054 	ldw	x, #0x004f
      000934 CDr05rB0         [ 4] 2055 	call	_ssd1306_buffer_write
                                   2056 ;	./libs/menu_lib.c: 92: ssd1306_buffer_write(15+color*8+32,4,ttf_eng_n);
      000937 4Br68            [ 1] 2057 	push	#<(_ttf_eng_n+0)
      000939 4Bs00            [ 1] 2058 	push	#((_ttf_eng_n+0) >> 8)
      00093B 4B 04            [ 1] 2059 	push	#0x04
      00093D 4B 00            [ 1] 2060 	push	#0x00
      00093F AE 00 57         [ 2] 2061 	ldw	x, #0x0057
      000942 CDr05rB0         [ 4] 2062 	call	_ssd1306_buffer_write
                                   2063 ;	./libs/menu_lib.c: 94: menu_set_params_value(params_value.current_green);
      000945 C6u00u09         [ 1] 2064 	ld	a, _params_value+3
                                   2065 ;	./libs/menu_lib.c: 97: break;
      000948 CCr08r68         [ 2] 2066 	jp	_menu_set_params_value
                                   2067 ;	./libs/menu_lib.c: 98: case blue:
      00094B                       2068 00103$:
                                   2069 ;	./libs/menu_lib.c: 99: menu_border_item(color);
      00094B A6 05            [ 1] 2070 	ld	a, #0x05
      00094D CDr07rC7         [ 4] 2071 	call	_menu_border_item
                                   2072 ;	./libs/menu_lib.c: 101: ssd1306_buffer_write(15+color*8,4,ttf_eng_b);
      000950 4Br08            [ 1] 2073 	push	#<(_ttf_eng_b+0)
      000952 4Bs00            [ 1] 2074 	push	#((_ttf_eng_b+0) >> 8)
      000954 4B 04            [ 1] 2075 	push	#0x04
      000956 4B 00            [ 1] 2076 	push	#0x00
      000958 AE 00 37         [ 2] 2077 	ldw	x, #0x0037
      00095B CDr05rB0         [ 4] 2078 	call	_ssd1306_buffer_write
                                   2079 ;	./libs/menu_lib.c: 102: ssd1306_buffer_write(15+color*8+8,4,ttf_eng_l);
      00095E 4Br58            [ 1] 2080 	push	#<(_ttf_eng_l+0)
      000960 4Bs00            [ 1] 2081 	push	#((_ttf_eng_l+0) >> 8)
      000962 4B 04            [ 1] 2082 	push	#0x04
      000964 4B 00            [ 1] 2083 	push	#0x00
      000966 AE 00 3F         [ 2] 2084 	ldw	x, #0x003f
      000969 CDr05rB0         [ 4] 2085 	call	_ssd1306_buffer_write
                                   2086 ;	./libs/menu_lib.c: 103: ssd1306_buffer_write(15+color*8+16,4,ttf_eng_u);
      00096C 4BrA0            [ 1] 2087 	push	#<(_ttf_eng_u+0)
      00096E 4Bs00            [ 1] 2088 	push	#((_ttf_eng_u+0) >> 8)
      000970 4B 04            [ 1] 2089 	push	#0x04
      000972 4B 00            [ 1] 2090 	push	#0x00
      000974 AE 00 47         [ 2] 2091 	ldw	x, #0x0047
      000977 CDr05rB0         [ 4] 2092 	call	_ssd1306_buffer_write
                                   2093 ;	./libs/menu_lib.c: 104: ssd1306_buffer_write(15+color*8+24,4,ttf_eng_e);
      00097A 4Br20            [ 1] 2094 	push	#<(_ttf_eng_e+0)
      00097C 4Bs00            [ 1] 2095 	push	#((_ttf_eng_e+0) >> 8)
      00097E 4B 04            [ 1] 2096 	push	#0x04
      000980 4B 00            [ 1] 2097 	push	#0x00
      000982 AE 00 4F         [ 2] 2098 	ldw	x, #0x004f
      000985 CDr05rB0         [ 4] 2099 	call	_ssd1306_buffer_write
                                   2100 ;	./libs/menu_lib.c: 106: menu_set_params_value(params_value.current_blue);
      000988 C6u00u0A         [ 1] 2101 	ld	a, _params_value+4
                                   2102 ;	./libs/menu_lib.c: 107: break;
      00098B CCr08r68         [ 2] 2103 	jp	_menu_set_params_value
                                   2104 ;	./libs/menu_lib.c: 108: case first:
      00098E                       2105 00104$:
                                   2106 ;	./libs/menu_lib.c: 109: menu_border_item(segment);
      00098E A6 07            [ 1] 2107 	ld	a, #0x07
      000990 CDr07rC7         [ 4] 2108 	call	_menu_border_item
                                   2109 ;	./libs/menu_lib.c: 111: ssd1306_buffer_write(15+segment*8,4,ttf_eng_f);
      000993 4Br28            [ 1] 2110 	push	#<(_ttf_eng_f+0)
      000995 4Bs00            [ 1] 2111 	push	#((_ttf_eng_f+0) >> 8)
      000997 4B 04            [ 1] 2112 	push	#0x04
      000999 4B 00            [ 1] 2113 	push	#0x00
      00099B AE 00 47         [ 2] 2114 	ldw	x, #0x0047
      00099E CDr05rB0         [ 4] 2115 	call	_ssd1306_buffer_write
                                   2116 ;	./libs/menu_lib.c: 112: ssd1306_buffer_write(15+segment*8+8,4,ttf_eng_i);
      0009A1 4Br40            [ 1] 2117 	push	#<(_ttf_eng_i+0)
      0009A3 4Bs00            [ 1] 2118 	push	#((_ttf_eng_i+0) >> 8)
      0009A5 4B 04            [ 1] 2119 	push	#0x04
      0009A7 4B 00            [ 1] 2120 	push	#0x00
      0009A9 AE 00 4F         [ 2] 2121 	ldw	x, #0x004f
      0009AC CDr05rB0         [ 4] 2122 	call	_ssd1306_buffer_write
                                   2123 ;	./libs/menu_lib.c: 113: ssd1306_buffer_write(15+segment*8+16,4,ttf_eng_r);
      0009AF 4Br88            [ 1] 2124 	push	#<(_ttf_eng_r+0)
      0009B1 4Bs00            [ 1] 2125 	push	#((_ttf_eng_r+0) >> 8)
      0009B3 4B 04            [ 1] 2126 	push	#0x04
      0009B5 4B 00            [ 1] 2127 	push	#0x00
      0009B7 AE 00 57         [ 2] 2128 	ldw	x, #0x0057
      0009BA CDr05rB0         [ 4] 2129 	call	_ssd1306_buffer_write
                                   2130 ;	./libs/menu_lib.c: 114: ssd1306_buffer_write(15+segment*8+24,4,ttf_eng_s);
      0009BD 4Br90            [ 1] 2131 	push	#<(_ttf_eng_s+0)
      0009BF 4Bs00            [ 1] 2132 	push	#((_ttf_eng_s+0) >> 8)
      0009C1 4B 04            [ 1] 2133 	push	#0x04
      0009C3 4B 00            [ 1] 2134 	push	#0x00
      0009C5 AE 00 5F         [ 2] 2135 	ldw	x, #0x005f
      0009C8 CDr05rB0         [ 4] 2136 	call	_ssd1306_buffer_write
                                   2137 ;	./libs/menu_lib.c: 115: ssd1306_buffer_write(15+segment*8+32,4,ttf_eng_t);
      0009CB 4Br98            [ 1] 2138 	push	#<(_ttf_eng_t+0)
      0009CD 4Bs00            [ 1] 2139 	push	#((_ttf_eng_t+0) >> 8)
      0009CF 4B 04            [ 1] 2140 	push	#0x04
      0009D1 4B 00            [ 1] 2141 	push	#0x00
      0009D3 AE 00 67         [ 2] 2142 	ldw	x, #0x0067
      0009D6 CDr05rB0         [ 4] 2143 	call	_ssd1306_buffer_write
                                   2144 ;	./libs/menu_lib.c: 117: menu_set_params_value(params_value.current_first);
      0009D9 AEr00r0B         [ 2] 2145 	ldw	x, #_params_value+5
      0009DC F6               [ 1] 2146 	ld	a, (x)
      0009DD A4 0F            [ 1] 2147 	and	a, #0x0f
                                   2148 ;	./libs/menu_lib.c: 118: break;
      0009DF CCr08r68         [ 2] 2149 	jp	_menu_set_params_value
                                   2150 ;	./libs/menu_lib.c: 119: case second:
      0009E2                       2151 00105$:
                                   2152 ;	./libs/menu_lib.c: 120: menu_border_item(segment);
      0009E2 A6 07            [ 1] 2153 	ld	a, #0x07
      0009E4 CDr07rC7         [ 4] 2154 	call	_menu_border_item
                                   2155 ;	./libs/menu_lib.c: 122: ssd1306_buffer_write(15+segment*8,4,ttf_eng_s);
      0009E7 4Br90            [ 1] 2156 	push	#<(_ttf_eng_s+0)
      0009E9 4Bs00            [ 1] 2157 	push	#((_ttf_eng_s+0) >> 8)
      0009EB 4B 04            [ 1] 2158 	push	#0x04
      0009ED 4B 00            [ 1] 2159 	push	#0x00
      0009EF AE 00 47         [ 2] 2160 	ldw	x, #0x0047
      0009F2 CDr05rB0         [ 4] 2161 	call	_ssd1306_buffer_write
                                   2162 ;	./libs/menu_lib.c: 123: ssd1306_buffer_write(15+segment*8+8,4,ttf_eng_e);
      0009F5 4Br20            [ 1] 2163 	push	#<(_ttf_eng_e+0)
      0009F7 4Bs00            [ 1] 2164 	push	#((_ttf_eng_e+0) >> 8)
      0009F9 4B 04            [ 1] 2165 	push	#0x04
      0009FB 4B 00            [ 1] 2166 	push	#0x00
      0009FD AE 00 4F         [ 2] 2167 	ldw	x, #0x004f
      000A00 CDr05rB0         [ 4] 2168 	call	_ssd1306_buffer_write
                                   2169 ;	./libs/menu_lib.c: 124: ssd1306_buffer_write(15+segment*8+16,4,ttf_eng_c);
      000A03 4Br10            [ 1] 2170 	push	#<(_ttf_eng_c+0)
      000A05 4Bs00            [ 1] 2171 	push	#((_ttf_eng_c+0) >> 8)
      000A07 4B 04            [ 1] 2172 	push	#0x04
      000A09 4B 00            [ 1] 2173 	push	#0x00
      000A0B AE 00 57         [ 2] 2174 	ldw	x, #0x0057
      000A0E CDr05rB0         [ 4] 2175 	call	_ssd1306_buffer_write
                                   2176 ;	./libs/menu_lib.c: 125: ssd1306_buffer_write(15+segment*8+24,4,ttf_eng_o);
      000A11 4Br70            [ 1] 2177 	push	#<(_ttf_eng_o+0)
      000A13 4Bs00            [ 1] 2178 	push	#((_ttf_eng_o+0) >> 8)
      000A15 4B 04            [ 1] 2179 	push	#0x04
      000A17 4B 00            [ 1] 2180 	push	#0x00
      000A19 AE 00 5F         [ 2] 2181 	ldw	x, #0x005f
      000A1C CDr05rB0         [ 4] 2182 	call	_ssd1306_buffer_write
                                   2183 ;	./libs/menu_lib.c: 126: ssd1306_buffer_write(15+segment*8+32,4,ttf_eng_n);
      000A1F 4Br68            [ 1] 2184 	push	#<(_ttf_eng_n+0)
      000A21 4Bs00            [ 1] 2185 	push	#((_ttf_eng_n+0) >> 8)
      000A23 4B 04            [ 1] 2186 	push	#0x04
      000A25 4B 00            [ 1] 2187 	push	#0x00
      000A27 AE 00 67         [ 2] 2188 	ldw	x, #0x0067
      000A2A CDr05rB0         [ 4] 2189 	call	_ssd1306_buffer_write
                                   2190 ;	./libs/menu_lib.c: 127: ssd1306_buffer_write(15+segment*8+40,4,ttf_eng_d);
      000A2D 4Br18            [ 1] 2191 	push	#<(_ttf_eng_d+0)
      000A2F 4Bs00            [ 1] 2192 	push	#((_ttf_eng_d+0) >> 8)
      000A31 4B 04            [ 1] 2193 	push	#0x04
      000A33 4B 00            [ 1] 2194 	push	#0x00
      000A35 AE 00 6F         [ 2] 2195 	ldw	x, #0x006f
      000A38 CDr05rB0         [ 4] 2196 	call	_ssd1306_buffer_write
                                   2197 ;	./libs/menu_lib.c: 129: menu_set_params_value(params_value.current_second);
      000A3B AEr00r0B         [ 2] 2198 	ldw	x, #_params_value+5
      000A3E F6               [ 1] 2199 	ld	a, (x)
      000A3F 4E               [ 1] 2200 	swap	a
      000A40 A4 0F            [ 1] 2201 	and	a, #0x0f
                                   2202 ;	./libs/menu_lib.c: 130: break;
      000A42 CCr08r68         [ 2] 2203 	jp	_menu_set_params_value
                                   2204 ;	./libs/menu_lib.c: 131: case sens:
      000A45                       2205 00106$:
                                   2206 ;	./libs/menu_lib.c: 132: menu_border_item(settings);
      000A45 A6 06            [ 1] 2207 	ld	a, #0x06
      000A47 CDr07rC7         [ 4] 2208 	call	_menu_border_item
                                   2209 ;	./libs/menu_lib.c: 134: ssd1306_buffer_write(15+settings*8,4,ttf_eng_s);
      000A4A 4Br90            [ 1] 2210 	push	#<(_ttf_eng_s+0)
      000A4C 4Bs00            [ 1] 2211 	push	#((_ttf_eng_s+0) >> 8)
      000A4E 4B 04            [ 1] 2212 	push	#0x04
      000A50 4B 00            [ 1] 2213 	push	#0x00
      000A52 AE 00 3F         [ 2] 2214 	ldw	x, #0x003f
      000A55 CDr05rB0         [ 4] 2215 	call	_ssd1306_buffer_write
                                   2216 ;	./libs/menu_lib.c: 135: ssd1306_buffer_write(15+settings*8+8,4,ttf_eng_e);
      000A58 4Br20            [ 1] 2217 	push	#<(_ttf_eng_e+0)
      000A5A 4Bs00            [ 1] 2218 	push	#((_ttf_eng_e+0) >> 8)
      000A5C 4B 04            [ 1] 2219 	push	#0x04
      000A5E 4B 00            [ 1] 2220 	push	#0x00
      000A60 AE 00 47         [ 2] 2221 	ldw	x, #0x0047
      000A63 CDr05rB0         [ 4] 2222 	call	_ssd1306_buffer_write
                                   2223 ;	./libs/menu_lib.c: 136: ssd1306_buffer_write(15+settings*8+16,4,ttf_eng_n);
      000A66 4Br68            [ 1] 2224 	push	#<(_ttf_eng_n+0)
      000A68 4Bs00            [ 1] 2225 	push	#((_ttf_eng_n+0) >> 8)
      000A6A 4B 04            [ 1] 2226 	push	#0x04
      000A6C 4B 00            [ 1] 2227 	push	#0x00
      000A6E AE 00 4F         [ 2] 2228 	ldw	x, #0x004f
      000A71 CDr05rB0         [ 4] 2229 	call	_ssd1306_buffer_write
                                   2230 ;	./libs/menu_lib.c: 137: ssd1306_buffer_write(15+settings*8+24,4,ttf_eng_s);
      000A74 4Br90            [ 1] 2231 	push	#<(_ttf_eng_s+0)
      000A76 4Bs00            [ 1] 2232 	push	#((_ttf_eng_s+0) >> 8)
      000A78 4B 04            [ 1] 2233 	push	#0x04
      000A7A 4B 00            [ 1] 2234 	push	#0x00
      000A7C AE 00 57         [ 2] 2235 	ldw	x, #0x0057
      000A7F CDr05rB0         [ 4] 2236 	call	_ssd1306_buffer_write
                                   2237 ;	./libs/menu_lib.c: 139: menu_set_params_value(params_value.current_sens);
      000A82 C6u00u0C         [ 1] 2238 	ld	a, _params_value+6
                                   2239 ;	./libs/menu_lib.c: 140: break;
      000A85 CCr08r68         [ 2] 2240 	jp	_menu_set_params_value
                                   2241 ;	./libs/menu_lib.c: 141: case vers:
      000A88                       2242 00107$:
                                   2243 ;	./libs/menu_lib.c: 142: menu_border_item(settings);
      000A88 A6 06            [ 1] 2244 	ld	a, #0x06
      000A8A CDr07rC7         [ 4] 2245 	call	_menu_border_item
                                   2246 ;	./libs/menu_lib.c: 144: ssd1306_buffer_write(15+settings*8,4,ttf_eng_v);
      000A8D 4BrA8            [ 1] 2247 	push	#<(_ttf_eng_v+0)
      000A8F 4Bs00            [ 1] 2248 	push	#((_ttf_eng_v+0) >> 8)
      000A91 4B 04            [ 1] 2249 	push	#0x04
      000A93 4B 00            [ 1] 2250 	push	#0x00
      000A95 AE 00 3F         [ 2] 2251 	ldw	x, #0x003f
      000A98 CDr05rB0         [ 4] 2252 	call	_ssd1306_buffer_write
                                   2253 ;	./libs/menu_lib.c: 145: ssd1306_buffer_write(15+settings*8+8,4,ttf_eng_e);
      000A9B 4Br20            [ 1] 2254 	push	#<(_ttf_eng_e+0)
      000A9D 4Bs00            [ 1] 2255 	push	#((_ttf_eng_e+0) >> 8)
      000A9F 4B 04            [ 1] 2256 	push	#0x04
      000AA1 4B 00            [ 1] 2257 	push	#0x00
      000AA3 AE 00 47         [ 2] 2258 	ldw	x, #0x0047
      000AA6 CDr05rB0         [ 4] 2259 	call	_ssd1306_buffer_write
                                   2260 ;	./libs/menu_lib.c: 146: ssd1306_buffer_write(15+settings*8+16,4,ttf_eng_r);
      000AA9 4Br88            [ 1] 2261 	push	#<(_ttf_eng_r+0)
      000AAB 4Bs00            [ 1] 2262 	push	#((_ttf_eng_r+0) >> 8)
      000AAD 4B 04            [ 1] 2263 	push	#0x04
      000AAF 4B 00            [ 1] 2264 	push	#0x00
      000AB1 AE 00 4F         [ 2] 2265 	ldw	x, #0x004f
      000AB4 CDr05rB0         [ 4] 2266 	call	_ssd1306_buffer_write
                                   2267 ;	./libs/menu_lib.c: 147: ssd1306_buffer_write(15+settings*8+24,4,ttf_eng_s);
      000AB7 4Br90            [ 1] 2268 	push	#<(_ttf_eng_s+0)
      000AB9 4Bs00            [ 1] 2269 	push	#((_ttf_eng_s+0) >> 8)
      000ABB 4B 04            [ 1] 2270 	push	#0x04
      000ABD 4B 00            [ 1] 2271 	push	#0x00
      000ABF AE 00 57         [ 2] 2272 	ldw	x, #0x0057
      000AC2 CDr05rB0         [ 4] 2273 	call	_ssd1306_buffer_write
                                   2274 ;	./libs/menu_lib.c: 149: menu_set_params_value(params_value.current_vers);
      000AC5 C6u00u0D         [ 1] 2275 	ld	a, _params_value+7
      000AC8 CCr08r68         [ 2] 2276 	jp	_menu_set_params_value
                                   2277 ;	./libs/menu_lib.c: 151: }
      000ACB                       2278 00109$:
                                   2279 ;	./libs/menu_lib.c: 153: }
      000ACB 81               [ 4] 2280 	ret
                                   2281 ;	./libs/menu_lib.c: 158: void menu_set_paragraph(uint8_t paragraph)
                                   2282 ;	-----------------------------------------
                                   2283 ;	 function menu_set_paragraph
                                   2284 ;	-----------------------------------------
      000ACC                       2285 _menu_set_paragraph:
                                   2286 ;	./libs/menu_lib.c: 160: switch(paragraph)
      000ACC A1 04            [ 1] 2287 	cp	a, #0x04
      000ACE 27 16            [ 1] 2288 	jreq	00101$
      000AD0 A1 05            [ 1] 2289 	cp	a, #0x05
      000AD2 26 03            [ 1] 2290 	jrne	00140$
      000AD4 CCr0Cr6E         [ 2] 2291 	jp	00102$
      000AD7                       2292 00140$:
      000AD7 A1 06            [ 1] 2293 	cp	a, #0x06
      000AD9 26 03            [ 1] 2294 	jrne	00143$
      000ADB CCr0Dr3C         [ 2] 2295 	jp	00104$
      000ADE                       2296 00143$:
      000ADE A1 07            [ 1] 2297 	cp	a, #0x07
      000AE0 26 03            [ 1] 2298 	jrne	00146$
      000AE2 CCr0CrC7         [ 2] 2299 	jp	00103$
      000AE5                       2300 00146$:
      000AE5 81               [ 4] 2301 	ret
                                   2302 ;	./libs/menu_lib.c: 162: case menu:
      000AE6                       2303 00101$:
                                   2304 ;	./libs/menu_lib.c: 163: ssd1306_buffer_clean();
      000AE6 CDr05r4E         [ 4] 2305 	call	_ssd1306_buffer_clean
                                   2306 ;	./libs/menu_lib.c: 164: menu_border();
      000AE9 CDr06r4B         [ 4] 2307 	call	_menu_border
                                   2308 ;	./libs/menu_lib.c: 165: menu_border_paragraph(menu);
      000AEC A6 04            [ 1] 2309 	ld	a, #0x04
      000AEE CDr06rF8         [ 4] 2310 	call	_menu_border_paragraph
                                   2311 ;	./libs/menu_lib.c: 167: ssd1306_buffer_write(10,12,ttf_eng_m);
      000AF1 4Br60            [ 1] 2312 	push	#<(_ttf_eng_m+0)
      000AF3 4Bs00            [ 1] 2313 	push	#((_ttf_eng_m+0) >> 8)
      000AF5 4B 0C            [ 1] 2314 	push	#0x0c
      000AF7 4B 00            [ 1] 2315 	push	#0x00
      000AF9 AE 00 0A         [ 2] 2316 	ldw	x, #0x000a
      000AFC CDr05rB0         [ 4] 2317 	call	_ssd1306_buffer_write
                                   2318 ;	./libs/menu_lib.c: 168: ssd1306_buffer_write(18,12,ttf_eng_e);
      000AFF 4Br20            [ 1] 2319 	push	#<(_ttf_eng_e+0)
      000B01 4Bs00            [ 1] 2320 	push	#((_ttf_eng_e+0) >> 8)
      000B03 4B 0C            [ 1] 2321 	push	#0x0c
      000B05 4B 00            [ 1] 2322 	push	#0x00
      000B07 AE 00 12         [ 2] 2323 	ldw	x, #0x0012
      000B0A CDr05rB0         [ 4] 2324 	call	_ssd1306_buffer_write
                                   2325 ;	./libs/menu_lib.c: 169: ssd1306_buffer_write(26,12,ttf_eng_n);
      000B0D 4Br68            [ 1] 2326 	push	#<(_ttf_eng_n+0)
      000B0F 4Bs00            [ 1] 2327 	push	#((_ttf_eng_n+0) >> 8)
      000B11 4B 0C            [ 1] 2328 	push	#0x0c
      000B13 4B 00            [ 1] 2329 	push	#0x00
      000B15 AE 00 1A         [ 2] 2330 	ldw	x, #0x001a
      000B18 CDr05rB0         [ 4] 2331 	call	_ssd1306_buffer_write
                                   2332 ;	./libs/menu_lib.c: 170: ssd1306_buffer_write(34,12,ttf_eng_u);
      000B1B 4BrA0            [ 1] 2333 	push	#<(_ttf_eng_u+0)
      000B1D 4Bs00            [ 1] 2334 	push	#((_ttf_eng_u+0) >> 8)
      000B1F 4B 0C            [ 1] 2335 	push	#0x0c
      000B21 4B 00            [ 1] 2336 	push	#0x00
      000B23 AE 00 22         [ 2] 2337 	ldw	x, #0x0022
      000B26 CDr05rB0         [ 4] 2338 	call	_ssd1306_buffer_write
                                   2339 ;	./libs/menu_lib.c: 172: ssd1306_buffer_write(48,4,ttf_eng_c);
      000B29 4Br10            [ 1] 2340 	push	#<(_ttf_eng_c+0)
      000B2B 4Bs00            [ 1] 2341 	push	#((_ttf_eng_c+0) >> 8)
      000B2D 4B 04            [ 1] 2342 	push	#0x04
      000B2F 4B 00            [ 1] 2343 	push	#0x00
      000B31 AE 00 30         [ 2] 2344 	ldw	x, #0x0030
      000B34 CDr05rB0         [ 4] 2345 	call	_ssd1306_buffer_write
                                   2346 ;	./libs/menu_lib.c: 173: ssd1306_buffer_write(56,4,ttf_eng_o);
      000B37 4Br70            [ 1] 2347 	push	#<(_ttf_eng_o+0)
      000B39 4Bs00            [ 1] 2348 	push	#((_ttf_eng_o+0) >> 8)
      000B3B 4B 04            [ 1] 2349 	push	#0x04
      000B3D 4B 00            [ 1] 2350 	push	#0x00
      000B3F AE 00 38         [ 2] 2351 	ldw	x, #0x0038
      000B42 CDr05rB0         [ 4] 2352 	call	_ssd1306_buffer_write
                                   2353 ;	./libs/menu_lib.c: 174: ssd1306_buffer_write(64,4,ttf_eng_l);
      000B45 4Br58            [ 1] 2354 	push	#<(_ttf_eng_l+0)
      000B47 4Bs00            [ 1] 2355 	push	#((_ttf_eng_l+0) >> 8)
      000B49 4B 04            [ 1] 2356 	push	#0x04
      000B4B 4B 00            [ 1] 2357 	push	#0x00
      000B4D AE 00 40         [ 2] 2358 	ldw	x, #0x0040
      000B50 CDr05rB0         [ 4] 2359 	call	_ssd1306_buffer_write
                                   2360 ;	./libs/menu_lib.c: 175: ssd1306_buffer_write(72,4,ttf_eng_o);
      000B53 4Br70            [ 1] 2361 	push	#<(_ttf_eng_o+0)
      000B55 4Bs00            [ 1] 2362 	push	#((_ttf_eng_o+0) >> 8)
      000B57 4B 04            [ 1] 2363 	push	#0x04
      000B59 4B 00            [ 1] 2364 	push	#0x00
      000B5B AE 00 48         [ 2] 2365 	ldw	x, #0x0048
      000B5E CDr05rB0         [ 4] 2366 	call	_ssd1306_buffer_write
                                   2367 ;	./libs/menu_lib.c: 176: ssd1306_buffer_write(80,4,ttf_eng_r);
      000B61 4Br88            [ 1] 2368 	push	#<(_ttf_eng_r+0)
      000B63 4Bs00            [ 1] 2369 	push	#((_ttf_eng_r+0) >> 8)
      000B65 4B 04            [ 1] 2370 	push	#0x04
      000B67 4B 00            [ 1] 2371 	push	#0x00
      000B69 AE 00 50         [ 2] 2372 	ldw	x, #0x0050
      000B6C CDr05rB0         [ 4] 2373 	call	_ssd1306_buffer_write
                                   2374 ;	./libs/menu_lib.c: 177: ssd1306_buffer_write(114,4,ttf_line_left);
      000B6F 4Br51            [ 1] 2375 	push	#<(_ttf_line_left+0)
      000B71 4Bs01            [ 1] 2376 	push	#((_ttf_line_left+0) >> 8)
      000B73 4B 04            [ 1] 2377 	push	#0x04
      000B75 4B 00            [ 1] 2378 	push	#0x00
      000B77 AE 00 72         [ 2] 2379 	ldw	x, #0x0072
      000B7A CDr05rB0         [ 4] 2380 	call	_ssd1306_buffer_write
                                   2381 ;	./libs/menu_lib.c: 179: ssd1306_buffer_write(48,12,ttf_eng_s);
      000B7D 4Br90            [ 1] 2382 	push	#<(_ttf_eng_s+0)
      000B7F 4Bs00            [ 1] 2383 	push	#((_ttf_eng_s+0) >> 8)
      000B81 4B 0C            [ 1] 2384 	push	#0x0c
      000B83 4B 00            [ 1] 2385 	push	#0x00
      000B85 AE 00 30         [ 2] 2386 	ldw	x, #0x0030
      000B88 CDr05rB0         [ 4] 2387 	call	_ssd1306_buffer_write
                                   2388 ;	./libs/menu_lib.c: 180: ssd1306_buffer_write(56,12,ttf_eng_e);
      000B8B 4Br20            [ 1] 2389 	push	#<(_ttf_eng_e+0)
      000B8D 4Bs00            [ 1] 2390 	push	#((_ttf_eng_e+0) >> 8)
      000B8F 4B 0C            [ 1] 2391 	push	#0x0c
      000B91 4B 00            [ 1] 2392 	push	#0x00
      000B93 AE 00 38         [ 2] 2393 	ldw	x, #0x0038
      000B96 CDr05rB0         [ 4] 2394 	call	_ssd1306_buffer_write
                                   2395 ;	./libs/menu_lib.c: 181: ssd1306_buffer_write(64,12,ttf_eng_g);
      000B99 4Br30            [ 1] 2396 	push	#<(_ttf_eng_g+0)
      000B9B 4Bs00            [ 1] 2397 	push	#((_ttf_eng_g+0) >> 8)
      000B9D 4B 0C            [ 1] 2398 	push	#0x0c
      000B9F 4B 00            [ 1] 2399 	push	#0x00
      000BA1 AE 00 40         [ 2] 2400 	ldw	x, #0x0040
      000BA4 CDr05rB0         [ 4] 2401 	call	_ssd1306_buffer_write
                                   2402 ;	./libs/menu_lib.c: 182: ssd1306_buffer_write(72,12,ttf_eng_m);
      000BA7 4Br60            [ 1] 2403 	push	#<(_ttf_eng_m+0)
      000BA9 4Bs00            [ 1] 2404 	push	#((_ttf_eng_m+0) >> 8)
      000BAB 4B 0C            [ 1] 2405 	push	#0x0c
      000BAD 4B 00            [ 1] 2406 	push	#0x00
      000BAF AE 00 48         [ 2] 2407 	ldw	x, #0x0048
      000BB2 CDr05rB0         [ 4] 2408 	call	_ssd1306_buffer_write
                                   2409 ;	./libs/menu_lib.c: 183: ssd1306_buffer_write(80,12,ttf_eng_e);
      000BB5 4Br20            [ 1] 2410 	push	#<(_ttf_eng_e+0)
      000BB7 4Bs00            [ 1] 2411 	push	#((_ttf_eng_e+0) >> 8)
      000BB9 4B 0C            [ 1] 2412 	push	#0x0c
      000BBB 4B 00            [ 1] 2413 	push	#0x00
      000BBD AE 00 50         [ 2] 2414 	ldw	x, #0x0050
      000BC0 CDr05rB0         [ 4] 2415 	call	_ssd1306_buffer_write
                                   2416 ;	./libs/menu_lib.c: 184: ssd1306_buffer_write(88,12,ttf_eng_n);
      000BC3 4Br68            [ 1] 2417 	push	#<(_ttf_eng_n+0)
      000BC5 4Bs00            [ 1] 2418 	push	#((_ttf_eng_n+0) >> 8)
      000BC7 4B 0C            [ 1] 2419 	push	#0x0c
      000BC9 4B 00            [ 1] 2420 	push	#0x00
      000BCB AE 00 58         [ 2] 2421 	ldw	x, #0x0058
      000BCE CDr05rB0         [ 4] 2422 	call	_ssd1306_buffer_write
                                   2423 ;	./libs/menu_lib.c: 185: ssd1306_buffer_write(96,12,ttf_eng_t);
      000BD1 4Br98            [ 1] 2424 	push	#<(_ttf_eng_t+0)
      000BD3 4Bs00            [ 1] 2425 	push	#((_ttf_eng_t+0) >> 8)
      000BD5 4B 0C            [ 1] 2426 	push	#0x0c
      000BD7 4B 00            [ 1] 2427 	push	#0x00
      000BD9 AE 00 60         [ 2] 2428 	ldw	x, #0x0060
      000BDC CDr05rB0         [ 4] 2429 	call	_ssd1306_buffer_write
                                   2430 ;	./libs/menu_lib.c: 186: ssd1306_buffer_write(114,12,ttf_void);
      000BDF 4BrD1            [ 1] 2431 	push	#<(_ttf_void+0)
      000BE1 4Bs00            [ 1] 2432 	push	#((_ttf_void+0) >> 8)
      000BE3 4B 0C            [ 1] 2433 	push	#0x0c
      000BE5 4B 00            [ 1] 2434 	push	#0x00
      000BE7 AE 00 72         [ 2] 2435 	ldw	x, #0x0072
      000BEA CDr05rB0         [ 4] 2436 	call	_ssd1306_buffer_write
                                   2437 ;	./libs/menu_lib.c: 188: ssd1306_buffer_write(48,20,ttf_eng_s);
      000BED 4Br90            [ 1] 2438 	push	#<(_ttf_eng_s+0)
      000BEF 4Bs00            [ 1] 2439 	push	#((_ttf_eng_s+0) >> 8)
      000BF1 4B 14            [ 1] 2440 	push	#0x14
      000BF3 4B 00            [ 1] 2441 	push	#0x00
      000BF5 AE 00 30         [ 2] 2442 	ldw	x, #0x0030
      000BF8 CDr05rB0         [ 4] 2443 	call	_ssd1306_buffer_write
                                   2444 ;	./libs/menu_lib.c: 189: ssd1306_buffer_write(56,20,ttf_eng_e);
      000BFB 4Br20            [ 1] 2445 	push	#<(_ttf_eng_e+0)
      000BFD 4Bs00            [ 1] 2446 	push	#((_ttf_eng_e+0) >> 8)
      000BFF 4B 14            [ 1] 2447 	push	#0x14
      000C01 4B 00            [ 1] 2448 	push	#0x00
      000C03 AE 00 38         [ 2] 2449 	ldw	x, #0x0038
      000C06 CDr05rB0         [ 4] 2450 	call	_ssd1306_buffer_write
                                   2451 ;	./libs/menu_lib.c: 190: ssd1306_buffer_write(64,20,ttf_eng_t);
      000C09 4Br98            [ 1] 2452 	push	#<(_ttf_eng_t+0)
      000C0B 4Bs00            [ 1] 2453 	push	#((_ttf_eng_t+0) >> 8)
      000C0D 4B 14            [ 1] 2454 	push	#0x14
      000C0F 4B 00            [ 1] 2455 	push	#0x00
      000C11 AE 00 40         [ 2] 2456 	ldw	x, #0x0040
      000C14 CDr05rB0         [ 4] 2457 	call	_ssd1306_buffer_write
                                   2458 ;	./libs/menu_lib.c: 191: ssd1306_buffer_write(72,20,ttf_eng_t);
      000C17 4Br98            [ 1] 2459 	push	#<(_ttf_eng_t+0)
      000C19 4Bs00            [ 1] 2460 	push	#((_ttf_eng_t+0) >> 8)
      000C1B 4B 14            [ 1] 2461 	push	#0x14
      000C1D 4B 00            [ 1] 2462 	push	#0x00
      000C1F AE 00 48         [ 2] 2463 	ldw	x, #0x0048
      000C22 CDr05rB0         [ 4] 2464 	call	_ssd1306_buffer_write
                                   2465 ;	./libs/menu_lib.c: 192: ssd1306_buffer_write(80,20,ttf_eng_i);
      000C25 4Br40            [ 1] 2466 	push	#<(_ttf_eng_i+0)
      000C27 4Bs00            [ 1] 2467 	push	#((_ttf_eng_i+0) >> 8)
      000C29 4B 14            [ 1] 2468 	push	#0x14
      000C2B 4B 00            [ 1] 2469 	push	#0x00
      000C2D AE 00 50         [ 2] 2470 	ldw	x, #0x0050
      000C30 CDr05rB0         [ 4] 2471 	call	_ssd1306_buffer_write
                                   2472 ;	./libs/menu_lib.c: 193: ssd1306_buffer_write(88,20,ttf_eng_n);
      000C33 4Br68            [ 1] 2473 	push	#<(_ttf_eng_n+0)
      000C35 4Bs00            [ 1] 2474 	push	#((_ttf_eng_n+0) >> 8)
      000C37 4B 14            [ 1] 2475 	push	#0x14
      000C39 4B 00            [ 1] 2476 	push	#0x00
      000C3B AE 00 58         [ 2] 2477 	ldw	x, #0x0058
      000C3E CDr05rB0         [ 4] 2478 	call	_ssd1306_buffer_write
                                   2479 ;	./libs/menu_lib.c: 194: ssd1306_buffer_write(96,20,ttf_eng_g);
      000C41 4Br30            [ 1] 2480 	push	#<(_ttf_eng_g+0)
      000C43 4Bs00            [ 1] 2481 	push	#((_ttf_eng_g+0) >> 8)
      000C45 4B 14            [ 1] 2482 	push	#0x14
      000C47 4B 00            [ 1] 2483 	push	#0x00
      000C49 AE 00 60         [ 2] 2484 	ldw	x, #0x0060
      000C4C CDr05rB0         [ 4] 2485 	call	_ssd1306_buffer_write
                                   2486 ;	./libs/menu_lib.c: 195: ssd1306_buffer_write(104,20,ttf_eng_s);
      000C4F 4Br90            [ 1] 2487 	push	#<(_ttf_eng_s+0)
      000C51 4Bs00            [ 1] 2488 	push	#((_ttf_eng_s+0) >> 8)
      000C53 4B 14            [ 1] 2489 	push	#0x14
      000C55 4B 00            [ 1] 2490 	push	#0x00
      000C57 AE 00 68         [ 2] 2491 	ldw	x, #0x0068
      000C5A CDr05rB0         [ 4] 2492 	call	_ssd1306_buffer_write
                                   2493 ;	./libs/menu_lib.c: 196: ssd1306_buffer_write(114,20,ttf_void);
      000C5D 4BrD1            [ 1] 2494 	push	#<(_ttf_void+0)
      000C5F 4Bs00            [ 1] 2495 	push	#((_ttf_void+0) >> 8)
      000C61 4B 14            [ 1] 2496 	push	#0x14
      000C63 4B 00            [ 1] 2497 	push	#0x00
      000C65 AE 00 72         [ 2] 2498 	ldw	x, #0x0072
      000C68 CDr05rB0         [ 4] 2499 	call	_ssd1306_buffer_write
                                   2500 ;	./libs/menu_lib.c: 198: ssd1306_send_buffer();
                                   2501 ;	./libs/menu_lib.c: 199: break;
      000C6B CCr05r5B         [ 2] 2502 	jp	_ssd1306_send_buffer
                                   2503 ;	./libs/menu_lib.c: 200: case color:
      000C6E                       2504 00102$:
                                   2505 ;	./libs/menu_lib.c: 201: ssd1306_buffer_clean();
      000C6E CDr05r4E         [ 4] 2506 	call	_ssd1306_buffer_clean
                                   2507 ;	./libs/menu_lib.c: 202: menu_border();
      000C71 CDr06r4B         [ 4] 2508 	call	_menu_border
                                   2509 ;	./libs/menu_lib.c: 203: menu_border_paragraph(color);
      000C74 A6 05            [ 1] 2510 	ld	a, #0x05
      000C76 CDr06rF8         [ 4] 2511 	call	_menu_border_paragraph
                                   2512 ;	./libs/menu_lib.c: 205: ssd1306_buffer_write(10,12,ttf_eng_c);
      000C79 4Br10            [ 1] 2513 	push	#<(_ttf_eng_c+0)
      000C7B 4Bs00            [ 1] 2514 	push	#((_ttf_eng_c+0) >> 8)
      000C7D 4B 0C            [ 1] 2515 	push	#0x0c
      000C7F 4B 00            [ 1] 2516 	push	#0x00
      000C81 AE 00 0A         [ 2] 2517 	ldw	x, #0x000a
      000C84 CDr05rB0         [ 4] 2518 	call	_ssd1306_buffer_write
                                   2519 ;	./libs/menu_lib.c: 206: ssd1306_buffer_write(18,12,ttf_eng_o);
      000C87 4Br70            [ 1] 2520 	push	#<(_ttf_eng_o+0)
      000C89 4Bs00            [ 1] 2521 	push	#((_ttf_eng_o+0) >> 8)
      000C8B 4B 0C            [ 1] 2522 	push	#0x0c
      000C8D 4B 00            [ 1] 2523 	push	#0x00
      000C8F AE 00 12         [ 2] 2524 	ldw	x, #0x0012
      000C92 CDr05rB0         [ 4] 2525 	call	_ssd1306_buffer_write
                                   2526 ;	./libs/menu_lib.c: 207: ssd1306_buffer_write(26,12,ttf_eng_l);
      000C95 4Br58            [ 1] 2527 	push	#<(_ttf_eng_l+0)
      000C97 4Bs00            [ 1] 2528 	push	#((_ttf_eng_l+0) >> 8)
      000C99 4B 0C            [ 1] 2529 	push	#0x0c
      000C9B 4B 00            [ 1] 2530 	push	#0x00
      000C9D AE 00 1A         [ 2] 2531 	ldw	x, #0x001a
      000CA0 CDr05rB0         [ 4] 2532 	call	_ssd1306_buffer_write
                                   2533 ;	./libs/menu_lib.c: 208: ssd1306_buffer_write(34,12,ttf_eng_o);
      000CA3 4Br70            [ 1] 2534 	push	#<(_ttf_eng_o+0)
      000CA5 4Bs00            [ 1] 2535 	push	#((_ttf_eng_o+0) >> 8)
      000CA7 4B 0C            [ 1] 2536 	push	#0x0c
      000CA9 4B 00            [ 1] 2537 	push	#0x00
      000CAB AE 00 22         [ 2] 2538 	ldw	x, #0x0022
      000CAE CDr05rB0         [ 4] 2539 	call	_ssd1306_buffer_write
                                   2540 ;	./libs/menu_lib.c: 209: ssd1306_buffer_write(42,12,ttf_eng_r);
      000CB1 4Br88            [ 1] 2541 	push	#<(_ttf_eng_r+0)
      000CB3 4Bs00            [ 1] 2542 	push	#((_ttf_eng_r+0) >> 8)
      000CB5 4B 0C            [ 1] 2543 	push	#0x0c
      000CB7 4B 00            [ 1] 2544 	push	#0x00
      000CB9 AE 00 2A         [ 2] 2545 	ldw	x, #0x002a
      000CBC CDr05rB0         [ 4] 2546 	call	_ssd1306_buffer_write
                                   2547 ;	./libs/menu_lib.c: 211: menu_set_item_menu(red);
      000CBF A6 01            [ 1] 2548 	ld	a, #0x01
      000CC1 CDr08rA9         [ 4] 2549 	call	_menu_set_item_menu
                                   2550 ;	./libs/menu_lib.c: 213: ssd1306_send_buffer();
                                   2551 ;	./libs/menu_lib.c: 214: break;
      000CC4 CCr05r5B         [ 2] 2552 	jp	_ssd1306_send_buffer
                                   2553 ;	./libs/menu_lib.c: 215: case segment:
      000CC7                       2554 00103$:
                                   2555 ;	./libs/menu_lib.c: 216: ssd1306_buffer_clean();
      000CC7 CDr05r4E         [ 4] 2556 	call	_ssd1306_buffer_clean
                                   2557 ;	./libs/menu_lib.c: 217: menu_border();
      000CCA CDr06r4B         [ 4] 2558 	call	_menu_border
                                   2559 ;	./libs/menu_lib.c: 218: menu_border_paragraph(segment);
      000CCD A6 07            [ 1] 2560 	ld	a, #0x07
      000CCF CDr06rF8         [ 4] 2561 	call	_menu_border_paragraph
                                   2562 ;	./libs/menu_lib.c: 220: ssd1306_buffer_write(10,12,ttf_eng_s);
      000CD2 4Br90            [ 1] 2563 	push	#<(_ttf_eng_s+0)
      000CD4 4Bs00            [ 1] 2564 	push	#((_ttf_eng_s+0) >> 8)
      000CD6 4B 0C            [ 1] 2565 	push	#0x0c
      000CD8 4B 00            [ 1] 2566 	push	#0x00
      000CDA AE 00 0A         [ 2] 2567 	ldw	x, #0x000a
      000CDD CDr05rB0         [ 4] 2568 	call	_ssd1306_buffer_write
                                   2569 ;	./libs/menu_lib.c: 221: ssd1306_buffer_write(18,12,ttf_eng_e);
      000CE0 4Br20            [ 1] 2570 	push	#<(_ttf_eng_e+0)
      000CE2 4Bs00            [ 1] 2571 	push	#((_ttf_eng_e+0) >> 8)
      000CE4 4B 0C            [ 1] 2572 	push	#0x0c
      000CE6 4B 00            [ 1] 2573 	push	#0x00
      000CE8 AE 00 12         [ 2] 2574 	ldw	x, #0x0012
      000CEB CDr05rB0         [ 4] 2575 	call	_ssd1306_buffer_write
                                   2576 ;	./libs/menu_lib.c: 222: ssd1306_buffer_write(26,12,ttf_eng_g);
      000CEE 4Br30            [ 1] 2577 	push	#<(_ttf_eng_g+0)
      000CF0 4Bs00            [ 1] 2578 	push	#((_ttf_eng_g+0) >> 8)
      000CF2 4B 0C            [ 1] 2579 	push	#0x0c
      000CF4 4B 00            [ 1] 2580 	push	#0x00
      000CF6 AE 00 1A         [ 2] 2581 	ldw	x, #0x001a
      000CF9 CDr05rB0         [ 4] 2582 	call	_ssd1306_buffer_write
                                   2583 ;	./libs/menu_lib.c: 223: ssd1306_buffer_write(34,12,ttf_eng_m);
      000CFC 4Br60            [ 1] 2584 	push	#<(_ttf_eng_m+0)
      000CFE 4Bs00            [ 1] 2585 	push	#((_ttf_eng_m+0) >> 8)
      000D00 4B 0C            [ 1] 2586 	push	#0x0c
      000D02 4B 00            [ 1] 2587 	push	#0x00
      000D04 AE 00 22         [ 2] 2588 	ldw	x, #0x0022
      000D07 CDr05rB0         [ 4] 2589 	call	_ssd1306_buffer_write
                                   2590 ;	./libs/menu_lib.c: 224: ssd1306_buffer_write(42,12,ttf_eng_e);
      000D0A 4Br20            [ 1] 2591 	push	#<(_ttf_eng_e+0)
      000D0C 4Bs00            [ 1] 2592 	push	#((_ttf_eng_e+0) >> 8)
      000D0E 4B 0C            [ 1] 2593 	push	#0x0c
      000D10 4B 00            [ 1] 2594 	push	#0x00
      000D12 AE 00 2A         [ 2] 2595 	ldw	x, #0x002a
      000D15 CDr05rB0         [ 4] 2596 	call	_ssd1306_buffer_write
                                   2597 ;	./libs/menu_lib.c: 225: ssd1306_buffer_write(50,12,ttf_eng_n);
      000D18 4Br68            [ 1] 2598 	push	#<(_ttf_eng_n+0)
      000D1A 4Bs00            [ 1] 2599 	push	#((_ttf_eng_n+0) >> 8)
      000D1C 4B 0C            [ 1] 2600 	push	#0x0c
      000D1E 4B 00            [ 1] 2601 	push	#0x00
      000D20 AE 00 32         [ 2] 2602 	ldw	x, #0x0032
      000D23 CDr05rB0         [ 4] 2603 	call	_ssd1306_buffer_write
                                   2604 ;	./libs/menu_lib.c: 226: ssd1306_buffer_write(58,12,ttf_eng_t);
      000D26 4Br98            [ 1] 2605 	push	#<(_ttf_eng_t+0)
      000D28 4Bs00            [ 1] 2606 	push	#((_ttf_eng_t+0) >> 8)
      000D2A 4B 0C            [ 1] 2607 	push	#0x0c
      000D2C 4B 00            [ 1] 2608 	push	#0x00
      000D2E AE 00 3A         [ 2] 2609 	ldw	x, #0x003a
      000D31 CDr05rB0         [ 4] 2610 	call	_ssd1306_buffer_write
                                   2611 ;	./libs/menu_lib.c: 228: menu_set_item_menu(first);
      000D34 A6 04            [ 1] 2612 	ld	a, #0x04
      000D36 CDr08rA9         [ 4] 2613 	call	_menu_set_item_menu
                                   2614 ;	./libs/menu_lib.c: 230: ssd1306_send_buffer();
                                   2615 ;	./libs/menu_lib.c: 233: break;
      000D39 CCr05r5B         [ 2] 2616 	jp	_ssd1306_send_buffer
                                   2617 ;	./libs/menu_lib.c: 234: case settings:
      000D3C                       2618 00104$:
                                   2619 ;	./libs/menu_lib.c: 235: ssd1306_buffer_clean();
      000D3C CDr05r4E         [ 4] 2620 	call	_ssd1306_buffer_clean
                                   2621 ;	./libs/menu_lib.c: 236: menu_border();
      000D3F CDr06r4B         [ 4] 2622 	call	_menu_border
                                   2623 ;	./libs/menu_lib.c: 237: menu_border_paragraph(settings);
      000D42 A6 06            [ 1] 2624 	ld	a, #0x06
      000D44 CDr06rF8         [ 4] 2625 	call	_menu_border_paragraph
                                   2626 ;	./libs/menu_lib.c: 239: ssd1306_buffer_write(10,12,ttf_eng_s);
      000D47 4Br90            [ 1] 2627 	push	#<(_ttf_eng_s+0)
      000D49 4Bs00            [ 1] 2628 	push	#((_ttf_eng_s+0) >> 8)
      000D4B 4B 0C            [ 1] 2629 	push	#0x0c
      000D4D 4B 00            [ 1] 2630 	push	#0x00
      000D4F AE 00 0A         [ 2] 2631 	ldw	x, #0x000a
      000D52 CDr05rB0         [ 4] 2632 	call	_ssd1306_buffer_write
                                   2633 ;	./libs/menu_lib.c: 240: ssd1306_buffer_write(18,12,ttf_eng_e);
      000D55 4Br20            [ 1] 2634 	push	#<(_ttf_eng_e+0)
      000D57 4Bs00            [ 1] 2635 	push	#((_ttf_eng_e+0) >> 8)
      000D59 4B 0C            [ 1] 2636 	push	#0x0c
      000D5B 4B 00            [ 1] 2637 	push	#0x00
      000D5D AE 00 12         [ 2] 2638 	ldw	x, #0x0012
      000D60 CDr05rB0         [ 4] 2639 	call	_ssd1306_buffer_write
                                   2640 ;	./libs/menu_lib.c: 241: ssd1306_buffer_write(26,12,ttf_eng_t);
      000D63 4Br98            [ 1] 2641 	push	#<(_ttf_eng_t+0)
      000D65 4Bs00            [ 1] 2642 	push	#((_ttf_eng_t+0) >> 8)
      000D67 4B 0C            [ 1] 2643 	push	#0x0c
      000D69 4B 00            [ 1] 2644 	push	#0x00
      000D6B AE 00 1A         [ 2] 2645 	ldw	x, #0x001a
      000D6E CDr05rB0         [ 4] 2646 	call	_ssd1306_buffer_write
                                   2647 ;	./libs/menu_lib.c: 242: ssd1306_buffer_write(34,12,ttf_eng_t);
      000D71 4Br98            [ 1] 2648 	push	#<(_ttf_eng_t+0)
      000D73 4Bs00            [ 1] 2649 	push	#((_ttf_eng_t+0) >> 8)
      000D75 4B 0C            [ 1] 2650 	push	#0x0c
      000D77 4B 00            [ 1] 2651 	push	#0x00
      000D79 AE 00 22         [ 2] 2652 	ldw	x, #0x0022
      000D7C CDr05rB0         [ 4] 2653 	call	_ssd1306_buffer_write
                                   2654 ;	./libs/menu_lib.c: 243: ssd1306_buffer_write(42,12,ttf_eng_i);
      000D7F 4Br40            [ 1] 2655 	push	#<(_ttf_eng_i+0)
      000D81 4Bs00            [ 1] 2656 	push	#((_ttf_eng_i+0) >> 8)
      000D83 4B 0C            [ 1] 2657 	push	#0x0c
      000D85 4B 00            [ 1] 2658 	push	#0x00
      000D87 AE 00 2A         [ 2] 2659 	ldw	x, #0x002a
      000D8A CDr05rB0         [ 4] 2660 	call	_ssd1306_buffer_write
                                   2661 ;	./libs/menu_lib.c: 244: ssd1306_buffer_write(50,12,ttf_eng_n);
      000D8D 4Br68            [ 1] 2662 	push	#<(_ttf_eng_n+0)
      000D8F 4Bs00            [ 1] 2663 	push	#((_ttf_eng_n+0) >> 8)
      000D91 4B 0C            [ 1] 2664 	push	#0x0c
      000D93 4B 00            [ 1] 2665 	push	#0x00
      000D95 AE 00 32         [ 2] 2666 	ldw	x, #0x0032
      000D98 CDr05rB0         [ 4] 2667 	call	_ssd1306_buffer_write
                                   2668 ;	./libs/menu_lib.c: 245: ssd1306_buffer_write(58,12,ttf_eng_g);
      000D9B 4Br30            [ 1] 2669 	push	#<(_ttf_eng_g+0)
      000D9D 4Bs00            [ 1] 2670 	push	#((_ttf_eng_g+0) >> 8)
      000D9F 4B 0C            [ 1] 2671 	push	#0x0c
      000DA1 4B 00            [ 1] 2672 	push	#0x00
      000DA3 AE 00 3A         [ 2] 2673 	ldw	x, #0x003a
      000DA6 CDr05rB0         [ 4] 2674 	call	_ssd1306_buffer_write
                                   2675 ;	./libs/menu_lib.c: 246: ssd1306_buffer_write(66,12,ttf_eng_s);
      000DA9 4Br90            [ 1] 2676 	push	#<(_ttf_eng_s+0)
      000DAB 4Bs00            [ 1] 2677 	push	#((_ttf_eng_s+0) >> 8)
      000DAD 4B 0C            [ 1] 2678 	push	#0x0c
      000DAF 4B 00            [ 1] 2679 	push	#0x00
      000DB1 AE 00 42         [ 2] 2680 	ldw	x, #0x0042
      000DB4 CDr05rB0         [ 4] 2681 	call	_ssd1306_buffer_write
                                   2682 ;	./libs/menu_lib.c: 248: menu_set_item_menu(sens);
      000DB7 A6 06            [ 1] 2683 	ld	a, #0x06
      000DB9 CDr08rA9         [ 4] 2684 	call	_menu_set_item_menu
                                   2685 ;	./libs/menu_lib.c: 250: ssd1306_send_buffer();
                                   2686 ;	./libs/menu_lib.c: 252: }
                                   2687 ;	./libs/menu_lib.c: 253: }
      000DBC CCr05r5B         [ 2] 2688 	jp	_ssd1306_send_buffer
                                   2689 ;	./libs/tmr2_lib.c: 3: void tmr2_irq(void) __interrupt(TIM2_vector)
                                   2690 ;	-----------------------------------------
                                   2691 ;	 function tmr2_irq
                                   2692 ;	-----------------------------------------
      000DBF                       2693 _tmr2_irq:
      000DBF 4F               [ 1] 2694 	clr	a
      000DC0 62               [ 2] 2695 	div	x, a
                                   2696 ;	./libs/tmr2_lib.c: 6: disableInterrupts();
      000DC1 9B               [ 1] 2697 	sim
                                   2698 ;	./libs/tmr2_lib.c: 7: TIM2_IRQ.all = 0;//обнуление флагов регистров
      000DC2 35 00u03u69      [ 1] 2699 	mov	_TIM2_IRQ+0, #0x00
                                   2700 ;	./libs/tmr2_lib.c: 9: if(TIM2_SR1 -> UIF)//прерывание таймера
      000DC6 AE 53 04         [ 2] 2701 	ldw	x, #0x5304
      000DC9 F6               [ 1] 2702 	ld	a, (x)
      000DCA A4 01            [ 1] 2703 	and	a, #0x01
      000DCC 27 0B            [ 1] 2704 	jreq	00102$
                                   2705 ;	./libs/tmr2_lib.c: 11: TIM2_IRQ.UIF = 1;
      000DCE 72 1Eu03u69      [ 1] 2706 	bset	_TIM2_IRQ+0, #7
                                   2707 ;	./libs/tmr2_lib.c: 12: TIM2_IER -> UIE = 0;
      000DD2 AE 53 03         [ 2] 2708 	ldw	x, #0x5303
      000DD5 F6               [ 1] 2709 	ld	a, (x)
      000DD6 A4 FE            [ 1] 2710 	and	a, #0xfe
      000DD8 F7               [ 1] 2711 	ld	(x), a
      000DD9                       2712 00102$:
                                   2713 ;	./libs/tmr2_lib.c: 14: enableInterrupts();
      000DD9 9A               [ 1] 2714 	rim
                                   2715 ;	./libs/tmr2_lib.c: 15: }
      000DDA 80               [11] 2716 	iret
                                   2717 ;	./libs/tmr2_lib.c: 16: void delay_s(uint8_t ticks)
                                   2718 ;	-----------------------------------------
                                   2719 ;	 function delay_s
                                   2720 ;	-----------------------------------------
      000DDB                       2721 _delay_s:
      000DDB 52 07            [ 2] 2722 	sub	sp, #7
      000DDD 6B 05            [ 1] 2723 	ld	(0x05, sp), a
                                   2724 ;	./libs/tmr2_lib.c: 18: for(int i = 0;i<ticks+1;i++)//блять в душе не ебу почему так сработало, но почему-то если на один больше, то таймер нормально работает
      000DDF 5F               [ 1] 2725 	clrw	x
      000DE0 1F 06            [ 2] 2726 	ldw	(0x06, sp), x
      000DE2                       2727 00106$:
      000DE2 7B 05            [ 1] 2728 	ld	a, (0x05, sp)
      000DE4 6B 02            [ 1] 2729 	ld	(0x02, sp), a
      000DE6 0F 01            [ 1] 2730 	clr	(0x01, sp)
      000DE8 1E 01            [ 2] 2731 	ldw	x, (0x01, sp)
      000DEA 5C               [ 1] 2732 	incw	x
      000DEB 1F 03            [ 2] 2733 	ldw	(0x03, sp), x
      000DED 1E 06            [ 2] 2734 	ldw	x, (0x06, sp)
      000DEF 13 03            [ 2] 2735 	cpw	x, (0x03, sp)
      000DF1 2E 2A            [ 1] 2736 	jrsge	00104$
                                   2737 ;	./libs/tmr2_lib.c: 20: TIM2_SR1 -> UIF = 0;
      000DF3 72 11 53 04      [ 1] 2738 	bres	0x5304, #0
                                   2739 ;	./libs/tmr2_lib.c: 21: TIM2_ARRH->ARR = 0x03;
      000DF7 35 03 53 0F      [ 1] 2740 	mov	0x530f+0, #0x03
                                   2741 ;	./libs/tmr2_lib.c: 22: TIM2_ARRL->ARR = 0xD1;
      000DFB 35 D1 53 10      [ 1] 2742 	mov	0x5310+0, #0xd1
                                   2743 ;	./libs/tmr2_lib.c: 23: TIM2_PSCR -> PSC = 0x0E;
      000DFF C6 53 0E         [ 1] 2744 	ld	a, 0x530e
      000E02 A4 F0            [ 1] 2745 	and	a, #0xf0
      000E04 AA 0E            [ 1] 2746 	or	a, #0x0e
      000E06 C7 53 0E         [ 1] 2747 	ld	0x530e, a
                                   2748 ;	./libs/tmr2_lib.c: 24: TIM2_IER -> UIE = 1;
      000E09 72 10 53 03      [ 1] 2749 	bset	0x5303, #0
                                   2750 ;	./libs/tmr2_lib.c: 25: TIM2_CR1-> CEN = 1;
      000E0D 72 10 53 00      [ 1] 2751 	bset	0x5300, #0
                                   2752 ;	./libs/tmr2_lib.c: 26: while(TIM2_IER -> UIE);	
      000E11                       2753 00101$:
      000E11 72 00 53 03 FB   [ 2] 2754 	btjt	0x5303, #0, 00101$
                                   2755 ;	./libs/tmr2_lib.c: 18: for(int i = 0;i<ticks+1;i++)//блять в душе не ебу почему так сработало, но почему-то если на один больше, то таймер нормально работает
      000E16 1E 06            [ 2] 2756 	ldw	x, (0x06, sp)
      000E18 5C               [ 1] 2757 	incw	x
      000E19 1F 06            [ 2] 2758 	ldw	(0x06, sp), x
      000E1B 20 C5            [ 2] 2759 	jra	00106$
      000E1D                       2760 00104$:
                                   2761 ;	./libs/tmr2_lib.c: 28: TIM2_CR1-> CEN = 0;
      000E1D 72 11 53 00      [ 1] 2762 	bres	0x5300, #0
                                   2763 ;	./libs/tmr2_lib.c: 29: }
      000E21 5B 07            [ 2] 2764 	addw	sp, #7
      000E23 81               [ 4] 2765 	ret
                                   2766 ;	./libs/tmr2_lib.c: 30: void delay_ms(uint8_t ticks)
                                   2767 ;	-----------------------------------------
                                   2768 ;	 function delay_ms
                                   2769 ;	-----------------------------------------
      000E24                       2770 _delay_ms:
      000E24 52 07            [ 2] 2771 	sub	sp, #7
      000E26 6B 05            [ 1] 2772 	ld	(0x05, sp), a
                                   2773 ;	./libs/tmr2_lib.c: 32: for(int i = 0;i<ticks+1;i++)
      000E28 5F               [ 1] 2774 	clrw	x
      000E29 1F 06            [ 2] 2775 	ldw	(0x06, sp), x
      000E2B                       2776 00106$:
      000E2B 7B 05            [ 1] 2777 	ld	a, (0x05, sp)
      000E2D 6B 02            [ 1] 2778 	ld	(0x02, sp), a
      000E2F 0F 01            [ 1] 2779 	clr	(0x01, sp)
      000E31 1E 01            [ 2] 2780 	ldw	x, (0x01, sp)
      000E33 5C               [ 1] 2781 	incw	x
      000E34 1F 03            [ 2] 2782 	ldw	(0x03, sp), x
      000E36 1E 06            [ 2] 2783 	ldw	x, (0x06, sp)
      000E38 13 03            [ 2] 2784 	cpw	x, (0x03, sp)
      000E3A 2E 2A            [ 1] 2785 	jrsge	00104$
                                   2786 ;	./libs/tmr2_lib.c: 34: TIM2_SR1 -> UIF = 0;
      000E3C 72 11 53 04      [ 1] 2787 	bres	0x5304, #0
                                   2788 ;	./libs/tmr2_lib.c: 35: TIM2_ARRH->ARR = 0x03;
      000E40 35 03 53 0F      [ 1] 2789 	mov	0x530f+0, #0x03
                                   2790 ;	./libs/tmr2_lib.c: 36: TIM2_ARRL->ARR = 0xD1;
      000E44 35 D1 53 10      [ 1] 2791 	mov	0x5310+0, #0xd1
                                   2792 ;	./libs/tmr2_lib.c: 37: TIM2_PSCR -> PSC = 0x0E;
      000E48 C6 53 0E         [ 1] 2793 	ld	a, 0x530e
      000E4B A4 F0            [ 1] 2794 	and	a, #0xf0
      000E4D AA 0E            [ 1] 2795 	or	a, #0x0e
      000E4F C7 53 0E         [ 1] 2796 	ld	0x530e, a
                                   2797 ;	./libs/tmr2_lib.c: 38: TIM2_IER -> UIE = 1;
      000E52 72 10 53 03      [ 1] 2798 	bset	0x5303, #0
                                   2799 ;	./libs/tmr2_lib.c: 39: TIM2_CR1-> CEN = 1;
      000E56 72 10 53 00      [ 1] 2800 	bset	0x5300, #0
                                   2801 ;	./libs/tmr2_lib.c: 40: while(TIM2_IER -> UIE);	
      000E5A                       2802 00101$:
      000E5A 72 00 53 03 FB   [ 2] 2803 	btjt	0x5303, #0, 00101$
                                   2804 ;	./libs/tmr2_lib.c: 32: for(int i = 0;i<ticks+1;i++)
      000E5F 1E 06            [ 2] 2805 	ldw	x, (0x06, sp)
      000E61 5C               [ 1] 2806 	incw	x
      000E62 1F 06            [ 2] 2807 	ldw	(0x06, sp), x
      000E64 20 C5            [ 2] 2808 	jra	00106$
      000E66                       2809 00104$:
                                   2810 ;	./libs/tmr2_lib.c: 42: TIM2_CR1-> CEN = 0;
      000E66 72 11 53 00      [ 1] 2811 	bres	0x5300, #0
                                   2812 ;	./libs/tmr2_lib.c: 43: }
      000E6A 5B 07            [ 2] 2813 	addw	sp, #7
      000E6C 81               [ 4] 2814 	ret
                                   2815 ;	main.c: 3: void params_default_conf(void)
                                   2816 ;	-----------------------------------------
                                   2817 ;	 function params_default_conf
                                   2818 ;	-----------------------------------------
      000E6D                       2819 _params_default_conf:
                                   2820 ;	main.c: 5: params_value.current_red = 255;
      000E6D 35 FFu00u08      [ 1] 2821 	mov	_params_value+2, #0xff
                                   2822 ;	main.c: 6: params_value.current_green = 255;
      000E71 35 FFu00u09      [ 1] 2823 	mov	_params_value+3, #0xff
                                   2824 ;	main.c: 7: params_value.current_blue = 255;
      000E75 35 FFu00u0A      [ 1] 2825 	mov	_params_value+4, #0xff
                                   2826 ;	main.c: 9: params_value.current_first = 0;
      000E79 AEr00r0B         [ 2] 2827 	ldw	x, #(_params_value+0)+5
      000E7C F6               [ 1] 2828 	ld	a, (x)
      000E7D A4 F0            [ 1] 2829 	and	a, #0xf0
                                   2830 ;	main.c: 10: params_value.current_second = 15;
      000E7F F7               [ 1] 2831 	ld	(x), a
      000E80 AA F0            [ 1] 2832 	or	a, #0xf0
      000E82 F7               [ 1] 2833 	ld	(x), a
                                   2834 ;	main.c: 12: params_value.current_sens = 10;
      000E83 35 0Au00u0C      [ 1] 2835 	mov	_params_value+6, #0x0a
                                   2836 ;	main.c: 13: params_value.current_vers = 0xA1;
      000E87 35 A1u00u0D      [ 1] 2837 	mov	_params_value+7, #0xa1
                                   2838 ;	main.c: 14: }
      000E8B 81               [ 4] 2839 	ret
                                   2840 ;	main.c: 16: void setup(void)
                                   2841 ;	-----------------------------------------
                                   2842 ;	 function setup
                                   2843 ;	-----------------------------------------
      000E8C                       2844 _setup:
                                   2845 ;	main.c: 19: CLK_CKDIVR = 0;
      000E8C 35 00 50 C6      [ 1] 2846 	mov	0x50c6+0, #0x00
                                   2847 ;	main.c: 21: params_value.all = 0;
      000E90 35 00u00u06      [ 1] 2848 	mov	_params_value+0, #0x00
                                   2849 ;	main.c: 23: uart_init(9600,0);
      000E94 4F               [ 1] 2850 	clr	a
      000E95 AE 25 80         [ 2] 2851 	ldw	x, #0x2580
      000E98 CDr00rB7         [ 4] 2852 	call	_uart_init
                                   2853 ;	main.c: 24: i2c_init();
      000E9B CDr02rD8         [ 4] 2854 	call	_i2c_init
                                   2855 ;	main.c: 25: ssd1306_init();
      000E9E CDr04r6B         [ 4] 2856 	call	_ssd1306_init
                                   2857 ;	main.c: 26: ssd1306_send_buffer();
      000EA1 CDr05r5B         [ 4] 2858 	call	_ssd1306_send_buffer
                                   2859 ;	main.c: 27: params_default_conf();
      000EA4 CDr0Er6D         [ 4] 2860 	call	_params_default_conf
                                   2861 ;	main.c: 29: enableInterrupts();
      000EA7 9A               [ 1] 2862 	rim
                                   2863 ;	main.c: 30: delay_s(1);
      000EA8 A6 01            [ 1] 2864 	ld	a, #0x01
                                   2865 ;	main.c: 31: }
      000EAA CCr0DrDB         [ 2] 2866 	jp	_delay_s
                                   2867 ;	main.c: 34: void gg(void)
                                   2868 ;	-----------------------------------------
                                   2869 ;	 function gg
                                   2870 ;	-----------------------------------------
      000EAD                       2871 _gg:
                                   2872 ;	main.c: 36: menu_set_paragraph(menu);
      000EAD A6 04            [ 1] 2873 	ld	a, #0x04
      000EAF CDr0ArCC         [ 4] 2874 	call	_menu_set_paragraph
                                   2875 ;	main.c: 37: delay_s(1);
      000EB2 A6 01            [ 1] 2876 	ld	a, #0x01
      000EB4 CDr0DrDB         [ 4] 2877 	call	_delay_s
                                   2878 ;	main.c: 39: menu_set_paragraph(color);
      000EB7 A6 05            [ 1] 2879 	ld	a, #0x05
      000EB9 CDr0ArCC         [ 4] 2880 	call	_menu_set_paragraph
                                   2881 ;	main.c: 40: delay_s(1);
      000EBC A6 01            [ 1] 2882 	ld	a, #0x01
                                   2883 ;	main.c: 52: }
      000EBE CCr0DrDB         [ 2] 2884 	jp	_delay_s
                                   2885 ;	main.c: 54: int main(void)
                                   2886 ;	-----------------------------------------
                                   2887 ;	 function main
                                   2888 ;	-----------------------------------------
      000EC1                       2889 _main:
                                   2890 ;	main.c: 56: setup();
      000EC1 CDr0Er8C         [ 4] 2891 	call	_setup
                                   2892 ;	main.c: 57: gg();
      000EC4 CDr0ErAD         [ 4] 2893 	call	_gg
                                   2894 ;	main.c: 58: while(1);
      000EC7                       2895 00102$:
      000EC7 20 FE            [ 2] 2896 	jra	00102$
                                   2897 ;	main.c: 59: }
      000EC9 81               [ 4] 2898 	ret
                                   2899 	.area CODE
                                   2900 	.area CONST
                                   2901 	.area INITIALIZER
      000000                       2902 __xinit__ttf_eng_a:
      000000 00                    2903 	.db #0x00	; 0
      000001 7E                    2904 	.db #0x7e	; 126
      000002 42                    2905 	.db #0x42	; 66	'B'
      000003 42                    2906 	.db #0x42	; 66	'B'
      000004 7E                    2907 	.db #0x7e	; 126
      000005 42                    2908 	.db #0x42	; 66	'B'
      000006 42                    2909 	.db #0x42	; 66	'B'
      000007 00                    2910 	.db #0x00	; 0
      000008                       2911 __xinit__ttf_eng_b:
      000008 00                    2912 	.db #0x00	; 0
      000009 7C                    2913 	.db #0x7c	; 124
      00000A 42                    2914 	.db #0x42	; 66	'B'
      00000B 7C                    2915 	.db #0x7c	; 124
      00000C 42                    2916 	.db #0x42	; 66	'B'
      00000D 42                    2917 	.db #0x42	; 66	'B'
      00000E 7C                    2918 	.db #0x7c	; 124
      00000F 00                    2919 	.db #0x00	; 0
      000010                       2920 __xinit__ttf_eng_c:
      000010 00                    2921 	.db #0x00	; 0
      000011 7E                    2922 	.db #0x7e	; 126
      000012 40                    2923 	.db #0x40	; 64
      000013 40                    2924 	.db #0x40	; 64
      000014 40                    2925 	.db #0x40	; 64
      000015 40                    2926 	.db #0x40	; 64
      000016 7E                    2927 	.db #0x7e	; 126
      000017 00                    2928 	.db #0x00	; 0
      000018                       2929 __xinit__ttf_eng_d:
      000018 00                    2930 	.db #0x00	; 0
      000019 7C                    2931 	.db #0x7c	; 124
      00001A 42                    2932 	.db #0x42	; 66	'B'
      00001B 42                    2933 	.db #0x42	; 66	'B'
      00001C 42                    2934 	.db #0x42	; 66	'B'
      00001D 42                    2935 	.db #0x42	; 66	'B'
      00001E 7C                    2936 	.db #0x7c	; 124
      00001F 00                    2937 	.db #0x00	; 0
      000020                       2938 __xinit__ttf_eng_e:
      000020 00                    2939 	.db #0x00	; 0
      000021 7E                    2940 	.db #0x7e	; 126
      000022 40                    2941 	.db #0x40	; 64
      000023 7C                    2942 	.db #0x7c	; 124
      000024 40                    2943 	.db #0x40	; 64
      000025 40                    2944 	.db #0x40	; 64
      000026 7E                    2945 	.db #0x7e	; 126
      000027 00                    2946 	.db #0x00	; 0
      000028                       2947 __xinit__ttf_eng_f:
      000028 00                    2948 	.db #0x00	; 0
      000029 7E                    2949 	.db #0x7e	; 126
      00002A 40                    2950 	.db #0x40	; 64
      00002B 40                    2951 	.db #0x40	; 64
      00002C 7C                    2952 	.db #0x7c	; 124
      00002D 40                    2953 	.db #0x40	; 64
      00002E 40                    2954 	.db #0x40	; 64
      00002F 00                    2955 	.db #0x00	; 0
      000030                       2956 __xinit__ttf_eng_g:
      000030 00                    2957 	.db #0x00	; 0
      000031 7E                    2958 	.db #0x7e	; 126
      000032 42                    2959 	.db #0x42	; 66	'B'
      000033 40                    2960 	.db #0x40	; 64
      000034 4E                    2961 	.db #0x4e	; 78	'N'
      000035 42                    2962 	.db #0x42	; 66	'B'
      000036 7E                    2963 	.db #0x7e	; 126
      000037 00                    2964 	.db #0x00	; 0
      000038                       2965 __xinit__ttf_eng_h:
      000038 00                    2966 	.db #0x00	; 0
      000039 42                    2967 	.db #0x42	; 66	'B'
      00003A 42                    2968 	.db #0x42	; 66	'B'
      00003B 42                    2969 	.db #0x42	; 66	'B'
      00003C 7E                    2970 	.db #0x7e	; 126
      00003D 42                    2971 	.db #0x42	; 66	'B'
      00003E 42                    2972 	.db #0x42	; 66	'B'
      00003F 00                    2973 	.db #0x00	; 0
      000040                       2974 __xinit__ttf_eng_i:
      000040 00                    2975 	.db #0x00	; 0
      000041 7E                    2976 	.db #0x7e	; 126
      000042 18                    2977 	.db #0x18	; 24
      000043 18                    2978 	.db #0x18	; 24
      000044 18                    2979 	.db #0x18	; 24
      000045 18                    2980 	.db #0x18	; 24
      000046 7E                    2981 	.db #0x7e	; 126
      000047 00                    2982 	.db #0x00	; 0
      000048                       2983 __xinit__ttf_eng_j:
      000048 00                    2984 	.db #0x00	; 0
      000049 0C                    2985 	.db #0x0c	; 12
      00004A 0C                    2986 	.db #0x0c	; 12
      00004B 0C                    2987 	.db #0x0c	; 12
      00004C 0C                    2988 	.db #0x0c	; 12
      00004D 6C                    2989 	.db #0x6c	; 108	'l'
      00004E 7C                    2990 	.db #0x7c	; 124
      00004F 00                    2991 	.db #0x00	; 0
      000050                       2992 __xinit__ttf_eng_k:
      000050 00                    2993 	.db #0x00	; 0
      000051 66                    2994 	.db #0x66	; 102	'f'
      000052 68                    2995 	.db #0x68	; 104	'h'
      000053 70                    2996 	.db #0x70	; 112	'p'
      000054 70                    2997 	.db #0x70	; 112	'p'
      000055 68                    2998 	.db #0x68	; 104	'h'
      000056 66                    2999 	.db #0x66	; 102	'f'
      000057 00                    3000 	.db #0x00	; 0
      000058                       3001 __xinit__ttf_eng_l:
      000058 00                    3002 	.db #0x00	; 0
      000059 40                    3003 	.db #0x40	; 64
      00005A 40                    3004 	.db #0x40	; 64
      00005B 40                    3005 	.db #0x40	; 64
      00005C 40                    3006 	.db #0x40	; 64
      00005D 40                    3007 	.db #0x40	; 64
      00005E 7E                    3008 	.db #0x7e	; 126
      00005F 00                    3009 	.db #0x00	; 0
      000060                       3010 __xinit__ttf_eng_m:
      000060 00                    3011 	.db #0x00	; 0
      000061 42                    3012 	.db #0x42	; 66	'B'
      000062 66                    3013 	.db #0x66	; 102	'f'
      000063 5A                    3014 	.db #0x5a	; 90	'Z'
      000064 42                    3015 	.db #0x42	; 66	'B'
      000065 42                    3016 	.db #0x42	; 66	'B'
      000066 42                    3017 	.db #0x42	; 66	'B'
      000067 00                    3018 	.db #0x00	; 0
      000068                       3019 __xinit__ttf_eng_n:
      000068 00                    3020 	.db #0x00	; 0
      000069 42                    3021 	.db #0x42	; 66	'B'
      00006A 62                    3022 	.db #0x62	; 98	'b'
      00006B 52                    3023 	.db #0x52	; 82	'R'
      00006C 4A                    3024 	.db #0x4a	; 74	'J'
      00006D 46                    3025 	.db #0x46	; 70	'F'
      00006E 42                    3026 	.db #0x42	; 66	'B'
      00006F 00                    3027 	.db #0x00	; 0
      000070                       3028 __xinit__ttf_eng_o:
      000070 00                    3029 	.db #0x00	; 0
      000071 7E                    3030 	.db #0x7e	; 126
      000072 42                    3031 	.db #0x42	; 66	'B'
      000073 42                    3032 	.db #0x42	; 66	'B'
      000074 42                    3033 	.db #0x42	; 66	'B'
      000075 42                    3034 	.db #0x42	; 66	'B'
      000076 7E                    3035 	.db #0x7e	; 126
      000077 00                    3036 	.db #0x00	; 0
      000078                       3037 __xinit__ttf_eng_p:
      000078 00                    3038 	.db #0x00	; 0
      000079 7E                    3039 	.db #0x7e	; 126
      00007A 42                    3040 	.db #0x42	; 66	'B'
      00007B 42                    3041 	.db #0x42	; 66	'B'
      00007C 7E                    3042 	.db #0x7e	; 126
      00007D 40                    3043 	.db #0x40	; 64
      00007E 40                    3044 	.db #0x40	; 64
      00007F 00                    3045 	.db #0x00	; 0
      000080                       3046 __xinit__ttf_eng_q:
      000080 00                    3047 	.db #0x00	; 0
      000081 7E                    3048 	.db #0x7e	; 126
      000082 42                    3049 	.db #0x42	; 66	'B'
      000083 42                    3050 	.db #0x42	; 66	'B'
      000084 42                    3051 	.db #0x42	; 66	'B'
      000085 7E                    3052 	.db #0x7e	; 126
      000086 04                    3053 	.db #0x04	; 4
      000087 00                    3054 	.db #0x00	; 0
      000088                       3055 __xinit__ttf_eng_r:
      000088 00                    3056 	.db #0x00	; 0
      000089 7E                    3057 	.db #0x7e	; 126
      00008A 42                    3058 	.db #0x42	; 66	'B'
      00008B 42                    3059 	.db #0x42	; 66	'B'
      00008C 7C                    3060 	.db #0x7c	; 124
      00008D 42                    3061 	.db #0x42	; 66	'B'
      00008E 42                    3062 	.db #0x42	; 66	'B'
      00008F 00                    3063 	.db #0x00	; 0
      000090                       3064 __xinit__ttf_eng_s:
      000090 00                    3065 	.db #0x00	; 0
      000091 3E                    3066 	.db #0x3e	; 62
      000092 40                    3067 	.db #0x40	; 64
      000093 3C                    3068 	.db #0x3c	; 60
      000094 02                    3069 	.db #0x02	; 2
      000095 02                    3070 	.db #0x02	; 2
      000096 7C                    3071 	.db #0x7c	; 124
      000097 00                    3072 	.db #0x00	; 0
      000098                       3073 __xinit__ttf_eng_t:
      000098 00                    3074 	.db #0x00	; 0
      000099 7E                    3075 	.db #0x7e	; 126
      00009A 18                    3076 	.db #0x18	; 24
      00009B 18                    3077 	.db #0x18	; 24
      00009C 18                    3078 	.db #0x18	; 24
      00009D 18                    3079 	.db #0x18	; 24
      00009E 18                    3080 	.db #0x18	; 24
      00009F 00                    3081 	.db #0x00	; 0
      0000A0                       3082 __xinit__ttf_eng_u:
      0000A0 00                    3083 	.db #0x00	; 0
      0000A1 42                    3084 	.db #0x42	; 66	'B'
      0000A2 42                    3085 	.db #0x42	; 66	'B'
      0000A3 42                    3086 	.db #0x42	; 66	'B'
      0000A4 42                    3087 	.db #0x42	; 66	'B'
      0000A5 42                    3088 	.db #0x42	; 66	'B'
      0000A6 3E                    3089 	.db #0x3e	; 62
      0000A7 00                    3090 	.db #0x00	; 0
      0000A8                       3091 __xinit__ttf_eng_v:
      0000A8 00                    3092 	.db #0x00	; 0
      0000A9 42                    3093 	.db #0x42	; 66	'B'
      0000AA 42                    3094 	.db #0x42	; 66	'B'
      0000AB 42                    3095 	.db #0x42	; 66	'B'
      0000AC 24                    3096 	.db #0x24	; 36
      0000AD 24                    3097 	.db #0x24	; 36
      0000AE 18                    3098 	.db #0x18	; 24
      0000AF 00                    3099 	.db #0x00	; 0
      0000B0                       3100 __xinit__ttf_eng_w:
      0000B0 00                    3101 	.db #0x00	; 0
      0000B1 42                    3102 	.db #0x42	; 66	'B'
      0000B2 42                    3103 	.db #0x42	; 66	'B'
      0000B3 42                    3104 	.db #0x42	; 66	'B'
      0000B4 5A                    3105 	.db #0x5a	; 90	'Z'
      0000B5 5A                    3106 	.db #0x5a	; 90	'Z'
      0000B6 24                    3107 	.db #0x24	; 36
      0000B7 00                    3108 	.db #0x00	; 0
      0000B8                       3109 __xinit__ttf_eng_x:
      0000B8 00                    3110 	.db #0x00	; 0
      0000B9 42                    3111 	.db #0x42	; 66	'B'
      0000BA 24                    3112 	.db #0x24	; 36
      0000BB 18                    3113 	.db #0x18	; 24
      0000BC 18                    3114 	.db #0x18	; 24
      0000BD 22                    3115 	.db #0x22	; 34
      0000BE 42                    3116 	.db #0x42	; 66	'B'
      0000BF 00                    3117 	.db #0x00	; 0
      0000C0                       3118 __xinit__ttf_eng_y:
      0000C0 00                    3119 	.db #0x00	; 0
      0000C1 42                    3120 	.db #0x42	; 66	'B'
      0000C2 24                    3121 	.db #0x24	; 36
      0000C3 18                    3122 	.db #0x18	; 24
      0000C4 18                    3123 	.db #0x18	; 24
      0000C5 18                    3124 	.db #0x18	; 24
      0000C6 18                    3125 	.db #0x18	; 24
      0000C7 00                    3126 	.db #0x00	; 0
      0000C8                       3127 __xinit__ttf_eng_z:
      0000C8 00                    3128 	.db #0x00	; 0
      0000C9 7E                    3129 	.db #0x7e	; 126
      0000CA 04                    3130 	.db #0x04	; 4
      0000CB 08                    3131 	.db #0x08	; 8
      0000CC 10                    3132 	.db #0x10	; 16
      0000CD 20                    3133 	.db #0x20	; 32
      0000CE 7E                    3134 	.db #0x7e	; 126
      0000CF 00                    3135 	.db #0x00	; 0
      0000D0                       3136 __xinit__I2C_IRQ:
      0000D0 00                    3137 	.db #0x00	; 0
      0000D1                       3138 __xinit__ttf_void:
      0000D1 00                    3139 	.db #0x00	; 0
      0000D2 00                    3140 	.db #0x00	; 0
      0000D3 00                    3141 	.db #0x00	; 0
      0000D4 00                    3142 	.db #0x00	; 0
      0000D5 00                    3143 	.db #0x00	; 0
      0000D6 00                    3144 	.db #0x00	; 0
      0000D7 00                    3145 	.db #0x00	; 0
      0000D8 00                    3146 	.db #0x00	; 0
      0000D9                       3147 __xinit__ttf_num_1:
      0000D9 00                    3148 	.db #0x00	; 0
      0000DA 18                    3149 	.db #0x18	; 24
      0000DB 38                    3150 	.db #0x38	; 56	'8'
      0000DC 38                    3151 	.db #0x38	; 56	'8'
      0000DD 18                    3152 	.db #0x18	; 24
      0000DE 18                    3153 	.db #0x18	; 24
      0000DF 18                    3154 	.db #0x18	; 24
      0000E0 00                    3155 	.db #0x00	; 0
      0000E1                       3156 __xinit__ttf_num_2:
      0000E1 00                    3157 	.db #0x00	; 0
      0000E2 38                    3158 	.db #0x38	; 56	'8'
      0000E3 44                    3159 	.db #0x44	; 68	'D'
      0000E4 08                    3160 	.db #0x08	; 8
      0000E5 10                    3161 	.db #0x10	; 16
      0000E6 20                    3162 	.db #0x20	; 32
      0000E7 7C                    3163 	.db #0x7c	; 124
      0000E8 00                    3164 	.db #0x00	; 0
      0000E9                       3165 __xinit__ttf_num_3:
      0000E9 00                    3166 	.db #0x00	; 0
      0000EA 7C                    3167 	.db #0x7c	; 124
      0000EB 02                    3168 	.db #0x02	; 2
      0000EC 3C                    3169 	.db #0x3c	; 60
      0000ED 02                    3170 	.db #0x02	; 2
      0000EE 02                    3171 	.db #0x02	; 2
      0000EF 7C                    3172 	.db #0x7c	; 124
      0000F0 00                    3173 	.db #0x00	; 0
      0000F1                       3174 __xinit__ttf_num_4:
      0000F1 00                    3175 	.db #0x00	; 0
      0000F2 42                    3176 	.db #0x42	; 66	'B'
      0000F3 42                    3177 	.db #0x42	; 66	'B'
      0000F4 7E                    3178 	.db #0x7e	; 126
      0000F5 02                    3179 	.db #0x02	; 2
      0000F6 02                    3180 	.db #0x02	; 2
      0000F7 02                    3181 	.db #0x02	; 2
      0000F8 00                    3182 	.db #0x00	; 0
      0000F9                       3183 __xinit__ttf_num_5:
      0000F9 00                    3184 	.db #0x00	; 0
      0000FA 7E                    3185 	.db #0x7e	; 126
      0000FB 40                    3186 	.db #0x40	; 64
      0000FC 7C                    3187 	.db #0x7c	; 124
      0000FD 02                    3188 	.db #0x02	; 2
      0000FE 02                    3189 	.db #0x02	; 2
      0000FF 7C                    3190 	.db #0x7c	; 124
      000100 00                    3191 	.db #0x00	; 0
      000101                       3192 __xinit__ttf_num_6:
      000101 00                    3193 	.db #0x00	; 0
      000102 3C                    3194 	.db #0x3c	; 60
      000103 40                    3195 	.db #0x40	; 64
      000104 7C                    3196 	.db #0x7c	; 124
      000105 42                    3197 	.db #0x42	; 66	'B'
      000106 42                    3198 	.db #0x42	; 66	'B'
      000107 3C                    3199 	.db #0x3c	; 60
      000108 00                    3200 	.db #0x00	; 0
      000109                       3201 __xinit__ttf_num_7:
      000109 00                    3202 	.db #0x00	; 0
      00010A 7E                    3203 	.db #0x7e	; 126
      00010B 02                    3204 	.db #0x02	; 2
      00010C 04                    3205 	.db #0x04	; 4
      00010D 08                    3206 	.db #0x08	; 8
      00010E 10                    3207 	.db #0x10	; 16
      00010F 20                    3208 	.db #0x20	; 32
      000110 00                    3209 	.db #0x00	; 0
      000111                       3210 __xinit__ttf_num_8:
      000111 00                    3211 	.db #0x00	; 0
      000112 3C                    3212 	.db #0x3c	; 60
      000113 42                    3213 	.db #0x42	; 66	'B'
      000114 3C                    3214 	.db #0x3c	; 60
      000115 42                    3215 	.db #0x42	; 66	'B'
      000116 42                    3216 	.db #0x42	; 66	'B'
      000117 3C                    3217 	.db #0x3c	; 60
      000118 00                    3218 	.db #0x00	; 0
      000119                       3219 __xinit__ttf_num_9:
      000119 00                    3220 	.db #0x00	; 0
      00011A 3C                    3221 	.db #0x3c	; 60
      00011B 42                    3222 	.db #0x42	; 66	'B'
      00011C 42                    3223 	.db #0x42	; 66	'B'
      00011D 3E                    3224 	.db #0x3e	; 62
      00011E 02                    3225 	.db #0x02	; 2
      00011F 3C                    3226 	.db #0x3c	; 60
      000120 00                    3227 	.db #0x00	; 0
      000121                       3228 __xinit__ttf_num_0:
      000121 00                    3229 	.db #0x00	; 0
      000122 3C                    3230 	.db #0x3c	; 60
      000123 46                    3231 	.db #0x46	; 70	'F'
      000124 4A                    3232 	.db #0x4a	; 74	'J'
      000125 52                    3233 	.db #0x52	; 82	'R'
      000126 62                    3234 	.db #0x62	; 98	'b'
      000127 3C                    3235 	.db #0x3c	; 60
      000128 00                    3236 	.db #0x00	; 0
      000129                       3237 __xinit__ttf_corner_left_up:
      000129 FF                    3238 	.db #0xff	; 255
      00012A FF                    3239 	.db #0xff	; 255
      00012B C0                    3240 	.db #0xc0	; 192
      00012C C0                    3241 	.db #0xc0	; 192
      00012D C0                    3242 	.db #0xc0	; 192
      00012E C0                    3243 	.db #0xc0	; 192
      00012F C0                    3244 	.db #0xc0	; 192
      000130 C0                    3245 	.db #0xc0	; 192
      000131                       3246 __xinit__ttf_corner_right_up:
      000131 FF                    3247 	.db #0xff	; 255
      000132 FF                    3248 	.db #0xff	; 255
      000133 03                    3249 	.db #0x03	; 3
      000134 03                    3250 	.db #0x03	; 3
      000135 03                    3251 	.db #0x03	; 3
      000136 03                    3252 	.db #0x03	; 3
      000137 03                    3253 	.db #0x03	; 3
      000138 03                    3254 	.db #0x03	; 3
      000139                       3255 __xinit__ttf_corner_left_down:
      000139 C0                    3256 	.db #0xc0	; 192
      00013A C0                    3257 	.db #0xc0	; 192
      00013B C0                    3258 	.db #0xc0	; 192
      00013C C0                    3259 	.db #0xc0	; 192
      00013D C0                    3260 	.db #0xc0	; 192
      00013E C0                    3261 	.db #0xc0	; 192
      00013F FF                    3262 	.db #0xff	; 255
      000140 FF                    3263 	.db #0xff	; 255
      000141                       3264 __xinit__ttf_corner_right_down:
      000141 03                    3265 	.db #0x03	; 3
      000142 03                    3266 	.db #0x03	; 3
      000143 03                    3267 	.db #0x03	; 3
      000144 03                    3268 	.db #0x03	; 3
      000145 03                    3269 	.db #0x03	; 3
      000146 03                    3270 	.db #0x03	; 3
      000147 FF                    3271 	.db #0xff	; 255
      000148 FF                    3272 	.db #0xff	; 255
      000149                       3273 __xinit__ttf_line_right:
      000149 03                    3274 	.db #0x03	; 3
      00014A 03                    3275 	.db #0x03	; 3
      00014B 03                    3276 	.db #0x03	; 3
      00014C 03                    3277 	.db #0x03	; 3
      00014D 03                    3278 	.db #0x03	; 3
      00014E 03                    3279 	.db #0x03	; 3
      00014F 03                    3280 	.db #0x03	; 3
      000150 03                    3281 	.db #0x03	; 3
      000151                       3282 __xinit__ttf_line_left:
      000151 C0                    3283 	.db #0xc0	; 192
      000152 C0                    3284 	.db #0xc0	; 192
      000153 C0                    3285 	.db #0xc0	; 192
      000154 C0                    3286 	.db #0xc0	; 192
      000155 C0                    3287 	.db #0xc0	; 192
      000156 C0                    3288 	.db #0xc0	; 192
      000157 C0                    3289 	.db #0xc0	; 192
      000158 C0                    3290 	.db #0xc0	; 192
      000159                       3291 __xinit__ttf_line_up:
      000159 FF                    3292 	.db #0xff	; 255
      00015A FF                    3293 	.db #0xff	; 255
      00015B 00                    3294 	.db #0x00	; 0
      00015C 00                    3295 	.db #0x00	; 0
      00015D 00                    3296 	.db #0x00	; 0
      00015E 00                    3297 	.db #0x00	; 0
      00015F 00                    3298 	.db #0x00	; 0
      000160 00                    3299 	.db #0x00	; 0
      000161                       3300 __xinit__ttf_line_down:
      000161 00                    3301 	.db #0x00	; 0
      000162 00                    3302 	.db #0x00	; 0
      000163 00                    3303 	.db #0x00	; 0
      000164 00                    3304 	.db #0x00	; 0
      000165 00                    3305 	.db #0x00	; 0
      000166 00                    3306 	.db #0x00	; 0
      000167 FF                    3307 	.db #0xff	; 255
      000168 FF                    3308 	.db #0xff	; 255
      000169                       3309 __xinit__main_buffer:
      000169 FF                    3310 	.db #0xff	; 255
      00016A 01                    3311 	.db #0x01	; 1
      00016B 01                    3312 	.db #0x01	; 1
      00016C 01                    3313 	.db #0x01	; 1
      00016D 01                    3314 	.db #0x01	; 1
      00016E 01                    3315 	.db #0x01	; 1
      00016F 01                    3316 	.db #0x01	; 1
      000170 01                    3317 	.db #0x01	; 1
      000171 FD                    3318 	.db #0xfd	; 253
      000172 FD                    3319 	.db #0xfd	; 253
      000173 FD                    3320 	.db #0xfd	; 253
      000174 FD                    3321 	.db #0xfd	; 253
      000175 FD                    3322 	.db #0xfd	; 253
      000176 FD                    3323 	.db #0xfd	; 253
      000177 FD                    3324 	.db #0xfd	; 253
      000178 01                    3325 	.db #0x01	; 1
      000179 01                    3326 	.db #0x01	; 1
      00017A 01                    3327 	.db #0x01	; 1
      00017B 01                    3328 	.db #0x01	; 1
      00017C 01                    3329 	.db #0x01	; 1
      00017D 01                    3330 	.db #0x01	; 1
      00017E 01                    3331 	.db #0x01	; 1
      00017F FD                    3332 	.db #0xfd	; 253
      000180 FD                    3333 	.db #0xfd	; 253
      000181 FD                    3334 	.db #0xfd	; 253
      000182 FD                    3335 	.db #0xfd	; 253
      000183 FD                    3336 	.db #0xfd	; 253
      000184 FD                    3337 	.db #0xfd	; 253
      000185 FD                    3338 	.db #0xfd	; 253
      000186 FD                    3339 	.db #0xfd	; 253
      000187 FD                    3340 	.db #0xfd	; 253
      000188 FD                    3341 	.db #0xfd	; 253
      000189 FD                    3342 	.db #0xfd	; 253
      00018A FD                    3343 	.db #0xfd	; 253
      00018B FD                    3344 	.db #0xfd	; 253
      00018C FD                    3345 	.db #0xfd	; 253
      00018D FD                    3346 	.db #0xfd	; 253
      00018E FD                    3347 	.db #0xfd	; 253
      00018F FD                    3348 	.db #0xfd	; 253
      000190 FD                    3349 	.db #0xfd	; 253
      000191 FD                    3350 	.db #0xfd	; 253
      000192 FD                    3351 	.db #0xfd	; 253
      000193 FD                    3352 	.db #0xfd	; 253
      000194 FD                    3353 	.db #0xfd	; 253
      000195 FD                    3354 	.db #0xfd	; 253
      000196 FD                    3355 	.db #0xfd	; 253
      000197 FD                    3356 	.db #0xfd	; 253
      000198 FD                    3357 	.db #0xfd	; 253
      000199 FD                    3358 	.db #0xfd	; 253
      00019A FD                    3359 	.db #0xfd	; 253
      00019B FD                    3360 	.db #0xfd	; 253
      00019C FD                    3361 	.db #0xfd	; 253
      00019D FD                    3362 	.db #0xfd	; 253
      00019E FD                    3363 	.db #0xfd	; 253
      00019F FD                    3364 	.db #0xfd	; 253
      0001A0 FD                    3365 	.db #0xfd	; 253
      0001A1 FD                    3366 	.db #0xfd	; 253
      0001A2 01                    3367 	.db #0x01	; 1
      0001A3 01                    3368 	.db #0x01	; 1
      0001A4 01                    3369 	.db #0x01	; 1
      0001A5 01                    3370 	.db #0x01	; 1
      0001A6 01                    3371 	.db #0x01	; 1
      0001A7 01                    3372 	.db #0x01	; 1
      0001A8 01                    3373 	.db #0x01	; 1
      0001A9 FD                    3374 	.db #0xfd	; 253
      0001AA FD                    3375 	.db #0xfd	; 253
      0001AB FD                    3376 	.db #0xfd	; 253
      0001AC FD                    3377 	.db #0xfd	; 253
      0001AD FD                    3378 	.db #0xfd	; 253
      0001AE FD                    3379 	.db #0xfd	; 253
      0001AF FD                    3380 	.db #0xfd	; 253
      0001B0 FD                    3381 	.db #0xfd	; 253
      0001B1 FD                    3382 	.db #0xfd	; 253
      0001B2 FD                    3383 	.db #0xfd	; 253
      0001B3 FD                    3384 	.db #0xfd	; 253
      0001B4 FD                    3385 	.db #0xfd	; 253
      0001B5 FD                    3386 	.db #0xfd	; 253
      0001B6 FD                    3387 	.db #0xfd	; 253
      0001B7 FD                    3388 	.db #0xfd	; 253
      0001B8 FD                    3389 	.db #0xfd	; 253
      0001B9 FD                    3390 	.db #0xfd	; 253
      0001BA FD                    3391 	.db #0xfd	; 253
      0001BB FD                    3392 	.db #0xfd	; 253
      0001BC FD                    3393 	.db #0xfd	; 253
      0001BD FD                    3394 	.db #0xfd	; 253
      0001BE 01                    3395 	.db #0x01	; 1
      0001BF 01                    3396 	.db #0x01	; 1
      0001C0 01                    3397 	.db #0x01	; 1
      0001C1 01                    3398 	.db #0x01	; 1
      0001C2 01                    3399 	.db #0x01	; 1
      0001C3 01                    3400 	.db #0x01	; 1
      0001C4 01                    3401 	.db #0x01	; 1
      0001C5 01                    3402 	.db #0x01	; 1
      0001C6 01                    3403 	.db #0x01	; 1
      0001C7 01                    3404 	.db #0x01	; 1
      0001C8 01                    3405 	.db #0x01	; 1
      0001C9 01                    3406 	.db #0x01	; 1
      0001CA 01                    3407 	.db #0x01	; 1
      0001CB 01                    3408 	.db #0x01	; 1
      0001CC 3D                    3409 	.db #0x3d	; 61
      0001CD 15                    3410 	.db #0x15	; 21
      0001CE 3D                    3411 	.db #0x3d	; 61
      0001CF 01                    3412 	.db #0x01	; 1
      0001D0 3D                    3413 	.db #0x3d	; 61
      0001D1 21                    3414 	.db #0x21	; 33
      0001D2 21                    3415 	.db #0x21	; 33
      0001D3 01                    3416 	.db #0x01	; 1
      0001D4 3D                    3417 	.db #0x3d	; 61
      0001D5 15                    3418 	.db #0x15	; 21
      0001D6 1D                    3419 	.db #0x1d	; 29
      0001D7 01                    3420 	.db #0x01	; 1
      0001D8 3D                    3421 	.db #0x3d	; 61
      0001D9 11                    3422 	.db #0x11	; 17
      0001DA 3D                    3423 	.db #0x3d	; 61
      0001DB 01                    3424 	.db #0x01	; 1
      0001DC 3D                    3425 	.db #0x3d	; 61
      0001DD 15                    3426 	.db #0x15	; 21
      0001DE 3D                    3427 	.db #0x3d	; 61
      0001DF 01                    3428 	.db #0x01	; 1
      0001E0 01                    3429 	.db #0x01	; 1
      0001E1 3D                    3430 	.db #0x3d	; 61
      0001E2 25                    3431 	.db #0x25	; 37
      0001E3 3D                    3432 	.db #0x3d	; 61
      0001E4 01                    3433 	.db #0x01	; 1
      0001E5 05                    3434 	.db #0x05	; 5
      0001E6 3D                    3435 	.db #0x3d	; 61
      0001E7 01                    3436 	.db #0x01	; 1
      0001E8 FF                    3437 	.db #0xff	; 255
      0001E9 FF                    3438 	.db #0xff	; 255
      0001EA 00                    3439 	.db #0x00	; 0
      0001EB 00                    3440 	.db #0x00	; 0
      0001EC 00                    3441 	.db #0x00	; 0
      0001ED 00                    3442 	.db #0x00	; 0
      0001EE 00                    3443 	.db #0x00	; 0
      0001EF 00                    3444 	.db #0x00	; 0
      0001F0 00                    3445 	.db #0x00	; 0
      0001F1 FF                    3446 	.db #0xff	; 255
      0001F2 FF                    3447 	.db #0xff	; 255
      0001F3 FF                    3448 	.db #0xff	; 255
      0001F4 FF                    3449 	.db #0xff	; 255
      0001F5 FF                    3450 	.db #0xff	; 255
      0001F6 FF                    3451 	.db #0xff	; 255
      0001F7 FF                    3452 	.db #0xff	; 255
      0001F8 FE                    3453 	.db #0xfe	; 254
      0001F9 FE                    3454 	.db #0xfe	; 254
      0001FA FE                    3455 	.db #0xfe	; 254
      0001FB FE                    3456 	.db #0xfe	; 254
      0001FC FE                    3457 	.db #0xfe	; 254
      0001FD FE                    3458 	.db #0xfe	; 254
      0001FE FE                    3459 	.db #0xfe	; 254
      0001FF FF                    3460 	.db #0xff	; 255
      000200 FF                    3461 	.db #0xff	; 255
      000201 FF                    3462 	.db #0xff	; 255
      000202 FF                    3463 	.db #0xff	; 255
      000203 FF                    3464 	.db #0xff	; 255
      000204 FF                    3465 	.db #0xff	; 255
      000205 FF                    3466 	.db #0xff	; 255
      000206 01                    3467 	.db #0x01	; 1
      000207 01                    3468 	.db #0x01	; 1
      000208 01                    3469 	.db #0x01	; 1
      000209 01                    3470 	.db #0x01	; 1
      00020A 01                    3471 	.db #0x01	; 1
      00020B 01                    3472 	.db #0x01	; 1
      00020C 01                    3473 	.db #0x01	; 1
      00020D FF                    3474 	.db #0xff	; 255
      00020E FF                    3475 	.db #0xff	; 255
      00020F FF                    3476 	.db #0xff	; 255
      000210 FF                    3477 	.db #0xff	; 255
      000211 FF                    3478 	.db #0xff	; 255
      000212 FF                    3479 	.db #0xff	; 255
      000213 FF                    3480 	.db #0xff	; 255
      000214 01                    3481 	.db #0x01	; 1
      000215 01                    3482 	.db #0x01	; 1
      000216 01                    3483 	.db #0x01	; 1
      000217 01                    3484 	.db #0x01	; 1
      000218 01                    3485 	.db #0x01	; 1
      000219 01                    3486 	.db #0x01	; 1
      00021A 01                    3487 	.db #0x01	; 1
      00021B FF                    3488 	.db #0xff	; 255
      00021C FF                    3489 	.db #0xff	; 255
      00021D FF                    3490 	.db #0xff	; 255
      00021E FF                    3491 	.db #0xff	; 255
      00021F FF                    3492 	.db #0xff	; 255
      000220 FF                    3493 	.db #0xff	; 255
      000221 FF                    3494 	.db #0xff	; 255
      000222 00                    3495 	.db #0x00	; 0
      000223 00                    3496 	.db #0x00	; 0
      000224 00                    3497 	.db #0x00	; 0
      000225 00                    3498 	.db #0x00	; 0
      000226 00                    3499 	.db #0x00	; 0
      000227 00                    3500 	.db #0x00	; 0
      000228 00                    3501 	.db #0x00	; 0
      000229 FF                    3502 	.db #0xff	; 255
      00022A FF                    3503 	.db #0xff	; 255
      00022B FF                    3504 	.db #0xff	; 255
      00022C FF                    3505 	.db #0xff	; 255
      00022D FF                    3506 	.db #0xff	; 255
      00022E FF                    3507 	.db #0xff	; 255
      00022F FF                    3508 	.db #0xff	; 255
      000230 01                    3509 	.db #0x01	; 1
      000231 01                    3510 	.db #0x01	; 1
      000232 01                    3511 	.db #0x01	; 1
      000233 01                    3512 	.db #0x01	; 1
      000234 01                    3513 	.db #0x01	; 1
      000235 01                    3514 	.db #0x01	; 1
      000236 01                    3515 	.db #0x01	; 1
      000237 FF                    3516 	.db #0xff	; 255
      000238 FF                    3517 	.db #0xff	; 255
      000239 FF                    3518 	.db #0xff	; 255
      00023A FF                    3519 	.db #0xff	; 255
      00023B FF                    3520 	.db #0xff	; 255
      00023C FF                    3521 	.db #0xff	; 255
      00023D FF                    3522 	.db #0xff	; 255
      00023E 00                    3523 	.db #0x00	; 0
      00023F 00                    3524 	.db #0x00	; 0
      000240 00                    3525 	.db #0x00	; 0
      000241 00                    3526 	.db #0x00	; 0
      000242 00                    3527 	.db #0x00	; 0
      000243 00                    3528 	.db #0x00	; 0
      000244 00                    3529 	.db #0x00	; 0
      000245 00                    3530 	.db #0x00	; 0
      000246 00                    3531 	.db #0x00	; 0
      000247 00                    3532 	.db #0x00	; 0
      000248 00                    3533 	.db #0x00	; 0
      000249 00                    3534 	.db #0x00	; 0
      00024A 00                    3535 	.db #0x00	; 0
      00024B 00                    3536 	.db #0x00	; 0
      00024C 00                    3537 	.db #0x00	; 0
      00024D 00                    3538 	.db #0x00	; 0
      00024E 00                    3539 	.db #0x00	; 0
      00024F 00                    3540 	.db #0x00	; 0
      000250 00                    3541 	.db #0x00	; 0
      000251 00                    3542 	.db #0x00	; 0
      000252 00                    3543 	.db #0x00	; 0
      000253 00                    3544 	.db #0x00	; 0
      000254 00                    3545 	.db #0x00	; 0
      000255 00                    3546 	.db #0x00	; 0
      000256 00                    3547 	.db #0x00	; 0
      000257 00                    3548 	.db #0x00	; 0
      000258 00                    3549 	.db #0x00	; 0
      000259 00                    3550 	.db #0x00	; 0
      00025A 00                    3551 	.db #0x00	; 0
      00025B 00                    3552 	.db #0x00	; 0
      00025C 00                    3553 	.db #0x00	; 0
      00025D 00                    3554 	.db #0x00	; 0
      00025E 00                    3555 	.db #0x00	; 0
      00025F 00                    3556 	.db #0x00	; 0
      000260 00                    3557 	.db #0x00	; 0
      000261 00                    3558 	.db #0x00	; 0
      000262 00                    3559 	.db #0x00	; 0
      000263 00                    3560 	.db #0x00	; 0
      000264 00                    3561 	.db #0x00	; 0
      000265 00                    3562 	.db #0x00	; 0
      000266 00                    3563 	.db #0x00	; 0
      000267 00                    3564 	.db #0x00	; 0
      000268 FF                    3565 	.db #0xff	; 255
      000269 FF                    3566 	.db #0xff	; 255
      00026A 00                    3567 	.db #0x00	; 0
      00026B 00                    3568 	.db #0x00	; 0
      00026C 00                    3569 	.db #0x00	; 0
      00026D 00                    3570 	.db #0x00	; 0
      00026E 00                    3571 	.db #0x00	; 0
      00026F 00                    3572 	.db #0x00	; 0
      000270 00                    3573 	.db #0x00	; 0
      000271 FF                    3574 	.db #0xff	; 255
      000272 FF                    3575 	.db #0xff	; 255
      000273 FF                    3576 	.db #0xff	; 255
      000274 FF                    3577 	.db #0xff	; 255
      000275 FF                    3578 	.db #0xff	; 255
      000276 FF                    3579 	.db #0xff	; 255
      000277 FF                    3580 	.db #0xff	; 255
      000278 00                    3581 	.db #0x00	; 0
      000279 00                    3582 	.db #0x00	; 0
      00027A 00                    3583 	.db #0x00	; 0
      00027B 00                    3584 	.db #0x00	; 0
      00027C 00                    3585 	.db #0x00	; 0
      00027D 00                    3586 	.db #0x00	; 0
      00027E 00                    3587 	.db #0x00	; 0
      00027F FF                    3588 	.db #0xff	; 255
      000280 FF                    3589 	.db #0xff	; 255
      000281 FF                    3590 	.db #0xff	; 255
      000282 FF                    3591 	.db #0xff	; 255
      000283 FF                    3592 	.db #0xff	; 255
      000284 FF                    3593 	.db #0xff	; 255
      000285 FF                    3594 	.db #0xff	; 255
      000286 00                    3595 	.db #0x00	; 0
      000287 00                    3596 	.db #0x00	; 0
      000288 00                    3597 	.db #0x00	; 0
      000289 00                    3598 	.db #0x00	; 0
      00028A 00                    3599 	.db #0x00	; 0
      00028B 00                    3600 	.db #0x00	; 0
      00028C 00                    3601 	.db #0x00	; 0
      00028D FF                    3602 	.db #0xff	; 255
      00028E FF                    3603 	.db #0xff	; 255
      00028F FF                    3604 	.db #0xff	; 255
      000290 FF                    3605 	.db #0xff	; 255
      000291 FF                    3606 	.db #0xff	; 255
      000292 FF                    3607 	.db #0xff	; 255
      000293 FF                    3608 	.db #0xff	; 255
      000294 00                    3609 	.db #0x00	; 0
      000295 00                    3610 	.db #0x00	; 0
      000296 00                    3611 	.db #0x00	; 0
      000297 00                    3612 	.db #0x00	; 0
      000298 00                    3613 	.db #0x00	; 0
      000299 00                    3614 	.db #0x00	; 0
      00029A 00                    3615 	.db #0x00	; 0
      00029B FF                    3616 	.db #0xff	; 255
      00029C FF                    3617 	.db #0xff	; 255
      00029D FF                    3618 	.db #0xff	; 255
      00029E FF                    3619 	.db #0xff	; 255
      00029F FF                    3620 	.db #0xff	; 255
      0002A0 FF                    3621 	.db #0xff	; 255
      0002A1 FF                    3622 	.db #0xff	; 255
      0002A2 7F                    3623 	.db #0x7f	; 127
      0002A3 7F                    3624 	.db #0x7f	; 127
      0002A4 7F                    3625 	.db #0x7f	; 127
      0002A5 7F                    3626 	.db #0x7f	; 127
      0002A6 7F                    3627 	.db #0x7f	; 127
      0002A7 7F                    3628 	.db #0x7f	; 127
      0002A8 7F                    3629 	.db #0x7f	; 127
      0002A9 FF                    3630 	.db #0xff	; 255
      0002AA FF                    3631 	.db #0xff	; 255
      0002AB FF                    3632 	.db #0xff	; 255
      0002AC FF                    3633 	.db #0xff	; 255
      0002AD FF                    3634 	.db #0xff	; 255
      0002AE FF                    3635 	.db #0xff	; 255
      0002AF FF                    3636 	.db #0xff	; 255
      0002B0 7F                    3637 	.db #0x7f	; 127
      0002B1 7F                    3638 	.db #0x7f	; 127
      0002B2 7F                    3639 	.db #0x7f	; 127
      0002B3 7F                    3640 	.db #0x7f	; 127
      0002B4 7F                    3641 	.db #0x7f	; 127
      0002B5 7F                    3642 	.db #0x7f	; 127
      0002B6 7F                    3643 	.db #0x7f	; 127
      0002B7 80                    3644 	.db #0x80	; 128
      0002B8 80                    3645 	.db #0x80	; 128
      0002B9 80                    3646 	.db #0x80	; 128
      0002BA 80                    3647 	.db #0x80	; 128
      0002BB 80                    3648 	.db #0x80	; 128
      0002BC 80                    3649 	.db #0x80	; 128
      0002BD 80                    3650 	.db #0x80	; 128
      0002BE 00                    3651 	.db #0x00	; 0
      0002BF 00                    3652 	.db #0x00	; 0
      0002C0 00                    3653 	.db #0x00	; 0
      0002C1 80                    3654 	.db #0x80	; 128
      0002C2 80                    3655 	.db #0x80	; 128
      0002C3 80                    3656 	.db #0x80	; 128
      0002C4 80                    3657 	.db #0x80	; 128
      0002C5 80                    3658 	.db #0x80	; 128
      0002C6 80                    3659 	.db #0x80	; 128
      0002C7 80                    3660 	.db #0x80	; 128
      0002C8 00                    3661 	.db #0x00	; 0
      0002C9 00                    3662 	.db #0x00	; 0
      0002CA 00                    3663 	.db #0x00	; 0
      0002CB 00                    3664 	.db #0x00	; 0
      0002CC 00                    3665 	.db #0x00	; 0
      0002CD 00                    3666 	.db #0x00	; 0
      0002CE 00                    3667 	.db #0x00	; 0
      0002CF 00                    3668 	.db #0x00	; 0
      0002D0 00                    3669 	.db #0x00	; 0
      0002D1 00                    3670 	.db #0x00	; 0
      0002D2 00                    3671 	.db #0x00	; 0
      0002D3 00                    3672 	.db #0x00	; 0
      0002D4 00                    3673 	.db #0x00	; 0
      0002D5 00                    3674 	.db #0x00	; 0
      0002D6 00                    3675 	.db #0x00	; 0
      0002D7 00                    3676 	.db #0x00	; 0
      0002D8 00                    3677 	.db #0x00	; 0
      0002D9 00                    3678 	.db #0x00	; 0
      0002DA 00                    3679 	.db #0x00	; 0
      0002DB 00                    3680 	.db #0x00	; 0
      0002DC 00                    3681 	.db #0x00	; 0
      0002DD 00                    3682 	.db #0x00	; 0
      0002DE 00                    3683 	.db #0x00	; 0
      0002DF 00                    3684 	.db #0x00	; 0
      0002E0 00                    3685 	.db #0x00	; 0
      0002E1 00                    3686 	.db #0x00	; 0
      0002E2 00                    3687 	.db #0x00	; 0
      0002E3 00                    3688 	.db #0x00	; 0
      0002E4 00                    3689 	.db #0x00	; 0
      0002E5 00                    3690 	.db #0x00	; 0
      0002E6 00                    3691 	.db #0x00	; 0
      0002E7 00                    3692 	.db #0x00	; 0
      0002E8 FF                    3693 	.db #0xff	; 255
      0002E9 FF                    3694 	.db #0xff	; 255
      0002EA 80                    3695 	.db #0x80	; 128
      0002EB 80                    3696 	.db #0x80	; 128
      0002EC 80                    3697 	.db #0x80	; 128
      0002ED 80                    3698 	.db #0x80	; 128
      0002EE 80                    3699 	.db #0x80	; 128
      0002EF 80                    3700 	.db #0x80	; 128
      0002F0 80                    3701 	.db #0x80	; 128
      0002F1 BF                    3702 	.db #0xbf	; 191
      0002F2 BF                    3703 	.db #0xbf	; 191
      0002F3 BF                    3704 	.db #0xbf	; 191
      0002F4 BF                    3705 	.db #0xbf	; 191
      0002F5 BF                    3706 	.db #0xbf	; 191
      0002F6 BF                    3707 	.db #0xbf	; 191
      0002F7 BF                    3708 	.db #0xbf	; 191
      0002F8 80                    3709 	.db #0x80	; 128
      0002F9 80                    3710 	.db #0x80	; 128
      0002FA 80                    3711 	.db #0x80	; 128
      0002FB 80                    3712 	.db #0x80	; 128
      0002FC 80                    3713 	.db #0x80	; 128
      0002FD 80                    3714 	.db #0x80	; 128
      0002FE 80                    3715 	.db #0x80	; 128
      0002FF BF                    3716 	.db #0xbf	; 191
      000300 BF                    3717 	.db #0xbf	; 191
      000301 BF                    3718 	.db #0xbf	; 191
      000302 BF                    3719 	.db #0xbf	; 191
      000303 BF                    3720 	.db #0xbf	; 191
      000304 BF                    3721 	.db #0xbf	; 191
      000305 BF                    3722 	.db #0xbf	; 191
      000306 80                    3723 	.db #0x80	; 128
      000307 80                    3724 	.db #0x80	; 128
      000308 80                    3725 	.db #0x80	; 128
      000309 80                    3726 	.db #0x80	; 128
      00030A 80                    3727 	.db #0x80	; 128
      00030B 80                    3728 	.db #0x80	; 128
      00030C 80                    3729 	.db #0x80	; 128
      00030D BF                    3730 	.db #0xbf	; 191
      00030E BF                    3731 	.db #0xbf	; 191
      00030F BF                    3732 	.db #0xbf	; 191
      000310 BF                    3733 	.db #0xbf	; 191
      000311 BF                    3734 	.db #0xbf	; 191
      000312 BF                    3735 	.db #0xbf	; 191
      000313 BF                    3736 	.db #0xbf	; 191
      000314 80                    3737 	.db #0x80	; 128
      000315 80                    3738 	.db #0x80	; 128
      000316 80                    3739 	.db #0x80	; 128
      000317 80                    3740 	.db #0x80	; 128
      000318 80                    3741 	.db #0x80	; 128
      000319 80                    3742 	.db #0x80	; 128
      00031A 80                    3743 	.db #0x80	; 128
      00031B BF                    3744 	.db #0xbf	; 191
      00031C BF                    3745 	.db #0xbf	; 191
      00031D BF                    3746 	.db #0xbf	; 191
      00031E BF                    3747 	.db #0xbf	; 191
      00031F BF                    3748 	.db #0xbf	; 191
      000320 BF                    3749 	.db #0xbf	; 191
      000321 BF                    3750 	.db #0xbf	; 191
      000322 80                    3751 	.db #0x80	; 128
      000323 80                    3752 	.db #0x80	; 128
      000324 80                    3753 	.db #0x80	; 128
      000325 80                    3754 	.db #0x80	; 128
      000326 80                    3755 	.db #0x80	; 128
      000327 80                    3756 	.db #0x80	; 128
      000328 80                    3757 	.db #0x80	; 128
      000329 BF                    3758 	.db #0xbf	; 191
      00032A BF                    3759 	.db #0xbf	; 191
      00032B BF                    3760 	.db #0xbf	; 191
      00032C BF                    3761 	.db #0xbf	; 191
      00032D BF                    3762 	.db #0xbf	; 191
      00032E BF                    3763 	.db #0xbf	; 191
      00032F BF                    3764 	.db #0xbf	; 191
      000330 80                    3765 	.db #0x80	; 128
      000331 80                    3766 	.db #0x80	; 128
      000332 80                    3767 	.db #0x80	; 128
      000333 80                    3768 	.db #0x80	; 128
      000334 80                    3769 	.db #0x80	; 128
      000335 80                    3770 	.db #0x80	; 128
      000336 80                    3771 	.db #0x80	; 128
      000337 BF                    3772 	.db #0xbf	; 191
      000338 BF                    3773 	.db #0xbf	; 191
      000339 BF                    3774 	.db #0xbf	; 191
      00033A BF                    3775 	.db #0xbf	; 191
      00033B BF                    3776 	.db #0xbf	; 191
      00033C BF                    3777 	.db #0xbf	; 191
      00033D BF                    3778 	.db #0xbf	; 191
      00033E 80                    3779 	.db #0x80	; 128
      00033F 80                    3780 	.db #0x80	; 128
      000340 80                    3781 	.db #0x80	; 128
      000341 B1                    3782 	.db #0xb1	; 177
      000342 B1                    3783 	.db #0xb1	; 177
      000343 BF                    3784 	.db #0xbf	; 191
      000344 BF                    3785 	.db #0xbf	; 191
      000345 BF                    3786 	.db #0xbf	; 191
      000346 B1                    3787 	.db #0xb1	; 177
      000347 B1                    3788 	.db #0xb1	; 177
      000348 80                    3789 	.db #0x80	; 128
      000349 80                    3790 	.db #0x80	; 128
      00034A BF                    3791 	.db #0xbf	; 191
      00034B BF                    3792 	.db #0xbf	; 191
      00034C 83                    3793 	.db #0x83	; 131
      00034D 83                    3794 	.db #0x83	; 131
      00034E BF                    3795 	.db #0xbf	; 191
      00034F BE                    3796 	.db #0xbe	; 190
      000350 80                    3797 	.db #0x80	; 128
      000351 80                    3798 	.db #0x80	; 128
      000352 BF                    3799 	.db #0xbf	; 191
      000353 BF                    3800 	.db #0xbf	; 191
      000354 B3                    3801 	.db #0xb3	; 179
      000355 B3                    3802 	.db #0xb3	; 179
      000356 B3                    3803 	.db #0xb3	; 179
      000357 B3                    3804 	.db #0xb3	; 179
      000358 80                    3805 	.db #0x80	; 128
      000359 80                    3806 	.db #0x80	; 128
      00035A 80                    3807 	.db #0x80	; 128
      00035B 80                    3808 	.db #0x80	; 128
      00035C B0                    3809 	.db #0xb0	; 176
      00035D B0                    3810 	.db #0xb0	; 176
      00035E 80                    3811 	.db #0x80	; 128
      00035F 80                    3812 	.db #0x80	; 128
      000360 80                    3813 	.db #0x80	; 128
      000361 80                    3814 	.db #0x80	; 128
      000362 80                    3815 	.db #0x80	; 128
      000363 80                    3816 	.db #0x80	; 128
      000364 80                    3817 	.db #0x80	; 128
      000365 80                    3818 	.db #0x80	; 128
      000366 80                    3819 	.db #0x80	; 128
      000367 80                    3820 	.db #0x80	; 128
      000368 FF                    3821 	.db #0xff	; 255
      000369                       3822 __xinit__TIM2_IRQ:
      000369 00                    3823 	.db #0x00	; 0
                                   3824 	.area CABS (ABS)
